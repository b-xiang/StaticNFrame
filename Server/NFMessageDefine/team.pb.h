// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: team.proto

#ifndef PROTOBUF_team_2eproto__INCLUDED
#define PROTOBUF_team_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_team_2eproto();
void protobuf_AssignDesc_team_2eproto();
void protobuf_ShutdownFile_team_2eproto();

class ProtoTeamManInfo;
class ProtoTeamInfo;
class Team_SC_UpdateTeamLevelInfo;
class ProtoTeamListTeamInfo;
class ProtoTeamOutObj;
class Team_CS_SetTeamOutObj;
class Team_SC_SetTeamOutObj;
class Team_CS_MatchingQueueInfo;
class Team_SC_MatchingQueueInfo;
class Team_CS_GetTeamList;
class Team_SC_GetTeamList;
class Team_CS_CreateTeam;
class Team_SC_CreateTeam;
class Team_CS_ApplyTeam;
class Team_SC_ApplyTeam;
class Team_CS_TeamQuit;
class Team_SC_TeamQuit;
class Team_CS_TeamAppoint;
class Team_SC_TeamAppoint;
class Team_CS_TeamKick;
class Team_SC_TeamKick;
class Team_CS_TempLeave;
class Team_SC_TempLeave;
class Team_CS_TeamAuto;
class Team_SC_TeamAuto;
class Team_CS_MemberAuto;
class Team_SC_MemberAuto;
class Team_CS_TeamInvite;
class Team_SC_TeamInvite;
class Team_CS_SetTeamBeInvite;
class Team_SC_SetTeamBeInvite;
class Team_CS_SetTeamAllow;
class Team_SC_SetTeamAllow;
class Team_CS_SetTeamAllowOneTime;
class Team_SC_SetTeamAllowOneTime;
class Team_CS_UpdateTeamInfo;
class Team_SC_UpdateTeamInfo;
class Team_SC_UpdateTeamBeInvite;
class Team_SC_UpdateApplyList;
class Team_SC_UpdateTeamMemberTick;
class Team_CS_FollowLeader;
class Team_SC_FollowLeader;
class Team_CS_SummonFollower;
class Team_SC_SummonFollower;
class Team_SC_LeaderSummon;
class Team_CS_SetIgnoreTeamInvite;
class Team_SC_SetIgnoreTeamInvite;
class Team_CS_QueryIgnoreTeamInvite;
class Team_SC_QueryIgnoreTeamInvite;
class Team_SC_ErrorInfo;
class ProtoTeamManHPInfo;
class Team_SC_UpdateCurrentHp;
class Team_CS_TeamReady;
class Team_SC_TeamReady;

// ===================================================================

class ProtoTeamManInfo : public ::google::protobuf::Message {
 public:
  ProtoTeamManInfo();
  virtual ~ProtoTeamManInfo();

  ProtoTeamManInfo(const ProtoTeamManInfo& from);

  inline ProtoTeamManInfo& operator=(const ProtoTeamManInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTeamManInfo& default_instance();

  void Swap(ProtoTeamManInfo* other);

  // implements Message ----------------------------------------------

  ProtoTeamManInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTeamManInfo& from);
  void MergeFrom(const ProtoTeamManInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required int32 job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline ::google::protobuf::int32 job() const;
  inline void set_job(::google::protobuf::int32 value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated int32 equipID_list = 6;
  inline int equipid_list_size() const;
  inline void clear_equipid_list();
  static const int kEquipIDListFieldNumber = 6;
  inline ::google::protobuf::int32 equipid_list(int index) const;
  inline void set_equipid_list(int index, ::google::protobuf::int32 value);
  inline void add_equipid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equipid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equipid_list();

  // optional uint64 plyuuid = 7;
  inline bool has_plyuuid() const;
  inline void clear_plyuuid();
  static const int kPlyuuidFieldNumber = 7;
  inline ::google::protobuf::uint64 plyuuid() const;
  inline void set_plyuuid(::google::protobuf::uint64 value);

  // optional int32 identity = 8;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 8;
  inline ::google::protobuf::int32 identity() const;
  inline void set_identity(::google::protobuf::int32 value);

  // optional int32 combat = 9;
  inline bool has_combat() const;
  inline void clear_combat();
  static const int kCombatFieldNumber = 9;
  inline ::google::protobuf::int32 combat() const;
  inline void set_combat(::google::protobuf::int32 value);

  // optional bool isReady = 10;
  inline bool has_isready() const;
  inline void clear_isready();
  static const int kIsReadyFieldNumber = 10;
  inline bool isready() const;
  inline void set_isready(bool value);

  // optional int32 Demonhunterlevel = 11;
  inline bool has_demonhunterlevel() const;
  inline void clear_demonhunterlevel();
  static const int kDemonhunterlevelFieldNumber = 11;
  inline ::google::protobuf::int32 demonhunterlevel() const;
  inline void set_demonhunterlevel(::google::protobuf::int32 value);

  // optional uint32 suit_id = 12;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 12;
  inline ::google::protobuf::uint32 suit_id() const;
  inline void set_suit_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoTeamManInfo)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_plyuuid();
  inline void clear_has_plyuuid();
  inline void set_has_identity();
  inline void clear_has_identity();
  inline void set_has_combat();
  inline void clear_has_combat();
  inline void set_has_isready();
  inline void clear_has_isready();
  inline void set_has_demonhunterlevel();
  inline void clear_has_demonhunterlevel();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::int32 job_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 status_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipid_list_;
  ::google::protobuf::uint64 plyuuid_;
  ::google::protobuf::int32 identity_;
  ::google::protobuf::int32 combat_;
  bool isready_;
  ::google::protobuf::int32 demonhunterlevel_;
  ::google::protobuf::uint32 suit_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static ProtoTeamManInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTeamInfo : public ::google::protobuf::Message {
 public:
  ProtoTeamInfo();
  virtual ~ProtoTeamInfo();

  ProtoTeamInfo(const ProtoTeamInfo& from);

  inline ProtoTeamInfo& operator=(const ProtoTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTeamInfo& default_instance();

  void Swap(ProtoTeamInfo* other);

  // implements Message ----------------------------------------------

  ProtoTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTeamInfo& from);
  void MergeFrom(const ProtoTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // required int32 numLimit = 2;
  inline bool has_numlimit() const;
  inline void clear_numlimit();
  static const int kNumLimitFieldNumber = 2;
  inline ::google::protobuf::int32 numlimit() const;
  inline void set_numlimit(::google::protobuf::int32 value);

  // optional uint32 leaderId = 3;
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderIdFieldNumber = 3;
  inline ::google::protobuf::uint32 leaderid() const;
  inline void set_leaderid(::google::protobuf::uint32 value);

  // required int32 teamAuto = 4;
  inline bool has_teamauto() const;
  inline void clear_teamauto();
  static const int kTeamAutoFieldNumber = 4;
  inline ::google::protobuf::int32 teamauto() const;
  inline void set_teamauto(::google::protobuf::int32 value);

  // optional .proto.message.ProtoTeamOutObj teamOutObj = 5;
  inline bool has_teamoutobj() const;
  inline void clear_teamoutobj();
  static const int kTeamOutObjFieldNumber = 5;
  inline const ::proto::message::ProtoTeamOutObj& teamoutobj() const;
  inline ::proto::message::ProtoTeamOutObj* mutable_teamoutobj();
  inline ::proto::message::ProtoTeamOutObj* release_teamoutobj();
  inline void set_allocated_teamoutobj(::proto::message::ProtoTeamOutObj* teamoutobj);

  // repeated .proto.message.ProtoTeamManInfo teamManList = 6;
  inline int teammanlist_size() const;
  inline void clear_teammanlist();
  static const int kTeamManListFieldNumber = 6;
  inline const ::proto::message::ProtoTeamManInfo& teammanlist(int index) const;
  inline ::proto::message::ProtoTeamManInfo* mutable_teammanlist(int index);
  inline ::proto::message::ProtoTeamManInfo* add_teammanlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >&
      teammanlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >*
      mutable_teammanlist();

  // optional int32 needCombat = 7;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedCombatFieldNumber = 7;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoTeamInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_numlimit();
  inline void clear_has_numlimit();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_teamauto();
  inline void clear_has_teamauto();
  inline void set_has_teamoutobj();
  inline void clear_has_teamoutobj();
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 numlimit_;
  ::google::protobuf::uint32 leaderid_;
  ::google::protobuf::int32 teamauto_;
  ::proto::message::ProtoTeamOutObj* teamoutobj_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo > teammanlist_;
  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static ProtoTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_UpdateTeamLevelInfo : public ::google::protobuf::Message {
 public:
  Team_SC_UpdateTeamLevelInfo();
  virtual ~Team_SC_UpdateTeamLevelInfo();

  Team_SC_UpdateTeamLevelInfo(const Team_SC_UpdateTeamLevelInfo& from);

  inline Team_SC_UpdateTeamLevelInfo& operator=(const Team_SC_UpdateTeamLevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_UpdateTeamLevelInfo& default_instance();

  void Swap(Team_SC_UpdateTeamLevelInfo* other);

  // implements Message ----------------------------------------------

  Team_SC_UpdateTeamLevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_UpdateTeamLevelInfo& from);
  void MergeFrom(const Team_SC_UpdateTeamLevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::int32 plyid() const;
  inline void set_plyid(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_UpdateTeamLevelInfo)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 plyid_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_UpdateTeamLevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTeamListTeamInfo : public ::google::protobuf::Message {
 public:
  ProtoTeamListTeamInfo();
  virtual ~ProtoTeamListTeamInfo();

  ProtoTeamListTeamInfo(const ProtoTeamListTeamInfo& from);

  inline ProtoTeamListTeamInfo& operator=(const ProtoTeamListTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTeamListTeamInfo& default_instance();

  void Swap(ProtoTeamListTeamInfo* other);

  // implements Message ----------------------------------------------

  ProtoTeamListTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTeamListTeamInfo& from);
  void MergeFrom(const ProtoTeamListTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // required int32 peopleNum = 2;
  inline bool has_peoplenum() const;
  inline void clear_peoplenum();
  static const int kPeopleNumFieldNumber = 2;
  inline ::google::protobuf::int32 peoplenum() const;
  inline void set_peoplenum(::google::protobuf::int32 value);

  // required int32 numLimit = 3;
  inline bool has_numlimit() const;
  inline void clear_numlimit();
  static const int kNumLimitFieldNumber = 3;
  inline ::google::protobuf::int32 numlimit() const;
  inline void set_numlimit(::google::protobuf::int32 value);

  // optional .proto.message.ProtoTeamManInfo leaderInfo = 4;
  inline bool has_leaderinfo() const;
  inline void clear_leaderinfo();
  static const int kLeaderInfoFieldNumber = 4;
  inline const ::proto::message::ProtoTeamManInfo& leaderinfo() const;
  inline ::proto::message::ProtoTeamManInfo* mutable_leaderinfo();
  inline ::proto::message::ProtoTeamManInfo* release_leaderinfo();
  inline void set_allocated_leaderinfo(::proto::message::ProtoTeamManInfo* leaderinfo);

  // optional .proto.message.ProtoTeamOutObj teamOutObj = 5;
  inline bool has_teamoutobj() const;
  inline void clear_teamoutobj();
  static const int kTeamOutObjFieldNumber = 5;
  inline const ::proto::message::ProtoTeamOutObj& teamoutobj() const;
  inline ::proto::message::ProtoTeamOutObj* mutable_teamoutobj();
  inline ::proto::message::ProtoTeamOutObj* release_teamoutobj();
  inline void set_allocated_teamoutobj(::proto::message::ProtoTeamOutObj* teamoutobj);

  // optional int32 totalCombat = 6;
  inline bool has_totalcombat() const;
  inline void clear_totalcombat();
  static const int kTotalCombatFieldNumber = 6;
  inline ::google::protobuf::int32 totalcombat() const;
  inline void set_totalcombat(::google::protobuf::int32 value);

  // optional int32 leaderCombat = 7;
  inline bool has_leadercombat() const;
  inline void clear_leadercombat();
  static const int kLeaderCombatFieldNumber = 7;
  inline ::google::protobuf::int32 leadercombat() const;
  inline void set_leadercombat(::google::protobuf::int32 value);

  // optional int32 needCombat = 8;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedCombatFieldNumber = 8;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoTeamListTeamInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_peoplenum();
  inline void clear_has_peoplenum();
  inline void set_has_numlimit();
  inline void clear_has_numlimit();
  inline void set_has_leaderinfo();
  inline void clear_has_leaderinfo();
  inline void set_has_teamoutobj();
  inline void clear_has_teamoutobj();
  inline void set_has_totalcombat();
  inline void clear_has_totalcombat();
  inline void set_has_leadercombat();
  inline void clear_has_leadercombat();
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 peoplenum_;
  ::proto::message::ProtoTeamManInfo* leaderinfo_;
  ::google::protobuf::int32 numlimit_;
  ::google::protobuf::int32 totalcombat_;
  ::proto::message::ProtoTeamOutObj* teamoutobj_;
  ::google::protobuf::int32 leadercombat_;
  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static ProtoTeamListTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTeamOutObj : public ::google::protobuf::Message {
 public:
  ProtoTeamOutObj();
  virtual ~ProtoTeamOutObj();

  ProtoTeamOutObj(const ProtoTeamOutObj& from);

  inline ProtoTeamOutObj& operator=(const ProtoTeamOutObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTeamOutObj& default_instance();

  void Swap(ProtoTeamOutObj* other);

  // implements Message ----------------------------------------------

  ProtoTeamOutObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTeamOutObj& from);
  void MergeFrom(const ProtoTeamOutObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // required int32 levelMin = 2;
  inline bool has_levelmin() const;
  inline void clear_levelmin();
  static const int kLevelMinFieldNumber = 2;
  inline ::google::protobuf::int32 levelmin() const;
  inline void set_levelmin(::google::protobuf::int32 value);

  // required int32 levelMax = 3;
  inline bool has_levelmax() const;
  inline void clear_levelmax();
  static const int kLevelMaxFieldNumber = 3;
  inline ::google::protobuf::int32 levelmax() const;
  inline void set_levelmax(::google::protobuf::int32 value);

  // required int32 needComBat = 4;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedComBatFieldNumber = 4;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoTeamOutObj)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();
  inline void set_has_levelmin();
  inline void clear_has_levelmin();
  inline void set_has_levelmax();
  inline void clear_has_levelmax();
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obj_;
  ::google::protobuf::int32 levelmin_;
  ::google::protobuf::int32 levelmax_;
  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static ProtoTeamOutObj* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_SetTeamOutObj : public ::google::protobuf::Message {
 public:
  Team_CS_SetTeamOutObj();
  virtual ~Team_CS_SetTeamOutObj();

  Team_CS_SetTeamOutObj(const Team_CS_SetTeamOutObj& from);

  inline Team_CS_SetTeamOutObj& operator=(const Team_CS_SetTeamOutObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_SetTeamOutObj& default_instance();

  void Swap(Team_CS_SetTeamOutObj* other);

  // implements Message ----------------------------------------------

  Team_CS_SetTeamOutObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_SetTeamOutObj& from);
  void MergeFrom(const Team_CS_SetTeamOutObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.ProtoTeamOutObj obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline const ::proto::message::ProtoTeamOutObj& obj() const;
  inline ::proto::message::ProtoTeamOutObj* mutable_obj();
  inline ::proto::message::ProtoTeamOutObj* release_obj();
  inline void set_allocated_obj(::proto::message::ProtoTeamOutObj* obj);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_SetTeamOutObj)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoTeamOutObj* obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_SetTeamOutObj* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_SetTeamOutObj : public ::google::protobuf::Message {
 public:
  Team_SC_SetTeamOutObj();
  virtual ~Team_SC_SetTeamOutObj();

  Team_SC_SetTeamOutObj(const Team_SC_SetTeamOutObj& from);

  inline Team_SC_SetTeamOutObj& operator=(const Team_SC_SetTeamOutObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_SetTeamOutObj& default_instance();

  void Swap(Team_SC_SetTeamOutObj* other);

  // implements Message ----------------------------------------------

  Team_SC_SetTeamOutObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_SetTeamOutObj& from);
  void MergeFrom(const Team_SC_SetTeamOutObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_SetTeamOutObj)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_SetTeamOutObj* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_MatchingQueueInfo : public ::google::protobuf::Message {
 public:
  Team_CS_MatchingQueueInfo();
  virtual ~Team_CS_MatchingQueueInfo();

  Team_CS_MatchingQueueInfo(const Team_CS_MatchingQueueInfo& from);

  inline Team_CS_MatchingQueueInfo& operator=(const Team_CS_MatchingQueueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_MatchingQueueInfo& default_instance();

  void Swap(Team_CS_MatchingQueueInfo* other);

  // implements Message ----------------------------------------------

  Team_CS_MatchingQueueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_MatchingQueueInfo& from);
  void MergeFrom(const Team_CS_MatchingQueueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_MatchingQueueInfo)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_MatchingQueueInfo* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_MatchingQueueInfo : public ::google::protobuf::Message {
 public:
  Team_SC_MatchingQueueInfo();
  virtual ~Team_SC_MatchingQueueInfo();

  Team_SC_MatchingQueueInfo(const Team_SC_MatchingQueueInfo& from);

  inline Team_SC_MatchingQueueInfo& operator=(const Team_SC_MatchingQueueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_MatchingQueueInfo& default_instance();

  void Swap(Team_SC_MatchingQueueInfo* other);

  // implements Message ----------------------------------------------

  Team_SC_MatchingQueueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_MatchingQueueInfo& from);
  void MergeFrom(const Team_SC_MatchingQueueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nTeamNum = 1;
  inline bool has_nteamnum() const;
  inline void clear_nteamnum();
  static const int kNTeamNumFieldNumber = 1;
  inline ::google::protobuf::int32 nteamnum() const;
  inline void set_nteamnum(::google::protobuf::int32 value);

  // required int32 nSingleNum = 2;
  inline bool has_nsinglenum() const;
  inline void clear_nsinglenum();
  static const int kNSingleNumFieldNumber = 2;
  inline ::google::protobuf::int32 nsinglenum() const;
  inline void set_nsinglenum(::google::protobuf::int32 value);

  // required int32 obj = 3;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 3;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_MatchingQueueInfo)
 private:
  inline void set_has_nteamnum();
  inline void clear_has_nteamnum();
  inline void set_has_nsinglenum();
  inline void clear_has_nsinglenum();
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nteamnum_;
  ::google::protobuf::int32 nsinglenum_;
  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_MatchingQueueInfo* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_GetTeamList : public ::google::protobuf::Message {
 public:
  Team_CS_GetTeamList();
  virtual ~Team_CS_GetTeamList();

  Team_CS_GetTeamList(const Team_CS_GetTeamList& from);

  inline Team_CS_GetTeamList& operator=(const Team_CS_GetTeamList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_GetTeamList& default_instance();

  void Swap(Team_CS_GetTeamList* other);

  // implements Message ----------------------------------------------

  Team_CS_GetTeamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_GetTeamList& from);
  void MergeFrom(const Team_CS_GetTeamList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_GetTeamList)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_GetTeamList* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_GetTeamList : public ::google::protobuf::Message {
 public:
  Team_SC_GetTeamList();
  virtual ~Team_SC_GetTeamList();

  Team_SC_GetTeamList(const Team_SC_GetTeamList& from);

  inline Team_SC_GetTeamList& operator=(const Team_SC_GetTeamList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_GetTeamList& default_instance();

  void Swap(Team_SC_GetTeamList* other);

  // implements Message ----------------------------------------------

  Team_SC_GetTeamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_GetTeamList& from);
  void MergeFrom(const Team_SC_GetTeamList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoTeamListTeamInfo teamInfo = 2;
  inline int teaminfo_size() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 2;
  inline const ::proto::message::ProtoTeamListTeamInfo& teaminfo(int index) const;
  inline ::proto::message::ProtoTeamListTeamInfo* mutable_teaminfo(int index);
  inline ::proto::message::ProtoTeamListTeamInfo* add_teaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamListTeamInfo >&
      teaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamListTeamInfo >*
      mutable_teaminfo();

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_GetTeamList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamListTeamInfo > teaminfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_GetTeamList* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_CreateTeam : public ::google::protobuf::Message {
 public:
  Team_CS_CreateTeam();
  virtual ~Team_CS_CreateTeam();

  Team_CS_CreateTeam(const Team_CS_CreateTeam& from);

  inline Team_CS_CreateTeam& operator=(const Team_CS_CreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_CreateTeam& default_instance();

  void Swap(Team_CS_CreateTeam* other);

  // implements Message ----------------------------------------------

  Team_CS_CreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_CreateTeam& from);
  void MergeFrom(const Team_CS_CreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 needCombat = 1;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedCombatFieldNumber = 1;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_CreateTeam)
 private:
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_CreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_CreateTeam : public ::google::protobuf::Message {
 public:
  Team_SC_CreateTeam();
  virtual ~Team_SC_CreateTeam();

  Team_SC_CreateTeam(const Team_SC_CreateTeam& from);

  inline Team_SC_CreateTeam& operator=(const Team_SC_CreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_CreateTeam& default_instance();

  void Swap(Team_SC_CreateTeam* other);

  // implements Message ----------------------------------------------

  Team_SC_CreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_CreateTeam& from);
  void MergeFrom(const Team_SC_CreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_CreateTeam)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_CreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_ApplyTeam : public ::google::protobuf::Message {
 public:
  Team_CS_ApplyTeam();
  virtual ~Team_CS_ApplyTeam();

  Team_CS_ApplyTeam(const Team_CS_ApplyTeam& from);

  inline Team_CS_ApplyTeam& operator=(const Team_CS_ApplyTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_ApplyTeam& default_instance();

  void Swap(Team_CS_ApplyTeam* other);

  // implements Message ----------------------------------------------

  Team_CS_ApplyTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_ApplyTeam& from);
  void MergeFrom(const Team_CS_ApplyTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_ApplyTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_ApplyTeam* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_ApplyTeam : public ::google::protobuf::Message {
 public:
  Team_SC_ApplyTeam();
  virtual ~Team_SC_ApplyTeam();

  Team_SC_ApplyTeam(const Team_SC_ApplyTeam& from);

  inline Team_SC_ApplyTeam& operator=(const Team_SC_ApplyTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_ApplyTeam& default_instance();

  void Swap(Team_SC_ApplyTeam* other);

  // implements Message ----------------------------------------------

  Team_SC_ApplyTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_ApplyTeam& from);
  void MergeFrom(const Team_SC_ApplyTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 teamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_ApplyTeam)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_ApplyTeam* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TeamQuit : public ::google::protobuf::Message {
 public:
  Team_CS_TeamQuit();
  virtual ~Team_CS_TeamQuit();

  Team_CS_TeamQuit(const Team_CS_TeamQuit& from);

  inline Team_CS_TeamQuit& operator=(const Team_CS_TeamQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TeamQuit& default_instance();

  void Swap(Team_CS_TeamQuit* other);

  // implements Message ----------------------------------------------

  Team_CS_TeamQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TeamQuit& from);
  void MergeFrom(const Team_CS_TeamQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TeamQuit)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TeamQuit* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TeamQuit : public ::google::protobuf::Message {
 public:
  Team_SC_TeamQuit();
  virtual ~Team_SC_TeamQuit();

  Team_SC_TeamQuit(const Team_SC_TeamQuit& from);

  inline Team_SC_TeamQuit& operator=(const Team_SC_TeamQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TeamQuit& default_instance();

  void Swap(Team_SC_TeamQuit* other);

  // implements Message ----------------------------------------------

  Team_SC_TeamQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TeamQuit& from);
  void MergeFrom(const Team_SC_TeamQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TeamQuit)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TeamQuit* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TeamAppoint : public ::google::protobuf::Message {
 public:
  Team_CS_TeamAppoint();
  virtual ~Team_CS_TeamAppoint();

  Team_CS_TeamAppoint(const Team_CS_TeamAppoint& from);

  inline Team_CS_TeamAppoint& operator=(const Team_CS_TeamAppoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TeamAppoint& default_instance();

  void Swap(Team_CS_TeamAppoint* other);

  // implements Message ----------------------------------------------

  Team_CS_TeamAppoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TeamAppoint& from);
  void MergeFrom(const Team_CS_TeamAppoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required int32 appoint = 2;
  inline bool has_appoint() const;
  inline void clear_appoint();
  static const int kAppointFieldNumber = 2;
  inline ::google::protobuf::int32 appoint() const;
  inline void set_appoint(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TeamAppoint)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_appoint();
  inline void clear_has_appoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::int32 appoint_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TeamAppoint* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TeamAppoint : public ::google::protobuf::Message {
 public:
  Team_SC_TeamAppoint();
  virtual ~Team_SC_TeamAppoint();

  Team_SC_TeamAppoint(const Team_SC_TeamAppoint& from);

  inline Team_SC_TeamAppoint& operator=(const Team_SC_TeamAppoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TeamAppoint& default_instance();

  void Swap(Team_SC_TeamAppoint* other);

  // implements Message ----------------------------------------------

  Team_SC_TeamAppoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TeamAppoint& from);
  void MergeFrom(const Team_SC_TeamAppoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TeamAppoint)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TeamAppoint* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TeamKick : public ::google::protobuf::Message {
 public:
  Team_CS_TeamKick();
  virtual ~Team_CS_TeamKick();

  Team_CS_TeamKick(const Team_CS_TeamKick& from);

  inline Team_CS_TeamKick& operator=(const Team_CS_TeamKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TeamKick& default_instance();

  void Swap(Team_CS_TeamKick* other);

  // implements Message ----------------------------------------------

  Team_CS_TeamKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TeamKick& from);
  void MergeFrom(const Team_CS_TeamKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TeamKick)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TeamKick* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TeamKick : public ::google::protobuf::Message {
 public:
  Team_SC_TeamKick();
  virtual ~Team_SC_TeamKick();

  Team_SC_TeamKick(const Team_SC_TeamKick& from);

  inline Team_SC_TeamKick& operator=(const Team_SC_TeamKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TeamKick& default_instance();

  void Swap(Team_SC_TeamKick* other);

  // implements Message ----------------------------------------------

  Team_SC_TeamKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TeamKick& from);
  void MergeFrom(const Team_SC_TeamKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string beKickName = 2;
  inline bool has_bekickname() const;
  inline void clear_bekickname();
  static const int kBeKickNameFieldNumber = 2;
  inline const ::std::string& bekickname() const;
  inline void set_bekickname(const ::std::string& value);
  inline void set_bekickname(const char* value);
  inline void set_bekickname(const char* value, size_t size);
  inline ::std::string* mutable_bekickname();
  inline ::std::string* release_bekickname();
  inline void set_allocated_bekickname(::std::string* bekickname);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TeamKick)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_bekickname();
  inline void clear_has_bekickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* bekickname_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TeamKick* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TempLeave : public ::google::protobuf::Message {
 public:
  Team_CS_TempLeave();
  virtual ~Team_CS_TempLeave();

  Team_CS_TempLeave(const Team_CS_TempLeave& from);

  inline Team_CS_TempLeave& operator=(const Team_CS_TempLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TempLeave& default_instance();

  void Swap(Team_CS_TempLeave* other);

  // implements Message ----------------------------------------------

  Team_CS_TempLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TempLeave& from);
  void MergeFrom(const Team_CS_TempLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TempLeave)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TempLeave* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TempLeave : public ::google::protobuf::Message {
 public:
  Team_SC_TempLeave();
  virtual ~Team_SC_TempLeave();

  Team_SC_TempLeave(const Team_SC_TempLeave& from);

  inline Team_SC_TempLeave& operator=(const Team_SC_TempLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TempLeave& default_instance();

  void Swap(Team_SC_TempLeave* other);

  // implements Message ----------------------------------------------

  Team_SC_TempLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TempLeave& from);
  void MergeFrom(const Team_SC_TempLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TempLeave)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TempLeave* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TeamAuto : public ::google::protobuf::Message {
 public:
  Team_CS_TeamAuto();
  virtual ~Team_CS_TeamAuto();

  Team_CS_TeamAuto(const Team_CS_TeamAuto& from);

  inline Team_CS_TeamAuto& operator=(const Team_CS_TeamAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TeamAuto& default_instance();

  void Swap(Team_CS_TeamAuto* other);

  // implements Message ----------------------------------------------

  Team_CS_TeamAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TeamAuto& from);
  void MergeFrom(const Team_CS_TeamAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isAuto = 1;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsAutoFieldNumber = 1;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TeamAuto)
 private:
  inline void set_has_isauto();
  inline void clear_has_isauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TeamAuto* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TeamAuto : public ::google::protobuf::Message {
 public:
  Team_SC_TeamAuto();
  virtual ~Team_SC_TeamAuto();

  Team_SC_TeamAuto(const Team_SC_TeamAuto& from);

  inline Team_SC_TeamAuto& operator=(const Team_SC_TeamAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TeamAuto& default_instance();

  void Swap(Team_SC_TeamAuto* other);

  // implements Message ----------------------------------------------

  Team_SC_TeamAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TeamAuto& from);
  void MergeFrom(const Team_SC_TeamAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TeamAuto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TeamAuto* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_MemberAuto : public ::google::protobuf::Message {
 public:
  Team_CS_MemberAuto();
  virtual ~Team_CS_MemberAuto();

  Team_CS_MemberAuto(const Team_CS_MemberAuto& from);

  inline Team_CS_MemberAuto& operator=(const Team_CS_MemberAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_MemberAuto& default_instance();

  void Swap(Team_CS_MemberAuto* other);

  // implements Message ----------------------------------------------

  Team_CS_MemberAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_MemberAuto& from);
  void MergeFrom(const Team_CS_MemberAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isAuto = 1;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsAutoFieldNumber = 1;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // required int32 obj = 2;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 2;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_MemberAuto)
 private:
  inline void set_has_isauto();
  inline void clear_has_isauto();
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isauto_;
  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_MemberAuto* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_MemberAuto : public ::google::protobuf::Message {
 public:
  Team_SC_MemberAuto();
  virtual ~Team_SC_MemberAuto();

  Team_SC_MemberAuto(const Team_SC_MemberAuto& from);

  inline Team_SC_MemberAuto& operator=(const Team_SC_MemberAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_MemberAuto& default_instance();

  void Swap(Team_SC_MemberAuto* other);

  // implements Message ----------------------------------------------

  Team_SC_MemberAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_MemberAuto& from);
  void MergeFrom(const Team_SC_MemberAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 isAuto = 2;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsAutoFieldNumber = 2;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_MemberAuto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_isauto();
  inline void clear_has_isauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 isauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_MemberAuto* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TeamInvite : public ::google::protobuf::Message {
 public:
  Team_CS_TeamInvite();
  virtual ~Team_CS_TeamInvite();

  Team_CS_TeamInvite(const Team_CS_TeamInvite& from);

  inline Team_CS_TeamInvite& operator=(const Team_CS_TeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TeamInvite& default_instance();

  void Swap(Team_CS_TeamInvite* other);

  // implements Message ----------------------------------------------

  Team_CS_TeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TeamInvite& from);
  void MergeFrom(const Team_CS_TeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 plyid() const;
  inline void set_plyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TeamInvite)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 plyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TeamInvite : public ::google::protobuf::Message {
 public:
  Team_SC_TeamInvite();
  virtual ~Team_SC_TeamInvite();

  Team_SC_TeamInvite(const Team_SC_TeamInvite& from);

  inline Team_SC_TeamInvite& operator=(const Team_SC_TeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TeamInvite& default_instance();

  void Swap(Team_SC_TeamInvite* other);

  // implements Message ----------------------------------------------

  Team_SC_TeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TeamInvite& from);
  void MergeFrom(const Team_SC_TeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TeamInvite)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_SetTeamBeInvite : public ::google::protobuf::Message {
 public:
  Team_CS_SetTeamBeInvite();
  virtual ~Team_CS_SetTeamBeInvite();

  Team_CS_SetTeamBeInvite(const Team_CS_SetTeamBeInvite& from);

  inline Team_CS_SetTeamBeInvite& operator=(const Team_CS_SetTeamBeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_SetTeamBeInvite& default_instance();

  void Swap(Team_CS_SetTeamBeInvite* other);

  // implements Message ----------------------------------------------

  Team_CS_SetTeamBeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_SetTeamBeInvite& from);
  void MergeFrom(const Team_CS_SetTeamBeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // required int32 teamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_SetTeamBeInvite)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_SetTeamBeInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_SetTeamBeInvite : public ::google::protobuf::Message {
 public:
  Team_SC_SetTeamBeInvite();
  virtual ~Team_SC_SetTeamBeInvite();

  Team_SC_SetTeamBeInvite(const Team_SC_SetTeamBeInvite& from);

  inline Team_SC_SetTeamBeInvite& operator=(const Team_SC_SetTeamBeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_SetTeamBeInvite& default_instance();

  void Swap(Team_SC_SetTeamBeInvite* other);

  // implements Message ----------------------------------------------

  Team_SC_SetTeamBeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_SetTeamBeInvite& from);
  void MergeFrom(const Team_SC_SetTeamBeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_SetTeamBeInvite)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_SetTeamBeInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_SetTeamAllow : public ::google::protobuf::Message {
 public:
  Team_CS_SetTeamAllow();
  virtual ~Team_CS_SetTeamAllow();

  Team_CS_SetTeamAllow(const Team_CS_SetTeamAllow& from);

  inline Team_CS_SetTeamAllow& operator=(const Team_CS_SetTeamAllow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_SetTeamAllow& default_instance();

  void Swap(Team_CS_SetTeamAllow* other);

  // implements Message ----------------------------------------------

  Team_CS_SetTeamAllow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_SetTeamAllow& from);
  void MergeFrom(const Team_CS_SetTeamAllow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required bool allow = 2;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 2;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_SetTeamAllow)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_SetTeamAllow* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_SetTeamAllow : public ::google::protobuf::Message {
 public:
  Team_SC_SetTeamAllow();
  virtual ~Team_SC_SetTeamAllow();

  Team_SC_SetTeamAllow(const Team_SC_SetTeamAllow& from);

  inline Team_SC_SetTeamAllow& operator=(const Team_SC_SetTeamAllow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_SetTeamAllow& default_instance();

  void Swap(Team_SC_SetTeamAllow* other);

  // implements Message ----------------------------------------------

  Team_SC_SetTeamAllow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_SetTeamAllow& from);
  void MergeFrom(const Team_SC_SetTeamAllow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_SetTeamAllow)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_SetTeamAllow* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_SetTeamAllowOneTime : public ::google::protobuf::Message {
 public:
  Team_CS_SetTeamAllowOneTime();
  virtual ~Team_CS_SetTeamAllowOneTime();

  Team_CS_SetTeamAllowOneTime(const Team_CS_SetTeamAllowOneTime& from);

  inline Team_CS_SetTeamAllowOneTime& operator=(const Team_CS_SetTeamAllowOneTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_SetTeamAllowOneTime& default_instance();

  void Swap(Team_CS_SetTeamAllowOneTime* other);

  // implements Message ----------------------------------------------

  Team_CS_SetTeamAllowOneTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_SetTeamAllowOneTime& from);
  void MergeFrom(const Team_CS_SetTeamAllowOneTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_SetTeamAllowOneTime)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_SetTeamAllowOneTime* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_SetTeamAllowOneTime : public ::google::protobuf::Message {
 public:
  Team_SC_SetTeamAllowOneTime();
  virtual ~Team_SC_SetTeamAllowOneTime();

  Team_SC_SetTeamAllowOneTime(const Team_SC_SetTeamAllowOneTime& from);

  inline Team_SC_SetTeamAllowOneTime& operator=(const Team_SC_SetTeamAllowOneTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_SetTeamAllowOneTime& default_instance();

  void Swap(Team_SC_SetTeamAllowOneTime* other);

  // implements Message ----------------------------------------------

  Team_SC_SetTeamAllowOneTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_SetTeamAllowOneTime& from);
  void MergeFrom(const Team_SC_SetTeamAllowOneTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_SetTeamAllowOneTime)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_SetTeamAllowOneTime* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_UpdateTeamInfo : public ::google::protobuf::Message {
 public:
  Team_CS_UpdateTeamInfo();
  virtual ~Team_CS_UpdateTeamInfo();

  Team_CS_UpdateTeamInfo(const Team_CS_UpdateTeamInfo& from);

  inline Team_CS_UpdateTeamInfo& operator=(const Team_CS_UpdateTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_UpdateTeamInfo& default_instance();

  void Swap(Team_CS_UpdateTeamInfo* other);

  // implements Message ----------------------------------------------

  Team_CS_UpdateTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_UpdateTeamInfo& from);
  void MergeFrom(const Team_CS_UpdateTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_UpdateTeamInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_UpdateTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_UpdateTeamInfo : public ::google::protobuf::Message {
 public:
  Team_SC_UpdateTeamInfo();
  virtual ~Team_SC_UpdateTeamInfo();

  Team_SC_UpdateTeamInfo(const Team_SC_UpdateTeamInfo& from);

  inline Team_SC_UpdateTeamInfo& operator=(const Team_SC_UpdateTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_UpdateTeamInfo& default_instance();

  void Swap(Team_SC_UpdateTeamInfo* other);

  // implements Message ----------------------------------------------

  Team_SC_UpdateTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_UpdateTeamInfo& from);
  void MergeFrom(const Team_SC_UpdateTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoTeamInfo teamInfo = 1;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 1;
  inline const ::proto::message::ProtoTeamInfo& teaminfo() const;
  inline ::proto::message::ProtoTeamInfo* mutable_teaminfo();
  inline ::proto::message::ProtoTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::proto::message::ProtoTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_UpdateTeamInfo)
 private:
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoTeamInfo* teaminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_UpdateTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_UpdateTeamBeInvite : public ::google::protobuf::Message {
 public:
  Team_SC_UpdateTeamBeInvite();
  virtual ~Team_SC_UpdateTeamBeInvite();

  Team_SC_UpdateTeamBeInvite(const Team_SC_UpdateTeamBeInvite& from);

  inline Team_SC_UpdateTeamBeInvite& operator=(const Team_SC_UpdateTeamBeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_UpdateTeamBeInvite& default_instance();

  void Swap(Team_SC_UpdateTeamBeInvite* other);

  // implements Message ----------------------------------------------

  Team_SC_UpdateTeamBeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_UpdateTeamBeInvite& from);
  void MergeFrom(const Team_SC_UpdateTeamBeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 obj = 3;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 3;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // optional int32 teamnum = 4;
  inline bool has_teamnum() const;
  inline void clear_teamnum();
  static const int kTeamnumFieldNumber = 4;
  inline ::google::protobuf::int32 teamnum() const;
  inline void set_teamnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_UpdateTeamBeInvite)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_obj();
  inline void clear_has_obj();
  inline void set_has_teamnum();
  inline void clear_has_teamnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 obj_;
  ::google::protobuf::int32 teamnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_UpdateTeamBeInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_UpdateApplyList : public ::google::protobuf::Message {
 public:
  Team_SC_UpdateApplyList();
  virtual ~Team_SC_UpdateApplyList();

  Team_SC_UpdateApplyList(const Team_SC_UpdateApplyList& from);

  inline Team_SC_UpdateApplyList& operator=(const Team_SC_UpdateApplyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_UpdateApplyList& default_instance();

  void Swap(Team_SC_UpdateApplyList* other);

  // implements Message ----------------------------------------------

  Team_SC_UpdateApplyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_UpdateApplyList& from);
  void MergeFrom(const Team_SC_UpdateApplyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoTeamManInfo teamManList = 1;
  inline int teammanlist_size() const;
  inline void clear_teammanlist();
  static const int kTeamManListFieldNumber = 1;
  inline const ::proto::message::ProtoTeamManInfo& teammanlist(int index) const;
  inline ::proto::message::ProtoTeamManInfo* mutable_teammanlist(int index);
  inline ::proto::message::ProtoTeamManInfo* add_teammanlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >&
      teammanlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >*
      mutable_teammanlist();

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_UpdateApplyList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo > teammanlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_UpdateApplyList* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_UpdateTeamMemberTick : public ::google::protobuf::Message {
 public:
  Team_SC_UpdateTeamMemberTick();
  virtual ~Team_SC_UpdateTeamMemberTick();

  Team_SC_UpdateTeamMemberTick(const Team_SC_UpdateTeamMemberTick& from);

  inline Team_SC_UpdateTeamMemberTick& operator=(const Team_SC_UpdateTeamMemberTick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_UpdateTeamMemberTick& default_instance();

  void Swap(Team_SC_UpdateTeamMemberTick* other);

  // implements Message ----------------------------------------------

  Team_SC_UpdateTeamMemberTick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_UpdateTeamMemberTick& from);
  void MergeFrom(const Team_SC_UpdateTeamMemberTick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_UpdateTeamMemberTick)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_UpdateTeamMemberTick* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_FollowLeader : public ::google::protobuf::Message {
 public:
  Team_CS_FollowLeader();
  virtual ~Team_CS_FollowLeader();

  Team_CS_FollowLeader(const Team_CS_FollowLeader& from);

  inline Team_CS_FollowLeader& operator=(const Team_CS_FollowLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_FollowLeader& default_instance();

  void Swap(Team_CS_FollowLeader* other);

  // implements Message ----------------------------------------------

  Team_CS_FollowLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_FollowLeader& from);
  void MergeFrom(const Team_CS_FollowLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_FollowLeader)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_FollowLeader* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_FollowLeader : public ::google::protobuf::Message {
 public:
  Team_SC_FollowLeader();
  virtual ~Team_SC_FollowLeader();

  Team_SC_FollowLeader(const Team_SC_FollowLeader& from);

  inline Team_SC_FollowLeader& operator=(const Team_SC_FollowLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_FollowLeader& default_instance();

  void Swap(Team_SC_FollowLeader* other);

  // implements Message ----------------------------------------------

  Team_SC_FollowLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_FollowLeader& from);
  void MergeFrom(const Team_SC_FollowLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bool changeMap = 2;
  inline bool has_changemap() const;
  inline void clear_changemap();
  static const int kChangeMapFieldNumber = 2;
  inline bool changemap() const;
  inline void set_changemap(bool value);

  // optional .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_FollowLeader)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_changemap();
  inline void clear_has_changemap();
  inline void set_has_pt();
  inline void clear_has_pt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  bool changemap_;
  ::proto::message::Point3D* pt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_FollowLeader* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_SummonFollower : public ::google::protobuf::Message {
 public:
  Team_CS_SummonFollower();
  virtual ~Team_CS_SummonFollower();

  Team_CS_SummonFollower(const Team_CS_SummonFollower& from);

  inline Team_CS_SummonFollower& operator=(const Team_CS_SummonFollower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_SummonFollower& default_instance();

  void Swap(Team_CS_SummonFollower* other);

  // implements Message ----------------------------------------------

  Team_CS_SummonFollower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_SummonFollower& from);
  void MergeFrom(const Team_CS_SummonFollower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_SummonFollower)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_SummonFollower* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_SummonFollower : public ::google::protobuf::Message {
 public:
  Team_SC_SummonFollower();
  virtual ~Team_SC_SummonFollower();

  Team_SC_SummonFollower(const Team_SC_SummonFollower& from);

  inline Team_SC_SummonFollower& operator=(const Team_SC_SummonFollower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_SummonFollower& default_instance();

  void Swap(Team_SC_SummonFollower* other);

  // implements Message ----------------------------------------------

  Team_SC_SummonFollower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_SummonFollower& from);
  void MergeFrom(const Team_SC_SummonFollower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_SummonFollower)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_SummonFollower* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_LeaderSummon : public ::google::protobuf::Message {
 public:
  Team_SC_LeaderSummon();
  virtual ~Team_SC_LeaderSummon();

  Team_SC_LeaderSummon(const Team_SC_LeaderSummon& from);

  inline Team_SC_LeaderSummon& operator=(const Team_SC_LeaderSummon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_LeaderSummon& default_instance();

  void Swap(Team_SC_LeaderSummon* other);

  // implements Message ----------------------------------------------

  Team_SC_LeaderSummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_LeaderSummon& from);
  void MergeFrom(const Team_SC_LeaderSummon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_LeaderSummon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_LeaderSummon* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_SetIgnoreTeamInvite : public ::google::protobuf::Message {
 public:
  Team_CS_SetIgnoreTeamInvite();
  virtual ~Team_CS_SetIgnoreTeamInvite();

  Team_CS_SetIgnoreTeamInvite(const Team_CS_SetIgnoreTeamInvite& from);

  inline Team_CS_SetIgnoreTeamInvite& operator=(const Team_CS_SetIgnoreTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_SetIgnoreTeamInvite& default_instance();

  void Swap(Team_CS_SetIgnoreTeamInvite* other);

  // implements Message ----------------------------------------------

  Team_CS_SetIgnoreTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_SetIgnoreTeamInvite& from);
  void MergeFrom(const Team_CS_SetIgnoreTeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_SetIgnoreTeamInvite)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_SetIgnoreTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_SetIgnoreTeamInvite : public ::google::protobuf::Message {
 public:
  Team_SC_SetIgnoreTeamInvite();
  virtual ~Team_SC_SetIgnoreTeamInvite();

  Team_SC_SetIgnoreTeamInvite(const Team_SC_SetIgnoreTeamInvite& from);

  inline Team_SC_SetIgnoreTeamInvite& operator=(const Team_SC_SetIgnoreTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_SetIgnoreTeamInvite& default_instance();

  void Swap(Team_SC_SetIgnoreTeamInvite* other);

  // implements Message ----------------------------------------------

  Team_SC_SetIgnoreTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_SetIgnoreTeamInvite& from);
  void MergeFrom(const Team_SC_SetIgnoreTeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_SetIgnoreTeamInvite)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_SetIgnoreTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_QueryIgnoreTeamInvite : public ::google::protobuf::Message {
 public:
  Team_CS_QueryIgnoreTeamInvite();
  virtual ~Team_CS_QueryIgnoreTeamInvite();

  Team_CS_QueryIgnoreTeamInvite(const Team_CS_QueryIgnoreTeamInvite& from);

  inline Team_CS_QueryIgnoreTeamInvite& operator=(const Team_CS_QueryIgnoreTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_QueryIgnoreTeamInvite& default_instance();

  void Swap(Team_CS_QueryIgnoreTeamInvite* other);

  // implements Message ----------------------------------------------

  Team_CS_QueryIgnoreTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_QueryIgnoreTeamInvite& from);
  void MergeFrom(const Team_CS_QueryIgnoreTeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_QueryIgnoreTeamInvite)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_QueryIgnoreTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_QueryIgnoreTeamInvite : public ::google::protobuf::Message {
 public:
  Team_SC_QueryIgnoreTeamInvite();
  virtual ~Team_SC_QueryIgnoreTeamInvite();

  Team_SC_QueryIgnoreTeamInvite(const Team_SC_QueryIgnoreTeamInvite& from);

  inline Team_SC_QueryIgnoreTeamInvite& operator=(const Team_SC_QueryIgnoreTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_QueryIgnoreTeamInvite& default_instance();

  void Swap(Team_SC_QueryIgnoreTeamInvite* other);

  // implements Message ----------------------------------------------

  Team_SC_QueryIgnoreTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_QueryIgnoreTeamInvite& from);
  void MergeFrom(const Team_SC_QueryIgnoreTeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_QueryIgnoreTeamInvite)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_QueryIgnoreTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_ErrorInfo : public ::google::protobuf::Message {
 public:
  Team_SC_ErrorInfo();
  virtual ~Team_SC_ErrorInfo();

  Team_SC_ErrorInfo(const Team_SC_ErrorInfo& from);

  inline Team_SC_ErrorInfo& operator=(const Team_SC_ErrorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_ErrorInfo& default_instance();

  void Swap(Team_SC_ErrorInfo* other);

  // implements Message ----------------------------------------------

  Team_SC_ErrorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_ErrorInfo& from);
  void MergeFrom(const Team_SC_ErrorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_ErrorInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_ErrorInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTeamManHPInfo : public ::google::protobuf::Message {
 public:
  ProtoTeamManHPInfo();
  virtual ~ProtoTeamManHPInfo();

  ProtoTeamManHPInfo(const ProtoTeamManHPInfo& from);

  inline ProtoTeamManHPInfo& operator=(const ProtoTeamManHPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTeamManHPInfo& default_instance();

  void Swap(ProtoTeamManHPInfo* other);

  // implements Message ----------------------------------------------

  ProtoTeamManHPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTeamManHPInfo& from);
  void MergeFrom(const ProtoTeamManHPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required uint32 maxHp = 2;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxHpFieldNumber = 2;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // required uint32 Hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoTeamManHPInfo)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static ProtoTeamManHPInfo* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_UpdateCurrentHp : public ::google::protobuf::Message {
 public:
  Team_SC_UpdateCurrentHp();
  virtual ~Team_SC_UpdateCurrentHp();

  Team_SC_UpdateCurrentHp(const Team_SC_UpdateCurrentHp& from);

  inline Team_SC_UpdateCurrentHp& operator=(const Team_SC_UpdateCurrentHp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_UpdateCurrentHp& default_instance();

  void Swap(Team_SC_UpdateCurrentHp* other);

  // implements Message ----------------------------------------------

  Team_SC_UpdateCurrentHp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_UpdateCurrentHp& from);
  void MergeFrom(const Team_SC_UpdateCurrentHp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoTeamManHPInfo HpList = 1;
  inline int hplist_size() const;
  inline void clear_hplist();
  static const int kHpListFieldNumber = 1;
  inline const ::proto::message::ProtoTeamManHPInfo& hplist(int index) const;
  inline ::proto::message::ProtoTeamManHPInfo* mutable_hplist(int index);
  inline ::proto::message::ProtoTeamManHPInfo* add_hplist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManHPInfo >&
      hplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManHPInfo >*
      mutable_hplist();

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_UpdateCurrentHp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManHPInfo > hplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_UpdateCurrentHp* default_instance_;
};
// -------------------------------------------------------------------

class Team_CS_TeamReady : public ::google::protobuf::Message {
 public:
  Team_CS_TeamReady();
  virtual ~Team_CS_TeamReady();

  Team_CS_TeamReady(const Team_CS_TeamReady& from);

  inline Team_CS_TeamReady& operator=(const Team_CS_TeamReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_CS_TeamReady& default_instance();

  void Swap(Team_CS_TeamReady* other);

  // implements Message ----------------------------------------------

  Team_CS_TeamReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_CS_TeamReady& from);
  void MergeFrom(const Team_CS_TeamReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_CS_TeamReady)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_CS_TeamReady* default_instance_;
};
// -------------------------------------------------------------------

class Team_SC_TeamReady : public ::google::protobuf::Message {
 public:
  Team_SC_TeamReady();
  virtual ~Team_SC_TeamReady();

  Team_SC_TeamReady(const Team_SC_TeamReady& from);

  inline Team_SC_TeamReady& operator=(const Team_SC_TeamReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Team_SC_TeamReady& default_instance();

  void Swap(Team_SC_TeamReady* other);

  // implements Message ----------------------------------------------

  Team_SC_TeamReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Team_SC_TeamReady& from);
  void MergeFrom(const Team_SC_TeamReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Team_SC_TeamReady)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_team_2eproto();
  friend void protobuf_AssignDesc_team_2eproto();
  friend void protobuf_ShutdownFile_team_2eproto();

  void InitAsDefaultInstance();
  static Team_SC_TeamReady* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoTeamManInfo

// required uint32 plyId = 1;
inline bool ProtoTeamManInfo::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTeamManInfo::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTeamManInfo::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTeamManInfo::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 ProtoTeamManInfo::plyid() const {
  return plyid_;
}
inline void ProtoTeamManInfo::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 job = 2;
inline bool ProtoTeamManInfo::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTeamManInfo::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTeamManInfo::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTeamManInfo::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::job() const {
  return job_;
}
inline void ProtoTeamManInfo::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
}

// required int32 level = 3;
inline bool ProtoTeamManInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTeamManInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTeamManInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTeamManInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::level() const {
  return level_;
}
inline void ProtoTeamManInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 status = 4;
inline bool ProtoTeamManInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoTeamManInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoTeamManInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoTeamManInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::status() const {
  return status_;
}
inline void ProtoTeamManInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required string name = 5;
inline bool ProtoTeamManInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoTeamManInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoTeamManInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoTeamManInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoTeamManInfo::name() const {
  return *name_;
}
inline void ProtoTeamManInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoTeamManInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoTeamManInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoTeamManInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtoTeamManInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtoTeamManInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 equipID_list = 6;
inline int ProtoTeamManInfo::equipid_list_size() const {
  return equipid_list_.size();
}
inline void ProtoTeamManInfo::clear_equipid_list() {
  equipid_list_.Clear();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::equipid_list(int index) const {
  return equipid_list_.Get(index);
}
inline void ProtoTeamManInfo::set_equipid_list(int index, ::google::protobuf::int32 value) {
  equipid_list_.Set(index, value);
}
inline void ProtoTeamManInfo::add_equipid_list(::google::protobuf::int32 value) {
  equipid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoTeamManInfo::equipid_list() const {
  return equipid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoTeamManInfo::mutable_equipid_list() {
  return &equipid_list_;
}

// optional uint64 plyuuid = 7;
inline bool ProtoTeamManInfo::has_plyuuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoTeamManInfo::set_has_plyuuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoTeamManInfo::clear_has_plyuuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoTeamManInfo::clear_plyuuid() {
  plyuuid_ = GOOGLE_ULONGLONG(0);
  clear_has_plyuuid();
}
inline ::google::protobuf::uint64 ProtoTeamManInfo::plyuuid() const {
  return plyuuid_;
}
inline void ProtoTeamManInfo::set_plyuuid(::google::protobuf::uint64 value) {
  set_has_plyuuid();
  plyuuid_ = value;
}

// optional int32 identity = 8;
inline bool ProtoTeamManInfo::has_identity() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoTeamManInfo::set_has_identity() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoTeamManInfo::clear_has_identity() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoTeamManInfo::clear_identity() {
  identity_ = 0;
  clear_has_identity();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::identity() const {
  return identity_;
}
inline void ProtoTeamManInfo::set_identity(::google::protobuf::int32 value) {
  set_has_identity();
  identity_ = value;
}

// optional int32 combat = 9;
inline bool ProtoTeamManInfo::has_combat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoTeamManInfo::set_has_combat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoTeamManInfo::clear_has_combat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoTeamManInfo::clear_combat() {
  combat_ = 0;
  clear_has_combat();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::combat() const {
  return combat_;
}
inline void ProtoTeamManInfo::set_combat(::google::protobuf::int32 value) {
  set_has_combat();
  combat_ = value;
}

// optional bool isReady = 10;
inline bool ProtoTeamManInfo::has_isready() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoTeamManInfo::set_has_isready() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoTeamManInfo::clear_has_isready() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoTeamManInfo::clear_isready() {
  isready_ = false;
  clear_has_isready();
}
inline bool ProtoTeamManInfo::isready() const {
  return isready_;
}
inline void ProtoTeamManInfo::set_isready(bool value) {
  set_has_isready();
  isready_ = value;
}

// optional int32 Demonhunterlevel = 11;
inline bool ProtoTeamManInfo::has_demonhunterlevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoTeamManInfo::set_has_demonhunterlevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoTeamManInfo::clear_has_demonhunterlevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoTeamManInfo::clear_demonhunterlevel() {
  demonhunterlevel_ = 0;
  clear_has_demonhunterlevel();
}
inline ::google::protobuf::int32 ProtoTeamManInfo::demonhunterlevel() const {
  return demonhunterlevel_;
}
inline void ProtoTeamManInfo::set_demonhunterlevel(::google::protobuf::int32 value) {
  set_has_demonhunterlevel();
  demonhunterlevel_ = value;
}

// optional uint32 suit_id = 12;
inline bool ProtoTeamManInfo::has_suit_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProtoTeamManInfo::set_has_suit_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProtoTeamManInfo::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProtoTeamManInfo::clear_suit_id() {
  suit_id_ = 0u;
  clear_has_suit_id();
}
inline ::google::protobuf::uint32 ProtoTeamManInfo::suit_id() const {
  return suit_id_;
}
inline void ProtoTeamManInfo::set_suit_id(::google::protobuf::uint32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// -------------------------------------------------------------------

// ProtoTeamInfo

// required int32 teamId = 1;
inline bool ProtoTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTeamInfo::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 ProtoTeamInfo::teamid() const {
  return teamid_;
}
inline void ProtoTeamInfo::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// required int32 numLimit = 2;
inline bool ProtoTeamInfo::has_numlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTeamInfo::set_has_numlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTeamInfo::clear_has_numlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTeamInfo::clear_numlimit() {
  numlimit_ = 0;
  clear_has_numlimit();
}
inline ::google::protobuf::int32 ProtoTeamInfo::numlimit() const {
  return numlimit_;
}
inline void ProtoTeamInfo::set_numlimit(::google::protobuf::int32 value) {
  set_has_numlimit();
  numlimit_ = value;
}

// optional uint32 leaderId = 3;
inline bool ProtoTeamInfo::has_leaderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTeamInfo::set_has_leaderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTeamInfo::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTeamInfo::clear_leaderid() {
  leaderid_ = 0u;
  clear_has_leaderid();
}
inline ::google::protobuf::uint32 ProtoTeamInfo::leaderid() const {
  return leaderid_;
}
inline void ProtoTeamInfo::set_leaderid(::google::protobuf::uint32 value) {
  set_has_leaderid();
  leaderid_ = value;
}

// required int32 teamAuto = 4;
inline bool ProtoTeamInfo::has_teamauto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoTeamInfo::set_has_teamauto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoTeamInfo::clear_has_teamauto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoTeamInfo::clear_teamauto() {
  teamauto_ = 0;
  clear_has_teamauto();
}
inline ::google::protobuf::int32 ProtoTeamInfo::teamauto() const {
  return teamauto_;
}
inline void ProtoTeamInfo::set_teamauto(::google::protobuf::int32 value) {
  set_has_teamauto();
  teamauto_ = value;
}

// optional .proto.message.ProtoTeamOutObj teamOutObj = 5;
inline bool ProtoTeamInfo::has_teamoutobj() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoTeamInfo::set_has_teamoutobj() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoTeamInfo::clear_has_teamoutobj() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoTeamInfo::clear_teamoutobj() {
  if (teamoutobj_ != NULL) teamoutobj_->::proto::message::ProtoTeamOutObj::Clear();
  clear_has_teamoutobj();
}
inline const ::proto::message::ProtoTeamOutObj& ProtoTeamInfo::teamoutobj() const {
  return teamoutobj_ != NULL ? *teamoutobj_ : *default_instance_->teamoutobj_;
}
inline ::proto::message::ProtoTeamOutObj* ProtoTeamInfo::mutable_teamoutobj() {
  set_has_teamoutobj();
  if (teamoutobj_ == NULL) teamoutobj_ = new ::proto::message::ProtoTeamOutObj;
  return teamoutobj_;
}
inline ::proto::message::ProtoTeamOutObj* ProtoTeamInfo::release_teamoutobj() {
  clear_has_teamoutobj();
  ::proto::message::ProtoTeamOutObj* temp = teamoutobj_;
  teamoutobj_ = NULL;
  return temp;
}
inline void ProtoTeamInfo::set_allocated_teamoutobj(::proto::message::ProtoTeamOutObj* teamoutobj) {
  delete teamoutobj_;
  teamoutobj_ = teamoutobj;
  if (teamoutobj) {
    set_has_teamoutobj();
  } else {
    clear_has_teamoutobj();
  }
}

// repeated .proto.message.ProtoTeamManInfo teamManList = 6;
inline int ProtoTeamInfo::teammanlist_size() const {
  return teammanlist_.size();
}
inline void ProtoTeamInfo::clear_teammanlist() {
  teammanlist_.Clear();
}
inline const ::proto::message::ProtoTeamManInfo& ProtoTeamInfo::teammanlist(int index) const {
  return teammanlist_.Get(index);
}
inline ::proto::message::ProtoTeamManInfo* ProtoTeamInfo::mutable_teammanlist(int index) {
  return teammanlist_.Mutable(index);
}
inline ::proto::message::ProtoTeamManInfo* ProtoTeamInfo::add_teammanlist() {
  return teammanlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >&
ProtoTeamInfo::teammanlist() const {
  return teammanlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >*
ProtoTeamInfo::mutable_teammanlist() {
  return &teammanlist_;
}

// optional int32 needCombat = 7;
inline bool ProtoTeamInfo::has_needcombat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoTeamInfo::set_has_needcombat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoTeamInfo::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoTeamInfo::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 ProtoTeamInfo::needcombat() const {
  return needcombat_;
}
inline void ProtoTeamInfo::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// Team_SC_UpdateTeamLevelInfo

// required int32 plyId = 1;
inline bool Team_SC_UpdateTeamLevelInfo::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_UpdateTeamLevelInfo::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_UpdateTeamLevelInfo::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_UpdateTeamLevelInfo::clear_plyid() {
  plyid_ = 0;
  clear_has_plyid();
}
inline ::google::protobuf::int32 Team_SC_UpdateTeamLevelInfo::plyid() const {
  return plyid_;
}
inline void Team_SC_UpdateTeamLevelInfo::set_plyid(::google::protobuf::int32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 level = 2;
inline bool Team_SC_UpdateTeamLevelInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_UpdateTeamLevelInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_UpdateTeamLevelInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_UpdateTeamLevelInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Team_SC_UpdateTeamLevelInfo::level() const {
  return level_;
}
inline void Team_SC_UpdateTeamLevelInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// ProtoTeamListTeamInfo

// required int32 teamId = 1;
inline bool ProtoTeamListTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTeamListTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTeamListTeamInfo::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 ProtoTeamListTeamInfo::teamid() const {
  return teamid_;
}
inline void ProtoTeamListTeamInfo::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// required int32 peopleNum = 2;
inline bool ProtoTeamListTeamInfo::has_peoplenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_peoplenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTeamListTeamInfo::clear_has_peoplenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTeamListTeamInfo::clear_peoplenum() {
  peoplenum_ = 0;
  clear_has_peoplenum();
}
inline ::google::protobuf::int32 ProtoTeamListTeamInfo::peoplenum() const {
  return peoplenum_;
}
inline void ProtoTeamListTeamInfo::set_peoplenum(::google::protobuf::int32 value) {
  set_has_peoplenum();
  peoplenum_ = value;
}

// required int32 numLimit = 3;
inline bool ProtoTeamListTeamInfo::has_numlimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_numlimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTeamListTeamInfo::clear_has_numlimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTeamListTeamInfo::clear_numlimit() {
  numlimit_ = 0;
  clear_has_numlimit();
}
inline ::google::protobuf::int32 ProtoTeamListTeamInfo::numlimit() const {
  return numlimit_;
}
inline void ProtoTeamListTeamInfo::set_numlimit(::google::protobuf::int32 value) {
  set_has_numlimit();
  numlimit_ = value;
}

// optional .proto.message.ProtoTeamManInfo leaderInfo = 4;
inline bool ProtoTeamListTeamInfo::has_leaderinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_leaderinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoTeamListTeamInfo::clear_has_leaderinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoTeamListTeamInfo::clear_leaderinfo() {
  if (leaderinfo_ != NULL) leaderinfo_->::proto::message::ProtoTeamManInfo::Clear();
  clear_has_leaderinfo();
}
inline const ::proto::message::ProtoTeamManInfo& ProtoTeamListTeamInfo::leaderinfo() const {
  return leaderinfo_ != NULL ? *leaderinfo_ : *default_instance_->leaderinfo_;
}
inline ::proto::message::ProtoTeamManInfo* ProtoTeamListTeamInfo::mutable_leaderinfo() {
  set_has_leaderinfo();
  if (leaderinfo_ == NULL) leaderinfo_ = new ::proto::message::ProtoTeamManInfo;
  return leaderinfo_;
}
inline ::proto::message::ProtoTeamManInfo* ProtoTeamListTeamInfo::release_leaderinfo() {
  clear_has_leaderinfo();
  ::proto::message::ProtoTeamManInfo* temp = leaderinfo_;
  leaderinfo_ = NULL;
  return temp;
}
inline void ProtoTeamListTeamInfo::set_allocated_leaderinfo(::proto::message::ProtoTeamManInfo* leaderinfo) {
  delete leaderinfo_;
  leaderinfo_ = leaderinfo;
  if (leaderinfo) {
    set_has_leaderinfo();
  } else {
    clear_has_leaderinfo();
  }
}

// optional .proto.message.ProtoTeamOutObj teamOutObj = 5;
inline bool ProtoTeamListTeamInfo::has_teamoutobj() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_teamoutobj() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoTeamListTeamInfo::clear_has_teamoutobj() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoTeamListTeamInfo::clear_teamoutobj() {
  if (teamoutobj_ != NULL) teamoutobj_->::proto::message::ProtoTeamOutObj::Clear();
  clear_has_teamoutobj();
}
inline const ::proto::message::ProtoTeamOutObj& ProtoTeamListTeamInfo::teamoutobj() const {
  return teamoutobj_ != NULL ? *teamoutobj_ : *default_instance_->teamoutobj_;
}
inline ::proto::message::ProtoTeamOutObj* ProtoTeamListTeamInfo::mutable_teamoutobj() {
  set_has_teamoutobj();
  if (teamoutobj_ == NULL) teamoutobj_ = new ::proto::message::ProtoTeamOutObj;
  return teamoutobj_;
}
inline ::proto::message::ProtoTeamOutObj* ProtoTeamListTeamInfo::release_teamoutobj() {
  clear_has_teamoutobj();
  ::proto::message::ProtoTeamOutObj* temp = teamoutobj_;
  teamoutobj_ = NULL;
  return temp;
}
inline void ProtoTeamListTeamInfo::set_allocated_teamoutobj(::proto::message::ProtoTeamOutObj* teamoutobj) {
  delete teamoutobj_;
  teamoutobj_ = teamoutobj;
  if (teamoutobj) {
    set_has_teamoutobj();
  } else {
    clear_has_teamoutobj();
  }
}

// optional int32 totalCombat = 6;
inline bool ProtoTeamListTeamInfo::has_totalcombat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_totalcombat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoTeamListTeamInfo::clear_has_totalcombat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoTeamListTeamInfo::clear_totalcombat() {
  totalcombat_ = 0;
  clear_has_totalcombat();
}
inline ::google::protobuf::int32 ProtoTeamListTeamInfo::totalcombat() const {
  return totalcombat_;
}
inline void ProtoTeamListTeamInfo::set_totalcombat(::google::protobuf::int32 value) {
  set_has_totalcombat();
  totalcombat_ = value;
}

// optional int32 leaderCombat = 7;
inline bool ProtoTeamListTeamInfo::has_leadercombat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_leadercombat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoTeamListTeamInfo::clear_has_leadercombat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoTeamListTeamInfo::clear_leadercombat() {
  leadercombat_ = 0;
  clear_has_leadercombat();
}
inline ::google::protobuf::int32 ProtoTeamListTeamInfo::leadercombat() const {
  return leadercombat_;
}
inline void ProtoTeamListTeamInfo::set_leadercombat(::google::protobuf::int32 value) {
  set_has_leadercombat();
  leadercombat_ = value;
}

// optional int32 needCombat = 8;
inline bool ProtoTeamListTeamInfo::has_needcombat() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoTeamListTeamInfo::set_has_needcombat() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoTeamListTeamInfo::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoTeamListTeamInfo::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 ProtoTeamListTeamInfo::needcombat() const {
  return needcombat_;
}
inline void ProtoTeamListTeamInfo::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// ProtoTeamOutObj

// required int32 obj = 1;
inline bool ProtoTeamOutObj::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTeamOutObj::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTeamOutObj::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTeamOutObj::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 ProtoTeamOutObj::obj() const {
  return obj_;
}
inline void ProtoTeamOutObj::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// required int32 levelMin = 2;
inline bool ProtoTeamOutObj::has_levelmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTeamOutObj::set_has_levelmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTeamOutObj::clear_has_levelmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTeamOutObj::clear_levelmin() {
  levelmin_ = 0;
  clear_has_levelmin();
}
inline ::google::protobuf::int32 ProtoTeamOutObj::levelmin() const {
  return levelmin_;
}
inline void ProtoTeamOutObj::set_levelmin(::google::protobuf::int32 value) {
  set_has_levelmin();
  levelmin_ = value;
}

// required int32 levelMax = 3;
inline bool ProtoTeamOutObj::has_levelmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTeamOutObj::set_has_levelmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTeamOutObj::clear_has_levelmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTeamOutObj::clear_levelmax() {
  levelmax_ = 0;
  clear_has_levelmax();
}
inline ::google::protobuf::int32 ProtoTeamOutObj::levelmax() const {
  return levelmax_;
}
inline void ProtoTeamOutObj::set_levelmax(::google::protobuf::int32 value) {
  set_has_levelmax();
  levelmax_ = value;
}

// required int32 needComBat = 4;
inline bool ProtoTeamOutObj::has_needcombat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoTeamOutObj::set_has_needcombat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoTeamOutObj::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoTeamOutObj::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 ProtoTeamOutObj::needcombat() const {
  return needcombat_;
}
inline void ProtoTeamOutObj::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// Team_CS_SetTeamOutObj

// required .proto.message.ProtoTeamOutObj obj = 1;
inline bool Team_CS_SetTeamOutObj::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_SetTeamOutObj::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_SetTeamOutObj::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_SetTeamOutObj::clear_obj() {
  if (obj_ != NULL) obj_->::proto::message::ProtoTeamOutObj::Clear();
  clear_has_obj();
}
inline const ::proto::message::ProtoTeamOutObj& Team_CS_SetTeamOutObj::obj() const {
  return obj_ != NULL ? *obj_ : *default_instance_->obj_;
}
inline ::proto::message::ProtoTeamOutObj* Team_CS_SetTeamOutObj::mutable_obj() {
  set_has_obj();
  if (obj_ == NULL) obj_ = new ::proto::message::ProtoTeamOutObj;
  return obj_;
}
inline ::proto::message::ProtoTeamOutObj* Team_CS_SetTeamOutObj::release_obj() {
  clear_has_obj();
  ::proto::message::ProtoTeamOutObj* temp = obj_;
  obj_ = NULL;
  return temp;
}
inline void Team_CS_SetTeamOutObj::set_allocated_obj(::proto::message::ProtoTeamOutObj* obj) {
  delete obj_;
  obj_ = obj;
  if (obj) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
}

// -------------------------------------------------------------------

// Team_SC_SetTeamOutObj

// required int32 result = 1;
inline bool Team_SC_SetTeamOutObj::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_SetTeamOutObj::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_SetTeamOutObj::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_SetTeamOutObj::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_SetTeamOutObj::result() const {
  return result_;
}
inline void Team_SC_SetTeamOutObj::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_MatchingQueueInfo

// required int32 obj = 1;
inline bool Team_CS_MatchingQueueInfo::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_MatchingQueueInfo::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_MatchingQueueInfo::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_MatchingQueueInfo::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Team_CS_MatchingQueueInfo::obj() const {
  return obj_;
}
inline void Team_CS_MatchingQueueInfo::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Team_SC_MatchingQueueInfo

// required int32 nTeamNum = 1;
inline bool Team_SC_MatchingQueueInfo::has_nteamnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_MatchingQueueInfo::set_has_nteamnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_MatchingQueueInfo::clear_has_nteamnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_MatchingQueueInfo::clear_nteamnum() {
  nteamnum_ = 0;
  clear_has_nteamnum();
}
inline ::google::protobuf::int32 Team_SC_MatchingQueueInfo::nteamnum() const {
  return nteamnum_;
}
inline void Team_SC_MatchingQueueInfo::set_nteamnum(::google::protobuf::int32 value) {
  set_has_nteamnum();
  nteamnum_ = value;
}

// required int32 nSingleNum = 2;
inline bool Team_SC_MatchingQueueInfo::has_nsinglenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_MatchingQueueInfo::set_has_nsinglenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_MatchingQueueInfo::clear_has_nsinglenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_MatchingQueueInfo::clear_nsinglenum() {
  nsinglenum_ = 0;
  clear_has_nsinglenum();
}
inline ::google::protobuf::int32 Team_SC_MatchingQueueInfo::nsinglenum() const {
  return nsinglenum_;
}
inline void Team_SC_MatchingQueueInfo::set_nsinglenum(::google::protobuf::int32 value) {
  set_has_nsinglenum();
  nsinglenum_ = value;
}

// required int32 obj = 3;
inline bool Team_SC_MatchingQueueInfo::has_obj() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Team_SC_MatchingQueueInfo::set_has_obj() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Team_SC_MatchingQueueInfo::clear_has_obj() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Team_SC_MatchingQueueInfo::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Team_SC_MatchingQueueInfo::obj() const {
  return obj_;
}
inline void Team_SC_MatchingQueueInfo::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Team_CS_GetTeamList

// required int32 obj = 1;
inline bool Team_CS_GetTeamList::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_GetTeamList::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_GetTeamList::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_GetTeamList::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Team_CS_GetTeamList::obj() const {
  return obj_;
}
inline void Team_CS_GetTeamList::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Team_SC_GetTeamList

// required int32 result = 1;
inline bool Team_SC_GetTeamList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_GetTeamList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_GetTeamList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_GetTeamList::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_GetTeamList::result() const {
  return result_;
}
inline void Team_SC_GetTeamList::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.ProtoTeamListTeamInfo teamInfo = 2;
inline int Team_SC_GetTeamList::teaminfo_size() const {
  return teaminfo_.size();
}
inline void Team_SC_GetTeamList::clear_teaminfo() {
  teaminfo_.Clear();
}
inline const ::proto::message::ProtoTeamListTeamInfo& Team_SC_GetTeamList::teaminfo(int index) const {
  return teaminfo_.Get(index);
}
inline ::proto::message::ProtoTeamListTeamInfo* Team_SC_GetTeamList::mutable_teaminfo(int index) {
  return teaminfo_.Mutable(index);
}
inline ::proto::message::ProtoTeamListTeamInfo* Team_SC_GetTeamList::add_teaminfo() {
  return teaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamListTeamInfo >&
Team_SC_GetTeamList::teaminfo() const {
  return teaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamListTeamInfo >*
Team_SC_GetTeamList::mutable_teaminfo() {
  return &teaminfo_;
}

// -------------------------------------------------------------------

// Team_CS_CreateTeam

// optional int32 needCombat = 1;
inline bool Team_CS_CreateTeam::has_needcombat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_CreateTeam::set_has_needcombat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_CreateTeam::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_CreateTeam::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 Team_CS_CreateTeam::needcombat() const {
  return needcombat_;
}
inline void Team_CS_CreateTeam::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// Team_SC_CreateTeam

// required int32 result = 1;
inline bool Team_SC_CreateTeam::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_CreateTeam::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_CreateTeam::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_CreateTeam::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_CreateTeam::result() const {
  return result_;
}
inline void Team_SC_CreateTeam::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_ApplyTeam

// required int32 teamId = 1;
inline bool Team_CS_ApplyTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_ApplyTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_ApplyTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_ApplyTeam::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 Team_CS_ApplyTeam::teamid() const {
  return teamid_;
}
inline void Team_CS_ApplyTeam::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// Team_SC_ApplyTeam

// required int32 result = 1;
inline bool Team_SC_ApplyTeam::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_ApplyTeam::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_ApplyTeam::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_ApplyTeam::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_ApplyTeam::result() const {
  return result_;
}
inline void Team_SC_ApplyTeam::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 teamId = 2;
inline bool Team_SC_ApplyTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_ApplyTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_ApplyTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_ApplyTeam::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 Team_SC_ApplyTeam::teamid() const {
  return teamid_;
}
inline void Team_SC_ApplyTeam::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// Team_CS_TeamQuit

// required int32 teamId = 1;
inline bool Team_CS_TeamQuit::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TeamQuit::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TeamQuit::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TeamQuit::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 Team_CS_TeamQuit::teamid() const {
  return teamid_;
}
inline void Team_CS_TeamQuit::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TeamQuit

// required int32 result = 1;
inline bool Team_SC_TeamQuit::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TeamQuit::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TeamQuit::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TeamQuit::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TeamQuit::result() const {
  return result_;
}
inline void Team_SC_TeamQuit::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_TeamAppoint

// required uint32 plyId = 1;
inline bool Team_CS_TeamAppoint::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TeamAppoint::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TeamAppoint::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TeamAppoint::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Team_CS_TeamAppoint::plyid() const {
  return plyid_;
}
inline void Team_CS_TeamAppoint::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 appoint = 2;
inline bool Team_CS_TeamAppoint::has_appoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_CS_TeamAppoint::set_has_appoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_CS_TeamAppoint::clear_has_appoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_CS_TeamAppoint::clear_appoint() {
  appoint_ = 0;
  clear_has_appoint();
}
inline ::google::protobuf::int32 Team_CS_TeamAppoint::appoint() const {
  return appoint_;
}
inline void Team_CS_TeamAppoint::set_appoint(::google::protobuf::int32 value) {
  set_has_appoint();
  appoint_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TeamAppoint

// required int32 result = 1;
inline bool Team_SC_TeamAppoint::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TeamAppoint::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TeamAppoint::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TeamAppoint::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TeamAppoint::result() const {
  return result_;
}
inline void Team_SC_TeamAppoint::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_TeamKick

// required uint32 plyId = 1;
inline bool Team_CS_TeamKick::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TeamKick::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TeamKick::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TeamKick::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Team_CS_TeamKick::plyid() const {
  return plyid_;
}
inline void Team_CS_TeamKick::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TeamKick

// required int32 result = 1;
inline bool Team_SC_TeamKick::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TeamKick::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TeamKick::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TeamKick::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TeamKick::result() const {
  return result_;
}
inline void Team_SC_TeamKick::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string beKickName = 2;
inline bool Team_SC_TeamKick::has_bekickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_TeamKick::set_has_bekickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_TeamKick::clear_has_bekickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_TeamKick::clear_bekickname() {
  if (bekickname_ != &::google::protobuf::internal::kEmptyString) {
    bekickname_->clear();
  }
  clear_has_bekickname();
}
inline const ::std::string& Team_SC_TeamKick::bekickname() const {
  return *bekickname_;
}
inline void Team_SC_TeamKick::set_bekickname(const ::std::string& value) {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  bekickname_->assign(value);
}
inline void Team_SC_TeamKick::set_bekickname(const char* value) {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  bekickname_->assign(value);
}
inline void Team_SC_TeamKick::set_bekickname(const char* value, size_t size) {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  bekickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Team_SC_TeamKick::mutable_bekickname() {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  return bekickname_;
}
inline ::std::string* Team_SC_TeamKick::release_bekickname() {
  clear_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bekickname_;
    bekickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Team_SC_TeamKick::set_allocated_bekickname(::std::string* bekickname) {
  if (bekickname_ != &::google::protobuf::internal::kEmptyString) {
    delete bekickname_;
  }
  if (bekickname) {
    set_has_bekickname();
    bekickname_ = bekickname;
  } else {
    clear_has_bekickname();
    bekickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Team_CS_TempLeave

// required uint32 plyId = 1;
inline bool Team_CS_TempLeave::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TempLeave::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TempLeave::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TempLeave::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Team_CS_TempLeave::plyid() const {
  return plyid_;
}
inline void Team_CS_TempLeave::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 status = 2;
inline bool Team_CS_TempLeave::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_CS_TempLeave::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_CS_TempLeave::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_CS_TempLeave::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Team_CS_TempLeave::status() const {
  return status_;
}
inline void Team_CS_TempLeave::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TempLeave

// required int32 result = 1;
inline bool Team_SC_TempLeave::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TempLeave::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TempLeave::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TempLeave::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TempLeave::result() const {
  return result_;
}
inline void Team_SC_TempLeave::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_TeamAuto

// required int32 isAuto = 1;
inline bool Team_CS_TeamAuto::has_isauto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TeamAuto::set_has_isauto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TeamAuto::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TeamAuto::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Team_CS_TeamAuto::isauto() const {
  return isauto_;
}
inline void Team_CS_TeamAuto::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TeamAuto

// required int32 result = 1;
inline bool Team_SC_TeamAuto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TeamAuto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TeamAuto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TeamAuto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TeamAuto::result() const {
  return result_;
}
inline void Team_SC_TeamAuto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_MemberAuto

// required int32 isAuto = 1;
inline bool Team_CS_MemberAuto::has_isauto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_MemberAuto::set_has_isauto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_MemberAuto::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_MemberAuto::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Team_CS_MemberAuto::isauto() const {
  return isauto_;
}
inline void Team_CS_MemberAuto::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// required int32 obj = 2;
inline bool Team_CS_MemberAuto::has_obj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_CS_MemberAuto::set_has_obj() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_CS_MemberAuto::clear_has_obj() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_CS_MemberAuto::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Team_CS_MemberAuto::obj() const {
  return obj_;
}
inline void Team_CS_MemberAuto::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Team_SC_MemberAuto

// required int32 result = 1;
inline bool Team_SC_MemberAuto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_MemberAuto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_MemberAuto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_MemberAuto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_MemberAuto::result() const {
  return result_;
}
inline void Team_SC_MemberAuto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 isAuto = 2;
inline bool Team_SC_MemberAuto::has_isauto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_MemberAuto::set_has_isauto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_MemberAuto::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_MemberAuto::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Team_SC_MemberAuto::isauto() const {
  return isauto_;
}
inline void Team_SC_MemberAuto::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// -------------------------------------------------------------------

// Team_CS_TeamInvite

// required uint64 plyId = 1;
inline bool Team_CS_TeamInvite::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TeamInvite::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TeamInvite::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TeamInvite::clear_plyid() {
  plyid_ = GOOGLE_ULONGLONG(0);
  clear_has_plyid();
}
inline ::google::protobuf::uint64 Team_CS_TeamInvite::plyid() const {
  return plyid_;
}
inline void Team_CS_TeamInvite::set_plyid(::google::protobuf::uint64 value) {
  set_has_plyid();
  plyid_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TeamInvite

// required int32 result = 1;
inline bool Team_SC_TeamInvite::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TeamInvite::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TeamInvite::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TeamInvite::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TeamInvite::result() const {
  return result_;
}
inline void Team_SC_TeamInvite::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_SetTeamBeInvite

// required bool allow = 1;
inline bool Team_CS_SetTeamBeInvite::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_SetTeamBeInvite::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_SetTeamBeInvite::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_SetTeamBeInvite::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Team_CS_SetTeamBeInvite::allow() const {
  return allow_;
}
inline void Team_CS_SetTeamBeInvite::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// required int32 teamId = 2;
inline bool Team_CS_SetTeamBeInvite::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_CS_SetTeamBeInvite::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_CS_SetTeamBeInvite::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_CS_SetTeamBeInvite::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 Team_CS_SetTeamBeInvite::teamid() const {
  return teamid_;
}
inline void Team_CS_SetTeamBeInvite::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// Team_SC_SetTeamBeInvite

// required int32 result = 1;
inline bool Team_SC_SetTeamBeInvite::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_SetTeamBeInvite::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_SetTeamBeInvite::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_SetTeamBeInvite::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_SetTeamBeInvite::result() const {
  return result_;
}
inline void Team_SC_SetTeamBeInvite::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_SetTeamAllow

// required uint32 plyId = 1;
inline bool Team_CS_SetTeamAllow::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_SetTeamAllow::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_SetTeamAllow::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_SetTeamAllow::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Team_CS_SetTeamAllow::plyid() const {
  return plyid_;
}
inline void Team_CS_SetTeamAllow::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required bool allow = 2;
inline bool Team_CS_SetTeamAllow::has_allow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_CS_SetTeamAllow::set_has_allow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_CS_SetTeamAllow::clear_has_allow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_CS_SetTeamAllow::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Team_CS_SetTeamAllow::allow() const {
  return allow_;
}
inline void Team_CS_SetTeamAllow::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Team_SC_SetTeamAllow

// required int32 result = 1;
inline bool Team_SC_SetTeamAllow::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_SetTeamAllow::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_SetTeamAllow::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_SetTeamAllow::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_SetTeamAllow::result() const {
  return result_;
}
inline void Team_SC_SetTeamAllow::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_SetTeamAllowOneTime

// required bool allow = 1;
inline bool Team_CS_SetTeamAllowOneTime::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_SetTeamAllowOneTime::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_SetTeamAllowOneTime::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_SetTeamAllowOneTime::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Team_CS_SetTeamAllowOneTime::allow() const {
  return allow_;
}
inline void Team_CS_SetTeamAllowOneTime::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Team_SC_SetTeamAllowOneTime

// required int32 result = 1;
inline bool Team_SC_SetTeamAllowOneTime::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_SetTeamAllowOneTime::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_SetTeamAllowOneTime::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_SetTeamAllowOneTime::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_SetTeamAllowOneTime::result() const {
  return result_;
}
inline void Team_SC_SetTeamAllowOneTime::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_UpdateTeamInfo

// -------------------------------------------------------------------

// Team_SC_UpdateTeamInfo

// optional .proto.message.ProtoTeamInfo teamInfo = 1;
inline bool Team_SC_UpdateTeamInfo::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_UpdateTeamInfo::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_UpdateTeamInfo::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_UpdateTeamInfo::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::proto::message::ProtoTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::proto::message::ProtoTeamInfo& Team_SC_UpdateTeamInfo::teaminfo() const {
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::proto::message::ProtoTeamInfo* Team_SC_UpdateTeamInfo::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::proto::message::ProtoTeamInfo;
  return teaminfo_;
}
inline ::proto::message::ProtoTeamInfo* Team_SC_UpdateTeamInfo::release_teaminfo() {
  clear_has_teaminfo();
  ::proto::message::ProtoTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void Team_SC_UpdateTeamInfo::set_allocated_teaminfo(::proto::message::ProtoTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
}

// -------------------------------------------------------------------

// Team_SC_UpdateTeamBeInvite

// required int32 teamId = 1;
inline bool Team_SC_UpdateTeamBeInvite::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_UpdateTeamBeInvite::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 Team_SC_UpdateTeamBeInvite::teamid() const {
  return teamid_;
}
inline void Team_SC_UpdateTeamBeInvite::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional string name = 2;
inline bool Team_SC_UpdateTeamBeInvite::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_UpdateTeamBeInvite::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Team_SC_UpdateTeamBeInvite::name() const {
  return *name_;
}
inline void Team_SC_UpdateTeamBeInvite::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Team_SC_UpdateTeamBeInvite::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Team_SC_UpdateTeamBeInvite::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Team_SC_UpdateTeamBeInvite::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Team_SC_UpdateTeamBeInvite::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Team_SC_UpdateTeamBeInvite::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 obj = 3;
inline bool Team_SC_UpdateTeamBeInvite::has_obj() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Team_SC_UpdateTeamBeInvite::set_has_obj() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_has_obj() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Team_SC_UpdateTeamBeInvite::obj() const {
  return obj_;
}
inline void Team_SC_UpdateTeamBeInvite::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// optional int32 teamnum = 4;
inline bool Team_SC_UpdateTeamBeInvite::has_teamnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Team_SC_UpdateTeamBeInvite::set_has_teamnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_has_teamnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Team_SC_UpdateTeamBeInvite::clear_teamnum() {
  teamnum_ = 0;
  clear_has_teamnum();
}
inline ::google::protobuf::int32 Team_SC_UpdateTeamBeInvite::teamnum() const {
  return teamnum_;
}
inline void Team_SC_UpdateTeamBeInvite::set_teamnum(::google::protobuf::int32 value) {
  set_has_teamnum();
  teamnum_ = value;
}

// -------------------------------------------------------------------

// Team_SC_UpdateApplyList

// repeated .proto.message.ProtoTeamManInfo teamManList = 1;
inline int Team_SC_UpdateApplyList::teammanlist_size() const {
  return teammanlist_.size();
}
inline void Team_SC_UpdateApplyList::clear_teammanlist() {
  teammanlist_.Clear();
}
inline const ::proto::message::ProtoTeamManInfo& Team_SC_UpdateApplyList::teammanlist(int index) const {
  return teammanlist_.Get(index);
}
inline ::proto::message::ProtoTeamManInfo* Team_SC_UpdateApplyList::mutable_teammanlist(int index) {
  return teammanlist_.Mutable(index);
}
inline ::proto::message::ProtoTeamManInfo* Team_SC_UpdateApplyList::add_teammanlist() {
  return teammanlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >&
Team_SC_UpdateApplyList::teammanlist() const {
  return teammanlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManInfo >*
Team_SC_UpdateApplyList::mutable_teammanlist() {
  return &teammanlist_;
}

// -------------------------------------------------------------------

// Team_SC_UpdateTeamMemberTick

// optional string name = 1;
inline bool Team_SC_UpdateTeamMemberTick::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_UpdateTeamMemberTick::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_UpdateTeamMemberTick::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_UpdateTeamMemberTick::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Team_SC_UpdateTeamMemberTick::name() const {
  return *name_;
}
inline void Team_SC_UpdateTeamMemberTick::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Team_SC_UpdateTeamMemberTick::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Team_SC_UpdateTeamMemberTick::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Team_SC_UpdateTeamMemberTick::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Team_SC_UpdateTeamMemberTick::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Team_SC_UpdateTeamMemberTick::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Team_CS_FollowLeader

// -------------------------------------------------------------------

// Team_SC_FollowLeader

// required int32 result = 1;
inline bool Team_SC_FollowLeader::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_FollowLeader::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_FollowLeader::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_FollowLeader::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_FollowLeader::result() const {
  return result_;
}
inline void Team_SC_FollowLeader::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bool changeMap = 2;
inline bool Team_SC_FollowLeader::has_changemap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Team_SC_FollowLeader::set_has_changemap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Team_SC_FollowLeader::clear_has_changemap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Team_SC_FollowLeader::clear_changemap() {
  changemap_ = false;
  clear_has_changemap();
}
inline bool Team_SC_FollowLeader::changemap() const {
  return changemap_;
}
inline void Team_SC_FollowLeader::set_changemap(bool value) {
  set_has_changemap();
  changemap_ = value;
}

// optional .proto.message.Point3D pt = 3;
inline bool Team_SC_FollowLeader::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Team_SC_FollowLeader::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Team_SC_FollowLeader::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Team_SC_FollowLeader::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Team_SC_FollowLeader::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Team_SC_FollowLeader::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Team_SC_FollowLeader::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Team_SC_FollowLeader::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// -------------------------------------------------------------------

// Team_CS_SummonFollower

// -------------------------------------------------------------------

// Team_SC_SummonFollower

// required int32 result = 1;
inline bool Team_SC_SummonFollower::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_SummonFollower::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_SummonFollower::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_SummonFollower::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_SummonFollower::result() const {
  return result_;
}
inline void Team_SC_SummonFollower::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_SC_LeaderSummon

// -------------------------------------------------------------------

// Team_CS_SetIgnoreTeamInvite

// required bool allow = 1;
inline bool Team_CS_SetIgnoreTeamInvite::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_SetIgnoreTeamInvite::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_SetIgnoreTeamInvite::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_SetIgnoreTeamInvite::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Team_CS_SetIgnoreTeamInvite::allow() const {
  return allow_;
}
inline void Team_CS_SetIgnoreTeamInvite::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Team_SC_SetIgnoreTeamInvite

// required int32 result = 1;
inline bool Team_SC_SetIgnoreTeamInvite::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_SetIgnoreTeamInvite::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_SetIgnoreTeamInvite::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_SetIgnoreTeamInvite::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_SetIgnoreTeamInvite::result() const {
  return result_;
}
inline void Team_SC_SetIgnoreTeamInvite::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Team_CS_QueryIgnoreTeamInvite

// -------------------------------------------------------------------

// Team_SC_QueryIgnoreTeamInvite

// required bool allow = 1;
inline bool Team_SC_QueryIgnoreTeamInvite::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_QueryIgnoreTeamInvite::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_QueryIgnoreTeamInvite::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_QueryIgnoreTeamInvite::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Team_SC_QueryIgnoreTeamInvite::allow() const {
  return allow_;
}
inline void Team_SC_QueryIgnoreTeamInvite::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Team_SC_ErrorInfo

// required int32 result = 1;
inline bool Team_SC_ErrorInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_ErrorInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_ErrorInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_ErrorInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_ErrorInfo::result() const {
  return result_;
}
inline void Team_SC_ErrorInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProtoTeamManHPInfo

// required uint32 plyId = 1;
inline bool ProtoTeamManHPInfo::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTeamManHPInfo::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTeamManHPInfo::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTeamManHPInfo::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 ProtoTeamManHPInfo::plyid() const {
  return plyid_;
}
inline void ProtoTeamManHPInfo::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required uint32 maxHp = 2;
inline bool ProtoTeamManHPInfo::has_maxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTeamManHPInfo::set_has_maxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTeamManHPInfo::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTeamManHPInfo::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 ProtoTeamManHPInfo::maxhp() const {
  return maxhp_;
}
inline void ProtoTeamManHPInfo::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// required uint32 Hp = 3;
inline bool ProtoTeamManHPInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTeamManHPInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTeamManHPInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTeamManHPInfo::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ProtoTeamManHPInfo::hp() const {
  return hp_;
}
inline void ProtoTeamManHPInfo::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// Team_SC_UpdateCurrentHp

// repeated .proto.message.ProtoTeamManHPInfo HpList = 1;
inline int Team_SC_UpdateCurrentHp::hplist_size() const {
  return hplist_.size();
}
inline void Team_SC_UpdateCurrentHp::clear_hplist() {
  hplist_.Clear();
}
inline const ::proto::message::ProtoTeamManHPInfo& Team_SC_UpdateCurrentHp::hplist(int index) const {
  return hplist_.Get(index);
}
inline ::proto::message::ProtoTeamManHPInfo* Team_SC_UpdateCurrentHp::mutable_hplist(int index) {
  return hplist_.Mutable(index);
}
inline ::proto::message::ProtoTeamManHPInfo* Team_SC_UpdateCurrentHp::add_hplist() {
  return hplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManHPInfo >&
Team_SC_UpdateCurrentHp::hplist() const {
  return hplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoTeamManHPInfo >*
Team_SC_UpdateCurrentHp::mutable_hplist() {
  return &hplist_;
}

// -------------------------------------------------------------------

// Team_CS_TeamReady

// required bool status = 1;
inline bool Team_CS_TeamReady::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_CS_TeamReady::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_CS_TeamReady::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_CS_TeamReady::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Team_CS_TeamReady::status() const {
  return status_;
}
inline void Team_CS_TeamReady::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Team_SC_TeamReady

// required int32 result = 1;
inline bool Team_SC_TeamReady::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Team_SC_TeamReady::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Team_SC_TeamReady::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Team_SC_TeamReady::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Team_SC_TeamReady::result() const {
  return result_;
}
inline void Team_SC_TeamReady::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_team_2eproto__INCLUDED
