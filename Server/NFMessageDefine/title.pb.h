// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: title.proto

#ifndef PROTOBUF_title_2eproto__INCLUDED
#define PROTOBUF_title_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_title_2eproto();
void protobuf_AssignDesc_title_2eproto();
void protobuf_ShutdownFile_title_2eproto();

class Title_CS_GetTitleList;
class Title_CS_GetTitleDetail;
class Title_CS_ChangeTitle;
class TitleClientProgress;
class TitleClientData;
class Title_SC_GetTitleDetail;
class Title_SC_GetTitleList;
class Title_SC_ChangeTitle;
class Title_SC_UpdataCurTitle;
class Title_SC_NewTitle;
class Title_CS_HideTitle;
class Title_SC_HideTitle;
class TitleInfo;
class TitleDataDetail;
class TitleDataRecord;
class TitleData;
class TitleOffLineData;

enum eTitleConType {
  eTitleCon_NotDefine = 0,
  eTitleCon_Capacity = 1,
  eTitleCon_QualityEquipNum = 2,
  eTitleCon_LevelEquipNum = 3,
  eTitleCon_RefineEquipNum = 4,
  eTitleCon_TypeEquipQuality = 5,
  eTitleCon_AttributeEquipNum = 6,
  eTitleCon_LevelSkillNum = 7,
  eTitleCon_LevelStampNum = 8,
  eTitleCon_TalentNum = 9,
  eTitleCon_TalentPageNum = 10,
  eTitleCon_LevelShipPartNum = 11,
  eTitleCon_LevelShipSkillNum = 12,
  eTitleCon_ShipStep = 13,
  eTitleCon_ShipEvolutionTimes = 14,
  eTitleCon_IdentitySkill = 15,
  eTitleCon_TeacherReputation = 16,
  eTitleCon_BecomeAStutent = 17,
  eTitleCon_GuildPosition = 18,
  eTitleCon_ItemNum = 19,
  eTitleCon_LevelPassiveSkillNum = 20,
  eTitleCon_ItemByMail = 21,
  eTitleCon_AwakenStage = 22,
  eTitleCon_AwakenTalentLevel = 23,
  eTitleCon_AchievePoint = 24,
  eTitleCon_EquipStar = 25,
  eTitleCon_LoginDay = 26,
  eTitleCon_TotalCharge = 27,
  eTitleCon_SingleCharge = 28,
  eTitleCon_TotalUseItemNum = 29,
  eTitleCon_RideStage = 30,
  eTitleCon_PetActive = 31,
  eTitleCon_MercenaryActive = 32,
  eTitleCon_GodWeaponActive = 33,
  eTitleCon_ZodicLight = 34,
  eTitleCon_SoulCaseStage = 35,
  eTitleCon_HereSoulActiveNum = 36,
  eTitleCon_EquipLayGemLv = 37,
  eTitleCon_ActiveSuit = 38,
  eTitleCon_GetRandAttr = 39,
  eTitleCon_GetRefine = 40,
  eTitleCon_Arena = 41,
  eTitleCon_SIngleArena = 42,
  eTitleCon_WorldBossGold = 43,
  eTitleCon_ItemDungeonTimes = 44,
  eTitleCon_SkinActive = 45,
  eTitleCon_BoatSkinActive = 46,
  eTitleCon_Renown = 47,
  eTitleCon_DailyLoopQuest = 48,
  eTitleCon_Sign = 49,
  eTitleCon_AuctionUseGold = 50,
  eTitleCon_AuctionGetGold = 51,
  eTitleCon_UseItem = 52,
  eTitleCon_MaxNum = 53
};
bool eTitleConType_IsValid(int value);
const eTitleConType eTitleConType_MIN = eTitleCon_NotDefine;
const eTitleConType eTitleConType_MAX = eTitleCon_MaxNum;
const int eTitleConType_ARRAYSIZE = eTitleConType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eTitleConType_descriptor();
inline const ::std::string& eTitleConType_Name(eTitleConType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eTitleConType_descriptor(), value);
}
inline bool eTitleConType_Parse(
    const ::std::string& name, eTitleConType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eTitleConType>(
    eTitleConType_descriptor(), name, value);
}
enum eTitleDeadLine {
  eTitleDeadLine_Forever = 1,
  eTitleDeadLine_Temporory = 2,
  eTitleDeadLine_Time = 3,
  eTitleDeadLine_UntilTime = 4
};
bool eTitleDeadLine_IsValid(int value);
const eTitleDeadLine eTitleDeadLine_MIN = eTitleDeadLine_Forever;
const eTitleDeadLine eTitleDeadLine_MAX = eTitleDeadLine_UntilTime;
const int eTitleDeadLine_ARRAYSIZE = eTitleDeadLine_MAX + 1;

const ::google::protobuf::EnumDescriptor* eTitleDeadLine_descriptor();
inline const ::std::string& eTitleDeadLine_Name(eTitleDeadLine value) {
  return ::google::protobuf::internal::NameOfEnum(
    eTitleDeadLine_descriptor(), value);
}
inline bool eTitleDeadLine_Parse(
    const ::std::string& name, eTitleDeadLine* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eTitleDeadLine>(
    eTitleDeadLine_descriptor(), name, value);
}
// ===================================================================

class Title_CS_GetTitleList : public ::google::protobuf::Message {
 public:
  Title_CS_GetTitleList();
  virtual ~Title_CS_GetTitleList();

  Title_CS_GetTitleList(const Title_CS_GetTitleList& from);

  inline Title_CS_GetTitleList& operator=(const Title_CS_GetTitleList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_CS_GetTitleList& default_instance();

  void Swap(Title_CS_GetTitleList* other);

  // implements Message ----------------------------------------------

  Title_CS_GetTitleList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_CS_GetTitleList& from);
  void MergeFrom(const Title_CS_GetTitleList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Title_CS_GetTitleList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_CS_GetTitleList* default_instance_;
};
// -------------------------------------------------------------------

class Title_CS_GetTitleDetail : public ::google::protobuf::Message {
 public:
  Title_CS_GetTitleDetail();
  virtual ~Title_CS_GetTitleDetail();

  Title_CS_GetTitleDetail(const Title_CS_GetTitleDetail& from);

  inline Title_CS_GetTitleDetail& operator=(const Title_CS_GetTitleDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_CS_GetTitleDetail& default_instance();

  void Swap(Title_CS_GetTitleDetail* other);

  // implements Message ----------------------------------------------

  Title_CS_GetTitleDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_CS_GetTitleDetail& from);
  void MergeFrom(const Title_CS_GetTitleDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_CS_GetTitleDetail)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_CS_GetTitleDetail* default_instance_;
};
// -------------------------------------------------------------------

class Title_CS_ChangeTitle : public ::google::protobuf::Message {
 public:
  Title_CS_ChangeTitle();
  virtual ~Title_CS_ChangeTitle();

  Title_CS_ChangeTitle(const Title_CS_ChangeTitle& from);

  inline Title_CS_ChangeTitle& operator=(const Title_CS_ChangeTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_CS_ChangeTitle& default_instance();

  void Swap(Title_CS_ChangeTitle* other);

  // implements Message ----------------------------------------------

  Title_CS_ChangeTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_CS_ChangeTitle& from);
  void MergeFrom(const Title_CS_ChangeTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_CS_ChangeTitle)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_CS_ChangeTitle* default_instance_;
};
// -------------------------------------------------------------------

class TitleClientProgress : public ::google::protobuf::Message {
 public:
  TitleClientProgress();
  virtual ~TitleClientProgress();

  TitleClientProgress(const TitleClientProgress& from);

  inline TitleClientProgress& operator=(const TitleClientProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleClientProgress& default_instance();

  void Swap(TitleClientProgress* other);

  // implements Message ----------------------------------------------

  TitleClientProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleClientProgress& from);
  void MergeFrom(const TitleClientProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional int64 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int64 val() const;
  inline void set_val(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.TitleClientProgress)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 val_;
  ::google::protobuf::int32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleClientProgress* default_instance_;
};
// -------------------------------------------------------------------

class TitleClientData : public ::google::protobuf::Message {
 public:
  TitleClientData();
  virtual ~TitleClientData();

  TitleClientData(const TitleClientData& from);

  inline TitleClientData& operator=(const TitleClientData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleClientData& default_instance();

  void Swap(TitleClientData* other);

  // implements Message ----------------------------------------------

  TitleClientData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleClientData& from);
  void MergeFrom(const TitleClientData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // required int64 expireTime = 2;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 2;
  inline ::google::protobuf::int64 expiretime() const;
  inline void set_expiretime(::google::protobuf::int64 value);

  // required bool new = 3;
  inline bool has_new_() const;
  inline void clear_new_();
  static const int kNewFieldNumber = 3;
  inline bool new_() const;
  inline void set_new_(bool value);

  // repeated .proto.message.TitleClientProgress progress = 4;
  inline int progress_size() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 4;
  inline const ::proto::message::TitleClientProgress& progress(int index) const;
  inline ::proto::message::TitleClientProgress* mutable_progress(int index);
  inline ::proto::message::TitleClientProgress* add_progress();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientProgress >&
      progress() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientProgress >*
      mutable_progress();

  // @@protoc_insertion_point(class_scope:proto.message.TitleClientData)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_new_();
  inline void clear_has_new_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 expiretime_;
  ::google::protobuf::int32 titleid_;
  bool new__;
  ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientProgress > progress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleClientData* default_instance_;
};
// -------------------------------------------------------------------

class Title_SC_GetTitleDetail : public ::google::protobuf::Message {
 public:
  Title_SC_GetTitleDetail();
  virtual ~Title_SC_GetTitleDetail();

  Title_SC_GetTitleDetail(const Title_SC_GetTitleDetail& from);

  inline Title_SC_GetTitleDetail& operator=(const Title_SC_GetTitleDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_SC_GetTitleDetail& default_instance();

  void Swap(Title_SC_GetTitleDetail* other);

  // implements Message ----------------------------------------------

  Title_SC_GetTitleDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_SC_GetTitleDetail& from);
  void MergeFrom(const Title_SC_GetTitleDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // repeated int32 process_list = 3;
  inline int process_list_size() const;
  inline void clear_process_list();
  static const int kProcessListFieldNumber = 3;
  inline ::google::protobuf::int32 process_list(int index) const;
  inline void set_process_list(int index, ::google::protobuf::int32 value);
  inline void add_process_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      process_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_process_list();

  // @@protoc_insertion_point(class_scope:proto.message.Title_SC_GetTitleDetail)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > process_list_;
  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_SC_GetTitleDetail* default_instance_;
};
// -------------------------------------------------------------------

class Title_SC_GetTitleList : public ::google::protobuf::Message {
 public:
  Title_SC_GetTitleList();
  virtual ~Title_SC_GetTitleList();

  Title_SC_GetTitleList(const Title_SC_GetTitleList& from);

  inline Title_SC_GetTitleList& operator=(const Title_SC_GetTitleList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_SC_GetTitleList& default_instance();

  void Swap(Title_SC_GetTitleList* other);

  // implements Message ----------------------------------------------

  Title_SC_GetTitleList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_SC_GetTitleList& from);
  void MergeFrom(const Title_SC_GetTitleList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.TitleClientData title_list = 1;
  inline int title_list_size() const;
  inline void clear_title_list();
  static const int kTitleListFieldNumber = 1;
  inline const ::proto::message::TitleClientData& title_list(int index) const;
  inline ::proto::message::TitleClientData* mutable_title_list(int index);
  inline ::proto::message::TitleClientData* add_title_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientData >&
      title_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientData >*
      mutable_title_list();

  // @@protoc_insertion_point(class_scope:proto.message.Title_SC_GetTitleList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientData > title_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_SC_GetTitleList* default_instance_;
};
// -------------------------------------------------------------------

class Title_SC_ChangeTitle : public ::google::protobuf::Message {
 public:
  Title_SC_ChangeTitle();
  virtual ~Title_SC_ChangeTitle();

  Title_SC_ChangeTitle(const Title_SC_ChangeTitle& from);

  inline Title_SC_ChangeTitle& operator=(const Title_SC_ChangeTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_SC_ChangeTitle& default_instance();

  void Swap(Title_SC_ChangeTitle* other);

  // implements Message ----------------------------------------------

  Title_SC_ChangeTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_SC_ChangeTitle& from);
  void MergeFrom(const Title_SC_ChangeTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 titleID = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 2;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_SC_ChangeTitle)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_SC_ChangeTitle* default_instance_;
};
// -------------------------------------------------------------------

class Title_SC_UpdataCurTitle : public ::google::protobuf::Message {
 public:
  Title_SC_UpdataCurTitle();
  virtual ~Title_SC_UpdataCurTitle();

  Title_SC_UpdataCurTitle(const Title_SC_UpdataCurTitle& from);

  inline Title_SC_UpdataCurTitle& operator=(const Title_SC_UpdataCurTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_SC_UpdataCurTitle& default_instance();

  void Swap(Title_SC_UpdataCurTitle* other);

  // implements Message ----------------------------------------------

  Title_SC_UpdataCurTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_SC_UpdataCurTitle& from);
  void MergeFrom(const Title_SC_UpdataCurTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_SC_UpdataCurTitle)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_SC_UpdataCurTitle* default_instance_;
};
// -------------------------------------------------------------------

class Title_SC_NewTitle : public ::google::protobuf::Message {
 public:
  Title_SC_NewTitle();
  virtual ~Title_SC_NewTitle();

  Title_SC_NewTitle(const Title_SC_NewTitle& from);

  inline Title_SC_NewTitle& operator=(const Title_SC_NewTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_SC_NewTitle& default_instance();

  void Swap(Title_SC_NewTitle* other);

  // implements Message ----------------------------------------------

  Title_SC_NewTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_SC_NewTitle& from);
  void MergeFrom(const Title_SC_NewTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_SC_NewTitle)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_SC_NewTitle* default_instance_;
};
// -------------------------------------------------------------------

class Title_CS_HideTitle : public ::google::protobuf::Message {
 public:
  Title_CS_HideTitle();
  virtual ~Title_CS_HideTitle();

  Title_CS_HideTitle(const Title_CS_HideTitle& from);

  inline Title_CS_HideTitle& operator=(const Title_CS_HideTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_CS_HideTitle& default_instance();

  void Swap(Title_CS_HideTitle* other);

  // implements Message ----------------------------------------------

  Title_CS_HideTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_CS_HideTitle& from);
  void MergeFrom(const Title_CS_HideTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ishide = 1;
  inline bool has_ishide() const;
  inline void clear_ishide();
  static const int kIshideFieldNumber = 1;
  inline ::google::protobuf::int32 ishide() const;
  inline void set_ishide(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_CS_HideTitle)
 private:
  inline void set_has_ishide();
  inline void clear_has_ishide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ishide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_CS_HideTitle* default_instance_;
};
// -------------------------------------------------------------------

class Title_SC_HideTitle : public ::google::protobuf::Message {
 public:
  Title_SC_HideTitle();
  virtual ~Title_SC_HideTitle();

  Title_SC_HideTitle(const Title_SC_HideTitle& from);

  inline Title_SC_HideTitle& operator=(const Title_SC_HideTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title_SC_HideTitle& default_instance();

  void Swap(Title_SC_HideTitle* other);

  // implements Message ----------------------------------------------

  Title_SC_HideTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title_SC_HideTitle& from);
  void MergeFrom(const Title_SC_HideTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Title_SC_HideTitle)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static Title_SC_HideTitle* default_instance_;
};
// -------------------------------------------------------------------

class TitleInfo : public ::google::protobuf::Message {
 public:
  TitleInfo();
  virtual ~TitleInfo();

  TitleInfo(const TitleInfo& from);

  inline TitleInfo& operator=(const TitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfo& default_instance();

  void Swap(TitleInfo* other);

  // implements Message ----------------------------------------------

  TitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfo& from);
  void MergeFrom(const TitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // required int32 attributeID = 2;
  inline bool has_attributeid() const;
  inline void clear_attributeid();
  static const int kAttributeIDFieldNumber = 2;
  inline ::google::protobuf::int32 attributeid() const;
  inline void set_attributeid(::google::protobuf::int32 value);

  // optional int64 expireTime = 3;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 3;
  inline ::google::protobuf::int64 expiretime() const;
  inline void set_expiretime(::google::protobuf::int64 value);

  // optional bool new = 4;
  inline bool has_new_() const;
  inline void clear_new_();
  static const int kNewFieldNumber = 4;
  inline bool new_() const;
  inline void set_new_(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.TitleInfo)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_attributeid();
  inline void clear_has_attributeid();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_new_();
  inline void clear_has_new_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;
  ::google::protobuf::int32 attributeid_;
  ::google::protobuf::int64 expiretime_;
  bool new__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class TitleDataDetail : public ::google::protobuf::Message {
 public:
  TitleDataDetail();
  virtual ~TitleDataDetail();

  TitleDataDetail(const TitleDataDetail& from);

  inline TitleDataDetail& operator=(const TitleDataDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleDataDetail& default_instance();

  void Swap(TitleDataDetail* other);

  // implements Message ----------------------------------------------

  TitleDataDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleDataDetail& from);
  void MergeFrom(const TitleDataDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.TitleDataDetail)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleDataDetail* default_instance_;
};
// -------------------------------------------------------------------

class TitleDataRecord : public ::google::protobuf::Message {
 public:
  TitleDataRecord();
  virtual ~TitleDataRecord();

  TitleDataRecord(const TitleDataRecord& from);

  inline TitleDataRecord& operator=(const TitleDataRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleDataRecord& default_instance();

  void Swap(TitleDataRecord* other);

  // implements Message ----------------------------------------------

  TitleDataRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleDataRecord& from);
  void MergeFrom(const TitleDataRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // repeated .proto.message.TitleDataDetail detail = 2;
  inline int detail_size() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::proto::message::TitleDataDetail& detail(int index) const;
  inline ::proto::message::TitleDataDetail* mutable_detail(int index);
  inline ::proto::message::TitleDataDetail* add_detail();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataDetail >&
      detail() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataDetail >*
      mutable_detail();

  // optional int32 condition = 3;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 3;
  inline ::google::protobuf::int32 condition() const;
  inline void set_condition(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.TitleDataRecord)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataDetail > detail_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 condition_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleDataRecord* default_instance_;
};
// -------------------------------------------------------------------

class TitleData : public ::google::protobuf::Message {
 public:
  TitleData();
  virtual ~TitleData();

  TitleData(const TitleData& from);

  inline TitleData& operator=(const TitleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleData& default_instance();

  void Swap(TitleData* other);

  // implements Message ----------------------------------------------

  TitleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleData& from);
  void MergeFrom(const TitleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.TitleInfo title_list = 1;
  inline int title_list_size() const;
  inline void clear_title_list();
  static const int kTitleListFieldNumber = 1;
  inline const ::proto::message::TitleInfo& title_list(int index) const;
  inline ::proto::message::TitleInfo* mutable_title_list(int index);
  inline ::proto::message::TitleInfo* add_title_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleInfo >&
      title_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleInfo >*
      mutable_title_list();

  // optional int32 curTitleID = 2;
  inline bool has_curtitleid() const;
  inline void clear_curtitleid();
  static const int kCurTitleIDFieldNumber = 2;
  inline ::google::protobuf::int32 curtitleid() const;
  inline void set_curtitleid(::google::protobuf::int32 value);

  // repeated .proto.message.TitleDataRecord record_list = 3;
  inline int record_list_size() const;
  inline void clear_record_list();
  static const int kRecordListFieldNumber = 3;
  inline const ::proto::message::TitleDataRecord& record_list(int index) const;
  inline ::proto::message::TitleDataRecord* mutable_record_list(int index);
  inline ::proto::message::TitleDataRecord* add_record_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataRecord >&
      record_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataRecord >*
      mutable_record_list();

  // optional int32 is_hide = 4;
  inline bool has_is_hide() const;
  inline void clear_is_hide();
  static const int kIsHideFieldNumber = 4;
  inline ::google::protobuf::int32 is_hide() const;
  inline void set_is_hide(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.TitleData)
 private:
  inline void set_has_curtitleid();
  inline void clear_has_curtitleid();
  inline void set_has_is_hide();
  inline void clear_has_is_hide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::TitleInfo > title_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataRecord > record_list_;
  ::google::protobuf::int32 curtitleid_;
  ::google::protobuf::int32 is_hide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleData* default_instance_;
};
// -------------------------------------------------------------------

class TitleOffLineData : public ::google::protobuf::Message {
 public:
  TitleOffLineData();
  virtual ~TitleOffLineData();

  TitleOffLineData(const TitleOffLineData& from);

  inline TitleOffLineData& operator=(const TitleOffLineData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleOffLineData& default_instance();

  void Swap(TitleOffLineData* other);

  // implements Message ----------------------------------------------

  TitleOffLineData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleOffLineData& from);
  void MergeFrom(const TitleOffLineData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required uint64 playerID = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // required int32 titleID = 3;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 3;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // optional uint64 expireTime = 4;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.TitleOffLineData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_title_2eproto();
  friend void protobuf_AssignDesc_title_2eproto();
  friend void protobuf_ShutdownFile_title_2eproto();

  void InitAsDefaultInstance();
  static TitleOffLineData* default_instance_;
};
// ===================================================================


// ===================================================================

// Title_CS_GetTitleList

// -------------------------------------------------------------------

// Title_CS_GetTitleDetail

// required int32 titleID = 1;
inline bool Title_CS_GetTitleDetail::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_CS_GetTitleDetail::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_CS_GetTitleDetail::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_CS_GetTitleDetail::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Title_CS_GetTitleDetail::titleid() const {
  return titleid_;
}
inline void Title_CS_GetTitleDetail::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// Title_CS_ChangeTitle

// required int32 titleID = 1;
inline bool Title_CS_ChangeTitle::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_CS_ChangeTitle::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_CS_ChangeTitle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_CS_ChangeTitle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Title_CS_ChangeTitle::titleid() const {
  return titleid_;
}
inline void Title_CS_ChangeTitle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// TitleClientProgress

// optional int32 param = 1;
inline bool TitleClientProgress::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleClientProgress::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleClientProgress::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleClientProgress::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 TitleClientProgress::param() const {
  return param_;
}
inline void TitleClientProgress::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// optional int64 val = 2;
inline bool TitleClientProgress::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleClientProgress::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleClientProgress::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleClientProgress::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
  clear_has_val();
}
inline ::google::protobuf::int64 TitleClientProgress::val() const {
  return val_;
}
inline void TitleClientProgress::set_val(::google::protobuf::int64 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// TitleClientData

// required int32 titleID = 1;
inline bool TitleClientData::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleClientData::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleClientData::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleClientData::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 TitleClientData::titleid() const {
  return titleid_;
}
inline void TitleClientData::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// required int64 expireTime = 2;
inline bool TitleClientData::has_expiretime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleClientData::set_has_expiretime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleClientData::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleClientData::clear_expiretime() {
  expiretime_ = GOOGLE_LONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::int64 TitleClientData::expiretime() const {
  return expiretime_;
}
inline void TitleClientData::set_expiretime(::google::protobuf::int64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// required bool new = 3;
inline bool TitleClientData::has_new_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleClientData::set_has_new_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleClientData::clear_has_new_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleClientData::clear_new_() {
  new__ = false;
  clear_has_new_();
}
inline bool TitleClientData::new_() const {
  return new__;
}
inline void TitleClientData::set_new_(bool value) {
  set_has_new_();
  new__ = value;
}

// repeated .proto.message.TitleClientProgress progress = 4;
inline int TitleClientData::progress_size() const {
  return progress_.size();
}
inline void TitleClientData::clear_progress() {
  progress_.Clear();
}
inline const ::proto::message::TitleClientProgress& TitleClientData::progress(int index) const {
  return progress_.Get(index);
}
inline ::proto::message::TitleClientProgress* TitleClientData::mutable_progress(int index) {
  return progress_.Mutable(index);
}
inline ::proto::message::TitleClientProgress* TitleClientData::add_progress() {
  return progress_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientProgress >&
TitleClientData::progress() const {
  return progress_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientProgress >*
TitleClientData::mutable_progress() {
  return &progress_;
}

// -------------------------------------------------------------------

// Title_SC_GetTitleDetail

// required int32 titleID = 1;
inline bool Title_SC_GetTitleDetail::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_SC_GetTitleDetail::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_SC_GetTitleDetail::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_SC_GetTitleDetail::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Title_SC_GetTitleDetail::titleid() const {
  return titleid_;
}
inline void Title_SC_GetTitleDetail::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// repeated int32 process_list = 3;
inline int Title_SC_GetTitleDetail::process_list_size() const {
  return process_list_.size();
}
inline void Title_SC_GetTitleDetail::clear_process_list() {
  process_list_.Clear();
}
inline ::google::protobuf::int32 Title_SC_GetTitleDetail::process_list(int index) const {
  return process_list_.Get(index);
}
inline void Title_SC_GetTitleDetail::set_process_list(int index, ::google::protobuf::int32 value) {
  process_list_.Set(index, value);
}
inline void Title_SC_GetTitleDetail::add_process_list(::google::protobuf::int32 value) {
  process_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Title_SC_GetTitleDetail::process_list() const {
  return process_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Title_SC_GetTitleDetail::mutable_process_list() {
  return &process_list_;
}

// -------------------------------------------------------------------

// Title_SC_GetTitleList

// repeated .proto.message.TitleClientData title_list = 1;
inline int Title_SC_GetTitleList::title_list_size() const {
  return title_list_.size();
}
inline void Title_SC_GetTitleList::clear_title_list() {
  title_list_.Clear();
}
inline const ::proto::message::TitleClientData& Title_SC_GetTitleList::title_list(int index) const {
  return title_list_.Get(index);
}
inline ::proto::message::TitleClientData* Title_SC_GetTitleList::mutable_title_list(int index) {
  return title_list_.Mutable(index);
}
inline ::proto::message::TitleClientData* Title_SC_GetTitleList::add_title_list() {
  return title_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientData >&
Title_SC_GetTitleList::title_list() const {
  return title_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleClientData >*
Title_SC_GetTitleList::mutable_title_list() {
  return &title_list_;
}

// -------------------------------------------------------------------

// Title_SC_ChangeTitle

// required int32 result = 1;
inline bool Title_SC_ChangeTitle::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_SC_ChangeTitle::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_SC_ChangeTitle::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_SC_ChangeTitle::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Title_SC_ChangeTitle::result() const {
  return result_;
}
inline void Title_SC_ChangeTitle::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 titleID = 2;
inline bool Title_SC_ChangeTitle::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Title_SC_ChangeTitle::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Title_SC_ChangeTitle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Title_SC_ChangeTitle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Title_SC_ChangeTitle::titleid() const {
  return titleid_;
}
inline void Title_SC_ChangeTitle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// Title_SC_UpdataCurTitle

// required int32 titleID = 1;
inline bool Title_SC_UpdataCurTitle::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_SC_UpdataCurTitle::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_SC_UpdataCurTitle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_SC_UpdataCurTitle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Title_SC_UpdataCurTitle::titleid() const {
  return titleid_;
}
inline void Title_SC_UpdataCurTitle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// Title_SC_NewTitle

// required int32 titleID = 1;
inline bool Title_SC_NewTitle::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_SC_NewTitle::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_SC_NewTitle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_SC_NewTitle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Title_SC_NewTitle::titleid() const {
  return titleid_;
}
inline void Title_SC_NewTitle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// Title_CS_HideTitle

// required int32 ishide = 1;
inline bool Title_CS_HideTitle::has_ishide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_CS_HideTitle::set_has_ishide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_CS_HideTitle::clear_has_ishide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_CS_HideTitle::clear_ishide() {
  ishide_ = 0;
  clear_has_ishide();
}
inline ::google::protobuf::int32 Title_CS_HideTitle::ishide() const {
  return ishide_;
}
inline void Title_CS_HideTitle::set_ishide(::google::protobuf::int32 value) {
  set_has_ishide();
  ishide_ = value;
}

// -------------------------------------------------------------------

// Title_SC_HideTitle

// required int32 result = 1;
inline bool Title_SC_HideTitle::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title_SC_HideTitle::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title_SC_HideTitle::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title_SC_HideTitle::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Title_SC_HideTitle::result() const {
  return result_;
}
inline void Title_SC_HideTitle::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TitleInfo

// required int32 titleID = 1;
inline bool TitleInfo::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleInfo::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleInfo::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleInfo::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 TitleInfo::titleid() const {
  return titleid_;
}
inline void TitleInfo::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// required int32 attributeID = 2;
inline bool TitleInfo::has_attributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleInfo::set_has_attributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleInfo::clear_has_attributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleInfo::clear_attributeid() {
  attributeid_ = 0;
  clear_has_attributeid();
}
inline ::google::protobuf::int32 TitleInfo::attributeid() const {
  return attributeid_;
}
inline void TitleInfo::set_attributeid(::google::protobuf::int32 value) {
  set_has_attributeid();
  attributeid_ = value;
}

// optional int64 expireTime = 3;
inline bool TitleInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleInfo::clear_expiretime() {
  expiretime_ = GOOGLE_LONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::int64 TitleInfo::expiretime() const {
  return expiretime_;
}
inline void TitleInfo::set_expiretime(::google::protobuf::int64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// optional bool new = 4;
inline bool TitleInfo::has_new_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TitleInfo::set_has_new_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TitleInfo::clear_has_new_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TitleInfo::clear_new_() {
  new__ = false;
  clear_has_new_();
}
inline bool TitleInfo::new_() const {
  return new__;
}
inline void TitleInfo::set_new_(bool value) {
  set_has_new_();
  new__ = value;
}

// -------------------------------------------------------------------

// TitleDataDetail

// required int32 key = 1;
inline bool TitleDataDetail::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleDataDetail::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleDataDetail::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleDataDetail::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 TitleDataDetail::key() const {
  return key_;
}
inline void TitleDataDetail::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int32 value = 2;
inline bool TitleDataDetail::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleDataDetail::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleDataDetail::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleDataDetail::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 TitleDataDetail::value() const {
  return value_;
}
inline void TitleDataDetail::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// TitleDataRecord

// required int32 num = 1;
inline bool TitleDataRecord::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleDataRecord::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleDataRecord::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleDataRecord::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 TitleDataRecord::num() const {
  return num_;
}
inline void TitleDataRecord::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// repeated .proto.message.TitleDataDetail detail = 2;
inline int TitleDataRecord::detail_size() const {
  return detail_.size();
}
inline void TitleDataRecord::clear_detail() {
  detail_.Clear();
}
inline const ::proto::message::TitleDataDetail& TitleDataRecord::detail(int index) const {
  return detail_.Get(index);
}
inline ::proto::message::TitleDataDetail* TitleDataRecord::mutable_detail(int index) {
  return detail_.Mutable(index);
}
inline ::proto::message::TitleDataDetail* TitleDataRecord::add_detail() {
  return detail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataDetail >&
TitleDataRecord::detail() const {
  return detail_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataDetail >*
TitleDataRecord::mutable_detail() {
  return &detail_;
}

// optional int32 condition = 3;
inline bool TitleDataRecord::has_condition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleDataRecord::set_has_condition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleDataRecord::clear_has_condition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleDataRecord::clear_condition() {
  condition_ = 0;
  clear_has_condition();
}
inline ::google::protobuf::int32 TitleDataRecord::condition() const {
  return condition_;
}
inline void TitleDataRecord::set_condition(::google::protobuf::int32 value) {
  set_has_condition();
  condition_ = value;
}

// -------------------------------------------------------------------

// TitleData

// repeated .proto.message.TitleInfo title_list = 1;
inline int TitleData::title_list_size() const {
  return title_list_.size();
}
inline void TitleData::clear_title_list() {
  title_list_.Clear();
}
inline const ::proto::message::TitleInfo& TitleData::title_list(int index) const {
  return title_list_.Get(index);
}
inline ::proto::message::TitleInfo* TitleData::mutable_title_list(int index) {
  return title_list_.Mutable(index);
}
inline ::proto::message::TitleInfo* TitleData::add_title_list() {
  return title_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleInfo >&
TitleData::title_list() const {
  return title_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleInfo >*
TitleData::mutable_title_list() {
  return &title_list_;
}

// optional int32 curTitleID = 2;
inline bool TitleData::has_curtitleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleData::set_has_curtitleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleData::clear_has_curtitleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleData::clear_curtitleid() {
  curtitleid_ = 0;
  clear_has_curtitleid();
}
inline ::google::protobuf::int32 TitleData::curtitleid() const {
  return curtitleid_;
}
inline void TitleData::set_curtitleid(::google::protobuf::int32 value) {
  set_has_curtitleid();
  curtitleid_ = value;
}

// repeated .proto.message.TitleDataRecord record_list = 3;
inline int TitleData::record_list_size() const {
  return record_list_.size();
}
inline void TitleData::clear_record_list() {
  record_list_.Clear();
}
inline const ::proto::message::TitleDataRecord& TitleData::record_list(int index) const {
  return record_list_.Get(index);
}
inline ::proto::message::TitleDataRecord* TitleData::mutable_record_list(int index) {
  return record_list_.Mutable(index);
}
inline ::proto::message::TitleDataRecord* TitleData::add_record_list() {
  return record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataRecord >&
TitleData::record_list() const {
  return record_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TitleDataRecord >*
TitleData::mutable_record_list() {
  return &record_list_;
}

// optional int32 is_hide = 4;
inline bool TitleData::has_is_hide() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TitleData::set_has_is_hide() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TitleData::clear_has_is_hide() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TitleData::clear_is_hide() {
  is_hide_ = 0;
  clear_has_is_hide();
}
inline ::google::protobuf::int32 TitleData::is_hide() const {
  return is_hide_;
}
inline void TitleData::set_is_hide(::google::protobuf::int32 value) {
  set_has_is_hide();
  is_hide_ = value;
}

// -------------------------------------------------------------------

// TitleOffLineData

// required uint64 ID = 1;
inline bool TitleOffLineData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleOffLineData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleOffLineData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleOffLineData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 TitleOffLineData::id() const {
  return id_;
}
inline void TitleOffLineData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required uint64 playerID = 2;
inline bool TitleOffLineData::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleOffLineData::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleOffLineData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleOffLineData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 TitleOffLineData::playerid() const {
  return playerid_;
}
inline void TitleOffLineData::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// required int32 titleID = 3;
inline bool TitleOffLineData::has_titleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleOffLineData::set_has_titleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleOffLineData::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleOffLineData::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 TitleOffLineData::titleid() const {
  return titleid_;
}
inline void TitleOffLineData::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional uint64 expireTime = 4;
inline bool TitleOffLineData::has_expiretime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TitleOffLineData::set_has_expiretime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TitleOffLineData::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TitleOffLineData::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 TitleOffLineData::expiretime() const {
  return expiretime_;
}
inline void TitleOffLineData::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::eTitleConType>() {
  return ::proto::message::eTitleConType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::eTitleDeadLine>() {
  return ::proto::message::eTitleDeadLine_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_title_2eproto__INCLUDED
