// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: godweapon.proto

#ifndef PROTOBUF_godweapon_2eproto__INCLUDED
#define PROTOBUF_godweapon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_godweapon_2eproto();
void protobuf_AssignDesc_godweapon_2eproto();
void protobuf_ShutdownFile_godweapon_2eproto();

class ProtoGodWeaponCellInfo;
class ProtoGodWeaponAllCellInfo;
class GodWeapon_CS_GetGodWeaponInfo;
class GodWeapon_SC_GetGodWeaponInfo;
class GodWeapon_SC_UpdateSingleGodWeaponInfo;
class GodWeapon_CS_OperaCell;
class GodWeapon_SC_OperaCell;

// ===================================================================

class ProtoGodWeaponCellInfo : public ::google::protobuf::Message {
 public:
  ProtoGodWeaponCellInfo();
  virtual ~ProtoGodWeaponCellInfo();

  ProtoGodWeaponCellInfo(const ProtoGodWeaponCellInfo& from);

  inline ProtoGodWeaponCellInfo& operator=(const ProtoGodWeaponCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGodWeaponCellInfo& default_instance();

  void Swap(ProtoGodWeaponCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoGodWeaponCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGodWeaponCellInfo& from);
  void MergeFrom(const ProtoGodWeaponCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required bool isActive = 2;
  inline bool has_isactive() const;
  inline void clear_isactive();
  static const int kIsActiveFieldNumber = 2;
  inline bool isactive() const;
  inline void set_isactive(bool value);

  // optional bool isUse = 3;
  inline bool has_isuse() const;
  inline void clear_isuse();
  static const int kIsUseFieldNumber = 3;
  inline bool isuse() const;
  inline void set_isuse(bool value);

  // optional uint32 godweaponId = 4;
  inline bool has_godweaponid() const;
  inline void clear_godweaponid();
  static const int kGodweaponIdFieldNumber = 4;
  inline ::google::protobuf::uint32 godweaponid() const;
  inline void set_godweaponid(::google::protobuf::uint32 value);

  // optional uint32 strLv = 5;
  inline bool has_strlv() const;
  inline void clear_strlv();
  static const int kStrLvFieldNumber = 5;
  inline ::google::protobuf::uint32 strlv() const;
  inline void set_strlv(::google::protobuf::uint32 value);

  // optional uint32 luckyValue = 6;
  inline bool has_luckyvalue() const;
  inline void clear_luckyvalue();
  static const int kLuckyValueFieldNumber = 6;
  inline ::google::protobuf::uint32 luckyvalue() const;
  inline void set_luckyvalue(::google::protobuf::uint32 value);

  // optional uint32 skillId = 7;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 7;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 activeType = 8;
  inline bool has_activetype() const;
  inline void clear_activetype();
  static const int kActiveTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 activetype() const;
  inline void set_activetype(::google::protobuf::uint32 value);

  // optional uint32 activeNowValue = 9;
  inline bool has_activenowvalue() const;
  inline void clear_activenowvalue();
  static const int kActiveNowValueFieldNumber = 9;
  inline ::google::protobuf::uint32 activenowvalue() const;
  inline void set_activenowvalue(::google::protobuf::uint32 value);

  // optional uint32 eatFoodId = 10;
  inline bool has_eatfoodid() const;
  inline void clear_eatfoodid();
  static const int kEatFoodIdFieldNumber = 10;
  inline ::google::protobuf::uint32 eatfoodid() const;
  inline void set_eatfoodid(::google::protobuf::uint32 value);

  // optional uint32 eatFoodNum = 11;
  inline bool has_eatfoodnum() const;
  inline void clear_eatfoodnum();
  static const int kEatFoodNumFieldNumber = 11;
  inline ::google::protobuf::uint32 eatfoodnum() const;
  inline void set_eatfoodnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoGodWeaponCellInfo)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_isactive();
  inline void clear_has_isactive();
  inline void set_has_isuse();
  inline void clear_has_isuse();
  inline void set_has_godweaponid();
  inline void clear_has_godweaponid();
  inline void set_has_strlv();
  inline void clear_has_strlv();
  inline void set_has_luckyvalue();
  inline void clear_has_luckyvalue();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_activetype();
  inline void clear_has_activetype();
  inline void set_has_activenowvalue();
  inline void clear_has_activenowvalue();
  inline void set_has_eatfoodid();
  inline void clear_has_eatfoodid();
  inline void set_has_eatfoodnum();
  inline void clear_has_eatfoodnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  bool isactive_;
  bool isuse_;
  ::google::protobuf::uint32 godweaponid_;
  ::google::protobuf::uint32 strlv_;
  ::google::protobuf::uint32 luckyvalue_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 activetype_;
  ::google::protobuf::uint32 activenowvalue_;
  ::google::protobuf::uint32 eatfoodid_;
  ::google::protobuf::uint32 eatfoodnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static ProtoGodWeaponCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoGodWeaponAllCellInfo : public ::google::protobuf::Message {
 public:
  ProtoGodWeaponAllCellInfo();
  virtual ~ProtoGodWeaponAllCellInfo();

  ProtoGodWeaponAllCellInfo(const ProtoGodWeaponAllCellInfo& from);

  inline ProtoGodWeaponAllCellInfo& operator=(const ProtoGodWeaponAllCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoGodWeaponAllCellInfo& default_instance();

  void Swap(ProtoGodWeaponAllCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoGodWeaponAllCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoGodWeaponAllCellInfo& from);
  void MergeFrom(const ProtoGodWeaponAllCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoGodWeaponCellInfo allInfo = 1;
  inline int allinfo_size() const;
  inline void clear_allinfo();
  static const int kAllInfoFieldNumber = 1;
  inline const ::proto::message::ProtoGodWeaponCellInfo& allinfo(int index) const;
  inline ::proto::message::ProtoGodWeaponCellInfo* mutable_allinfo(int index);
  inline ::proto::message::ProtoGodWeaponCellInfo* add_allinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >&
      allinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >*
      mutable_allinfo();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoGodWeaponAllCellInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo > allinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static ProtoGodWeaponAllCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class GodWeapon_CS_GetGodWeaponInfo : public ::google::protobuf::Message {
 public:
  GodWeapon_CS_GetGodWeaponInfo();
  virtual ~GodWeapon_CS_GetGodWeaponInfo();

  GodWeapon_CS_GetGodWeaponInfo(const GodWeapon_CS_GetGodWeaponInfo& from);

  inline GodWeapon_CS_GetGodWeaponInfo& operator=(const GodWeapon_CS_GetGodWeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodWeapon_CS_GetGodWeaponInfo& default_instance();

  void Swap(GodWeapon_CS_GetGodWeaponInfo* other);

  // implements Message ----------------------------------------------

  GodWeapon_CS_GetGodWeaponInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodWeapon_CS_GetGodWeaponInfo& from);
  void MergeFrom(const GodWeapon_CS_GetGodWeaponInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GodWeapon_CS_GetGodWeaponInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static GodWeapon_CS_GetGodWeaponInfo* default_instance_;
};
// -------------------------------------------------------------------

class GodWeapon_SC_GetGodWeaponInfo : public ::google::protobuf::Message {
 public:
  GodWeapon_SC_GetGodWeaponInfo();
  virtual ~GodWeapon_SC_GetGodWeaponInfo();

  GodWeapon_SC_GetGodWeaponInfo(const GodWeapon_SC_GetGodWeaponInfo& from);

  inline GodWeapon_SC_GetGodWeaponInfo& operator=(const GodWeapon_SC_GetGodWeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodWeapon_SC_GetGodWeaponInfo& default_instance();

  void Swap(GodWeapon_SC_GetGodWeaponInfo* other);

  // implements Message ----------------------------------------------

  GodWeapon_SC_GetGodWeaponInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodWeapon_SC_GetGodWeaponInfo& from);
  void MergeFrom(const GodWeapon_SC_GetGodWeaponInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoGodWeaponCellInfo infoList = 1;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 1;
  inline const ::proto::message::ProtoGodWeaponCellInfo& infolist(int index) const;
  inline ::proto::message::ProtoGodWeaponCellInfo* mutable_infolist(int index);
  inline ::proto::message::ProtoGodWeaponCellInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:proto.message.GodWeapon_SC_GetGodWeaponInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo > infolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static GodWeapon_SC_GetGodWeaponInfo* default_instance_;
};
// -------------------------------------------------------------------

class GodWeapon_SC_UpdateSingleGodWeaponInfo : public ::google::protobuf::Message {
 public:
  GodWeapon_SC_UpdateSingleGodWeaponInfo();
  virtual ~GodWeapon_SC_UpdateSingleGodWeaponInfo();

  GodWeapon_SC_UpdateSingleGodWeaponInfo(const GodWeapon_SC_UpdateSingleGodWeaponInfo& from);

  inline GodWeapon_SC_UpdateSingleGodWeaponInfo& operator=(const GodWeapon_SC_UpdateSingleGodWeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodWeapon_SC_UpdateSingleGodWeaponInfo& default_instance();

  void Swap(GodWeapon_SC_UpdateSingleGodWeaponInfo* other);

  // implements Message ----------------------------------------------

  GodWeapon_SC_UpdateSingleGodWeaponInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodWeapon_SC_UpdateSingleGodWeaponInfo& from);
  void MergeFrom(const GodWeapon_SC_UpdateSingleGodWeaponInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoGodWeaponCellInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto::message::ProtoGodWeaponCellInfo& info() const;
  inline ::proto::message::ProtoGodWeaponCellInfo* mutable_info();
  inline ::proto::message::ProtoGodWeaponCellInfo* release_info();
  inline void set_allocated_info(::proto::message::ProtoGodWeaponCellInfo* info);

  // @@protoc_insertion_point(class_scope:proto.message.GodWeapon_SC_UpdateSingleGodWeaponInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoGodWeaponCellInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static GodWeapon_SC_UpdateSingleGodWeaponInfo* default_instance_;
};
// -------------------------------------------------------------------

class GodWeapon_CS_OperaCell : public ::google::protobuf::Message {
 public:
  GodWeapon_CS_OperaCell();
  virtual ~GodWeapon_CS_OperaCell();

  GodWeapon_CS_OperaCell(const GodWeapon_CS_OperaCell& from);

  inline GodWeapon_CS_OperaCell& operator=(const GodWeapon_CS_OperaCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodWeapon_CS_OperaCell& default_instance();

  void Swap(GodWeapon_CS_OperaCell* other);

  // implements Message ----------------------------------------------

  GodWeapon_CS_OperaCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodWeapon_CS_OperaCell& from);
  void MergeFrom(const GodWeapon_CS_OperaCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint32 operaType = 2;
  inline bool has_operatype() const;
  inline void clear_operatype();
  static const int kOperaTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 operatype() const;
  inline void set_operatype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GodWeapon_CS_OperaCell)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_operatype();
  inline void clear_has_operatype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 operatype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static GodWeapon_CS_OperaCell* default_instance_;
};
// -------------------------------------------------------------------

class GodWeapon_SC_OperaCell : public ::google::protobuf::Message {
 public:
  GodWeapon_SC_OperaCell();
  virtual ~GodWeapon_SC_OperaCell();

  GodWeapon_SC_OperaCell(const GodWeapon_SC_OperaCell& from);

  inline GodWeapon_SC_OperaCell& operator=(const GodWeapon_SC_OperaCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodWeapon_SC_OperaCell& default_instance();

  void Swap(GodWeapon_SC_OperaCell* other);

  // implements Message ----------------------------------------------

  GodWeapon_SC_OperaCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodWeapon_SC_OperaCell& from);
  void MergeFrom(const GodWeapon_SC_OperaCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GodWeapon_SC_OperaCell)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godweapon_2eproto();
  friend void protobuf_AssignDesc_godweapon_2eproto();
  friend void protobuf_ShutdownFile_godweapon_2eproto();

  void InitAsDefaultInstance();
  static GodWeapon_SC_OperaCell* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoGodWeaponCellInfo

// required uint32 cellId = 1;
inline bool ProtoGodWeaponCellInfo::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoGodWeaponCellInfo::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoGodWeaponCellInfo::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::cellid() const {
  return cellid_;
}
inline void ProtoGodWeaponCellInfo::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required bool isActive = 2;
inline bool ProtoGodWeaponCellInfo::has_isactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_isactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoGodWeaponCellInfo::clear_has_isactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoGodWeaponCellInfo::clear_isactive() {
  isactive_ = false;
  clear_has_isactive();
}
inline bool ProtoGodWeaponCellInfo::isactive() const {
  return isactive_;
}
inline void ProtoGodWeaponCellInfo::set_isactive(bool value) {
  set_has_isactive();
  isactive_ = value;
}

// optional bool isUse = 3;
inline bool ProtoGodWeaponCellInfo::has_isuse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_isuse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoGodWeaponCellInfo::clear_has_isuse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoGodWeaponCellInfo::clear_isuse() {
  isuse_ = false;
  clear_has_isuse();
}
inline bool ProtoGodWeaponCellInfo::isuse() const {
  return isuse_;
}
inline void ProtoGodWeaponCellInfo::set_isuse(bool value) {
  set_has_isuse();
  isuse_ = value;
}

// optional uint32 godweaponId = 4;
inline bool ProtoGodWeaponCellInfo::has_godweaponid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_godweaponid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoGodWeaponCellInfo::clear_has_godweaponid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoGodWeaponCellInfo::clear_godweaponid() {
  godweaponid_ = 0u;
  clear_has_godweaponid();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::godweaponid() const {
  return godweaponid_;
}
inline void ProtoGodWeaponCellInfo::set_godweaponid(::google::protobuf::uint32 value) {
  set_has_godweaponid();
  godweaponid_ = value;
}

// optional uint32 strLv = 5;
inline bool ProtoGodWeaponCellInfo::has_strlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_strlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoGodWeaponCellInfo::clear_has_strlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoGodWeaponCellInfo::clear_strlv() {
  strlv_ = 0u;
  clear_has_strlv();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::strlv() const {
  return strlv_;
}
inline void ProtoGodWeaponCellInfo::set_strlv(::google::protobuf::uint32 value) {
  set_has_strlv();
  strlv_ = value;
}

// optional uint32 luckyValue = 6;
inline bool ProtoGodWeaponCellInfo::has_luckyvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_luckyvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoGodWeaponCellInfo::clear_has_luckyvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoGodWeaponCellInfo::clear_luckyvalue() {
  luckyvalue_ = 0u;
  clear_has_luckyvalue();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::luckyvalue() const {
  return luckyvalue_;
}
inline void ProtoGodWeaponCellInfo::set_luckyvalue(::google::protobuf::uint32 value) {
  set_has_luckyvalue();
  luckyvalue_ = value;
}

// optional uint32 skillId = 7;
inline bool ProtoGodWeaponCellInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoGodWeaponCellInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoGodWeaponCellInfo::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::skillid() const {
  return skillid_;
}
inline void ProtoGodWeaponCellInfo::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 activeType = 8;
inline bool ProtoGodWeaponCellInfo::has_activetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_activetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoGodWeaponCellInfo::clear_has_activetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoGodWeaponCellInfo::clear_activetype() {
  activetype_ = 0u;
  clear_has_activetype();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::activetype() const {
  return activetype_;
}
inline void ProtoGodWeaponCellInfo::set_activetype(::google::protobuf::uint32 value) {
  set_has_activetype();
  activetype_ = value;
}

// optional uint32 activeNowValue = 9;
inline bool ProtoGodWeaponCellInfo::has_activenowvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_activenowvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoGodWeaponCellInfo::clear_has_activenowvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoGodWeaponCellInfo::clear_activenowvalue() {
  activenowvalue_ = 0u;
  clear_has_activenowvalue();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::activenowvalue() const {
  return activenowvalue_;
}
inline void ProtoGodWeaponCellInfo::set_activenowvalue(::google::protobuf::uint32 value) {
  set_has_activenowvalue();
  activenowvalue_ = value;
}

// optional uint32 eatFoodId = 10;
inline bool ProtoGodWeaponCellInfo::has_eatfoodid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_eatfoodid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoGodWeaponCellInfo::clear_has_eatfoodid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoGodWeaponCellInfo::clear_eatfoodid() {
  eatfoodid_ = 0u;
  clear_has_eatfoodid();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::eatfoodid() const {
  return eatfoodid_;
}
inline void ProtoGodWeaponCellInfo::set_eatfoodid(::google::protobuf::uint32 value) {
  set_has_eatfoodid();
  eatfoodid_ = value;
}

// optional uint32 eatFoodNum = 11;
inline bool ProtoGodWeaponCellInfo::has_eatfoodnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoGodWeaponCellInfo::set_has_eatfoodnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoGodWeaponCellInfo::clear_has_eatfoodnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoGodWeaponCellInfo::clear_eatfoodnum() {
  eatfoodnum_ = 0u;
  clear_has_eatfoodnum();
}
inline ::google::protobuf::uint32 ProtoGodWeaponCellInfo::eatfoodnum() const {
  return eatfoodnum_;
}
inline void ProtoGodWeaponCellInfo::set_eatfoodnum(::google::protobuf::uint32 value) {
  set_has_eatfoodnum();
  eatfoodnum_ = value;
}

// -------------------------------------------------------------------

// ProtoGodWeaponAllCellInfo

// repeated .proto.message.ProtoGodWeaponCellInfo allInfo = 1;
inline int ProtoGodWeaponAllCellInfo::allinfo_size() const {
  return allinfo_.size();
}
inline void ProtoGodWeaponAllCellInfo::clear_allinfo() {
  allinfo_.Clear();
}
inline const ::proto::message::ProtoGodWeaponCellInfo& ProtoGodWeaponAllCellInfo::allinfo(int index) const {
  return allinfo_.Get(index);
}
inline ::proto::message::ProtoGodWeaponCellInfo* ProtoGodWeaponAllCellInfo::mutable_allinfo(int index) {
  return allinfo_.Mutable(index);
}
inline ::proto::message::ProtoGodWeaponCellInfo* ProtoGodWeaponAllCellInfo::add_allinfo() {
  return allinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >&
ProtoGodWeaponAllCellInfo::allinfo() const {
  return allinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >*
ProtoGodWeaponAllCellInfo::mutable_allinfo() {
  return &allinfo_;
}

// -------------------------------------------------------------------

// GodWeapon_CS_GetGodWeaponInfo

// -------------------------------------------------------------------

// GodWeapon_SC_GetGodWeaponInfo

// repeated .proto.message.ProtoGodWeaponCellInfo infoList = 1;
inline int GodWeapon_SC_GetGodWeaponInfo::infolist_size() const {
  return infolist_.size();
}
inline void GodWeapon_SC_GetGodWeaponInfo::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::ProtoGodWeaponCellInfo& GodWeapon_SC_GetGodWeaponInfo::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::ProtoGodWeaponCellInfo* GodWeapon_SC_GetGodWeaponInfo::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::ProtoGodWeaponCellInfo* GodWeapon_SC_GetGodWeaponInfo::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >&
GodWeapon_SC_GetGodWeaponInfo::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoGodWeaponCellInfo >*
GodWeapon_SC_GetGodWeaponInfo::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// GodWeapon_SC_UpdateSingleGodWeaponInfo

// optional .proto.message.ProtoGodWeaponCellInfo info = 1;
inline bool GodWeapon_SC_UpdateSingleGodWeaponInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodWeapon_SC_UpdateSingleGodWeaponInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodWeapon_SC_UpdateSingleGodWeaponInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodWeapon_SC_UpdateSingleGodWeaponInfo::clear_info() {
  if (info_ != NULL) info_->::proto::message::ProtoGodWeaponCellInfo::Clear();
  clear_has_info();
}
inline const ::proto::message::ProtoGodWeaponCellInfo& GodWeapon_SC_UpdateSingleGodWeaponInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto::message::ProtoGodWeaponCellInfo* GodWeapon_SC_UpdateSingleGodWeaponInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto::message::ProtoGodWeaponCellInfo;
  return info_;
}
inline ::proto::message::ProtoGodWeaponCellInfo* GodWeapon_SC_UpdateSingleGodWeaponInfo::release_info() {
  clear_has_info();
  ::proto::message::ProtoGodWeaponCellInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GodWeapon_SC_UpdateSingleGodWeaponInfo::set_allocated_info(::proto::message::ProtoGodWeaponCellInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GodWeapon_CS_OperaCell

// required uint32 cellId = 1;
inline bool GodWeapon_CS_OperaCell::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodWeapon_CS_OperaCell::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodWeapon_CS_OperaCell::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodWeapon_CS_OperaCell::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 GodWeapon_CS_OperaCell::cellid() const {
  return cellid_;
}
inline void GodWeapon_CS_OperaCell::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint32 operaType = 2;
inline bool GodWeapon_CS_OperaCell::has_operatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodWeapon_CS_OperaCell::set_has_operatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodWeapon_CS_OperaCell::clear_has_operatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodWeapon_CS_OperaCell::clear_operatype() {
  operatype_ = 0u;
  clear_has_operatype();
}
inline ::google::protobuf::uint32 GodWeapon_CS_OperaCell::operatype() const {
  return operatype_;
}
inline void GodWeapon_CS_OperaCell::set_operatype(::google::protobuf::uint32 value) {
  set_has_operatype();
  operatype_ = value;
}

// -------------------------------------------------------------------

// GodWeapon_SC_OperaCell

// required int32 ret = 1;
inline bool GodWeapon_SC_OperaCell::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodWeapon_SC_OperaCell::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodWeapon_SC_OperaCell::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodWeapon_SC_OperaCell::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GodWeapon_SC_OperaCell::ret() const {
  return ret_;
}
inline void GodWeapon_SC_OperaCell::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_godweapon_2eproto__INCLUDED
