// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_data.proto

#ifndef PROTOBUF_db_5fdata_2eproto__INCLUDED
#define PROTOBUF_db_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "identity.pb.h"
#include "achieve.pb.h"
#include "tower.pb.h"
#include "item.pb.h"
#include "mail.pb.h"
#include "support.pb.h"
#include "welfare.pb.h"
#include "avatar.pb.h"
#include "soulbox.pb.h"
#include "recoversrc.pb.h"
#include "shop.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_db_5fdata_2eproto();
void protobuf_AssignDesc_db_5fdata_2eproto();
void protobuf_ShutdownFile_db_5fdata_2eproto();

class DataInfo;

enum MatchType {
  PrivateMatch = 0,
  UnionMatch = 1,
  PublicMatch = 2
};
bool MatchType_IsValid(int value);
const MatchType MatchType_MIN = PrivateMatch;
const MatchType MatchType_MAX = PublicMatch;
const int MatchType_ARRAYSIZE = MatchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchType_descriptor();
inline const ::std::string& MatchType_Name(MatchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchType_descriptor(), value);
}
inline bool MatchType_Parse(
    const ::std::string& name, MatchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchType>(
    MatchType_descriptor(), name, value);
}
// ===================================================================

class DataInfo : public ::google::protobuf::Message {
 public:
  DataInfo();
  virtual ~DataInfo();

  DataInfo(const DataInfo& from);

  inline DataInfo& operator=(const DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataInfo& default_instance();

  void Swap(DataInfo* other);

  // implements Message ----------------------------------------------

  DataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataInfo& from);
  void MergeFrom(const DataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);

  // optional .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 layerId = 4;
  inline bool has_layerid() const;
  inline void clear_layerid();
  static const int kLayerIdFieldNumber = 4;
  inline ::google::protobuf::int32 layerid() const;
  inline void set_layerid(::google::protobuf::int32 value);

  // optional int32 DungeonID = 5;
  inline bool has_dungeonid() const;
  inline void clear_dungeonid();
  static const int kDungeonIDFieldNumber = 5;
  inline ::google::protobuf::int32 dungeonid() const;
  inline void set_dungeonid(::google::protobuf::int32 value);

  // optional int32 RecordMapId = 6;
  inline bool has_recordmapid() const;
  inline void clear_recordmapid();
  static const int kRecordMapIdFieldNumber = 6;
  inline ::google::protobuf::int32 recordmapid() const;
  inline void set_recordmapid(::google::protobuf::int32 value);

  // optional int32 RecordLayerId = 7;
  inline bool has_recordlayerid() const;
  inline void clear_recordlayerid();
  static const int kRecordLayerIdFieldNumber = 7;
  inline ::google::protobuf::int32 recordlayerid() const;
  inline void set_recordlayerid(::google::protobuf::int32 value);

  // optional .proto.message.Point3D RecordPt = 8;
  inline bool has_recordpt() const;
  inline void clear_recordpt();
  static const int kRecordPtFieldNumber = 8;
  inline const ::proto::message::Point3D& recordpt() const;
  inline ::proto::message::Point3D* mutable_recordpt();
  inline ::proto::message::Point3D* release_recordpt();
  inline void set_allocated_recordpt(::proto::message::Point3D* recordpt);

  // optional float RecordDir = 9;
  inline bool has_recorddir() const;
  inline void clear_recorddir();
  static const int kRecordDirFieldNumber = 9;
  inline float recorddir() const;
  inline void set_recorddir(float value);

  // optional int32 reset_time_day = 10;
  inline bool has_reset_time_day() const;
  inline void clear_reset_time_day();
  static const int kResetTimeDayFieldNumber = 10;
  inline ::google::protobuf::int32 reset_time_day() const;
  inline void set_reset_time_day(::google::protobuf::int32 value);

  // optional int32 reset_time_week = 11;
  inline bool has_reset_time_week() const;
  inline void clear_reset_time_week();
  static const int kResetTimeWeekFieldNumber = 11;
  inline ::google::protobuf::int32 reset_time_week() const;
  inline void set_reset_time_week(::google::protobuf::int32 value);

  // optional int32 vigor = 12;
  inline bool has_vigor() const;
  inline void clear_vigor();
  static const int kVigorFieldNumber = 12;
  inline ::google::protobuf::int32 vigor() const;
  inline void set_vigor(::google::protobuf::int32 value);

  // optional int32 lucky_value = 13;
  inline bool has_lucky_value() const;
  inline void clear_lucky_value();
  static const int kLuckyValueFieldNumber = 13;
  inline ::google::protobuf::int32 lucky_value() const;
  inline void set_lucky_value(::google::protobuf::int32 value);

  // repeated uint64 auction_item_list = 14;
  inline int auction_item_list_size() const;
  inline void clear_auction_item_list();
  static const int kAuctionItemListFieldNumber = 14;
  inline ::google::protobuf::uint64 auction_item_list(int index) const;
  inline void set_auction_item_list(int index, ::google::protobuf::uint64 value);
  inline void add_auction_item_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      auction_item_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_auction_item_list();

  // repeated uint64 attention_item_list = 15;
  inline int attention_item_list_size() const;
  inline void clear_attention_item_list();
  static const int kAttentionItemListFieldNumber = 15;
  inline ::google::protobuf::uint64 attention_item_list(int index) const;
  inline void set_attention_item_list(int index, ::google::protobuf::uint64 value);
  inline void add_attention_item_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      attention_item_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_attention_item_list();

  // optional int32 idy_points = 16;
  inline bool has_idy_points() const;
  inline void clear_idy_points();
  static const int kIdyPointsFieldNumber = 16;
  inline ::google::protobuf::int32 idy_points() const;
  inline void set_idy_points(::google::protobuf::int32 value);

  // repeated .proto.message.Identity identity_list = 17;
  inline int identity_list_size() const;
  inline void clear_identity_list();
  static const int kIdentityListFieldNumber = 17;
  inline const ::proto::message::Identity& identity_list(int index) const;
  inline ::proto::message::Identity* mutable_identity_list(int index);
  inline ::proto::message::Identity* add_identity_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Identity >&
      identity_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Identity >*
      mutable_identity_list();

  // optional int32 tal_points = 18;
  inline bool has_tal_points() const;
  inline void clear_tal_points();
  static const int kTalPointsFieldNumber = 18;
  inline ::google::protobuf::int32 tal_points() const;
  inline void set_tal_points(::google::protobuf::int32 value);

  // optional int32 tal_item_times = 19;
  inline bool has_tal_item_times() const;
  inline void clear_tal_item_times();
  static const int kTalItemTimesFieldNumber = 19;
  inline ::google::protobuf::int32 tal_item_times() const;
  inline void set_tal_item_times(::google::protobuf::int32 value);

  // optional uint32 questioncounts = 20;
  inline bool has_questioncounts() const;
  inline void clear_questioncounts();
  static const int kQuestioncountsFieldNumber = 20;
  inline ::google::protobuf::uint32 questioncounts() const;
  inline void set_questioncounts(::google::protobuf::uint32 value);

  // optional uint32 rightcounts = 21;
  inline bool has_rightcounts() const;
  inline void clear_rightcounts();
  static const int kRightcountsFieldNumber = 21;
  inline ::google::protobuf::uint32 rightcounts() const;
  inline void set_rightcounts(::google::protobuf::uint32 value);

  // optional uint32 rewardstate = 22;
  inline bool has_rewardstate() const;
  inline void clear_rewardstate();
  static const int kRewardstateFieldNumber = 22;
  inline ::google::protobuf::uint32 rewardstate() const;
  inline void set_rewardstate(::google::protobuf::uint32 value);

  // repeated int32 open_button_list = 23;
  inline int open_button_list_size() const;
  inline void clear_open_button_list();
  static const int kOpenButtonListFieldNumber = 23;
  inline ::google::protobuf::int32 open_button_list(int index) const;
  inline void set_open_button_list(int index, ::google::protobuf::int32 value);
  inline void add_open_button_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      open_button_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_open_button_list();

  // repeated int32 open_button_reward = 24;
  inline int open_button_reward_size() const;
  inline void clear_open_button_reward();
  static const int kOpenButtonRewardFieldNumber = 24;
  inline ::google::protobuf::int32 open_button_reward(int index) const;
  inline void set_open_button_reward(int index, ::google::protobuf::int32 value);
  inline void add_open_button_reward(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      open_button_reward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_open_button_reward();

  // optional .proto.message.MailBoxData maildata = 25;
  inline bool has_maildata() const;
  inline void clear_maildata();
  static const int kMaildataFieldNumber = 25;
  inline const ::proto::message::MailBoxData& maildata() const;
  inline ::proto::message::MailBoxData* mutable_maildata();
  inline ::proto::message::MailBoxData* release_maildata();
  inline void set_allocated_maildata(::proto::message::MailBoxData* maildata);

  // optional uint32 role_create_time = 26;
  inline bool has_role_create_time() const;
  inline void clear_role_create_time();
  static const int kRoleCreateTimeFieldNumber = 26;
  inline ::google::protobuf::uint32 role_create_time() const;
  inline void set_role_create_time(::google::protobuf::uint32 value);

  // optional uint32 total_online_sec = 27;
  inline bool has_total_online_sec() const;
  inline void clear_total_online_sec();
  static const int kTotalOnlineSecFieldNumber = 27;
  inline ::google::protobuf::uint32 total_online_sec() const;
  inline void set_total_online_sec(::google::protobuf::uint32 value);

  // repeated .proto.message.SupportData support_data = 28;
  inline int support_data_size() const;
  inline void clear_support_data();
  static const int kSupportDataFieldNumber = 28;
  inline const ::proto::message::SupportData& support_data(int index) const;
  inline ::proto::message::SupportData* mutable_support_data(int index);
  inline ::proto::message::SupportData* add_support_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SupportData >&
      support_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SupportData >*
      mutable_support_data();

  // optional int32 relive_times = 29;
  inline bool has_relive_times() const;
  inline void clear_relive_times();
  static const int kReliveTimesFieldNumber = 29;
  inline ::google::protobuf::int32 relive_times() const;
  inline void set_relive_times(::google::protobuf::int32 value);

  // optional uint32 guild_contribution = 30;
  inline bool has_guild_contribution() const;
  inline void clear_guild_contribution();
  static const int kGuildContributionFieldNumber = 30;
  inline ::google::protobuf::uint32 guild_contribution() const;
  inline void set_guild_contribution(::google::protobuf::uint32 value);

  // optional bool ignore_teaminvite = 31;
  inline bool has_ignore_teaminvite() const;
  inline void clear_ignore_teaminvite();
  static const int kIgnoreTeaminviteFieldNumber = 31;
  inline bool ignore_teaminvite() const;
  inline void set_ignore_teaminvite(bool value);

  // optional uint64 offline_tick = 32;
  inline bool has_offline_tick() const;
  inline void clear_offline_tick();
  static const int kOfflineTickFieldNumber = 32;
  inline ::google::protobuf::uint64 offline_tick() const;
  inline void set_offline_tick(::google::protobuf::uint64 value);

  // repeated .proto.message.PointData point_data = 33;
  inline int point_data_size() const;
  inline void clear_point_data();
  static const int kPointDataFieldNumber = 33;
  inline const ::proto::message::PointData& point_data(int index) const;
  inline ::proto::message::PointData* mutable_point_data(int index);
  inline ::proto::message::PointData* add_point_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::PointData >&
      point_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::PointData >*
      mutable_point_data();

  // optional uint32 xpskillenergy = 34;
  inline bool has_xpskillenergy() const;
  inline void clear_xpskillenergy();
  static const int kXpskillenergyFieldNumber = 34;
  inline ::google::protobuf::uint32 xpskillenergy() const;
  inline void set_xpskillenergy(::google::protobuf::uint32 value);

  // optional int32 avatar_id_on = 35;
  inline bool has_avatar_id_on() const;
  inline void clear_avatar_id_on();
  static const int kAvatarIdOnFieldNumber = 35;
  inline ::google::protobuf::int32 avatar_id_on() const;
  inline void set_avatar_id_on(::google::protobuf::int32 value);

  // optional int32 colour_id_on = 36;
  inline bool has_colour_id_on() const;
  inline void clear_colour_id_on();
  static const int kColourIdOnFieldNumber = 36;
  inline ::google::protobuf::int32 colour_id_on() const;
  inline void set_colour_id_on(::google::protobuf::int32 value);

  // repeated .proto.message.Avatar avatar_list = 37;
  inline int avatar_list_size() const;
  inline void clear_avatar_list();
  static const int kAvatarListFieldNumber = 37;
  inline const ::proto::message::Avatar& avatar_list(int index) const;
  inline ::proto::message::Avatar* mutable_avatar_list(int index);
  inline ::proto::message::Avatar* add_avatar_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >&
      avatar_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >*
      mutable_avatar_list();

  // repeated int32 posid_list = 38;
  inline int posid_list_size() const;
  inline void clear_posid_list();
  static const int kPosidListFieldNumber = 38;
  inline ::google::protobuf::int32 posid_list(int index) const;
  inline void set_posid_list(int index, ::google::protobuf::int32 value);
  inline void add_posid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posid_list();

  // optional uint32 offpvpcounts = 39;
  inline bool has_offpvpcounts() const;
  inline void clear_offpvpcounts();
  static const int kOffpvpcountsFieldNumber = 39;
  inline ::google::protobuf::uint32 offpvpcounts() const;
  inline void set_offpvpcounts(::google::protobuf::uint32 value);

  // optional uint32 offpvpbuycounts = 40;
  inline bool has_offpvpbuycounts() const;
  inline void clear_offpvpbuycounts();
  static const int kOffpvpbuycountsFieldNumber = 40;
  inline ::google::protobuf::uint32 offpvpbuycounts() const;
  inline void set_offpvpbuycounts(::google::protobuf::uint32 value);

  // optional uint64 offpvprewordtime = 41;
  inline bool has_offpvprewordtime() const;
  inline void clear_offpvprewordtime();
  static const int kOffpvprewordtimeFieldNumber = 41;
  inline ::google::protobuf::uint64 offpvprewordtime() const;
  inline void set_offpvprewordtime(::google::protobuf::uint64 value);

  // optional int32 awaken_points = 42;
  inline bool has_awaken_points() const;
  inline void clear_awaken_points();
  static const int kAwakenPointsFieldNumber = 42;
  inline ::google::protobuf::int32 awaken_points() const;
  inline void set_awaken_points(::google::protobuf::int32 value);

  // optional int32 soulvalue = 43;
  inline bool has_soulvalue() const;
  inline void clear_soulvalue();
  static const int kSoulvalueFieldNumber = 43;
  inline ::google::protobuf::int32 soulvalue() const;
  inline void set_soulvalue(::google::protobuf::int32 value);

  // optional .proto.message.SuolBoxInfo souldata = 44;
  inline bool has_souldata() const;
  inline void clear_souldata();
  static const int kSouldataFieldNumber = 44;
  inline const ::proto::message::SuolBoxInfo& souldata() const;
  inline ::proto::message::SuolBoxInfo* mutable_souldata();
  inline ::proto::message::SuolBoxInfo* release_souldata();
  inline void set_allocated_souldata(::proto::message::SuolBoxInfo* souldata);

  // optional int32 cur_MultiChivalrous = 45;
  inline bool has_cur_multichivalrous() const;
  inline void clear_cur_multichivalrous();
  static const int kCurMultiChivalrousFieldNumber = 45;
  inline ::google::protobuf::int32 cur_multichivalrous() const;
  inline void set_cur_multichivalrous(::google::protobuf::int32 value);

  // optional int32 cur_EpicChivalrous = 46;
  inline bool has_cur_epicchivalrous() const;
  inline void clear_cur_epicchivalrous();
  static const int kCurEpicChivalrousFieldNumber = 46;
  inline ::google::protobuf::int32 cur_epicchivalrous() const;
  inline void set_cur_epicchivalrous(::google::protobuf::int32 value);

  // optional .proto.message.RecoverList recover_data = 47;
  inline bool has_recover_data() const;
  inline void clear_recover_data();
  static const int kRecoverDataFieldNumber = 47;
  inline const ::proto::message::RecoverList& recover_data() const;
  inline ::proto::message::RecoverList* mutable_recover_data();
  inline ::proto::message::RecoverList* release_recover_data();
  inline void set_allocated_recover_data(::proto::message::RecoverList* recover_data);

  // optional int32 diamondbind = 48;
  inline bool has_diamondbind() const;
  inline void clear_diamondbind();
  static const int kDiamondbindFieldNumber = 48;
  inline ::google::protobuf::int32 diamondbind() const;
  inline void set_diamondbind(::google::protobuf::int32 value);

  // optional uint32 livelyupid = 49;
  inline bool has_livelyupid() const;
  inline void clear_livelyupid();
  static const int kLivelyupidFieldNumber = 49;
  inline ::google::protobuf::uint32 livelyupid() const;
  inline void set_livelyupid(::google::protobuf::uint32 value);

  // optional uint32 liveupexp = 50;
  inline bool has_liveupexp() const;
  inline void clear_liveupexp();
  static const int kLiveupexpFieldNumber = 50;
  inline ::google::protobuf::uint32 liveupexp() const;
  inline void set_liveupexp(::google::protobuf::uint32 value);

  // optional uint32 dayamass = 51;
  inline bool has_dayamass() const;
  inline void clear_dayamass();
  static const int kDayamassFieldNumber = 51;
  inline ::google::protobuf::uint32 dayamass() const;
  inline void set_dayamass(::google::protobuf::uint32 value);

  // optional uint32 honor = 52;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 52;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 offpvprewordid = 53;
  inline bool has_offpvprewordid() const;
  inline void clear_offpvprewordid();
  static const int kOffpvprewordidFieldNumber = 53;
  inline ::google::protobuf::uint32 offpvprewordid() const;
  inline void set_offpvprewordid(::google::protobuf::uint32 value);

  // optional uint32 attackmode = 54;
  inline bool has_attackmode() const;
  inline void clear_attackmode();
  static const int kAttackmodeFieldNumber = 54;
  inline ::google::protobuf::uint32 attackmode() const;
  inline void set_attackmode(::google::protobuf::uint32 value);

  // optional string finishkey = 55;
  inline bool has_finishkey() const;
  inline void clear_finishkey();
  static const int kFinishkeyFieldNumber = 55;
  inline const ::std::string& finishkey() const;
  inline void set_finishkey(const ::std::string& value);
  inline void set_finishkey(const char* value);
  inline void set_finishkey(const char* value, size_t size);
  inline ::std::string* mutable_finishkey();
  inline ::std::string* release_finishkey();
  inline void set_allocated_finishkey(::std::string* finishkey);

  // optional uint32 guidepart = 56;
  inline bool has_guidepart() const;
  inline void clear_guidepart();
  static const int kGuidepartFieldNumber = 56;
  inline ::google::protobuf::uint32 guidepart() const;
  inline void set_guidepart(::google::protobuf::uint32 value);

  // optional uint32 mintage = 57;
  inline bool has_mintage() const;
  inline void clear_mintage();
  static const int kMintageFieldNumber = 57;
  inline ::google::protobuf::uint32 mintage() const;
  inline void set_mintage(::google::protobuf::uint32 value);

  // optional int32 dhbuycounts = 58;
  inline bool has_dhbuycounts() const;
  inline void clear_dhbuycounts();
  static const int kDhbuycountsFieldNumber = 58;
  inline ::google::protobuf::int32 dhbuycounts() const;
  inline void set_dhbuycounts(::google::protobuf::int32 value);

  // repeated uint32 dhdropidlist = 59;
  inline int dhdropidlist_size() const;
  inline void clear_dhdropidlist();
  static const int kDhdropidlistFieldNumber = 59;
  inline ::google::protobuf::uint32 dhdropidlist(int index) const;
  inline void set_dhdropidlist(int index, ::google::protobuf::uint32 value);
  inline void add_dhdropidlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dhdropidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dhdropidlist();

  // optional uint32 dhlev = 60;
  inline bool has_dhlev() const;
  inline void clear_dhlev();
  static const int kDhlevFieldNumber = 60;
  inline ::google::protobuf::uint32 dhlev() const;
  inline void set_dhlev(::google::protobuf::uint32 value);

  // optional int32 dhexp = 61;
  inline bool has_dhexp() const;
  inline void clear_dhexp();
  static const int kDhexpFieldNumber = 61;
  inline ::google::protobuf::int32 dhexp() const;
  inline void set_dhexp(::google::protobuf::int32 value);

  // optional int32 dhcounts = 62;
  inline bool has_dhcounts() const;
  inline void clear_dhcounts();
  static const int kDhcountsFieldNumber = 62;
  inline ::google::protobuf::int32 dhcounts() const;
  inline void set_dhcounts(::google::protobuf::int32 value);

  // optional .proto.message.Potential sPotential = 63;
  inline bool has_spotential() const;
  inline void clear_spotential();
  static const int kSPotentialFieldNumber = 63;
  inline const ::proto::message::Potential& spotential() const;
  inline ::proto::message::Potential* mutable_spotential();
  inline ::proto::message::Potential* release_spotential();
  inline void set_allocated_spotential(::proto::message::Potential* spotential);

  // optional .proto.message.SecretStoreInfo ssinfo = 64;
  inline bool has_ssinfo() const;
  inline void clear_ssinfo();
  static const int kSsinfoFieldNumber = 64;
  inline const ::proto::message::SecretStoreInfo& ssinfo() const;
  inline ::proto::message::SecretStoreInfo* mutable_ssinfo();
  inline ::proto::message::SecretStoreInfo* release_ssinfo();
  inline void set_allocated_ssinfo(::proto::message::SecretStoreInfo* ssinfo);

  // optional uint64 lastofftime = 65;
  inline bool has_lastofftime() const;
  inline void clear_lastofftime();
  static const int kLastofftimeFieldNumber = 65;
  inline ::google::protobuf::uint64 lastofftime() const;
  inline void set_lastofftime(::google::protobuf::uint64 value);

  // optional uint64 accumulateofftime = 66;
  inline bool has_accumulateofftime() const;
  inline void clear_accumulateofftime();
  static const int kAccumulateofftimeFieldNumber = 66;
  inline ::google::protobuf::uint64 accumulateofftime() const;
  inline void set_accumulateofftime(::google::protobuf::uint64 value);

  // optional uint64 ableacotime = 67;
  inline bool has_ableacotime() const;
  inline void clear_ableacotime();
  static const int kAbleacotimeFieldNumber = 67;
  inline ::google::protobuf::uint64 ableacotime() const;
  inline void set_ableacotime(::google::protobuf::uint64 value);

  // optional int32 roulette_score = 68;
  inline bool has_roulette_score() const;
  inline void clear_roulette_score();
  static const int kRouletteScoreFieldNumber = 68;
  inline ::google::protobuf::int32 roulette_score() const;
  inline void set_roulette_score(::google::protobuf::int32 value);

  // optional uint64 offlinetime = 69;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 69;
  inline ::google::protobuf::uint64 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint64 value);

  // repeated uint32 guildbossid = 70;
  inline int guildbossid_size() const;
  inline void clear_guildbossid();
  static const int kGuildbossidFieldNumber = 70;
  inline ::google::protobuf::uint32 guildbossid(int index) const;
  inline void set_guildbossid(int index, ::google::protobuf::uint32 value);
  inline void add_guildbossid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guildbossid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guildbossid();

  // optional uint64 offexpnum = 71;
  inline bool has_offexpnum() const;
  inline void clear_offexpnum();
  static const int kOffexpnumFieldNumber = 71;
  inline ::google::protobuf::uint64 offexpnum() const;
  inline void set_offexpnum(::google::protobuf::uint64 value);

  // optional uint32 friendly = 72;
  inline bool has_friendly() const;
  inline void clear_friendly();
  static const int kFriendlyFieldNumber = 72;
  inline ::google::protobuf::uint32 friendly() const;
  inline void set_friendly(::google::protobuf::uint32 value);

  // optional uint32 dreadcounts = 73;
  inline bool has_dreadcounts() const;
  inline void clear_dreadcounts();
  static const int kDreadcountsFieldNumber = 73;
  inline ::google::protobuf::uint32 dreadcounts() const;
  inline void set_dreadcounts(::google::protobuf::uint32 value);

  // optional .proto.message.MatchType match_type = 74;
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 74;
  inline ::proto::message::MatchType match_type() const;
  inline void set_match_type(::proto::message::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.message.DataInfo)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layerid();
  inline void clear_has_layerid();
  inline void set_has_dungeonid();
  inline void clear_has_dungeonid();
  inline void set_has_recordmapid();
  inline void clear_has_recordmapid();
  inline void set_has_recordlayerid();
  inline void clear_has_recordlayerid();
  inline void set_has_recordpt();
  inline void clear_has_recordpt();
  inline void set_has_recorddir();
  inline void clear_has_recorddir();
  inline void set_has_reset_time_day();
  inline void clear_has_reset_time_day();
  inline void set_has_reset_time_week();
  inline void clear_has_reset_time_week();
  inline void set_has_vigor();
  inline void clear_has_vigor();
  inline void set_has_lucky_value();
  inline void clear_has_lucky_value();
  inline void set_has_idy_points();
  inline void clear_has_idy_points();
  inline void set_has_tal_points();
  inline void clear_has_tal_points();
  inline void set_has_tal_item_times();
  inline void clear_has_tal_item_times();
  inline void set_has_questioncounts();
  inline void clear_has_questioncounts();
  inline void set_has_rightcounts();
  inline void clear_has_rightcounts();
  inline void set_has_rewardstate();
  inline void clear_has_rewardstate();
  inline void set_has_maildata();
  inline void clear_has_maildata();
  inline void set_has_role_create_time();
  inline void clear_has_role_create_time();
  inline void set_has_total_online_sec();
  inline void clear_has_total_online_sec();
  inline void set_has_relive_times();
  inline void clear_has_relive_times();
  inline void set_has_guild_contribution();
  inline void clear_has_guild_contribution();
  inline void set_has_ignore_teaminvite();
  inline void clear_has_ignore_teaminvite();
  inline void set_has_offline_tick();
  inline void clear_has_offline_tick();
  inline void set_has_xpskillenergy();
  inline void clear_has_xpskillenergy();
  inline void set_has_avatar_id_on();
  inline void clear_has_avatar_id_on();
  inline void set_has_colour_id_on();
  inline void clear_has_colour_id_on();
  inline void set_has_offpvpcounts();
  inline void clear_has_offpvpcounts();
  inline void set_has_offpvpbuycounts();
  inline void clear_has_offpvpbuycounts();
  inline void set_has_offpvprewordtime();
  inline void clear_has_offpvprewordtime();
  inline void set_has_awaken_points();
  inline void clear_has_awaken_points();
  inline void set_has_soulvalue();
  inline void clear_has_soulvalue();
  inline void set_has_souldata();
  inline void clear_has_souldata();
  inline void set_has_cur_multichivalrous();
  inline void clear_has_cur_multichivalrous();
  inline void set_has_cur_epicchivalrous();
  inline void clear_has_cur_epicchivalrous();
  inline void set_has_recover_data();
  inline void clear_has_recover_data();
  inline void set_has_diamondbind();
  inline void clear_has_diamondbind();
  inline void set_has_livelyupid();
  inline void clear_has_livelyupid();
  inline void set_has_liveupexp();
  inline void clear_has_liveupexp();
  inline void set_has_dayamass();
  inline void clear_has_dayamass();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_offpvprewordid();
  inline void clear_has_offpvprewordid();
  inline void set_has_attackmode();
  inline void clear_has_attackmode();
  inline void set_has_finishkey();
  inline void clear_has_finishkey();
  inline void set_has_guidepart();
  inline void clear_has_guidepart();
  inline void set_has_mintage();
  inline void clear_has_mintage();
  inline void set_has_dhbuycounts();
  inline void clear_has_dhbuycounts();
  inline void set_has_dhlev();
  inline void clear_has_dhlev();
  inline void set_has_dhexp();
  inline void clear_has_dhexp();
  inline void set_has_dhcounts();
  inline void clear_has_dhcounts();
  inline void set_has_spotential();
  inline void clear_has_spotential();
  inline void set_has_ssinfo();
  inline void clear_has_ssinfo();
  inline void set_has_lastofftime();
  inline void clear_has_lastofftime();
  inline void set_has_accumulateofftime();
  inline void clear_has_accumulateofftime();
  inline void set_has_ableacotime();
  inline void clear_has_ableacotime();
  inline void set_has_roulette_score();
  inline void clear_has_roulette_score();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_offexpnum();
  inline void clear_has_offexpnum();
  inline void set_has_friendly();
  inline void clear_has_friendly();
  inline void set_has_dreadcounts();
  inline void clear_has_dreadcounts();
  inline void set_has_match_type();
  inline void clear_has_match_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::int32 map_id_;
  float dir_;
  ::google::protobuf::int32 layerid_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 recordmapid_;
  ::google::protobuf::int32 recordlayerid_;
  ::proto::message::Point3D* recordpt_;
  float recorddir_;
  ::google::protobuf::int32 reset_time_day_;
  ::google::protobuf::int32 reset_time_week_;
  ::google::protobuf::int32 vigor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > auction_item_list_;
  ::google::protobuf::int32 lucky_value_;
  ::google::protobuf::int32 idy_points_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > attention_item_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Identity > identity_list_;
  ::google::protobuf::int32 tal_points_;
  ::google::protobuf::int32 tal_item_times_;
  ::google::protobuf::uint32 questioncounts_;
  ::google::protobuf::uint32 rightcounts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > open_button_list_;
  ::google::protobuf::uint32 rewardstate_;
  ::google::protobuf::uint32 role_create_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > open_button_reward_;
  ::proto::message::MailBoxData* maildata_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::SupportData > support_data_;
  ::google::protobuf::uint32 total_online_sec_;
  ::google::protobuf::int32 relive_times_;
  ::google::protobuf::uint32 guild_contribution_;
  bool ignore_teaminvite_;
  ::google::protobuf::uint64 offline_tick_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::PointData > point_data_;
  ::google::protobuf::uint32 xpskillenergy_;
  ::google::protobuf::int32 avatar_id_on_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar > avatar_list_;
  ::google::protobuf::int32 colour_id_on_;
  ::google::protobuf::uint32 offpvpcounts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posid_list_;
  ::google::protobuf::uint32 offpvpbuycounts_;
  ::google::protobuf::int32 awaken_points_;
  ::google::protobuf::uint64 offpvprewordtime_;
  ::google::protobuf::int32 soulvalue_;
  ::google::protobuf::int32 cur_multichivalrous_;
  ::proto::message::SuolBoxInfo* souldata_;
  ::google::protobuf::int32 cur_epicchivalrous_;
  ::google::protobuf::int32 diamondbind_;
  ::proto::message::RecoverList* recover_data_;
  ::google::protobuf::uint32 livelyupid_;
  ::google::protobuf::uint32 liveupexp_;
  ::google::protobuf::uint32 dayamass_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 offpvprewordid_;
  ::google::protobuf::uint32 attackmode_;
  ::std::string* finishkey_;
  ::google::protobuf::uint32 guidepart_;
  ::google::protobuf::uint32 mintage_;
  ::google::protobuf::int32 dhbuycounts_;
  ::google::protobuf::uint32 dhlev_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dhdropidlist_;
  ::google::protobuf::int32 dhexp_;
  ::google::protobuf::int32 dhcounts_;
  ::proto::message::Potential* spotential_;
  ::proto::message::SecretStoreInfo* ssinfo_;
  ::google::protobuf::uint64 lastofftime_;
  ::google::protobuf::uint64 accumulateofftime_;
  ::google::protobuf::uint64 ableacotime_;
  ::google::protobuf::uint64 offlinetime_;
  ::google::protobuf::int32 roulette_score_;
  ::google::protobuf::uint32 friendly_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guildbossid_;
  ::google::protobuf::uint64 offexpnum_;
  ::google::protobuf::uint32 dreadcounts_;
  int match_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(74 + 31) / 32];

  friend void  protobuf_AddDesc_db_5fdata_2eproto();
  friend void protobuf_AssignDesc_db_5fdata_2eproto();
  friend void protobuf_ShutdownFile_db_5fdata_2eproto();

  void InitAsDefaultInstance();
  static DataInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// DataInfo

// optional int32 map_id = 1;
inline bool DataInfo::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataInfo::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataInfo::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataInfo::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 DataInfo::map_id() const {
  return map_id_;
}
inline void DataInfo::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional .proto.message.Point3D pt = 2;
inline bool DataInfo::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataInfo::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataInfo::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataInfo::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& DataInfo::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* DataInfo::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* DataInfo::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float dir = 3;
inline bool DataInfo::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataInfo::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataInfo::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataInfo::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float DataInfo::dir() const {
  return dir_;
}
inline void DataInfo::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 layerId = 4;
inline bool DataInfo::has_layerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataInfo::set_has_layerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataInfo::clear_has_layerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataInfo::clear_layerid() {
  layerid_ = 0;
  clear_has_layerid();
}
inline ::google::protobuf::int32 DataInfo::layerid() const {
  return layerid_;
}
inline void DataInfo::set_layerid(::google::protobuf::int32 value) {
  set_has_layerid();
  layerid_ = value;
}

// optional int32 DungeonID = 5;
inline bool DataInfo::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataInfo::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataInfo::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataInfo::clear_dungeonid() {
  dungeonid_ = 0;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 DataInfo::dungeonid() const {
  return dungeonid_;
}
inline void DataInfo::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
}

// optional int32 RecordMapId = 6;
inline bool DataInfo::has_recordmapid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataInfo::set_has_recordmapid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataInfo::clear_has_recordmapid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataInfo::clear_recordmapid() {
  recordmapid_ = 0;
  clear_has_recordmapid();
}
inline ::google::protobuf::int32 DataInfo::recordmapid() const {
  return recordmapid_;
}
inline void DataInfo::set_recordmapid(::google::protobuf::int32 value) {
  set_has_recordmapid();
  recordmapid_ = value;
}

// optional int32 RecordLayerId = 7;
inline bool DataInfo::has_recordlayerid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataInfo::set_has_recordlayerid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataInfo::clear_has_recordlayerid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DataInfo::clear_recordlayerid() {
  recordlayerid_ = 0;
  clear_has_recordlayerid();
}
inline ::google::protobuf::int32 DataInfo::recordlayerid() const {
  return recordlayerid_;
}
inline void DataInfo::set_recordlayerid(::google::protobuf::int32 value) {
  set_has_recordlayerid();
  recordlayerid_ = value;
}

// optional .proto.message.Point3D RecordPt = 8;
inline bool DataInfo::has_recordpt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DataInfo::set_has_recordpt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DataInfo::clear_has_recordpt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DataInfo::clear_recordpt() {
  if (recordpt_ != NULL) recordpt_->::proto::message::Point3D::Clear();
  clear_has_recordpt();
}
inline const ::proto::message::Point3D& DataInfo::recordpt() const {
  return recordpt_ != NULL ? *recordpt_ : *default_instance_->recordpt_;
}
inline ::proto::message::Point3D* DataInfo::mutable_recordpt() {
  set_has_recordpt();
  if (recordpt_ == NULL) recordpt_ = new ::proto::message::Point3D;
  return recordpt_;
}
inline ::proto::message::Point3D* DataInfo::release_recordpt() {
  clear_has_recordpt();
  ::proto::message::Point3D* temp = recordpt_;
  recordpt_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_recordpt(::proto::message::Point3D* recordpt) {
  delete recordpt_;
  recordpt_ = recordpt;
  if (recordpt) {
    set_has_recordpt();
  } else {
    clear_has_recordpt();
  }
}

// optional float RecordDir = 9;
inline bool DataInfo::has_recorddir() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DataInfo::set_has_recorddir() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DataInfo::clear_has_recorddir() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DataInfo::clear_recorddir() {
  recorddir_ = 0;
  clear_has_recorddir();
}
inline float DataInfo::recorddir() const {
  return recorddir_;
}
inline void DataInfo::set_recorddir(float value) {
  set_has_recorddir();
  recorddir_ = value;
}

// optional int32 reset_time_day = 10;
inline bool DataInfo::has_reset_time_day() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DataInfo::set_has_reset_time_day() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DataInfo::clear_has_reset_time_day() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DataInfo::clear_reset_time_day() {
  reset_time_day_ = 0;
  clear_has_reset_time_day();
}
inline ::google::protobuf::int32 DataInfo::reset_time_day() const {
  return reset_time_day_;
}
inline void DataInfo::set_reset_time_day(::google::protobuf::int32 value) {
  set_has_reset_time_day();
  reset_time_day_ = value;
}

// optional int32 reset_time_week = 11;
inline bool DataInfo::has_reset_time_week() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DataInfo::set_has_reset_time_week() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DataInfo::clear_has_reset_time_week() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DataInfo::clear_reset_time_week() {
  reset_time_week_ = 0;
  clear_has_reset_time_week();
}
inline ::google::protobuf::int32 DataInfo::reset_time_week() const {
  return reset_time_week_;
}
inline void DataInfo::set_reset_time_week(::google::protobuf::int32 value) {
  set_has_reset_time_week();
  reset_time_week_ = value;
}

// optional int32 vigor = 12;
inline bool DataInfo::has_vigor() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DataInfo::set_has_vigor() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DataInfo::clear_has_vigor() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DataInfo::clear_vigor() {
  vigor_ = 0;
  clear_has_vigor();
}
inline ::google::protobuf::int32 DataInfo::vigor() const {
  return vigor_;
}
inline void DataInfo::set_vigor(::google::protobuf::int32 value) {
  set_has_vigor();
  vigor_ = value;
}

// optional int32 lucky_value = 13;
inline bool DataInfo::has_lucky_value() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DataInfo::set_has_lucky_value() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DataInfo::clear_has_lucky_value() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DataInfo::clear_lucky_value() {
  lucky_value_ = 0;
  clear_has_lucky_value();
}
inline ::google::protobuf::int32 DataInfo::lucky_value() const {
  return lucky_value_;
}
inline void DataInfo::set_lucky_value(::google::protobuf::int32 value) {
  set_has_lucky_value();
  lucky_value_ = value;
}

// repeated uint64 auction_item_list = 14;
inline int DataInfo::auction_item_list_size() const {
  return auction_item_list_.size();
}
inline void DataInfo::clear_auction_item_list() {
  auction_item_list_.Clear();
}
inline ::google::protobuf::uint64 DataInfo::auction_item_list(int index) const {
  return auction_item_list_.Get(index);
}
inline void DataInfo::set_auction_item_list(int index, ::google::protobuf::uint64 value) {
  auction_item_list_.Set(index, value);
}
inline void DataInfo::add_auction_item_list(::google::protobuf::uint64 value) {
  auction_item_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DataInfo::auction_item_list() const {
  return auction_item_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DataInfo::mutable_auction_item_list() {
  return &auction_item_list_;
}

// repeated uint64 attention_item_list = 15;
inline int DataInfo::attention_item_list_size() const {
  return attention_item_list_.size();
}
inline void DataInfo::clear_attention_item_list() {
  attention_item_list_.Clear();
}
inline ::google::protobuf::uint64 DataInfo::attention_item_list(int index) const {
  return attention_item_list_.Get(index);
}
inline void DataInfo::set_attention_item_list(int index, ::google::protobuf::uint64 value) {
  attention_item_list_.Set(index, value);
}
inline void DataInfo::add_attention_item_list(::google::protobuf::uint64 value) {
  attention_item_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DataInfo::attention_item_list() const {
  return attention_item_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DataInfo::mutable_attention_item_list() {
  return &attention_item_list_;
}

// optional int32 idy_points = 16;
inline bool DataInfo::has_idy_points() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DataInfo::set_has_idy_points() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DataInfo::clear_has_idy_points() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DataInfo::clear_idy_points() {
  idy_points_ = 0;
  clear_has_idy_points();
}
inline ::google::protobuf::int32 DataInfo::idy_points() const {
  return idy_points_;
}
inline void DataInfo::set_idy_points(::google::protobuf::int32 value) {
  set_has_idy_points();
  idy_points_ = value;
}

// repeated .proto.message.Identity identity_list = 17;
inline int DataInfo::identity_list_size() const {
  return identity_list_.size();
}
inline void DataInfo::clear_identity_list() {
  identity_list_.Clear();
}
inline const ::proto::message::Identity& DataInfo::identity_list(int index) const {
  return identity_list_.Get(index);
}
inline ::proto::message::Identity* DataInfo::mutable_identity_list(int index) {
  return identity_list_.Mutable(index);
}
inline ::proto::message::Identity* DataInfo::add_identity_list() {
  return identity_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Identity >&
DataInfo::identity_list() const {
  return identity_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Identity >*
DataInfo::mutable_identity_list() {
  return &identity_list_;
}

// optional int32 tal_points = 18;
inline bool DataInfo::has_tal_points() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DataInfo::set_has_tal_points() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DataInfo::clear_has_tal_points() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DataInfo::clear_tal_points() {
  tal_points_ = 0;
  clear_has_tal_points();
}
inline ::google::protobuf::int32 DataInfo::tal_points() const {
  return tal_points_;
}
inline void DataInfo::set_tal_points(::google::protobuf::int32 value) {
  set_has_tal_points();
  tal_points_ = value;
}

// optional int32 tal_item_times = 19;
inline bool DataInfo::has_tal_item_times() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DataInfo::set_has_tal_item_times() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DataInfo::clear_has_tal_item_times() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DataInfo::clear_tal_item_times() {
  tal_item_times_ = 0;
  clear_has_tal_item_times();
}
inline ::google::protobuf::int32 DataInfo::tal_item_times() const {
  return tal_item_times_;
}
inline void DataInfo::set_tal_item_times(::google::protobuf::int32 value) {
  set_has_tal_item_times();
  tal_item_times_ = value;
}

// optional uint32 questioncounts = 20;
inline bool DataInfo::has_questioncounts() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void DataInfo::set_has_questioncounts() {
  _has_bits_[0] |= 0x00080000u;
}
inline void DataInfo::clear_has_questioncounts() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void DataInfo::clear_questioncounts() {
  questioncounts_ = 0u;
  clear_has_questioncounts();
}
inline ::google::protobuf::uint32 DataInfo::questioncounts() const {
  return questioncounts_;
}
inline void DataInfo::set_questioncounts(::google::protobuf::uint32 value) {
  set_has_questioncounts();
  questioncounts_ = value;
}

// optional uint32 rightcounts = 21;
inline bool DataInfo::has_rightcounts() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void DataInfo::set_has_rightcounts() {
  _has_bits_[0] |= 0x00100000u;
}
inline void DataInfo::clear_has_rightcounts() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void DataInfo::clear_rightcounts() {
  rightcounts_ = 0u;
  clear_has_rightcounts();
}
inline ::google::protobuf::uint32 DataInfo::rightcounts() const {
  return rightcounts_;
}
inline void DataInfo::set_rightcounts(::google::protobuf::uint32 value) {
  set_has_rightcounts();
  rightcounts_ = value;
}

// optional uint32 rewardstate = 22;
inline bool DataInfo::has_rewardstate() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void DataInfo::set_has_rewardstate() {
  _has_bits_[0] |= 0x00200000u;
}
inline void DataInfo::clear_has_rewardstate() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void DataInfo::clear_rewardstate() {
  rewardstate_ = 0u;
  clear_has_rewardstate();
}
inline ::google::protobuf::uint32 DataInfo::rewardstate() const {
  return rewardstate_;
}
inline void DataInfo::set_rewardstate(::google::protobuf::uint32 value) {
  set_has_rewardstate();
  rewardstate_ = value;
}

// repeated int32 open_button_list = 23;
inline int DataInfo::open_button_list_size() const {
  return open_button_list_.size();
}
inline void DataInfo::clear_open_button_list() {
  open_button_list_.Clear();
}
inline ::google::protobuf::int32 DataInfo::open_button_list(int index) const {
  return open_button_list_.Get(index);
}
inline void DataInfo::set_open_button_list(int index, ::google::protobuf::int32 value) {
  open_button_list_.Set(index, value);
}
inline void DataInfo::add_open_button_list(::google::protobuf::int32 value) {
  open_button_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DataInfo::open_button_list() const {
  return open_button_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DataInfo::mutable_open_button_list() {
  return &open_button_list_;
}

// repeated int32 open_button_reward = 24;
inline int DataInfo::open_button_reward_size() const {
  return open_button_reward_.size();
}
inline void DataInfo::clear_open_button_reward() {
  open_button_reward_.Clear();
}
inline ::google::protobuf::int32 DataInfo::open_button_reward(int index) const {
  return open_button_reward_.Get(index);
}
inline void DataInfo::set_open_button_reward(int index, ::google::protobuf::int32 value) {
  open_button_reward_.Set(index, value);
}
inline void DataInfo::add_open_button_reward(::google::protobuf::int32 value) {
  open_button_reward_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DataInfo::open_button_reward() const {
  return open_button_reward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DataInfo::mutable_open_button_reward() {
  return &open_button_reward_;
}

// optional .proto.message.MailBoxData maildata = 25;
inline bool DataInfo::has_maildata() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void DataInfo::set_has_maildata() {
  _has_bits_[0] |= 0x01000000u;
}
inline void DataInfo::clear_has_maildata() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void DataInfo::clear_maildata() {
  if (maildata_ != NULL) maildata_->::proto::message::MailBoxData::Clear();
  clear_has_maildata();
}
inline const ::proto::message::MailBoxData& DataInfo::maildata() const {
  return maildata_ != NULL ? *maildata_ : *default_instance_->maildata_;
}
inline ::proto::message::MailBoxData* DataInfo::mutable_maildata() {
  set_has_maildata();
  if (maildata_ == NULL) maildata_ = new ::proto::message::MailBoxData;
  return maildata_;
}
inline ::proto::message::MailBoxData* DataInfo::release_maildata() {
  clear_has_maildata();
  ::proto::message::MailBoxData* temp = maildata_;
  maildata_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_maildata(::proto::message::MailBoxData* maildata) {
  delete maildata_;
  maildata_ = maildata;
  if (maildata) {
    set_has_maildata();
  } else {
    clear_has_maildata();
  }
}

// optional uint32 role_create_time = 26;
inline bool DataInfo::has_role_create_time() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void DataInfo::set_has_role_create_time() {
  _has_bits_[0] |= 0x02000000u;
}
inline void DataInfo::clear_has_role_create_time() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void DataInfo::clear_role_create_time() {
  role_create_time_ = 0u;
  clear_has_role_create_time();
}
inline ::google::protobuf::uint32 DataInfo::role_create_time() const {
  return role_create_time_;
}
inline void DataInfo::set_role_create_time(::google::protobuf::uint32 value) {
  set_has_role_create_time();
  role_create_time_ = value;
}

// optional uint32 total_online_sec = 27;
inline bool DataInfo::has_total_online_sec() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void DataInfo::set_has_total_online_sec() {
  _has_bits_[0] |= 0x04000000u;
}
inline void DataInfo::clear_has_total_online_sec() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void DataInfo::clear_total_online_sec() {
  total_online_sec_ = 0u;
  clear_has_total_online_sec();
}
inline ::google::protobuf::uint32 DataInfo::total_online_sec() const {
  return total_online_sec_;
}
inline void DataInfo::set_total_online_sec(::google::protobuf::uint32 value) {
  set_has_total_online_sec();
  total_online_sec_ = value;
}

// repeated .proto.message.SupportData support_data = 28;
inline int DataInfo::support_data_size() const {
  return support_data_.size();
}
inline void DataInfo::clear_support_data() {
  support_data_.Clear();
}
inline const ::proto::message::SupportData& DataInfo::support_data(int index) const {
  return support_data_.Get(index);
}
inline ::proto::message::SupportData* DataInfo::mutable_support_data(int index) {
  return support_data_.Mutable(index);
}
inline ::proto::message::SupportData* DataInfo::add_support_data() {
  return support_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SupportData >&
DataInfo::support_data() const {
  return support_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SupportData >*
DataInfo::mutable_support_data() {
  return &support_data_;
}

// optional int32 relive_times = 29;
inline bool DataInfo::has_relive_times() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void DataInfo::set_has_relive_times() {
  _has_bits_[0] |= 0x10000000u;
}
inline void DataInfo::clear_has_relive_times() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void DataInfo::clear_relive_times() {
  relive_times_ = 0;
  clear_has_relive_times();
}
inline ::google::protobuf::int32 DataInfo::relive_times() const {
  return relive_times_;
}
inline void DataInfo::set_relive_times(::google::protobuf::int32 value) {
  set_has_relive_times();
  relive_times_ = value;
}

// optional uint32 guild_contribution = 30;
inline bool DataInfo::has_guild_contribution() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void DataInfo::set_has_guild_contribution() {
  _has_bits_[0] |= 0x20000000u;
}
inline void DataInfo::clear_has_guild_contribution() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void DataInfo::clear_guild_contribution() {
  guild_contribution_ = 0u;
  clear_has_guild_contribution();
}
inline ::google::protobuf::uint32 DataInfo::guild_contribution() const {
  return guild_contribution_;
}
inline void DataInfo::set_guild_contribution(::google::protobuf::uint32 value) {
  set_has_guild_contribution();
  guild_contribution_ = value;
}

// optional bool ignore_teaminvite = 31;
inline bool DataInfo::has_ignore_teaminvite() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void DataInfo::set_has_ignore_teaminvite() {
  _has_bits_[0] |= 0x40000000u;
}
inline void DataInfo::clear_has_ignore_teaminvite() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void DataInfo::clear_ignore_teaminvite() {
  ignore_teaminvite_ = false;
  clear_has_ignore_teaminvite();
}
inline bool DataInfo::ignore_teaminvite() const {
  return ignore_teaminvite_;
}
inline void DataInfo::set_ignore_teaminvite(bool value) {
  set_has_ignore_teaminvite();
  ignore_teaminvite_ = value;
}

// optional uint64 offline_tick = 32;
inline bool DataInfo::has_offline_tick() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void DataInfo::set_has_offline_tick() {
  _has_bits_[0] |= 0x80000000u;
}
inline void DataInfo::clear_has_offline_tick() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void DataInfo::clear_offline_tick() {
  offline_tick_ = GOOGLE_ULONGLONG(0);
  clear_has_offline_tick();
}
inline ::google::protobuf::uint64 DataInfo::offline_tick() const {
  return offline_tick_;
}
inline void DataInfo::set_offline_tick(::google::protobuf::uint64 value) {
  set_has_offline_tick();
  offline_tick_ = value;
}

// repeated .proto.message.PointData point_data = 33;
inline int DataInfo::point_data_size() const {
  return point_data_.size();
}
inline void DataInfo::clear_point_data() {
  point_data_.Clear();
}
inline const ::proto::message::PointData& DataInfo::point_data(int index) const {
  return point_data_.Get(index);
}
inline ::proto::message::PointData* DataInfo::mutable_point_data(int index) {
  return point_data_.Mutable(index);
}
inline ::proto::message::PointData* DataInfo::add_point_data() {
  return point_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::PointData >&
DataInfo::point_data() const {
  return point_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::PointData >*
DataInfo::mutable_point_data() {
  return &point_data_;
}

// optional uint32 xpskillenergy = 34;
inline bool DataInfo::has_xpskillenergy() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void DataInfo::set_has_xpskillenergy() {
  _has_bits_[1] |= 0x00000002u;
}
inline void DataInfo::clear_has_xpskillenergy() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void DataInfo::clear_xpskillenergy() {
  xpskillenergy_ = 0u;
  clear_has_xpskillenergy();
}
inline ::google::protobuf::uint32 DataInfo::xpskillenergy() const {
  return xpskillenergy_;
}
inline void DataInfo::set_xpskillenergy(::google::protobuf::uint32 value) {
  set_has_xpskillenergy();
  xpskillenergy_ = value;
}

// optional int32 avatar_id_on = 35;
inline bool DataInfo::has_avatar_id_on() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void DataInfo::set_has_avatar_id_on() {
  _has_bits_[1] |= 0x00000004u;
}
inline void DataInfo::clear_has_avatar_id_on() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void DataInfo::clear_avatar_id_on() {
  avatar_id_on_ = 0;
  clear_has_avatar_id_on();
}
inline ::google::protobuf::int32 DataInfo::avatar_id_on() const {
  return avatar_id_on_;
}
inline void DataInfo::set_avatar_id_on(::google::protobuf::int32 value) {
  set_has_avatar_id_on();
  avatar_id_on_ = value;
}

// optional int32 colour_id_on = 36;
inline bool DataInfo::has_colour_id_on() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void DataInfo::set_has_colour_id_on() {
  _has_bits_[1] |= 0x00000008u;
}
inline void DataInfo::clear_has_colour_id_on() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void DataInfo::clear_colour_id_on() {
  colour_id_on_ = 0;
  clear_has_colour_id_on();
}
inline ::google::protobuf::int32 DataInfo::colour_id_on() const {
  return colour_id_on_;
}
inline void DataInfo::set_colour_id_on(::google::protobuf::int32 value) {
  set_has_colour_id_on();
  colour_id_on_ = value;
}

// repeated .proto.message.Avatar avatar_list = 37;
inline int DataInfo::avatar_list_size() const {
  return avatar_list_.size();
}
inline void DataInfo::clear_avatar_list() {
  avatar_list_.Clear();
}
inline const ::proto::message::Avatar& DataInfo::avatar_list(int index) const {
  return avatar_list_.Get(index);
}
inline ::proto::message::Avatar* DataInfo::mutable_avatar_list(int index) {
  return avatar_list_.Mutable(index);
}
inline ::proto::message::Avatar* DataInfo::add_avatar_list() {
  return avatar_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >&
DataInfo::avatar_list() const {
  return avatar_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >*
DataInfo::mutable_avatar_list() {
  return &avatar_list_;
}

// repeated int32 posid_list = 38;
inline int DataInfo::posid_list_size() const {
  return posid_list_.size();
}
inline void DataInfo::clear_posid_list() {
  posid_list_.Clear();
}
inline ::google::protobuf::int32 DataInfo::posid_list(int index) const {
  return posid_list_.Get(index);
}
inline void DataInfo::set_posid_list(int index, ::google::protobuf::int32 value) {
  posid_list_.Set(index, value);
}
inline void DataInfo::add_posid_list(::google::protobuf::int32 value) {
  posid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DataInfo::posid_list() const {
  return posid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DataInfo::mutable_posid_list() {
  return &posid_list_;
}

// optional uint32 offpvpcounts = 39;
inline bool DataInfo::has_offpvpcounts() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void DataInfo::set_has_offpvpcounts() {
  _has_bits_[1] |= 0x00000040u;
}
inline void DataInfo::clear_has_offpvpcounts() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void DataInfo::clear_offpvpcounts() {
  offpvpcounts_ = 0u;
  clear_has_offpvpcounts();
}
inline ::google::protobuf::uint32 DataInfo::offpvpcounts() const {
  return offpvpcounts_;
}
inline void DataInfo::set_offpvpcounts(::google::protobuf::uint32 value) {
  set_has_offpvpcounts();
  offpvpcounts_ = value;
}

// optional uint32 offpvpbuycounts = 40;
inline bool DataInfo::has_offpvpbuycounts() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void DataInfo::set_has_offpvpbuycounts() {
  _has_bits_[1] |= 0x00000080u;
}
inline void DataInfo::clear_has_offpvpbuycounts() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void DataInfo::clear_offpvpbuycounts() {
  offpvpbuycounts_ = 0u;
  clear_has_offpvpbuycounts();
}
inline ::google::protobuf::uint32 DataInfo::offpvpbuycounts() const {
  return offpvpbuycounts_;
}
inline void DataInfo::set_offpvpbuycounts(::google::protobuf::uint32 value) {
  set_has_offpvpbuycounts();
  offpvpbuycounts_ = value;
}

// optional uint64 offpvprewordtime = 41;
inline bool DataInfo::has_offpvprewordtime() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void DataInfo::set_has_offpvprewordtime() {
  _has_bits_[1] |= 0x00000100u;
}
inline void DataInfo::clear_has_offpvprewordtime() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void DataInfo::clear_offpvprewordtime() {
  offpvprewordtime_ = GOOGLE_ULONGLONG(0);
  clear_has_offpvprewordtime();
}
inline ::google::protobuf::uint64 DataInfo::offpvprewordtime() const {
  return offpvprewordtime_;
}
inline void DataInfo::set_offpvprewordtime(::google::protobuf::uint64 value) {
  set_has_offpvprewordtime();
  offpvprewordtime_ = value;
}

// optional int32 awaken_points = 42;
inline bool DataInfo::has_awaken_points() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void DataInfo::set_has_awaken_points() {
  _has_bits_[1] |= 0x00000200u;
}
inline void DataInfo::clear_has_awaken_points() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void DataInfo::clear_awaken_points() {
  awaken_points_ = 0;
  clear_has_awaken_points();
}
inline ::google::protobuf::int32 DataInfo::awaken_points() const {
  return awaken_points_;
}
inline void DataInfo::set_awaken_points(::google::protobuf::int32 value) {
  set_has_awaken_points();
  awaken_points_ = value;
}

// optional int32 soulvalue = 43;
inline bool DataInfo::has_soulvalue() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void DataInfo::set_has_soulvalue() {
  _has_bits_[1] |= 0x00000400u;
}
inline void DataInfo::clear_has_soulvalue() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void DataInfo::clear_soulvalue() {
  soulvalue_ = 0;
  clear_has_soulvalue();
}
inline ::google::protobuf::int32 DataInfo::soulvalue() const {
  return soulvalue_;
}
inline void DataInfo::set_soulvalue(::google::protobuf::int32 value) {
  set_has_soulvalue();
  soulvalue_ = value;
}

// optional .proto.message.SuolBoxInfo souldata = 44;
inline bool DataInfo::has_souldata() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void DataInfo::set_has_souldata() {
  _has_bits_[1] |= 0x00000800u;
}
inline void DataInfo::clear_has_souldata() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void DataInfo::clear_souldata() {
  if (souldata_ != NULL) souldata_->::proto::message::SuolBoxInfo::Clear();
  clear_has_souldata();
}
inline const ::proto::message::SuolBoxInfo& DataInfo::souldata() const {
  return souldata_ != NULL ? *souldata_ : *default_instance_->souldata_;
}
inline ::proto::message::SuolBoxInfo* DataInfo::mutable_souldata() {
  set_has_souldata();
  if (souldata_ == NULL) souldata_ = new ::proto::message::SuolBoxInfo;
  return souldata_;
}
inline ::proto::message::SuolBoxInfo* DataInfo::release_souldata() {
  clear_has_souldata();
  ::proto::message::SuolBoxInfo* temp = souldata_;
  souldata_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_souldata(::proto::message::SuolBoxInfo* souldata) {
  delete souldata_;
  souldata_ = souldata;
  if (souldata) {
    set_has_souldata();
  } else {
    clear_has_souldata();
  }
}

// optional int32 cur_MultiChivalrous = 45;
inline bool DataInfo::has_cur_multichivalrous() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void DataInfo::set_has_cur_multichivalrous() {
  _has_bits_[1] |= 0x00001000u;
}
inline void DataInfo::clear_has_cur_multichivalrous() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void DataInfo::clear_cur_multichivalrous() {
  cur_multichivalrous_ = 0;
  clear_has_cur_multichivalrous();
}
inline ::google::protobuf::int32 DataInfo::cur_multichivalrous() const {
  return cur_multichivalrous_;
}
inline void DataInfo::set_cur_multichivalrous(::google::protobuf::int32 value) {
  set_has_cur_multichivalrous();
  cur_multichivalrous_ = value;
}

// optional int32 cur_EpicChivalrous = 46;
inline bool DataInfo::has_cur_epicchivalrous() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void DataInfo::set_has_cur_epicchivalrous() {
  _has_bits_[1] |= 0x00002000u;
}
inline void DataInfo::clear_has_cur_epicchivalrous() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void DataInfo::clear_cur_epicchivalrous() {
  cur_epicchivalrous_ = 0;
  clear_has_cur_epicchivalrous();
}
inline ::google::protobuf::int32 DataInfo::cur_epicchivalrous() const {
  return cur_epicchivalrous_;
}
inline void DataInfo::set_cur_epicchivalrous(::google::protobuf::int32 value) {
  set_has_cur_epicchivalrous();
  cur_epicchivalrous_ = value;
}

// optional .proto.message.RecoverList recover_data = 47;
inline bool DataInfo::has_recover_data() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void DataInfo::set_has_recover_data() {
  _has_bits_[1] |= 0x00004000u;
}
inline void DataInfo::clear_has_recover_data() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void DataInfo::clear_recover_data() {
  if (recover_data_ != NULL) recover_data_->::proto::message::RecoverList::Clear();
  clear_has_recover_data();
}
inline const ::proto::message::RecoverList& DataInfo::recover_data() const {
  return recover_data_ != NULL ? *recover_data_ : *default_instance_->recover_data_;
}
inline ::proto::message::RecoverList* DataInfo::mutable_recover_data() {
  set_has_recover_data();
  if (recover_data_ == NULL) recover_data_ = new ::proto::message::RecoverList;
  return recover_data_;
}
inline ::proto::message::RecoverList* DataInfo::release_recover_data() {
  clear_has_recover_data();
  ::proto::message::RecoverList* temp = recover_data_;
  recover_data_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_recover_data(::proto::message::RecoverList* recover_data) {
  delete recover_data_;
  recover_data_ = recover_data;
  if (recover_data) {
    set_has_recover_data();
  } else {
    clear_has_recover_data();
  }
}

// optional int32 diamondbind = 48;
inline bool DataInfo::has_diamondbind() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void DataInfo::set_has_diamondbind() {
  _has_bits_[1] |= 0x00008000u;
}
inline void DataInfo::clear_has_diamondbind() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void DataInfo::clear_diamondbind() {
  diamondbind_ = 0;
  clear_has_diamondbind();
}
inline ::google::protobuf::int32 DataInfo::diamondbind() const {
  return diamondbind_;
}
inline void DataInfo::set_diamondbind(::google::protobuf::int32 value) {
  set_has_diamondbind();
  diamondbind_ = value;
}

// optional uint32 livelyupid = 49;
inline bool DataInfo::has_livelyupid() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void DataInfo::set_has_livelyupid() {
  _has_bits_[1] |= 0x00010000u;
}
inline void DataInfo::clear_has_livelyupid() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void DataInfo::clear_livelyupid() {
  livelyupid_ = 0u;
  clear_has_livelyupid();
}
inline ::google::protobuf::uint32 DataInfo::livelyupid() const {
  return livelyupid_;
}
inline void DataInfo::set_livelyupid(::google::protobuf::uint32 value) {
  set_has_livelyupid();
  livelyupid_ = value;
}

// optional uint32 liveupexp = 50;
inline bool DataInfo::has_liveupexp() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void DataInfo::set_has_liveupexp() {
  _has_bits_[1] |= 0x00020000u;
}
inline void DataInfo::clear_has_liveupexp() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void DataInfo::clear_liveupexp() {
  liveupexp_ = 0u;
  clear_has_liveupexp();
}
inline ::google::protobuf::uint32 DataInfo::liveupexp() const {
  return liveupexp_;
}
inline void DataInfo::set_liveupexp(::google::protobuf::uint32 value) {
  set_has_liveupexp();
  liveupexp_ = value;
}

// optional uint32 dayamass = 51;
inline bool DataInfo::has_dayamass() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void DataInfo::set_has_dayamass() {
  _has_bits_[1] |= 0x00040000u;
}
inline void DataInfo::clear_has_dayamass() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void DataInfo::clear_dayamass() {
  dayamass_ = 0u;
  clear_has_dayamass();
}
inline ::google::protobuf::uint32 DataInfo::dayamass() const {
  return dayamass_;
}
inline void DataInfo::set_dayamass(::google::protobuf::uint32 value) {
  set_has_dayamass();
  dayamass_ = value;
}

// optional uint32 honor = 52;
inline bool DataInfo::has_honor() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void DataInfo::set_has_honor() {
  _has_bits_[1] |= 0x00080000u;
}
inline void DataInfo::clear_has_honor() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void DataInfo::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 DataInfo::honor() const {
  return honor_;
}
inline void DataInfo::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
}

// optional uint32 offpvprewordid = 53;
inline bool DataInfo::has_offpvprewordid() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void DataInfo::set_has_offpvprewordid() {
  _has_bits_[1] |= 0x00100000u;
}
inline void DataInfo::clear_has_offpvprewordid() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void DataInfo::clear_offpvprewordid() {
  offpvprewordid_ = 0u;
  clear_has_offpvprewordid();
}
inline ::google::protobuf::uint32 DataInfo::offpvprewordid() const {
  return offpvprewordid_;
}
inline void DataInfo::set_offpvprewordid(::google::protobuf::uint32 value) {
  set_has_offpvprewordid();
  offpvprewordid_ = value;
}

// optional uint32 attackmode = 54;
inline bool DataInfo::has_attackmode() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void DataInfo::set_has_attackmode() {
  _has_bits_[1] |= 0x00200000u;
}
inline void DataInfo::clear_has_attackmode() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void DataInfo::clear_attackmode() {
  attackmode_ = 0u;
  clear_has_attackmode();
}
inline ::google::protobuf::uint32 DataInfo::attackmode() const {
  return attackmode_;
}
inline void DataInfo::set_attackmode(::google::protobuf::uint32 value) {
  set_has_attackmode();
  attackmode_ = value;
}

// optional string finishkey = 55;
inline bool DataInfo::has_finishkey() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void DataInfo::set_has_finishkey() {
  _has_bits_[1] |= 0x00400000u;
}
inline void DataInfo::clear_has_finishkey() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void DataInfo::clear_finishkey() {
  if (finishkey_ != &::google::protobuf::internal::kEmptyString) {
    finishkey_->clear();
  }
  clear_has_finishkey();
}
inline const ::std::string& DataInfo::finishkey() const {
  return *finishkey_;
}
inline void DataInfo::set_finishkey(const ::std::string& value) {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  finishkey_->assign(value);
}
inline void DataInfo::set_finishkey(const char* value) {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  finishkey_->assign(value);
}
inline void DataInfo::set_finishkey(const char* value, size_t size) {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  finishkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_finishkey() {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  return finishkey_;
}
inline ::std::string* DataInfo::release_finishkey() {
  clear_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = finishkey_;
    finishkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_finishkey(::std::string* finishkey) {
  if (finishkey_ != &::google::protobuf::internal::kEmptyString) {
    delete finishkey_;
  }
  if (finishkey) {
    set_has_finishkey();
    finishkey_ = finishkey;
  } else {
    clear_has_finishkey();
    finishkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 guidepart = 56;
inline bool DataInfo::has_guidepart() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void DataInfo::set_has_guidepart() {
  _has_bits_[1] |= 0x00800000u;
}
inline void DataInfo::clear_has_guidepart() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void DataInfo::clear_guidepart() {
  guidepart_ = 0u;
  clear_has_guidepart();
}
inline ::google::protobuf::uint32 DataInfo::guidepart() const {
  return guidepart_;
}
inline void DataInfo::set_guidepart(::google::protobuf::uint32 value) {
  set_has_guidepart();
  guidepart_ = value;
}

// optional uint32 mintage = 57;
inline bool DataInfo::has_mintage() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void DataInfo::set_has_mintage() {
  _has_bits_[1] |= 0x01000000u;
}
inline void DataInfo::clear_has_mintage() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void DataInfo::clear_mintage() {
  mintage_ = 0u;
  clear_has_mintage();
}
inline ::google::protobuf::uint32 DataInfo::mintage() const {
  return mintage_;
}
inline void DataInfo::set_mintage(::google::protobuf::uint32 value) {
  set_has_mintage();
  mintage_ = value;
}

// optional int32 dhbuycounts = 58;
inline bool DataInfo::has_dhbuycounts() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void DataInfo::set_has_dhbuycounts() {
  _has_bits_[1] |= 0x02000000u;
}
inline void DataInfo::clear_has_dhbuycounts() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void DataInfo::clear_dhbuycounts() {
  dhbuycounts_ = 0;
  clear_has_dhbuycounts();
}
inline ::google::protobuf::int32 DataInfo::dhbuycounts() const {
  return dhbuycounts_;
}
inline void DataInfo::set_dhbuycounts(::google::protobuf::int32 value) {
  set_has_dhbuycounts();
  dhbuycounts_ = value;
}

// repeated uint32 dhdropidlist = 59;
inline int DataInfo::dhdropidlist_size() const {
  return dhdropidlist_.size();
}
inline void DataInfo::clear_dhdropidlist() {
  dhdropidlist_.Clear();
}
inline ::google::protobuf::uint32 DataInfo::dhdropidlist(int index) const {
  return dhdropidlist_.Get(index);
}
inline void DataInfo::set_dhdropidlist(int index, ::google::protobuf::uint32 value) {
  dhdropidlist_.Set(index, value);
}
inline void DataInfo::add_dhdropidlist(::google::protobuf::uint32 value) {
  dhdropidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DataInfo::dhdropidlist() const {
  return dhdropidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DataInfo::mutable_dhdropidlist() {
  return &dhdropidlist_;
}

// optional uint32 dhlev = 60;
inline bool DataInfo::has_dhlev() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void DataInfo::set_has_dhlev() {
  _has_bits_[1] |= 0x08000000u;
}
inline void DataInfo::clear_has_dhlev() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void DataInfo::clear_dhlev() {
  dhlev_ = 0u;
  clear_has_dhlev();
}
inline ::google::protobuf::uint32 DataInfo::dhlev() const {
  return dhlev_;
}
inline void DataInfo::set_dhlev(::google::protobuf::uint32 value) {
  set_has_dhlev();
  dhlev_ = value;
}

// optional int32 dhexp = 61;
inline bool DataInfo::has_dhexp() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void DataInfo::set_has_dhexp() {
  _has_bits_[1] |= 0x10000000u;
}
inline void DataInfo::clear_has_dhexp() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void DataInfo::clear_dhexp() {
  dhexp_ = 0;
  clear_has_dhexp();
}
inline ::google::protobuf::int32 DataInfo::dhexp() const {
  return dhexp_;
}
inline void DataInfo::set_dhexp(::google::protobuf::int32 value) {
  set_has_dhexp();
  dhexp_ = value;
}

// optional int32 dhcounts = 62;
inline bool DataInfo::has_dhcounts() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void DataInfo::set_has_dhcounts() {
  _has_bits_[1] |= 0x20000000u;
}
inline void DataInfo::clear_has_dhcounts() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void DataInfo::clear_dhcounts() {
  dhcounts_ = 0;
  clear_has_dhcounts();
}
inline ::google::protobuf::int32 DataInfo::dhcounts() const {
  return dhcounts_;
}
inline void DataInfo::set_dhcounts(::google::protobuf::int32 value) {
  set_has_dhcounts();
  dhcounts_ = value;
}

// optional .proto.message.Potential sPotential = 63;
inline bool DataInfo::has_spotential() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void DataInfo::set_has_spotential() {
  _has_bits_[1] |= 0x40000000u;
}
inline void DataInfo::clear_has_spotential() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void DataInfo::clear_spotential() {
  if (spotential_ != NULL) spotential_->::proto::message::Potential::Clear();
  clear_has_spotential();
}
inline const ::proto::message::Potential& DataInfo::spotential() const {
  return spotential_ != NULL ? *spotential_ : *default_instance_->spotential_;
}
inline ::proto::message::Potential* DataInfo::mutable_spotential() {
  set_has_spotential();
  if (spotential_ == NULL) spotential_ = new ::proto::message::Potential;
  return spotential_;
}
inline ::proto::message::Potential* DataInfo::release_spotential() {
  clear_has_spotential();
  ::proto::message::Potential* temp = spotential_;
  spotential_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_spotential(::proto::message::Potential* spotential) {
  delete spotential_;
  spotential_ = spotential;
  if (spotential) {
    set_has_spotential();
  } else {
    clear_has_spotential();
  }
}

// optional .proto.message.SecretStoreInfo ssinfo = 64;
inline bool DataInfo::has_ssinfo() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void DataInfo::set_has_ssinfo() {
  _has_bits_[1] |= 0x80000000u;
}
inline void DataInfo::clear_has_ssinfo() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void DataInfo::clear_ssinfo() {
  if (ssinfo_ != NULL) ssinfo_->::proto::message::SecretStoreInfo::Clear();
  clear_has_ssinfo();
}
inline const ::proto::message::SecretStoreInfo& DataInfo::ssinfo() const {
  return ssinfo_ != NULL ? *ssinfo_ : *default_instance_->ssinfo_;
}
inline ::proto::message::SecretStoreInfo* DataInfo::mutable_ssinfo() {
  set_has_ssinfo();
  if (ssinfo_ == NULL) ssinfo_ = new ::proto::message::SecretStoreInfo;
  return ssinfo_;
}
inline ::proto::message::SecretStoreInfo* DataInfo::release_ssinfo() {
  clear_has_ssinfo();
  ::proto::message::SecretStoreInfo* temp = ssinfo_;
  ssinfo_ = NULL;
  return temp;
}
inline void DataInfo::set_allocated_ssinfo(::proto::message::SecretStoreInfo* ssinfo) {
  delete ssinfo_;
  ssinfo_ = ssinfo;
  if (ssinfo) {
    set_has_ssinfo();
  } else {
    clear_has_ssinfo();
  }
}

// optional uint64 lastofftime = 65;
inline bool DataInfo::has_lastofftime() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void DataInfo::set_has_lastofftime() {
  _has_bits_[2] |= 0x00000001u;
}
inline void DataInfo::clear_has_lastofftime() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void DataInfo::clear_lastofftime() {
  lastofftime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastofftime();
}
inline ::google::protobuf::uint64 DataInfo::lastofftime() const {
  return lastofftime_;
}
inline void DataInfo::set_lastofftime(::google::protobuf::uint64 value) {
  set_has_lastofftime();
  lastofftime_ = value;
}

// optional uint64 accumulateofftime = 66;
inline bool DataInfo::has_accumulateofftime() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void DataInfo::set_has_accumulateofftime() {
  _has_bits_[2] |= 0x00000002u;
}
inline void DataInfo::clear_has_accumulateofftime() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void DataInfo::clear_accumulateofftime() {
  accumulateofftime_ = GOOGLE_ULONGLONG(0);
  clear_has_accumulateofftime();
}
inline ::google::protobuf::uint64 DataInfo::accumulateofftime() const {
  return accumulateofftime_;
}
inline void DataInfo::set_accumulateofftime(::google::protobuf::uint64 value) {
  set_has_accumulateofftime();
  accumulateofftime_ = value;
}

// optional uint64 ableacotime = 67;
inline bool DataInfo::has_ableacotime() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void DataInfo::set_has_ableacotime() {
  _has_bits_[2] |= 0x00000004u;
}
inline void DataInfo::clear_has_ableacotime() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void DataInfo::clear_ableacotime() {
  ableacotime_ = GOOGLE_ULONGLONG(0);
  clear_has_ableacotime();
}
inline ::google::protobuf::uint64 DataInfo::ableacotime() const {
  return ableacotime_;
}
inline void DataInfo::set_ableacotime(::google::protobuf::uint64 value) {
  set_has_ableacotime();
  ableacotime_ = value;
}

// optional int32 roulette_score = 68;
inline bool DataInfo::has_roulette_score() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void DataInfo::set_has_roulette_score() {
  _has_bits_[2] |= 0x00000008u;
}
inline void DataInfo::clear_has_roulette_score() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void DataInfo::clear_roulette_score() {
  roulette_score_ = 0;
  clear_has_roulette_score();
}
inline ::google::protobuf::int32 DataInfo::roulette_score() const {
  return roulette_score_;
}
inline void DataInfo::set_roulette_score(::google::protobuf::int32 value) {
  set_has_roulette_score();
  roulette_score_ = value;
}

// optional uint64 offlinetime = 69;
inline bool DataInfo::has_offlinetime() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void DataInfo::set_has_offlinetime() {
  _has_bits_[2] |= 0x00000010u;
}
inline void DataInfo::clear_has_offlinetime() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void DataInfo::clear_offlinetime() {
  offlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_offlinetime();
}
inline ::google::protobuf::uint64 DataInfo::offlinetime() const {
  return offlinetime_;
}
inline void DataInfo::set_offlinetime(::google::protobuf::uint64 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// repeated uint32 guildbossid = 70;
inline int DataInfo::guildbossid_size() const {
  return guildbossid_.size();
}
inline void DataInfo::clear_guildbossid() {
  guildbossid_.Clear();
}
inline ::google::protobuf::uint32 DataInfo::guildbossid(int index) const {
  return guildbossid_.Get(index);
}
inline void DataInfo::set_guildbossid(int index, ::google::protobuf::uint32 value) {
  guildbossid_.Set(index, value);
}
inline void DataInfo::add_guildbossid(::google::protobuf::uint32 value) {
  guildbossid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DataInfo::guildbossid() const {
  return guildbossid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DataInfo::mutable_guildbossid() {
  return &guildbossid_;
}

// optional uint64 offexpnum = 71;
inline bool DataInfo::has_offexpnum() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
inline void DataInfo::set_has_offexpnum() {
  _has_bits_[2] |= 0x00000040u;
}
inline void DataInfo::clear_has_offexpnum() {
  _has_bits_[2] &= ~0x00000040u;
}
inline void DataInfo::clear_offexpnum() {
  offexpnum_ = GOOGLE_ULONGLONG(0);
  clear_has_offexpnum();
}
inline ::google::protobuf::uint64 DataInfo::offexpnum() const {
  return offexpnum_;
}
inline void DataInfo::set_offexpnum(::google::protobuf::uint64 value) {
  set_has_offexpnum();
  offexpnum_ = value;
}

// optional uint32 friendly = 72;
inline bool DataInfo::has_friendly() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
inline void DataInfo::set_has_friendly() {
  _has_bits_[2] |= 0x00000080u;
}
inline void DataInfo::clear_has_friendly() {
  _has_bits_[2] &= ~0x00000080u;
}
inline void DataInfo::clear_friendly() {
  friendly_ = 0u;
  clear_has_friendly();
}
inline ::google::protobuf::uint32 DataInfo::friendly() const {
  return friendly_;
}
inline void DataInfo::set_friendly(::google::protobuf::uint32 value) {
  set_has_friendly();
  friendly_ = value;
}

// optional uint32 dreadcounts = 73;
inline bool DataInfo::has_dreadcounts() const {
  return (_has_bits_[2] & 0x00000100u) != 0;
}
inline void DataInfo::set_has_dreadcounts() {
  _has_bits_[2] |= 0x00000100u;
}
inline void DataInfo::clear_has_dreadcounts() {
  _has_bits_[2] &= ~0x00000100u;
}
inline void DataInfo::clear_dreadcounts() {
  dreadcounts_ = 0u;
  clear_has_dreadcounts();
}
inline ::google::protobuf::uint32 DataInfo::dreadcounts() const {
  return dreadcounts_;
}
inline void DataInfo::set_dreadcounts(::google::protobuf::uint32 value) {
  set_has_dreadcounts();
  dreadcounts_ = value;
}

// optional .proto.message.MatchType match_type = 74;
inline bool DataInfo::has_match_type() const {
  return (_has_bits_[2] & 0x00000200u) != 0;
}
inline void DataInfo::set_has_match_type() {
  _has_bits_[2] |= 0x00000200u;
}
inline void DataInfo::clear_has_match_type() {
  _has_bits_[2] &= ~0x00000200u;
}
inline void DataInfo::clear_match_type() {
  match_type_ = 0;
  clear_has_match_type();
}
inline ::proto::message::MatchType DataInfo::match_type() const {
  return static_cast< ::proto::message::MatchType >(match_type_);
}
inline void DataInfo::set_match_type(::proto::message::MatchType value) {
  assert(::proto::message::MatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::MatchType>() {
  return ::proto::message::MatchType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_5fdata_2eproto__INCLUDED
