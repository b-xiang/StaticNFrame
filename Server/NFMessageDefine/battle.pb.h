// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle.proto

#ifndef PROTOBUF_battle_2eproto__INCLUDED
#define PROTOBUF_battle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "item.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_battle_2eproto();
void protobuf_AssignDesc_battle_2eproto();
void protobuf_ShutdownFile_battle_2eproto();

class SyncBattleObjAtt;
class Battle2Match_ServerInfo;
class Game2Battle_EnterScene;
class Game2Battle_ChangeMap;
class Game2Battle_ChangeTttle;
class Game2Battle_ChangeAwaken;
class Game2Battle_ChangePet;
class Game2Battle_UpdateMyCombat;
class Game2Battle_ChangeAvatar;
class Game2Battle_ChangeRide;
class Game2Battle_BornMercenary;
class Game2Battle_UpdateMercenaryScript;
class Game2Battle_UpdateRideScript;
class Game2Battle_UpdateAwakenScript;
class Battle2Game_SaveMercenaryHp;
class Battle2Game_UpdatePlayerStatus;
class Game2Battle_ChangeEquip;
class Game2Battle_FollowLeader;
class Game2Battle_ChangeMapPendingBranch;
class Battle2Client_ChangePet;
class Battle2Client_ChangeRide;
class Battle2Client_ChangeAwaken;
class Battle2Client_ChangeAvatar;
class Battle2Client_ChangeSuit;
class Battle2Client_ReconnectUnDoTrigger;
class Game2Battle_UpdatePlayerValue;
class Battle2Game_EnterScene;
class Battle2Client_EnterScene;
class Client2Battle_ClientLoadOK;
class Client2Battle_SyncMove;
class Client2Battle_GetMapBranch;
class Client2Battle_ChangeBranch;
class Battle2Client_SyncPlayerAppear;
class Battle2Client_SyncObjDisappear;
class OwnerInfo;
class Battle2Client_SyncMonsterAppear;
class mercenarySkillCD;
class Battle2Client_SyncMercenaryAppear;
class Battle2Client_SyncMove;
class Client2Battle_SpeelBegin;
class Client2Battle_SpeelEnd;
class Battle2Client_SpeelBegin;
class SceneBranchInfo;
class Battle2Client_GetMapBranch;
class Battle2Client_ChangeBranch;
class Client2Battle_ChangeMap;
class Client2Battle_SummonMercenary;
class Battle2Client_CheckPosition;
class Battle2Client_MonsterStopMove;
class Battle2Client_TriggerEvent;
class Battle2Client_TriggerServerTips;
class Battle2Client_ChangeTttle;
class Battle2Client_ChangeEquip;
class Battle2Client_ClientLoadOK;
class Client2Battle__TriggerEvent;
class Battle2Game_AddDropItem;
class Battle2Game_DungeonResult;
class GameToBattle_PlayerDisconnect;
class Battle2Game_SyncMove;
class Battle2Game_UpdateQuest;
class Battle2Game_TriggerQuest;
class Battle2Game_MonsterDie;
class Battle2Game_LeaveDungeon;
class Battle2Game_ChangeMapForceAwakenOff;
class Battle2Game_DieToChangeAwakenAndRide;
class Battle2Game_SceneLoadOk;
class Battle2Game_MercenaryDieInfo;
class Game2Battle_CheckTrigger;
class Game2Battle_AddQuestTrigger;
class Game2Battle_UpdateTask;
class Game2Battle_QuestNPCAddBuff;
class Client2Battle_GameStoryStart;
class Client2Battle_GameStoryEnd;
class Client2Battle_NPCStopAI;
class Client2Battle_NPCActiveAI;
class Battle2Game_DungeonLoadOk;
class Client2Battle_WolrdBossDorp_ItemList;
class Client2Battle_WorldBoss_HurtRankList;
class Battle2Client_WolrdBoss_HurtRankList;
class WolrdBossSaleItem;
class Battle2Client_WolrdBoss_DorpItemList;
class Battle2Client_WolrdBoss_SaleBid;
class Battle2Client_WolrdBoss_SaleResult;
class Battle2Game_WolrdBoss_SaleResult;
class Battle2Game_SendMail;
class Battle2Game_WolrdBoss_HpChange;
class Battle2Client_WolrdBoss_HpChange;
class Game2Battle_AddCurHp;
class Game2Battle_AddBuff;
class Client2Battle_WorldBoss_SaledItem;
class Battle2Client_WorldBoss_SaledItem;
class Battle2Client_SyncDropItemAppear;
class Battle2Client_TicketBoss_DropItem;
class Battle2Client_SyncDropItemChange;
class Client2Battle_Ping;
class Battle2Client_Ping;
class Game2Battle_CreateMonster;
class Client2Battle_ChangeAttackMode;
class Client2Battle_Transfer;
class Battle2Client_Anchor;
class Battle2Client_UpdateHeadInfo;
class Battle2Client_UpdateMercenaryRank;
class Battle2Client_TriggerRadius;
class Battle2Client_ScenePlayerNum;
class Battle2Client_GradeDataChanged;
class Battle2Client_SyncMonsterOnwer;
class Battle2Client_SafeAreaStatus;
class Battle2Client_ServerMove;
class Battle2Client_PlayerDie;
class Battle2Client_MonsterCountChanged;
class Battle2Client_AckTBPlayerInfo;
class Battle2Client_SyncSceneObjDisappear;
class Battle2Client_SyncSceneObjAppear;

enum Battle2Client_GradeDataType {
  Dungeon_Grade_Data_Time = 0,
  Dungeon_Grade_Data_Hurt = 1,
  Dungeon_Grade_Data_Hp = 2,
  Dungeon_Grade_Data_Npc_Hp = 3,
  Dungeon_Grade_Data_Death = 4
};
bool Battle2Client_GradeDataType_IsValid(int value);
const Battle2Client_GradeDataType Battle2Client_GradeDataType_MIN = Dungeon_Grade_Data_Time;
const Battle2Client_GradeDataType Battle2Client_GradeDataType_MAX = Dungeon_Grade_Data_Death;
const int Battle2Client_GradeDataType_ARRAYSIZE = Battle2Client_GradeDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Battle2Client_GradeDataType_descriptor();
inline const ::std::string& Battle2Client_GradeDataType_Name(Battle2Client_GradeDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Battle2Client_GradeDataType_descriptor(), value);
}
inline bool Battle2Client_GradeDataType_Parse(
    const ::std::string& name, Battle2Client_GradeDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Battle2Client_GradeDataType>(
    Battle2Client_GradeDataType_descriptor(), name, value);
}
// ===================================================================

class SyncBattleObjAtt : public ::google::protobuf::Message {
 public:
  SyncBattleObjAtt();
  virtual ~SyncBattleObjAtt();

  SyncBattleObjAtt(const SyncBattleObjAtt& from);

  inline SyncBattleObjAtt& operator=(const SyncBattleObjAtt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncBattleObjAtt& default_instance();

  void Swap(SyncBattleObjAtt* other);

  // implements Message ----------------------------------------------

  SyncBattleObjAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncBattleObjAtt& from);
  void MergeFrom(const SyncBattleObjAtt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 objid = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjidFieldNumber = 1;
  inline ::google::protobuf::uint32 objid() const;
  inline void set_objid(::google::protobuf::uint32 value);

  // repeated uint32 atttype = 2;
  inline int atttype_size() const;
  inline void clear_atttype();
  static const int kAtttypeFieldNumber = 2;
  inline ::google::protobuf::uint32 atttype(int index) const;
  inline void set_atttype(int index, ::google::protobuf::uint32 value);
  inline void add_atttype(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      atttype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_atttype();

  // repeated uint64 attvalue = 3;
  inline int attvalue_size() const;
  inline void clear_attvalue();
  static const int kAttvalueFieldNumber = 3;
  inline ::google::protobuf::uint64 attvalue(int index) const;
  inline void set_attvalue(int index, ::google::protobuf::uint64 value);
  inline void add_attvalue(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      attvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_attvalue();

  // @@protoc_insertion_point(class_scope:proto.message.SyncBattleObjAtt)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > atttype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > attvalue_;
  ::google::protobuf::uint32 objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static SyncBattleObjAtt* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Match_ServerInfo : public ::google::protobuf::Message {
 public:
  Battle2Match_ServerInfo();
  virtual ~Battle2Match_ServerInfo();

  Battle2Match_ServerInfo(const Battle2Match_ServerInfo& from);

  inline Battle2Match_ServerInfo& operator=(const Battle2Match_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Match_ServerInfo& default_instance();

  void Swap(Battle2Match_ServerInfo* other);

  // implements Message ----------------------------------------------

  Battle2Match_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Match_ServerInfo& from);
  void MergeFrom(const Battle2Match_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szIp = 1;
  inline bool has_szip() const;
  inline void clear_szip();
  static const int kSzIpFieldNumber = 1;
  inline const ::std::string& szip() const;
  inline void set_szip(const ::std::string& value);
  inline void set_szip(const char* value);
  inline void set_szip(const char* value, size_t size);
  inline ::std::string* mutable_szip();
  inline ::std::string* release_szip();
  inline void set_allocated_szip(::std::string* szip);

  // required uint32 uiPort = 2;
  inline bool has_uiport() const;
  inline void clear_uiport();
  static const int kUiPortFieldNumber = 2;
  inline ::google::protobuf::uint32 uiport() const;
  inline void set_uiport(::google::protobuf::uint32 value);

  // repeated uint32 uiMapId = 3;
  inline int uimapid_size() const;
  inline void clear_uimapid();
  static const int kUiMapIdFieldNumber = 3;
  inline ::google::protobuf::uint32 uimapid(int index) const;
  inline void set_uimapid(int index, ::google::protobuf::uint32 value);
  inline void add_uimapid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uimapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uimapid();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Match_ServerInfo)
 private:
  inline void set_has_szip();
  inline void clear_has_szip();
  inline void set_has_uiport();
  inline void clear_has_uiport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* szip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uimapid_;
  ::google::protobuf::uint32 uiport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Match_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_EnterScene : public ::google::protobuf::Message {
 public:
  Game2Battle_EnterScene();
  virtual ~Game2Battle_EnterScene();

  Game2Battle_EnterScene(const Game2Battle_EnterScene& from);

  inline Game2Battle_EnterScene& operator=(const Game2Battle_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_EnterScene& default_instance();

  void Swap(Game2Battle_EnterScene* other);

  // implements Message ----------------------------------------------

  Game2Battle_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_EnterScene& from);
  void MergeFrom(const Game2Battle_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // required int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // required .proto.message.BattlePlayerInfo sPlyInfo = 5;
  inline bool has_splyinfo() const;
  inline void clear_splyinfo();
  static const int kSPlyInfoFieldNumber = 5;
  inline const ::proto::message::BattlePlayerInfo& splyinfo() const;
  inline ::proto::message::BattlePlayerInfo* mutable_splyinfo();
  inline ::proto::message::BattlePlayerInfo* release_splyinfo();
  inline void set_allocated_splyinfo(::proto::message::BattlePlayerInfo* splyinfo);

  // optional .proto.message.BattleBoatInfo sBoatInfo = 6;
  inline bool has_sboatinfo() const;
  inline void clear_sboatinfo();
  static const int kSBoatInfoFieldNumber = 6;
  inline const ::proto::message::BattleBoatInfo& sboatinfo() const;
  inline ::proto::message::BattleBoatInfo* mutable_sboatinfo();
  inline ::proto::message::BattleBoatInfo* release_sboatinfo();
  inline void set_allocated_sboatinfo(::proto::message::BattleBoatInfo* sboatinfo);

  // optional int32 combat = 7;
  inline bool has_combat() const;
  inline void clear_combat();
  static const int kCombatFieldNumber = 7;
  inline ::google::protobuf::int32 combat() const;
  inline void set_combat(::google::protobuf::int32 value);

  // optional .proto.message.TBFieldInfo tbinfo = 8;
  inline bool has_tbinfo() const;
  inline void clear_tbinfo();
  static const int kTbinfoFieldNumber = 8;
  inline const ::proto::message::TBFieldInfo& tbinfo() const;
  inline ::proto::message::TBFieldInfo* mutable_tbinfo();
  inline ::proto::message::TBFieldInfo* release_tbinfo();
  inline void set_allocated_tbinfo(::proto::message::TBFieldInfo* tbinfo);

  // optional bool isbackline = 9;
  inline bool has_isbackline() const;
  inline void clear_isbackline();
  static const int kIsbacklineFieldNumber = 9;
  inline bool isbackline() const;
  inline void set_isbackline(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_EnterScene)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_splyinfo();
  inline void clear_has_splyinfo();
  inline void set_has_sboatinfo();
  inline void clear_has_sboatinfo();
  inline void set_has_combat();
  inline void clear_has_combat();
  inline void set_has_tbinfo();
  inline void clear_has_tbinfo();
  inline void set_has_isbackline();
  inline void clear_has_isbackline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::int32 mapid_;
  float dir_;
  ::proto::message::BattlePlayerInfo* splyinfo_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 combat_;
  ::proto::message::BattleBoatInfo* sboatinfo_;
  ::proto::message::TBFieldInfo* tbinfo_;
  bool isbackline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeMap : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeMap();
  virtual ~Game2Battle_ChangeMap();

  Game2Battle_ChangeMap(const Game2Battle_ChangeMap& from);

  inline Game2Battle_ChangeMap& operator=(const Game2Battle_ChangeMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeMap& default_instance();

  void Swap(Game2Battle_ChangeMap* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeMap& from);
  void MergeFrom(const Game2Battle_ChangeMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // required int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeMap)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::int32 mapid_;
  float dir_;
  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeMap* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeTttle : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeTttle();
  virtual ~Game2Battle_ChangeTttle();

  Game2Battle_ChangeTttle(const Game2Battle_ChangeTttle& from);

  inline Game2Battle_ChangeTttle& operator=(const Game2Battle_ChangeTttle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeTttle& default_instance();

  void Swap(Game2Battle_ChangeTttle* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeTttle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeTttle& from);
  void MergeFrom(const Game2Battle_ChangeTttle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required int32 titleID = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 2;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // optional string titlename = 3;
  inline bool has_titlename() const;
  inline void clear_titlename();
  static const int kTitlenameFieldNumber = 3;
  inline const ::std::string& titlename() const;
  inline void set_titlename(const ::std::string& value);
  inline void set_titlename(const char* value);
  inline void set_titlename(const char* value, size_t size);
  inline ::std::string* mutable_titlename();
  inline ::std::string* release_titlename();
  inline void set_allocated_titlename(::std::string* titlename);

  // optional int32 ishide = 4;
  inline bool has_ishide() const;
  inline void clear_ishide();
  static const int kIshideFieldNumber = 4;
  inline ::google::protobuf::int32 ishide() const;
  inline void set_ishide(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeTttle)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_titlename();
  inline void clear_has_titlename();
  inline void set_has_ishide();
  inline void clear_has_ishide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::int32 titleid_;
  ::std::string* titlename_;
  ::google::protobuf::int32 ishide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeTttle* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeAwaken : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeAwaken();
  virtual ~Game2Battle_ChangeAwaken();

  Game2Battle_ChangeAwaken(const Game2Battle_ChangeAwaken& from);

  inline Game2Battle_ChangeAwaken& operator=(const Game2Battle_ChangeAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeAwaken& default_instance();

  void Swap(Game2Battle_ChangeAwaken* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeAwaken& from);
  void MergeFrom(const Game2Battle_ChangeAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required int32 awakenID = 2;
  inline bool has_awakenid() const;
  inline void clear_awakenid();
  static const int kAwakenIDFieldNumber = 2;
  inline ::google::protobuf::int32 awakenid() const;
  inline void set_awakenid(::google::protobuf::int32 value);

  // required bool status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline bool status() const;
  inline void set_status(bool value);

  // required bool isDead = 4;
  inline bool has_isdead() const;
  inline void clear_isdead();
  static const int kIsDeadFieldNumber = 4;
  inline bool isdead() const;
  inline void set_isdead(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeAwaken)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_awakenid();
  inline void clear_has_awakenid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_isdead();
  inline void clear_has_isdead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::int32 awakenid_;
  bool status_;
  bool isdead_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeAwaken* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangePet : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangePet();
  virtual ~Game2Battle_ChangePet();

  Game2Battle_ChangePet(const Game2Battle_ChangePet& from);

  inline Game2Battle_ChangePet& operator=(const Game2Battle_ChangePet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangePet& default_instance();

  void Swap(Game2Battle_ChangePet* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangePet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangePet& from);
  void MergeFrom(const Game2Battle_ChangePet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required int32 petID = 2;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetIDFieldNumber = 2;
  inline ::google::protobuf::int32 petid() const;
  inline void set_petid(::google::protobuf::int32 value);

  // optional int32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangePet)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::int32 petid_;
  ::google::protobuf::int32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangePet* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_UpdateMyCombat : public ::google::protobuf::Message {
 public:
  Game2Battle_UpdateMyCombat();
  virtual ~Game2Battle_UpdateMyCombat();

  Game2Battle_UpdateMyCombat(const Game2Battle_UpdateMyCombat& from);

  inline Game2Battle_UpdateMyCombat& operator=(const Game2Battle_UpdateMyCombat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_UpdateMyCombat& default_instance();

  void Swap(Game2Battle_UpdateMyCombat* other);

  // implements Message ----------------------------------------------

  Game2Battle_UpdateMyCombat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_UpdateMyCombat& from);
  void MergeFrom(const Game2Battle_UpdateMyCombat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 combat = 1;
  inline bool has_combat() const;
  inline void clear_combat();
  static const int kCombatFieldNumber = 1;
  inline ::google::protobuf::uint32 combat() const;
  inline void set_combat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_UpdateMyCombat)
 private:
  inline void set_has_combat();
  inline void clear_has_combat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 combat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_UpdateMyCombat* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeAvatar : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeAvatar();
  virtual ~Game2Battle_ChangeAvatar();

  Game2Battle_ChangeAvatar(const Game2Battle_ChangeAvatar& from);

  inline Game2Battle_ChangeAvatar& operator=(const Game2Battle_ChangeAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeAvatar& default_instance();

  void Swap(Game2Battle_ChangeAvatar* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeAvatar& from);
  void MergeFrom(const Game2Battle_ChangeAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required int32 avatarID = 2;
  inline bool has_avatarid() const;
  inline void clear_avatarid();
  static const int kAvatarIDFieldNumber = 2;
  inline ::google::protobuf::int32 avatarid() const;
  inline void set_avatarid(::google::protobuf::int32 value);

  // required int32 colorID = 3;
  inline bool has_colorid() const;
  inline void clear_colorid();
  static const int kColorIDFieldNumber = 3;
  inline ::google::protobuf::int32 colorid() const;
  inline void set_colorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeAvatar)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_avatarid();
  inline void clear_has_avatarid();
  inline void set_has_colorid();
  inline void clear_has_colorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::int32 avatarid_;
  ::google::protobuf::int32 colorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeRide : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeRide();
  virtual ~Game2Battle_ChangeRide();

  Game2Battle_ChangeRide(const Game2Battle_ChangeRide& from);

  inline Game2Battle_ChangeRide& operator=(const Game2Battle_ChangeRide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeRide& default_instance();

  void Swap(Game2Battle_ChangeRide* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeRide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeRide& from);
  void MergeFrom(const Game2Battle_ChangeRide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required int32 RideID = 2;
  inline bool has_rideid() const;
  inline void clear_rideid();
  static const int kRideIDFieldNumber = 2;
  inline ::google::protobuf::int32 rideid() const;
  inline void set_rideid(::google::protobuf::int32 value);

  // required bool status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline bool status() const;
  inline void set_status(bool value);

  // required bool isDead = 4;
  inline bool has_isdead() const;
  inline void clear_isdead();
  static const int kIsDeadFieldNumber = 4;
  inline bool isdead() const;
  inline void set_isdead(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeRide)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_rideid();
  inline void clear_has_rideid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_isdead();
  inline void clear_has_isdead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::int32 rideid_;
  bool status_;
  bool isdead_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeRide* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_BornMercenary : public ::google::protobuf::Message {
 public:
  Game2Battle_BornMercenary();
  virtual ~Game2Battle_BornMercenary();

  Game2Battle_BornMercenary(const Game2Battle_BornMercenary& from);

  inline Game2Battle_BornMercenary& operator=(const Game2Battle_BornMercenary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_BornMercenary& default_instance();

  void Swap(Game2Battle_BornMercenary* other);

  // implements Message ----------------------------------------------

  Game2Battle_BornMercenary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_BornMercenary& from);
  void MergeFrom(const Game2Battle_BornMercenary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // optional uint32 hpper = 2;
  inline bool has_hpper() const;
  inline void clear_hpper();
  static const int kHpperFieldNumber = 2;
  inline ::google::protobuf::uint32 hpper() const;
  inline void set_hpper(::google::protobuf::uint32 value);

  // optional uint32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::uint32 ranking() const;
  inline void set_ranking(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_BornMercenary)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_hpper();
  inline void clear_has_hpper();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 hpper_;
  ::google::protobuf::uint32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_BornMercenary* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_UpdateMercenaryScript : public ::google::protobuf::Message {
 public:
  Game2Battle_UpdateMercenaryScript();
  virtual ~Game2Battle_UpdateMercenaryScript();

  Game2Battle_UpdateMercenaryScript(const Game2Battle_UpdateMercenaryScript& from);

  inline Game2Battle_UpdateMercenaryScript& operator=(const Game2Battle_UpdateMercenaryScript& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_UpdateMercenaryScript& default_instance();

  void Swap(Game2Battle_UpdateMercenaryScript* other);

  // implements Message ----------------------------------------------

  Game2Battle_UpdateMercenaryScript* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_UpdateMercenaryScript& from);
  void MergeFrom(const Game2Battle_UpdateMercenaryScript& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 script = 1;
  inline int script_size() const;
  inline void clear_script();
  static const int kScriptFieldNumber = 1;
  inline ::google::protobuf::uint32 script(int index) const;
  inline void set_script(int index, ::google::protobuf::uint32 value);
  inline void add_script(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      script() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_script();

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_UpdateMercenaryScript)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > script_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_UpdateMercenaryScript* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_UpdateRideScript : public ::google::protobuf::Message {
 public:
  Game2Battle_UpdateRideScript();
  virtual ~Game2Battle_UpdateRideScript();

  Game2Battle_UpdateRideScript(const Game2Battle_UpdateRideScript& from);

  inline Game2Battle_UpdateRideScript& operator=(const Game2Battle_UpdateRideScript& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_UpdateRideScript& default_instance();

  void Swap(Game2Battle_UpdateRideScript* other);

  // implements Message ----------------------------------------------

  Game2Battle_UpdateRideScript* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_UpdateRideScript& from);
  void MergeFrom(const Game2Battle_UpdateRideScript& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 script = 1;
  inline int script_size() const;
  inline void clear_script();
  static const int kScriptFieldNumber = 1;
  inline ::google::protobuf::uint32 script(int index) const;
  inline void set_script(int index, ::google::protobuf::uint32 value);
  inline void add_script(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      script() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_script();

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_UpdateRideScript)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > script_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_UpdateRideScript* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_UpdateAwakenScript : public ::google::protobuf::Message {
 public:
  Game2Battle_UpdateAwakenScript();
  virtual ~Game2Battle_UpdateAwakenScript();

  Game2Battle_UpdateAwakenScript(const Game2Battle_UpdateAwakenScript& from);

  inline Game2Battle_UpdateAwakenScript& operator=(const Game2Battle_UpdateAwakenScript& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_UpdateAwakenScript& default_instance();

  void Swap(Game2Battle_UpdateAwakenScript* other);

  // implements Message ----------------------------------------------

  Game2Battle_UpdateAwakenScript* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_UpdateAwakenScript& from);
  void MergeFrom(const Game2Battle_UpdateAwakenScript& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 script = 1;
  inline int script_size() const;
  inline void clear_script();
  static const int kScriptFieldNumber = 1;
  inline ::google::protobuf::uint32 script(int index) const;
  inline void set_script(int index, ::google::protobuf::uint32 value);
  inline void add_script(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      script() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_script();

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_UpdateAwakenScript)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > script_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_UpdateAwakenScript* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_SaveMercenaryHp : public ::google::protobuf::Message {
 public:
  Battle2Game_SaveMercenaryHp();
  virtual ~Battle2Game_SaveMercenaryHp();

  Battle2Game_SaveMercenaryHp(const Battle2Game_SaveMercenaryHp& from);

  inline Battle2Game_SaveMercenaryHp& operator=(const Battle2Game_SaveMercenaryHp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_SaveMercenaryHp& default_instance();

  void Swap(Battle2Game_SaveMercenaryHp* other);

  // implements Message ----------------------------------------------

  Battle2Game_SaveMercenaryHp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_SaveMercenaryHp& from);
  void MergeFrom(const Battle2Game_SaveMercenaryHp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // optional uint32 hpper = 2;
  inline bool has_hpper() const;
  inline void clear_hpper();
  static const int kHpperFieldNumber = 2;
  inline ::google::protobuf::uint32 hpper() const;
  inline void set_hpper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_SaveMercenaryHp)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_hpper();
  inline void clear_has_hpper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 hpper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_SaveMercenaryHp* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_UpdatePlayerStatus : public ::google::protobuf::Message {
 public:
  Battle2Game_UpdatePlayerStatus();
  virtual ~Battle2Game_UpdatePlayerStatus();

  Battle2Game_UpdatePlayerStatus(const Battle2Game_UpdatePlayerStatus& from);

  inline Battle2Game_UpdatePlayerStatus& operator=(const Battle2Game_UpdatePlayerStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_UpdatePlayerStatus& default_instance();

  void Swap(Battle2Game_UpdatePlayerStatus* other);

  // implements Message ----------------------------------------------

  Battle2Game_UpdatePlayerStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_UpdatePlayerStatus& from);
  void MergeFrom(const Battle2Game_UpdatePlayerStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint64 status() const;
  inline void set_status(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_UpdatePlayerStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_UpdatePlayerStatus* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeEquip : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeEquip();
  virtual ~Game2Battle_ChangeEquip();

  Game2Battle_ChangeEquip(const Game2Battle_ChangeEquip& from);

  inline Game2Battle_ChangeEquip& operator=(const Game2Battle_ChangeEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeEquip& default_instance();

  void Swap(Game2Battle_ChangeEquip* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeEquip& from);
  void MergeFrom(const Game2Battle_ChangeEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // repeated .proto.message.Equip equip_list = 2;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 2;
  inline const ::proto::message::Equip& equip_list(int index) const;
  inline ::proto::message::Equip* mutable_equip_list(int index);
  inline ::proto::message::Equip* add_equip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      equip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_equip_list();

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeEquip)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > equip_list_;
  ::google::protobuf::uint32 nid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeEquip* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_FollowLeader : public ::google::protobuf::Message {
 public:
  Game2Battle_FollowLeader();
  virtual ~Game2Battle_FollowLeader();

  Game2Battle_FollowLeader(const Game2Battle_FollowLeader& from);

  inline Game2Battle_FollowLeader& operator=(const Game2Battle_FollowLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_FollowLeader& default_instance();

  void Swap(Game2Battle_FollowLeader* other);

  // implements Message ----------------------------------------------

  Game2Battle_FollowLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_FollowLeader& from);
  void MergeFrom(const Game2Battle_FollowLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint64 nid() const;
  inline void set_nid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_FollowLeader)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_FollowLeader* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_ChangeMapPendingBranch : public ::google::protobuf::Message {
 public:
  Game2Battle_ChangeMapPendingBranch();
  virtual ~Game2Battle_ChangeMapPendingBranch();

  Game2Battle_ChangeMapPendingBranch(const Game2Battle_ChangeMapPendingBranch& from);

  inline Game2Battle_ChangeMapPendingBranch& operator=(const Game2Battle_ChangeMapPendingBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_ChangeMapPendingBranch& default_instance();

  void Swap(Game2Battle_ChangeMapPendingBranch* other);

  // implements Message ----------------------------------------------

  Game2Battle_ChangeMapPendingBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_ChangeMapPendingBranch& from);
  void MergeFrom(const Game2Battle_ChangeMapPendingBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint64 nid() const;
  inline void set_nid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_ChangeMapPendingBranch)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_ChangeMapPendingBranch* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangePet : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangePet();
  virtual ~Battle2Client_ChangePet();

  Battle2Client_ChangePet(const Battle2Client_ChangePet& from);

  inline Battle2Client_ChangePet& operator=(const Battle2Client_ChangePet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangePet& default_instance();

  void Swap(Battle2Client_ChangePet* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangePet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangePet& from);
  void MergeFrom(const Battle2Client_ChangePet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required uint32 petid = 2;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 2;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional int32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangePet)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 petid_;
  ::google::protobuf::int32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangePet* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeRide : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeRide();
  virtual ~Battle2Client_ChangeRide();

  Battle2Client_ChangeRide(const Battle2Client_ChangeRide& from);

  inline Battle2Client_ChangeRide& operator=(const Battle2Client_ChangeRide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeRide& default_instance();

  void Swap(Battle2Client_ChangeRide* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeRide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeRide& from);
  void MergeFrom(const Battle2Client_ChangeRide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required uint32 rideid = 2;
  inline bool has_rideid() const;
  inline void clear_rideid();
  static const int kRideidFieldNumber = 2;
  inline ::google::protobuf::uint32 rideid() const;
  inline void set_rideid(::google::protobuf::uint32 value);

  // required bool status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeRide)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_rideid();
  inline void clear_has_rideid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 rideid_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeRide* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeAwaken : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeAwaken();
  virtual ~Battle2Client_ChangeAwaken();

  Battle2Client_ChangeAwaken(const Battle2Client_ChangeAwaken& from);

  inline Battle2Client_ChangeAwaken& operator=(const Battle2Client_ChangeAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeAwaken& default_instance();

  void Swap(Battle2Client_ChangeAwaken* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeAwaken& from);
  void MergeFrom(const Battle2Client_ChangeAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required uint32 awakenid = 2;
  inline bool has_awakenid() const;
  inline void clear_awakenid();
  static const int kAwakenidFieldNumber = 2;
  inline ::google::protobuf::uint32 awakenid() const;
  inline void set_awakenid(::google::protobuf::uint32 value);

  // required bool status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeAwaken)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_awakenid();
  inline void clear_has_awakenid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 awakenid_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeAwaken* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeAvatar : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeAvatar();
  virtual ~Battle2Client_ChangeAvatar();

  Battle2Client_ChangeAvatar(const Battle2Client_ChangeAvatar& from);

  inline Battle2Client_ChangeAvatar& operator=(const Battle2Client_ChangeAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeAvatar& default_instance();

  void Swap(Battle2Client_ChangeAvatar* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeAvatar& from);
  void MergeFrom(const Battle2Client_ChangeAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required uint32 avatarid = 2;
  inline bool has_avatarid() const;
  inline void clear_avatarid();
  static const int kAvataridFieldNumber = 2;
  inline ::google::protobuf::uint32 avatarid() const;
  inline void set_avatarid(::google::protobuf::uint32 value);

  // required uint32 colorid = 3;
  inline bool has_colorid() const;
  inline void clear_colorid();
  static const int kColoridFieldNumber = 3;
  inline ::google::protobuf::uint32 colorid() const;
  inline void set_colorid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeAvatar)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_avatarid();
  inline void clear_has_avatarid();
  inline void set_has_colorid();
  inline void clear_has_colorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 avatarid_;
  ::google::protobuf::uint32 colorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeSuit : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeSuit();
  virtual ~Battle2Client_ChangeSuit();

  Battle2Client_ChangeSuit(const Battle2Client_ChangeSuit& from);

  inline Battle2Client_ChangeSuit& operator=(const Battle2Client_ChangeSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeSuit& default_instance();

  void Swap(Battle2Client_ChangeSuit* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeSuit& from);
  void MergeFrom(const Battle2Client_ChangeSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required uint32 suitid = 2;
  inline bool has_suitid() const;
  inline void clear_suitid();
  static const int kSuitidFieldNumber = 2;
  inline ::google::protobuf::uint32 suitid() const;
  inline void set_suitid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeSuit)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_suitid();
  inline void clear_has_suitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 suitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeSuit* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ReconnectUnDoTrigger : public ::google::protobuf::Message {
 public:
  Battle2Client_ReconnectUnDoTrigger();
  virtual ~Battle2Client_ReconnectUnDoTrigger();

  Battle2Client_ReconnectUnDoTrigger(const Battle2Client_ReconnectUnDoTrigger& from);

  inline Battle2Client_ReconnectUnDoTrigger& operator=(const Battle2Client_ReconnectUnDoTrigger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ReconnectUnDoTrigger& default_instance();

  void Swap(Battle2Client_ReconnectUnDoTrigger* other);

  // implements Message ----------------------------------------------

  Battle2Client_ReconnectUnDoTrigger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ReconnectUnDoTrigger& from);
  void MergeFrom(const Battle2Client_ReconnectUnDoTrigger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 triggerid = 1;
  inline int triggerid_size() const;
  inline void clear_triggerid();
  static const int kTriggeridFieldNumber = 1;
  inline ::google::protobuf::int32 triggerid(int index) const;
  inline void set_triggerid(int index, ::google::protobuf::int32 value);
  inline void add_triggerid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      triggerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_triggerid();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ReconnectUnDoTrigger)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > triggerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ReconnectUnDoTrigger* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_UpdatePlayerValue : public ::google::protobuf::Message {
 public:
  Game2Battle_UpdatePlayerValue();
  virtual ~Game2Battle_UpdatePlayerValue();

  Game2Battle_UpdatePlayerValue(const Game2Battle_UpdatePlayerValue& from);

  inline Game2Battle_UpdatePlayerValue& operator=(const Game2Battle_UpdatePlayerValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_UpdatePlayerValue& default_instance();

  void Swap(Game2Battle_UpdatePlayerValue* other);

  // implements Message ----------------------------------------------

  Game2Battle_UpdatePlayerValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_UpdatePlayerValue& from);
  void MergeFrom(const Game2Battle_UpdatePlayerValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional int32 iValue = 2;
  inline bool has_ivalue() const;
  inline void clear_ivalue();
  static const int kIValueFieldNumber = 2;
  inline ::google::protobuf::int32 ivalue() const;
  inline void set_ivalue(::google::protobuf::int32 value);

  // optional int64 llValue = 3;
  inline bool has_llvalue() const;
  inline void clear_llvalue();
  static const int kLlValueFieldNumber = 3;
  inline ::google::protobuf::int64 llvalue() const;
  inline void set_llvalue(::google::protobuf::int64 value);

  // optional string szValue = 4;
  inline bool has_szvalue() const;
  inline void clear_szvalue();
  static const int kSzValueFieldNumber = 4;
  inline const ::std::string& szvalue() const;
  inline void set_szvalue(const ::std::string& value);
  inline void set_szvalue(const char* value);
  inline void set_szvalue(const char* value, size_t size);
  inline ::std::string* mutable_szvalue();
  inline ::std::string* release_szvalue();
  inline void set_allocated_szvalue(::std::string* szvalue);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_UpdatePlayerValue)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ivalue();
  inline void clear_has_ivalue();
  inline void set_has_llvalue();
  inline void clear_has_llvalue();
  inline void set_has_szvalue();
  inline void clear_has_szvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 ivalue_;
  ::google::protobuf::int64 llvalue_;
  ::std::string* szvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_UpdatePlayerValue* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_EnterScene : public ::google::protobuf::Message {
 public:
  Battle2Game_EnterScene();
  virtual ~Battle2Game_EnterScene();

  Battle2Game_EnterScene(const Battle2Game_EnterScene& from);

  inline Battle2Game_EnterScene& operator=(const Battle2Game_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_EnterScene& default_instance();

  void Swap(Battle2Game_EnterScene* other);

  // implements Message ----------------------------------------------

  Battle2Game_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_EnterScene& from);
  void MergeFrom(const Battle2Game_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // required int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 6;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 6;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_EnterScene)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::int32 mapid_;
  float dir_;
  ::std::string* ip_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_EnterScene : public ::google::protobuf::Message {
 public:
  Battle2Client_EnterScene();
  virtual ~Battle2Client_EnterScene();

  Battle2Client_EnterScene(const Battle2Client_EnterScene& from);

  inline Battle2Client_EnterScene& operator=(const Battle2Client_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_EnterScene& default_instance();

  void Swap(Battle2Client_EnterScene* other);

  // implements Message ----------------------------------------------

  Battle2Client_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_EnterScene& from);
  void MergeFrom(const Battle2Client_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // required int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_EnterScene)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::int32 mapid_;
  float dir_;
  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_ClientLoadOK : public ::google::protobuf::Message {
 public:
  Client2Battle_ClientLoadOK();
  virtual ~Client2Battle_ClientLoadOK();

  Client2Battle_ClientLoadOK(const Client2Battle_ClientLoadOK& from);

  inline Client2Battle_ClientLoadOK& operator=(const Client2Battle_ClientLoadOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_ClientLoadOK& default_instance();

  void Swap(Client2Battle_ClientLoadOK* other);

  // implements Message ----------------------------------------------

  Client2Battle_ClientLoadOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_ClientLoadOK& from);
  void MergeFrom(const Client2Battle_ClientLoadOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // optional uint32 dungeon_assign_id = 2;
  inline bool has_dungeon_assign_id() const;
  inline void clear_dungeon_assign_id();
  static const int kDungeonAssignIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dungeon_assign_id() const;
  inline void set_dungeon_assign_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_ClientLoadOK)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_dungeon_assign_id();
  inline void clear_has_dungeon_assign_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint32 dungeon_assign_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_ClientLoadOK* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_SyncMove : public ::google::protobuf::Message {
 public:
  Client2Battle_SyncMove();
  virtual ~Client2Battle_SyncMove();

  Client2Battle_SyncMove(const Client2Battle_SyncMove& from);

  inline Client2Battle_SyncMove& operator=(const Client2Battle_SyncMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_SyncMove& default_instance();

  void Swap(Client2Battle_SyncMove* other);

  // implements Message ----------------------------------------------

  Client2Battle_SyncMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_SyncMove& from);
  void MergeFrom(const Client2Battle_SyncMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.Point3D pt = 1;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 1;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 arrival = 3;
  inline bool has_arrival() const;
  inline void clear_arrival();
  static const int kArrivalFieldNumber = 3;
  inline ::google::protobuf::int32 arrival() const;
  inline void set_arrival(::google::protobuf::int32 value);

  // optional int32 objType = 4;
  inline bool has_objtype() const;
  inline void clear_objtype();
  static const int kObjTypeFieldNumber = 4;
  inline ::google::protobuf::int32 objtype() const;
  inline void set_objtype(::google::protobuf::int32 value);

  // optional float speed = 5;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 5;
  inline float speed() const;
  inline void set_speed(float value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_SyncMove)
 private:
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_arrival();
  inline void clear_has_arrival();
  inline void set_has_objtype();
  inline void clear_has_objtype();
  inline void set_has_speed();
  inline void clear_has_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  float dir_;
  ::google::protobuf::int32 arrival_;
  ::google::protobuf::int32 objtype_;
  float speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_SyncMove* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_GetMapBranch : public ::google::protobuf::Message {
 public:
  Client2Battle_GetMapBranch();
  virtual ~Client2Battle_GetMapBranch();

  Client2Battle_GetMapBranch(const Client2Battle_GetMapBranch& from);

  inline Client2Battle_GetMapBranch& operator=(const Client2Battle_GetMapBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_GetMapBranch& default_instance();

  void Swap(Client2Battle_GetMapBranch* other);

  // implements Message ----------------------------------------------

  Client2Battle_GetMapBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_GetMapBranch& from);
  void MergeFrom(const Client2Battle_GetMapBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_GetMapBranch)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_GetMapBranch* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_ChangeBranch : public ::google::protobuf::Message {
 public:
  Client2Battle_ChangeBranch();
  virtual ~Client2Battle_ChangeBranch();

  Client2Battle_ChangeBranch(const Client2Battle_ChangeBranch& from);

  inline Client2Battle_ChangeBranch& operator=(const Client2Battle_ChangeBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_ChangeBranch& default_instance();

  void Swap(Client2Battle_ChangeBranch* other);

  // implements Message ----------------------------------------------

  Client2Battle_ChangeBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_ChangeBranch& from);
  void MergeFrom(const Client2Battle_ChangeBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 BranchId = 1;
  inline bool has_branchid() const;
  inline void clear_branchid();
  static const int kBranchIdFieldNumber = 1;
  inline ::google::protobuf::int32 branchid() const;
  inline void set_branchid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_ChangeBranch)
 private:
  inline void set_has_branchid();
  inline void clear_has_branchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 branchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_ChangeBranch* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncPlayerAppear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncPlayerAppear();
  virtual ~Battle2Client_SyncPlayerAppear();

  Battle2Client_SyncPlayerAppear(const Battle2Client_SyncPlayerAppear& from);

  inline Battle2Client_SyncPlayerAppear& operator=(const Battle2Client_SyncPlayerAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncPlayerAppear& default_instance();

  void Swap(Battle2Client_SyncPlayerAppear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncPlayerAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncPlayerAppear& from);
  void MergeFrom(const Battle2Client_SyncPlayerAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // required uint32 uiType = 2;
  inline bool has_uitype() const;
  inline void clear_uitype();
  static const int kUiTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uitype() const;
  inline void set_uitype(::google::protobuf::uint32 value);

  // required .proto.message.BattlePlayerInfo sPlyInfo = 3;
  inline bool has_splyinfo() const;
  inline void clear_splyinfo();
  static const int kSPlyInfoFieldNumber = 3;
  inline const ::proto::message::BattlePlayerInfo& splyinfo() const;
  inline ::proto::message::BattlePlayerInfo* mutable_splyinfo();
  inline ::proto::message::BattlePlayerInfo* release_splyinfo();
  inline void set_allocated_splyinfo(::proto::message::BattlePlayerInfo* splyinfo);

  // optional .proto.message.BattleBoatInfo sBoatInfo = 4;
  inline bool has_sboatinfo() const;
  inline void clear_sboatinfo();
  static const int kSBoatInfoFieldNumber = 4;
  inline const ::proto::message::BattleBoatInfo& sboatinfo() const;
  inline ::proto::message::BattleBoatInfo* mutable_sboatinfo();
  inline ::proto::message::BattleBoatInfo* release_sboatinfo();
  inline void set_allocated_sboatinfo(::proto::message::BattleBoatInfo* sboatinfo);

  // optional uint64 Status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint64 status() const;
  inline void set_status(::google::protobuf::uint64 value);

  // optional uint32 attack_mode = 6;
  inline bool has_attack_mode() const;
  inline void clear_attack_mode();
  static const int kAttackModeFieldNumber = 6;
  inline ::google::protobuf::uint32 attack_mode() const;
  inline void set_attack_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncPlayerAppear)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_uitype();
  inline void clear_has_uitype();
  inline void set_has_splyinfo();
  inline void clear_has_splyinfo();
  inline void set_has_sboatinfo();
  inline void clear_has_sboatinfo();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_attack_mode();
  inline void clear_has_attack_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;
  ::google::protobuf::uint32 uitype_;
  ::proto::message::BattlePlayerInfo* splyinfo_;
  ::proto::message::BattleBoatInfo* sboatinfo_;
  ::google::protobuf::uint64 status_;
  ::google::protobuf::uint32 attack_mode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncPlayerAppear* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncObjDisappear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncObjDisappear();
  virtual ~Battle2Client_SyncObjDisappear();

  Battle2Client_SyncObjDisappear(const Battle2Client_SyncObjDisappear& from);

  inline Battle2Client_SyncObjDisappear& operator=(const Battle2Client_SyncObjDisappear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncObjDisappear& default_instance();

  void Swap(Battle2Client_SyncObjDisappear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncObjDisappear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncObjDisappear& from);
  void MergeFrom(const Battle2Client_SyncObjDisappear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // required uint32 uiObjType = 2;
  inline bool has_uiobjtype() const;
  inline void clear_uiobjtype();
  static const int kUiObjTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uiobjtype() const;
  inline void set_uiobjtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncObjDisappear)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_uiobjtype();
  inline void clear_has_uiobjtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;
  ::google::protobuf::uint32 uiobjtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncObjDisappear* default_instance_;
};
// -------------------------------------------------------------------

class OwnerInfo : public ::google::protobuf::Message {
 public:
  OwnerInfo();
  virtual ~OwnerInfo();

  OwnerInfo(const OwnerInfo& from);

  inline OwnerInfo& operator=(const OwnerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OwnerInfo& default_instance();

  void Swap(OwnerInfo* other);

  // implements Message ----------------------------------------------

  OwnerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OwnerInfo& from);
  void MergeFrom(const OwnerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 career = 3;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 3;
  inline ::google::protobuf::uint32 career() const;
  inline void set_career(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 dhlev = 5;
  inline bool has_dhlev() const;
  inline void clear_dhlev();
  static const int kDhlevFieldNumber = 5;
  inline ::google::protobuf::uint32 dhlev() const;
  inline void set_dhlev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.OwnerInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_dhlev();
  inline void clear_has_dhlev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* name_;
  ::google::protobuf::uint32 career_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 dhlev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static OwnerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncMonsterAppear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncMonsterAppear();
  virtual ~Battle2Client_SyncMonsterAppear();

  Battle2Client_SyncMonsterAppear(const Battle2Client_SyncMonsterAppear& from);

  inline Battle2Client_SyncMonsterAppear& operator=(const Battle2Client_SyncMonsterAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncMonsterAppear& default_instance();

  void Swap(Battle2Client_SyncMonsterAppear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncMonsterAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncMonsterAppear& from);
  void MergeFrom(const Battle2Client_SyncMonsterAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ProID = 2;
  inline bool has_proid() const;
  inline void clear_proid();
  static const int kProIDFieldNumber = 2;
  inline ::google::protobuf::uint32 proid() const;
  inline void set_proid(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 Velocity = 5;
  inline bool has_velocity() const;
  inline void clear_velocity();
  static const int kVelocityFieldNumber = 5;
  inline ::google::protobuf::int32 velocity() const;
  inline void set_velocity(::google::protobuf::int32 value);

  // optional int64 MaxHP = 6;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxHPFieldNumber = 6;
  inline ::google::protobuf::int64 maxhp() const;
  inline void set_maxhp(::google::protobuf::int64 value);

  // optional int64 CurHP = 7;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurHPFieldNumber = 7;
  inline ::google::protobuf::int64 curhp() const;
  inline void set_curhp(::google::protobuf::int64 value);

  // optional int32 max_tp = 8;
  inline bool has_max_tp() const;
  inline void clear_max_tp();
  static const int kMaxTpFieldNumber = 8;
  inline ::google::protobuf::int32 max_tp() const;
  inline void set_max_tp(::google::protobuf::int32 value);

  // optional int32 cur_tp = 9;
  inline bool has_cur_tp() const;
  inline void clear_cur_tp();
  static const int kCurTpFieldNumber = 9;
  inline ::google::protobuf::int32 cur_tp() const;
  inline void set_cur_tp(::google::protobuf::int32 value);

  // optional int32 cmap = 10;
  inline bool has_cmap() const;
  inline void clear_cmap();
  static const int kCmapFieldNumber = 10;
  inline ::google::protobuf::int32 cmap() const;
  inline void set_cmap(::google::protobuf::int32 value);

  // optional int32 layer = 11;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 11;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional .proto.message.BattleBoatInfo sBoatInfo = 12;
  inline bool has_sboatinfo() const;
  inline void clear_sboatinfo();
  static const int kSBoatInfoFieldNumber = 12;
  inline const ::proto::message::BattleBoatInfo& sboatinfo() const;
  inline ::proto::message::BattleBoatInfo* mutable_sboatinfo();
  inline ::proto::message::BattleBoatInfo* release_sboatinfo();
  inline void set_allocated_sboatinfo(::proto::message::BattleBoatInfo* sboatinfo);

  // optional uint64 Status = 13;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 13;
  inline ::google::protobuf::uint64 status() const;
  inline void set_status(::google::protobuf::uint64 value);

  // optional .proto.message.OwnerInfo owner = 14;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 14;
  inline const ::proto::message::OwnerInfo& owner() const;
  inline ::proto::message::OwnerInfo* mutable_owner();
  inline ::proto::message::OwnerInfo* release_owner();
  inline void set_allocated_owner(::proto::message::OwnerInfo* owner);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncMonsterAppear)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_velocity();
  inline void clear_has_velocity();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_curhp();
  inline void clear_has_curhp();
  inline void set_has_max_tp();
  inline void clear_has_max_tp();
  inline void set_has_cur_tp();
  inline void clear_has_cur_tp();
  inline void set_has_cmap();
  inline void clear_has_cmap();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_sboatinfo();
  inline void clear_has_sboatinfo();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_owner();
  inline void clear_has_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 proid_;
  ::proto::message::Point3D* pt_;
  float dir_;
  ::google::protobuf::int32 velocity_;
  ::google::protobuf::int64 maxhp_;
  ::google::protobuf::int64 curhp_;
  ::google::protobuf::int32 max_tp_;
  ::google::protobuf::int32 cur_tp_;
  ::google::protobuf::int32 cmap_;
  ::google::protobuf::int32 layer_;
  ::proto::message::BattleBoatInfo* sboatinfo_;
  ::google::protobuf::uint64 status_;
  ::proto::message::OwnerInfo* owner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncMonsterAppear* default_instance_;
};
// -------------------------------------------------------------------

class mercenarySkillCD : public ::google::protobuf::Message {
 public:
  mercenarySkillCD();
  virtual ~mercenarySkillCD();

  mercenarySkillCD(const mercenarySkillCD& from);

  inline mercenarySkillCD& operator=(const mercenarySkillCD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mercenarySkillCD& default_instance();

  void Swap(mercenarySkillCD* other);

  // implements Message ----------------------------------------------

  mercenarySkillCD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mercenarySkillCD& from);
  void MergeFrom(const mercenarySkillCD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nskillID = 1;
  inline bool has_nskillid() const;
  inline void clear_nskillid();
  static const int kNskillIDFieldNumber = 1;
  inline ::google::protobuf::int32 nskillid() const;
  inline void set_nskillid(::google::protobuf::int32 value);

  // required int32 nCD = 2;
  inline bool has_ncd() const;
  inline void clear_ncd();
  static const int kNCDFieldNumber = 2;
  inline ::google::protobuf::int32 ncd() const;
  inline void set_ncd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.mercenarySkillCD)
 private:
  inline void set_has_nskillid();
  inline void clear_has_nskillid();
  inline void set_has_ncd();
  inline void clear_has_ncd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nskillid_;
  ::google::protobuf::int32 ncd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static mercenarySkillCD* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncMercenaryAppear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncMercenaryAppear();
  virtual ~Battle2Client_SyncMercenaryAppear();

  Battle2Client_SyncMercenaryAppear(const Battle2Client_SyncMercenaryAppear& from);

  inline Battle2Client_SyncMercenaryAppear& operator=(const Battle2Client_SyncMercenaryAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncMercenaryAppear& default_instance();

  void Swap(Battle2Client_SyncMercenaryAppear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncMercenaryAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncMercenaryAppear& from);
  void MergeFrom(const Battle2Client_SyncMercenaryAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // required uint32 uiType = 2;
  inline bool has_uitype() const;
  inline void clear_uitype();
  static const int kUiTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uitype() const;
  inline void set_uitype(::google::protobuf::uint32 value);

  // required uint32 lordObjId = 3;
  inline bool has_lordobjid() const;
  inline void clear_lordobjid();
  static const int kLordObjIdFieldNumber = 3;
  inline ::google::protobuf::uint32 lordobjid() const;
  inline void set_lordobjid(::google::protobuf::uint32 value);

  // required .proto.message.BattleMercenaryInfo sMerInfo = 4;
  inline bool has_smerinfo() const;
  inline void clear_smerinfo();
  static const int kSMerInfoFieldNumber = 4;
  inline const ::proto::message::BattleMercenaryInfo& smerinfo() const;
  inline ::proto::message::BattleMercenaryInfo* mutable_smerinfo();
  inline ::proto::message::BattleMercenaryInfo* release_smerinfo();
  inline void set_allocated_smerinfo(::proto::message::BattleMercenaryInfo* smerinfo);

  // repeated .proto.message.mercenarySkillCD merCD = 5;
  inline int mercd_size() const;
  inline void clear_mercd();
  static const int kMerCDFieldNumber = 5;
  inline const ::proto::message::mercenarySkillCD& mercd(int index) const;
  inline ::proto::message::mercenarySkillCD* mutable_mercd(int index);
  inline ::proto::message::mercenarySkillCD* add_mercd();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::mercenarySkillCD >&
      mercd() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::mercenarySkillCD >*
      mutable_mercd();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncMercenaryAppear)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_uitype();
  inline void clear_has_uitype();
  inline void set_has_lordobjid();
  inline void clear_has_lordobjid();
  inline void set_has_smerinfo();
  inline void clear_has_smerinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;
  ::google::protobuf::uint32 uitype_;
  ::proto::message::BattleMercenaryInfo* smerinfo_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::mercenarySkillCD > mercd_;
  ::google::protobuf::uint32 lordobjid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncMercenaryAppear* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncMove : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncMove();
  virtual ~Battle2Client_SyncMove();

  Battle2Client_SyncMove(const Battle2Client_SyncMove& from);

  inline Battle2Client_SyncMove& operator=(const Battle2Client_SyncMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncMove& default_instance();

  void Swap(Battle2Client_SyncMove* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncMove& from);
  void MergeFrom(const Battle2Client_SyncMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // required float velocity = 4;
  inline bool has_velocity() const;
  inline void clear_velocity();
  static const int kVelocityFieldNumber = 4;
  inline float velocity() const;
  inline void set_velocity(float value);

  // optional int32 arrival = 5;
  inline bool has_arrival() const;
  inline void clear_arrival();
  static const int kArrivalFieldNumber = 5;
  inline ::google::protobuf::int32 arrival() const;
  inline void set_arrival(::google::protobuf::int32 value);

  // optional int32 objType = 6;
  inline bool has_objtype() const;
  inline void clear_objtype();
  static const int kObjTypeFieldNumber = 6;
  inline ::google::protobuf::int32 objtype() const;
  inline void set_objtype(::google::protobuf::int32 value);

  // optional uint64 timestamp = 7;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncMove)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_velocity();
  inline void clear_has_velocity();
  inline void set_has_arrival();
  inline void clear_has_arrival();
  inline void set_has_objtype();
  inline void clear_has_objtype();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 uiobjid_;
  float dir_;
  float velocity_;
  ::google::protobuf::int32 arrival_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::int32 objtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncMove* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_SpeelBegin : public ::google::protobuf::Message {
 public:
  Client2Battle_SpeelBegin();
  virtual ~Client2Battle_SpeelBegin();

  Client2Battle_SpeelBegin(const Client2Battle_SpeelBegin& from);

  inline Client2Battle_SpeelBegin& operator=(const Client2Battle_SpeelBegin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_SpeelBegin& default_instance();

  void Swap(Client2Battle_SpeelBegin* other);

  // implements Message ----------------------------------------------

  Client2Battle_SpeelBegin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_SpeelBegin& from);
  void MergeFrom(const Client2Battle_SpeelBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional int32 TriggerId = 2;
  inline bool has_triggerid() const;
  inline void clear_triggerid();
  static const int kTriggerIdFieldNumber = 2;
  inline ::google::protobuf::int32 triggerid() const;
  inline void set_triggerid(::google::protobuf::int32 value);

  // optional uint32 TriggerType = 3;
  inline bool has_triggertype() const;
  inline void clear_triggertype();
  static const int kTriggerTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 triggertype() const;
  inline void set_triggertype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_SpeelBegin)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_triggerid();
  inline void clear_has_triggerid();
  inline void set_has_triggertype();
  inline void clear_has_triggertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 layer_;
  ::google::protobuf::int32 triggerid_;
  ::google::protobuf::uint32 triggertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_SpeelBegin* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_SpeelEnd : public ::google::protobuf::Message {
 public:
  Client2Battle_SpeelEnd();
  virtual ~Client2Battle_SpeelEnd();

  Client2Battle_SpeelEnd(const Client2Battle_SpeelEnd& from);

  inline Client2Battle_SpeelEnd& operator=(const Client2Battle_SpeelEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_SpeelEnd& default_instance();

  void Swap(Client2Battle_SpeelEnd* other);

  // implements Message ----------------------------------------------

  Client2Battle_SpeelEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_SpeelEnd& from);
  void MergeFrom(const Client2Battle_SpeelEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.Point3D pt = 1;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 1;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_SpeelEnd)
 private:
  inline void set_has_pt();
  inline void clear_has_pt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_SpeelEnd* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SpeelBegin : public ::google::protobuf::Message {
 public:
  Battle2Client_SpeelBegin();
  virtual ~Battle2Client_SpeelBegin();

  Battle2Client_SpeelBegin(const Battle2Client_SpeelBegin& from);

  inline Battle2Client_SpeelBegin& operator=(const Battle2Client_SpeelBegin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SpeelBegin& default_instance();

  void Swap(Battle2Client_SpeelBegin* other);

  // implements Message ----------------------------------------------

  Battle2Client_SpeelBegin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SpeelBegin& from);
  void MergeFrom(const Battle2Client_SpeelBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 PlyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required uint32 Layer = 2;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 2;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional int32 TriggerId = 3;
  inline bool has_triggerid() const;
  inline void clear_triggerid();
  static const int kTriggerIdFieldNumber = 3;
  inline ::google::protobuf::int32 triggerid() const;
  inline void set_triggerid(::google::protobuf::int32 value);

  // optional uint32 TriggerType = 4;
  inline bool has_triggertype() const;
  inline void clear_triggertype();
  static const int kTriggerTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 triggertype() const;
  inline void set_triggertype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SpeelBegin)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_triggerid();
  inline void clear_has_triggerid();
  inline void set_has_triggertype();
  inline void clear_has_triggertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::uint32 layer_;
  ::google::protobuf::int32 triggerid_;
  ::google::protobuf::uint32 triggertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SpeelBegin* default_instance_;
};
// -------------------------------------------------------------------

class SceneBranchInfo : public ::google::protobuf::Message {
 public:
  SceneBranchInfo();
  virtual ~SceneBranchInfo();

  SceneBranchInfo(const SceneBranchInfo& from);

  inline SceneBranchInfo& operator=(const SceneBranchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneBranchInfo& default_instance();

  void Swap(SceneBranchInfo* other);

  // implements Message ----------------------------------------------

  SceneBranchInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneBranchInfo& from);
  void MergeFrom(const SceneBranchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 BranchId = 1;
  inline bool has_branchid() const;
  inline void clear_branchid();
  static const int kBranchIdFieldNumber = 1;
  inline ::google::protobuf::int32 branchid() const;
  inline void set_branchid(::google::protobuf::int32 value);

  // required int32 PlayerNum = 2;
  inline bool has_playernum() const;
  inline void clear_playernum();
  static const int kPlayerNumFieldNumber = 2;
  inline ::google::protobuf::int32 playernum() const;
  inline void set_playernum(::google::protobuf::int32 value);

  // optional int32 DisplyBranchId = 3;
  inline bool has_displybranchid() const;
  inline void clear_displybranchid();
  static const int kDisplyBranchIdFieldNumber = 3;
  inline ::google::protobuf::int32 displybranchid() const;
  inline void set_displybranchid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.SceneBranchInfo)
 private:
  inline void set_has_branchid();
  inline void clear_has_branchid();
  inline void set_has_playernum();
  inline void clear_has_playernum();
  inline void set_has_displybranchid();
  inline void clear_has_displybranchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 branchid_;
  ::google::protobuf::int32 playernum_;
  ::google::protobuf::int32 displybranchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static SceneBranchInfo* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_GetMapBranch : public ::google::protobuf::Message {
 public:
  Battle2Client_GetMapBranch();
  virtual ~Battle2Client_GetMapBranch();

  Battle2Client_GetMapBranch(const Battle2Client_GetMapBranch& from);

  inline Battle2Client_GetMapBranch& operator=(const Battle2Client_GetMapBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_GetMapBranch& default_instance();

  void Swap(Battle2Client_GetMapBranch* other);

  // implements Message ----------------------------------------------

  Battle2Client_GetMapBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_GetMapBranch& from);
  void MergeFrom(const Battle2Client_GetMapBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.SceneBranchInfo branch_list = 1;
  inline int branch_list_size() const;
  inline void clear_branch_list();
  static const int kBranchListFieldNumber = 1;
  inline const ::proto::message::SceneBranchInfo& branch_list(int index) const;
  inline ::proto::message::SceneBranchInfo* mutable_branch_list(int index);
  inline ::proto::message::SceneBranchInfo* add_branch_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SceneBranchInfo >&
      branch_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SceneBranchInfo >*
      mutable_branch_list();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_GetMapBranch)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::SceneBranchInfo > branch_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_GetMapBranch* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeBranch : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeBranch();
  virtual ~Battle2Client_ChangeBranch();

  Battle2Client_ChangeBranch(const Battle2Client_ChangeBranch& from);

  inline Battle2Client_ChangeBranch& operator=(const Battle2Client_ChangeBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeBranch& default_instance();

  void Swap(Battle2Client_ChangeBranch* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeBranch& from);
  void MergeFrom(const Battle2Client_ChangeBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rt = 1;
  inline bool has_rt() const;
  inline void clear_rt();
  static const int kRtFieldNumber = 1;
  inline ::google::protobuf::int32 rt() const;
  inline void set_rt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeBranch)
 private:
  inline void set_has_rt();
  inline void clear_has_rt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeBranch* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_ChangeMap : public ::google::protobuf::Message {
 public:
  Client2Battle_ChangeMap();
  virtual ~Client2Battle_ChangeMap();

  Client2Battle_ChangeMap(const Client2Battle_ChangeMap& from);

  inline Client2Battle_ChangeMap& operator=(const Client2Battle_ChangeMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_ChangeMap& default_instance();

  void Swap(Client2Battle_ChangeMap* other);

  // implements Message ----------------------------------------------

  Client2Battle_ChangeMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_ChangeMap& from);
  void MergeFrom(const Client2Battle_ChangeMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiMapId = 1;
  inline bool has_uimapid() const;
  inline void clear_uimapid();
  static const int kUiMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uimapid() const;
  inline void set_uimapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_ChangeMap)
 private:
  inline void set_has_uimapid();
  inline void clear_has_uimapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uimapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_ChangeMap* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_SummonMercenary : public ::google::protobuf::Message {
 public:
  Client2Battle_SummonMercenary();
  virtual ~Client2Battle_SummonMercenary();

  Client2Battle_SummonMercenary(const Client2Battle_SummonMercenary& from);

  inline Client2Battle_SummonMercenary& operator=(const Client2Battle_SummonMercenary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_SummonMercenary& default_instance();

  void Swap(Client2Battle_SummonMercenary* other);

  // implements Message ----------------------------------------------

  Client2Battle_SummonMercenary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_SummonMercenary& from);
  void MergeFrom(const Client2Battle_SummonMercenary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_SummonMercenary)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_SummonMercenary* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_CheckPosition : public ::google::protobuf::Message {
 public:
  Battle2Client_CheckPosition();
  virtual ~Battle2Client_CheckPosition();

  Battle2Client_CheckPosition(const Battle2Client_CheckPosition& from);

  inline Battle2Client_CheckPosition& operator=(const Battle2Client_CheckPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_CheckPosition& default_instance();

  void Swap(Battle2Client_CheckPosition* other);

  // implements Message ----------------------------------------------

  Battle2Client_CheckPosition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_CheckPosition& from);
  void MergeFrom(const Battle2Client_CheckPosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_CheckPosition)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 nid_;
  float dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_CheckPosition* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_MonsterStopMove : public ::google::protobuf::Message {
 public:
  Battle2Client_MonsterStopMove();
  virtual ~Battle2Client_MonsterStopMove();

  Battle2Client_MonsterStopMove(const Battle2Client_MonsterStopMove& from);

  inline Battle2Client_MonsterStopMove& operator=(const Battle2Client_MonsterStopMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_MonsterStopMove& default_instance();

  void Swap(Battle2Client_MonsterStopMove* other);

  // implements Message ----------------------------------------------

  Battle2Client_MonsterStopMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_MonsterStopMove& from);
  void MergeFrom(const Battle2Client_MonsterStopMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_MonsterStopMove)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 nid_;
  float dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_MonsterStopMove* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_TriggerEvent : public ::google::protobuf::Message {
 public:
  Battle2Client_TriggerEvent();
  virtual ~Battle2Client_TriggerEvent();

  Battle2Client_TriggerEvent(const Battle2Client_TriggerEvent& from);

  inline Battle2Client_TriggerEvent& operator=(const Battle2Client_TriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_TriggerEvent& default_instance();

  void Swap(Battle2Client_TriggerEvent* other);

  // implements Message ----------------------------------------------

  Battle2Client_TriggerEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_TriggerEvent& from);
  void MergeFrom(const Battle2Client_TriggerEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 PlyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required uint32 TriggerType = 2;
  inline bool has_triggertype() const;
  inline void clear_triggertype();
  static const int kTriggerTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 triggertype() const;
  inline void set_triggertype(::google::protobuf::uint32 value);

  // required uint32 TriggerId = 3;
  inline bool has_triggerid() const;
  inline void clear_triggerid();
  static const int kTriggerIdFieldNumber = 3;
  inline ::google::protobuf::uint32 triggerid() const;
  inline void set_triggerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_TriggerEvent)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_triggertype();
  inline void clear_has_triggertype();
  inline void set_has_triggerid();
  inline void clear_has_triggerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::uint32 triggertype_;
  ::google::protobuf::uint32 triggerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_TriggerEvent* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_TriggerServerTips : public ::google::protobuf::Message {
 public:
  Battle2Client_TriggerServerTips();
  virtual ~Battle2Client_TriggerServerTips();

  Battle2Client_TriggerServerTips(const Battle2Client_TriggerServerTips& from);

  inline Battle2Client_TriggerServerTips& operator=(const Battle2Client_TriggerServerTips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_TriggerServerTips& default_instance();

  void Swap(Battle2Client_TriggerServerTips* other);

  // implements Message ----------------------------------------------

  Battle2Client_TriggerServerTips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_TriggerServerTips& from);
  void MergeFrom(const Battle2Client_TriggerServerTips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ServerTipsId = 1;
  inline bool has_servertipsid() const;
  inline void clear_servertipsid();
  static const int kServerTipsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 servertipsid() const;
  inline void set_servertipsid(::google::protobuf::uint32 value);

  // repeated string arg = 2;
  inline int arg_size() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 2;
  inline const ::std::string& arg(int index) const;
  inline ::std::string* mutable_arg(int index);
  inline void set_arg(int index, const ::std::string& value);
  inline void set_arg(int index, const char* value);
  inline void set_arg(int index, const char* value, size_t size);
  inline ::std::string* add_arg();
  inline void add_arg(const ::std::string& value);
  inline void add_arg(const char* value);
  inline void add_arg(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& arg() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_arg();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_TriggerServerTips)
 private:
  inline void set_has_servertipsid();
  inline void clear_has_servertipsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> arg_;
  ::google::protobuf::uint32 servertipsid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_TriggerServerTips* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeTttle : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeTttle();
  virtual ~Battle2Client_ChangeTttle();

  Battle2Client_ChangeTttle(const Battle2Client_ChangeTttle& from);

  inline Battle2Client_ChangeTttle& operator=(const Battle2Client_ChangeTttle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeTttle& default_instance();

  void Swap(Battle2Client_ChangeTttle* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeTttle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeTttle& from);
  void MergeFrom(const Battle2Client_ChangeTttle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required int32 titleID = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 2;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // optional string titlename = 3;
  inline bool has_titlename() const;
  inline void clear_titlename();
  static const int kTitlenameFieldNumber = 3;
  inline const ::std::string& titlename() const;
  inline void set_titlename(const ::std::string& value);
  inline void set_titlename(const char* value);
  inline void set_titlename(const char* value, size_t size);
  inline ::std::string* mutable_titlename();
  inline ::std::string* release_titlename();
  inline void set_allocated_titlename(::std::string* titlename);

  // optional int32 ishide = 4;
  inline bool has_ishide() const;
  inline void clear_ishide();
  static const int kIshideFieldNumber = 4;
  inline ::google::protobuf::int32 ishide() const;
  inline void set_ishide(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeTttle)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_titlename();
  inline void clear_has_titlename();
  inline void set_has_ishide();
  inline void clear_has_ishide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::int32 titleid_;
  ::std::string* titlename_;
  ::google::protobuf::int32 ishide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeTttle* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ChangeEquip : public ::google::protobuf::Message {
 public:
  Battle2Client_ChangeEquip();
  virtual ~Battle2Client_ChangeEquip();

  Battle2Client_ChangeEquip(const Battle2Client_ChangeEquip& from);

  inline Battle2Client_ChangeEquip& operator=(const Battle2Client_ChangeEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ChangeEquip& default_instance();

  void Swap(Battle2Client_ChangeEquip* other);

  // implements Message ----------------------------------------------

  Battle2Client_ChangeEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ChangeEquip& from);
  void MergeFrom(const Battle2Client_ChangeEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // repeated .proto.message.Equip equip_list = 2;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 2;
  inline const ::proto::message::Equip& equip_list(int index) const;
  inline ::proto::message::Equip* mutable_equip_list(int index);
  inline ::proto::message::Equip* add_equip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      equip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_equip_list();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ChangeEquip)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > equip_list_;
  ::google::protobuf::uint32 nid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ChangeEquip* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ClientLoadOK : public ::google::protobuf::Message {
 public:
  Battle2Client_ClientLoadOK();
  virtual ~Battle2Client_ClientLoadOK();

  Battle2Client_ClientLoadOK(const Battle2Client_ClientLoadOK& from);

  inline Battle2Client_ClientLoadOK& operator=(const Battle2Client_ClientLoadOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ClientLoadOK& default_instance();

  void Swap(Battle2Client_ClientLoadOK* other);

  // implements Message ----------------------------------------------

  Battle2Client_ClientLoadOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ClientLoadOK& from);
  void MergeFrom(const Battle2Client_ClientLoadOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Branch = 1;
  inline bool has_branch() const;
  inline void clear_branch();
  static const int kBranchFieldNumber = 1;
  inline ::google::protobuf::int32 branch() const;
  inline void set_branch(::google::protobuf::int32 value);

  // optional int32 initTime = 2;
  inline bool has_inittime() const;
  inline void clear_inittime();
  static const int kInitTimeFieldNumber = 2;
  inline ::google::protobuf::int32 inittime() const;
  inline void set_inittime(::google::protobuf::int32 value);

  // optional int32 DisplyBranchId = 3;
  inline bool has_displybranchid() const;
  inline void clear_displybranchid();
  static const int kDisplyBranchIdFieldNumber = 3;
  inline ::google::protobuf::int32 displybranchid() const;
  inline void set_displybranchid(::google::protobuf::int32 value);

  // optional int32 reliveNum = 4;
  inline bool has_relivenum() const;
  inline void clear_relivenum();
  static const int kReliveNumFieldNumber = 4;
  inline ::google::protobuf::int32 relivenum() const;
  inline void set_relivenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ClientLoadOK)
 private:
  inline void set_has_branch();
  inline void clear_has_branch();
  inline void set_has_inittime();
  inline void clear_has_inittime();
  inline void set_has_displybranchid();
  inline void clear_has_displybranchid();
  inline void set_has_relivenum();
  inline void clear_has_relivenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 branch_;
  ::google::protobuf::int32 inittime_;
  ::google::protobuf::int32 displybranchid_;
  ::google::protobuf::int32 relivenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ClientLoadOK* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle__TriggerEvent : public ::google::protobuf::Message {
 public:
  Client2Battle__TriggerEvent();
  virtual ~Client2Battle__TriggerEvent();

  Client2Battle__TriggerEvent(const Client2Battle__TriggerEvent& from);

  inline Client2Battle__TriggerEvent& operator=(const Client2Battle__TriggerEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle__TriggerEvent& default_instance();

  void Swap(Client2Battle__TriggerEvent* other);

  // implements Message ----------------------------------------------

  Client2Battle__TriggerEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle__TriggerEvent& from);
  void MergeFrom(const Client2Battle__TriggerEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 TriggerType = 1;
  inline bool has_triggertype() const;
  inline void clear_triggertype();
  static const int kTriggerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 triggertype() const;
  inline void set_triggertype(::google::protobuf::uint32 value);

  // required uint32 TriggerId = 2;
  inline bool has_triggerid() const;
  inline void clear_triggerid();
  static const int kTriggerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 triggerid() const;
  inline void set_triggerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle__TriggerEvent)
 private:
  inline void set_has_triggertype();
  inline void clear_has_triggertype();
  inline void set_has_triggerid();
  inline void clear_has_triggerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 triggertype_;
  ::google::protobuf::uint32 triggerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle__TriggerEvent* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_AddDropItem : public ::google::protobuf::Message {
 public:
  Battle2Game_AddDropItem();
  virtual ~Battle2Game_AddDropItem();

  Battle2Game_AddDropItem(const Battle2Game_AddDropItem& from);

  inline Battle2Game_AddDropItem& operator=(const Battle2Game_AddDropItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_AddDropItem& default_instance();

  void Swap(Battle2Game_AddDropItem* other);

  // implements Message ----------------------------------------------

  Battle2Game_AddDropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_AddDropItem& from);
  void MergeFrom(const Battle2Game_AddDropItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiGetWay = 1;
  inline bool has_uigetway() const;
  inline void clear_uigetway();
  static const int kUiGetWayFieldNumber = 1;
  inline ::google::protobuf::uint32 uigetway() const;
  inline void set_uigetway(::google::protobuf::uint32 value);

  // repeated .proto.message.IDNum vecItemList = 2;
  inline int vecitemlist_size() const;
  inline void clear_vecitemlist();
  static const int kVecItemListFieldNumber = 2;
  inline const ::proto::message::IDNum& vecitemlist(int index) const;
  inline ::proto::message::IDNum* mutable_vecitemlist(int index);
  inline ::proto::message::IDNum* add_vecitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      vecitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_vecitemlist();

  // required uint32 uiSendTips = 3;
  inline bool has_uisendtips() const;
  inline void clear_uisendtips();
  static const int kUiSendTipsFieldNumber = 3;
  inline ::google::protobuf::uint32 uisendtips() const;
  inline void set_uisendtips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_AddDropItem)
 private:
  inline void set_has_uigetway();
  inline void clear_has_uigetway();
  inline void set_has_uisendtips();
  inline void clear_has_uisendtips();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > vecitemlist_;
  ::google::protobuf::uint32 uigetway_;
  ::google::protobuf::uint32 uisendtips_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_AddDropItem* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_DungeonResult : public ::google::protobuf::Message {
 public:
  Battle2Game_DungeonResult();
  virtual ~Battle2Game_DungeonResult();

  Battle2Game_DungeonResult(const Battle2Game_DungeonResult& from);

  inline Battle2Game_DungeonResult& operator=(const Battle2Game_DungeonResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_DungeonResult& default_instance();

  void Swap(Battle2Game_DungeonResult* other);

  // implements Message ----------------------------------------------

  Battle2Game_DungeonResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_DungeonResult& from);
  void MergeFrom(const Battle2Game_DungeonResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiProId = 1;
  inline bool has_uiproid() const;
  inline void clear_uiproid();
  static const int kUiProIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiproid() const;
  inline void set_uiproid(::google::protobuf::uint32 value);

  // required uint32 uiResult = 2;
  inline bool has_uiresult() const;
  inline void clear_uiresult();
  static const int kUiResultFieldNumber = 2;
  inline ::google::protobuf::uint32 uiresult() const;
  inline void set_uiresult(::google::protobuf::uint32 value);

  // optional uint32 uiGrade = 3;
  inline bool has_uigrade() const;
  inline void clear_uigrade();
  static const int kUiGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 uigrade() const;
  inline void set_uigrade(::google::protobuf::uint32 value);

  // optional uint32 uiPassTime = 4;
  inline bool has_uipasstime() const;
  inline void clear_uipasstime();
  static const int kUiPassTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 uipasstime() const;
  inline void set_uipasstime(::google::protobuf::uint32 value);

  // optional uint32 uiBeAttTimes = 5;
  inline bool has_uibeatttimes() const;
  inline void clear_uibeatttimes();
  static const int kUiBeAttTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 uibeatttimes() const;
  inline void set_uibeatttimes(::google::protobuf::uint32 value);

  // optional uint32 uiRemainHP = 6;
  inline bool has_uiremainhp() const;
  inline void clear_uiremainhp();
  static const int kUiRemainHPFieldNumber = 6;
  inline ::google::protobuf::uint32 uiremainhp() const;
  inline void set_uiremainhp(::google::protobuf::uint32 value);

  // optional uint32 uiNPCHP = 7;
  inline bool has_uinpchp() const;
  inline void clear_uinpchp();
  static const int kUiNPCHPFieldNumber = 7;
  inline ::google::protobuf::uint32 uinpchp() const;
  inline void set_uinpchp(::google::protobuf::uint32 value);

  // optional uint32 uiDieTimes = 8;
  inline bool has_uidietimes() const;
  inline void clear_uidietimes();
  static const int kUiDieTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 uidietimes() const;
  inline void set_uidietimes(::google::protobuf::uint32 value);

  // optional uint32 uiNotComTask = 9;
  inline bool has_uinotcomtask() const;
  inline void clear_uinotcomtask();
  static const int kUiNotComTaskFieldNumber = 9;
  inline ::google::protobuf::uint32 uinotcomtask() const;
  inline void set_uinotcomtask(::google::protobuf::uint32 value);

  // optional uint64 uleaderid = 10;
  inline bool has_uleaderid() const;
  inline void clear_uleaderid();
  static const int kUleaderidFieldNumber = 10;
  inline ::google::protobuf::uint64 uleaderid() const;
  inline void set_uleaderid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_DungeonResult)
 private:
  inline void set_has_uiproid();
  inline void clear_has_uiproid();
  inline void set_has_uiresult();
  inline void clear_has_uiresult();
  inline void set_has_uigrade();
  inline void clear_has_uigrade();
  inline void set_has_uipasstime();
  inline void clear_has_uipasstime();
  inline void set_has_uibeatttimes();
  inline void clear_has_uibeatttimes();
  inline void set_has_uiremainhp();
  inline void clear_has_uiremainhp();
  inline void set_has_uinpchp();
  inline void clear_has_uinpchp();
  inline void set_has_uidietimes();
  inline void clear_has_uidietimes();
  inline void set_has_uinotcomtask();
  inline void clear_has_uinotcomtask();
  inline void set_has_uleaderid();
  inline void clear_has_uleaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiproid_;
  ::google::protobuf::uint32 uiresult_;
  ::google::protobuf::uint32 uigrade_;
  ::google::protobuf::uint32 uipasstime_;
  ::google::protobuf::uint32 uibeatttimes_;
  ::google::protobuf::uint32 uiremainhp_;
  ::google::protobuf::uint32 uinpchp_;
  ::google::protobuf::uint32 uidietimes_;
  ::google::protobuf::uint64 uleaderid_;
  ::google::protobuf::uint32 uinotcomtask_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_DungeonResult* default_instance_;
};
// -------------------------------------------------------------------

class GameToBattle_PlayerDisconnect : public ::google::protobuf::Message {
 public:
  GameToBattle_PlayerDisconnect();
  virtual ~GameToBattle_PlayerDisconnect();

  GameToBattle_PlayerDisconnect(const GameToBattle_PlayerDisconnect& from);

  inline GameToBattle_PlayerDisconnect& operator=(const GameToBattle_PlayerDisconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameToBattle_PlayerDisconnect& default_instance();

  void Swap(GameToBattle_PlayerDisconnect* other);

  // implements Message ----------------------------------------------

  GameToBattle_PlayerDisconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameToBattle_PlayerDisconnect& from);
  void MergeFrom(const GameToBattle_PlayerDisconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiBackOnline = 1;
  inline bool has_uibackonline() const;
  inline void clear_uibackonline();
  static const int kUiBackOnlineFieldNumber = 1;
  inline ::google::protobuf::uint32 uibackonline() const;
  inline void set_uibackonline(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GameToBattle_PlayerDisconnect)
 private:
  inline void set_has_uibackonline();
  inline void clear_has_uibackonline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uibackonline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static GameToBattle_PlayerDisconnect* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_SyncMove : public ::google::protobuf::Message {
 public:
  Battle2Game_SyncMove();
  virtual ~Battle2Game_SyncMove();

  Battle2Game_SyncMove(const Battle2Game_SyncMove& from);

  inline Battle2Game_SyncMove& operator=(const Battle2Game_SyncMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_SyncMove& default_instance();

  void Swap(Battle2Game_SyncMove* other);

  // implements Message ----------------------------------------------

  Battle2Game_SyncMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_SyncMove& from);
  void MergeFrom(const Battle2Game_SyncMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiSceneId = 1;
  inline bool has_uisceneid() const;
  inline void clear_uisceneid();
  static const int kUiSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisceneid() const;
  inline void set_uisceneid(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // required uint32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional uint32 branchid = 5;
  inline bool has_branchid() const;
  inline void clear_branchid();
  static const int kBranchidFieldNumber = 5;
  inline ::google::protobuf::uint32 branchid() const;
  inline void set_branchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_SyncMove)
 private:
  inline void set_has_uisceneid();
  inline void clear_has_uisceneid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_branchid();
  inline void clear_has_branchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 uisceneid_;
  float dir_;
  ::google::protobuf::uint32 layer_;
  ::google::protobuf::uint32 branchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_SyncMove* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_UpdateQuest : public ::google::protobuf::Message {
 public:
  Battle2Game_UpdateQuest();
  virtual ~Battle2Game_UpdateQuest();

  Battle2Game_UpdateQuest(const Battle2Game_UpdateQuest& from);

  inline Battle2Game_UpdateQuest& operator=(const Battle2Game_UpdateQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_UpdateQuest& default_instance();

  void Swap(Battle2Game_UpdateQuest* other);

  // implements Message ----------------------------------------------

  Battle2Game_UpdateQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_UpdateQuest& from);
  void MergeFrom(const Battle2Game_UpdateQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiQuestType = 1;
  inline bool has_uiquesttype() const;
  inline void clear_uiquesttype();
  static const int kUiQuestTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 uiquesttype() const;
  inline void set_uiquesttype(::google::protobuf::uint32 value);

  // required uint32 uiTargetId = 2;
  inline bool has_uitargetid() const;
  inline void clear_uitargetid();
  static const int kUiTargetIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uitargetid() const;
  inline void set_uitargetid(::google::protobuf::uint32 value);

  // required uint32 uiArg = 3;
  inline bool has_uiarg() const;
  inline void clear_uiarg();
  static const int kUiArgFieldNumber = 3;
  inline ::google::protobuf::uint32 uiarg() const;
  inline void set_uiarg(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_UpdateQuest)
 private:
  inline void set_has_uiquesttype();
  inline void clear_has_uiquesttype();
  inline void set_has_uitargetid();
  inline void clear_has_uitargetid();
  inline void set_has_uiarg();
  inline void clear_has_uiarg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiquesttype_;
  ::google::protobuf::uint32 uitargetid_;
  ::google::protobuf::uint32 uiarg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_UpdateQuest* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_TriggerQuest : public ::google::protobuf::Message {
 public:
  Battle2Game_TriggerQuest();
  virtual ~Battle2Game_TriggerQuest();

  Battle2Game_TriggerQuest(const Battle2Game_TriggerQuest& from);

  inline Battle2Game_TriggerQuest& operator=(const Battle2Game_TriggerQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_TriggerQuest& default_instance();

  void Swap(Battle2Game_TriggerQuest* other);

  // implements Message ----------------------------------------------

  Battle2Game_TriggerQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_TriggerQuest& from);
  void MergeFrom(const Battle2Game_TriggerQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiQuestId = 1;
  inline bool has_uiquestid() const;
  inline void clear_uiquestid();
  static const int kUiQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiquestid() const;
  inline void set_uiquestid(::google::protobuf::uint32 value);

  // required uint32 uiQuestType = 2;
  inline bool has_uiquesttype() const;
  inline void clear_uiquesttype();
  static const int kUiQuestTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uiquesttype() const;
  inline void set_uiquesttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_TriggerQuest)
 private:
  inline void set_has_uiquestid();
  inline void clear_has_uiquestid();
  inline void set_has_uiquesttype();
  inline void clear_has_uiquesttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiquestid_;
  ::google::protobuf::uint32 uiquesttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_TriggerQuest* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_MonsterDie : public ::google::protobuf::Message {
 public:
  Battle2Game_MonsterDie();
  virtual ~Battle2Game_MonsterDie();

  Battle2Game_MonsterDie(const Battle2Game_MonsterDie& from);

  inline Battle2Game_MonsterDie& operator=(const Battle2Game_MonsterDie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_MonsterDie& default_instance();

  void Swap(Battle2Game_MonsterDie* other);

  // implements Message ----------------------------------------------

  Battle2Game_MonsterDie* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_MonsterDie& from);
  void MergeFrom(const Battle2Game_MonsterDie& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiMonsterProId = 1;
  inline bool has_uimonsterproid() const;
  inline void clear_uimonsterproid();
  static const int kUiMonsterProIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uimonsterproid() const;
  inline void set_uimonsterproid(::google::protobuf::uint32 value);

  // required uint32 uiMonsterObjId = 2;
  inline bool has_uimonsterobjid() const;
  inline void clear_uimonsterobjid();
  static const int kUiMonsterObjIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uimonsterobjid() const;
  inline void set_uimonsterobjid(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_MonsterDie)
 private:
  inline void set_has_uimonsterproid();
  inline void clear_has_uimonsterproid();
  inline void set_has_uimonsterobjid();
  inline void clear_has_uimonsterobjid();
  inline void set_has_pt();
  inline void clear_has_pt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uimonsterproid_;
  ::google::protobuf::uint32 uimonsterobjid_;
  ::proto::message::Point3D* pt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_MonsterDie* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_LeaveDungeon : public ::google::protobuf::Message {
 public:
  Battle2Game_LeaveDungeon();
  virtual ~Battle2Game_LeaveDungeon();

  Battle2Game_LeaveDungeon(const Battle2Game_LeaveDungeon& from);

  inline Battle2Game_LeaveDungeon& operator=(const Battle2Game_LeaveDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_LeaveDungeon& default_instance();

  void Swap(Battle2Game_LeaveDungeon* other);

  // implements Message ----------------------------------------------

  Battle2Game_LeaveDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_LeaveDungeon& from);
  void MergeFrom(const Battle2Game_LeaveDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiEnd = 1;
  inline bool has_uiend() const;
  inline void clear_uiend();
  static const int kUiEndFieldNumber = 1;
  inline ::google::protobuf::uint32 uiend() const;
  inline void set_uiend(::google::protobuf::uint32 value);

  // required uint32 uiAgain = 2;
  inline bool has_uiagain() const;
  inline void clear_uiagain();
  static const int kUiAgainFieldNumber = 2;
  inline ::google::protobuf::uint32 uiagain() const;
  inline void set_uiagain(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_LeaveDungeon)
 private:
  inline void set_has_uiend();
  inline void clear_has_uiend();
  inline void set_has_uiagain();
  inline void clear_has_uiagain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiend_;
  ::google::protobuf::uint32 uiagain_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_LeaveDungeon* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_ChangeMapForceAwakenOff : public ::google::protobuf::Message {
 public:
  Battle2Game_ChangeMapForceAwakenOff();
  virtual ~Battle2Game_ChangeMapForceAwakenOff();

  Battle2Game_ChangeMapForceAwakenOff(const Battle2Game_ChangeMapForceAwakenOff& from);

  inline Battle2Game_ChangeMapForceAwakenOff& operator=(const Battle2Game_ChangeMapForceAwakenOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_ChangeMapForceAwakenOff& default_instance();

  void Swap(Battle2Game_ChangeMapForceAwakenOff* other);

  // implements Message ----------------------------------------------

  Battle2Game_ChangeMapForceAwakenOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_ChangeMapForceAwakenOff& from);
  void MergeFrom(const Battle2Game_ChangeMapForceAwakenOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_ChangeMapForceAwakenOff)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_ChangeMapForceAwakenOff* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_DieToChangeAwakenAndRide : public ::google::protobuf::Message {
 public:
  Battle2Game_DieToChangeAwakenAndRide();
  virtual ~Battle2Game_DieToChangeAwakenAndRide();

  Battle2Game_DieToChangeAwakenAndRide(const Battle2Game_DieToChangeAwakenAndRide& from);

  inline Battle2Game_DieToChangeAwakenAndRide& operator=(const Battle2Game_DieToChangeAwakenAndRide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_DieToChangeAwakenAndRide& default_instance();

  void Swap(Battle2Game_DieToChangeAwakenAndRide* other);

  // implements Message ----------------------------------------------

  Battle2Game_DieToChangeAwakenAndRide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_DieToChangeAwakenAndRide& from);
  void MergeFrom(const Battle2Game_DieToChangeAwakenAndRide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_DieToChangeAwakenAndRide)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_DieToChangeAwakenAndRide* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_SceneLoadOk : public ::google::protobuf::Message {
 public:
  Battle2Game_SceneLoadOk();
  virtual ~Battle2Game_SceneLoadOk();

  Battle2Game_SceneLoadOk(const Battle2Game_SceneLoadOk& from);

  inline Battle2Game_SceneLoadOk& operator=(const Battle2Game_SceneLoadOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_SceneLoadOk& default_instance();

  void Swap(Battle2Game_SceneLoadOk* other);

  // implements Message ----------------------------------------------

  Battle2Game_SceneLoadOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_SceneLoadOk& from);
  void MergeFrom(const Battle2Game_SceneLoadOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_SceneLoadOk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_SceneLoadOk* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_MercenaryDieInfo : public ::google::protobuf::Message {
 public:
  Battle2Game_MercenaryDieInfo();
  virtual ~Battle2Game_MercenaryDieInfo();

  Battle2Game_MercenaryDieInfo(const Battle2Game_MercenaryDieInfo& from);

  inline Battle2Game_MercenaryDieInfo& operator=(const Battle2Game_MercenaryDieInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_MercenaryDieInfo& default_instance();

  void Swap(Battle2Game_MercenaryDieInfo* other);

  // implements Message ----------------------------------------------

  Battle2Game_MercenaryDieInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_MercenaryDieInfo& from);
  void MergeFrom(const Battle2Game_MercenaryDieInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiMercenary = 1;
  inline bool has_uimercenary() const;
  inline void clear_uimercenary();
  static const int kUiMercenaryFieldNumber = 1;
  inline ::google::protobuf::uint32 uimercenary() const;
  inline void set_uimercenary(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_MercenaryDieInfo)
 private:
  inline void set_has_uimercenary();
  inline void clear_has_uimercenary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uimercenary_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_MercenaryDieInfo* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_CheckTrigger : public ::google::protobuf::Message {
 public:
  Game2Battle_CheckTrigger();
  virtual ~Game2Battle_CheckTrigger();

  Game2Battle_CheckTrigger(const Game2Battle_CheckTrigger& from);

  inline Game2Battle_CheckTrigger& operator=(const Game2Battle_CheckTrigger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_CheckTrigger& default_instance();

  void Swap(Game2Battle_CheckTrigger* other);

  // implements Message ----------------------------------------------

  Game2Battle_CheckTrigger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_CheckTrigger& from);
  void MergeFrom(const Game2Battle_CheckTrigger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiType = 1;
  inline bool has_uitype() const;
  inline void clear_uitype();
  static const int kUiTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 uitype() const;
  inline void set_uitype(::google::protobuf::uint32 value);

  // required uint32 uiValue = 2;
  inline bool has_uivalue() const;
  inline void clear_uivalue();
  static const int kUiValueFieldNumber = 2;
  inline ::google::protobuf::uint32 uivalue() const;
  inline void set_uivalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_CheckTrigger)
 private:
  inline void set_has_uitype();
  inline void clear_has_uitype();
  inline void set_has_uivalue();
  inline void clear_has_uivalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uitype_;
  ::google::protobuf::uint32 uivalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_CheckTrigger* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_AddQuestTrigger : public ::google::protobuf::Message {
 public:
  Game2Battle_AddQuestTrigger();
  virtual ~Game2Battle_AddQuestTrigger();

  Game2Battle_AddQuestTrigger(const Game2Battle_AddQuestTrigger& from);

  inline Game2Battle_AddQuestTrigger& operator=(const Game2Battle_AddQuestTrigger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_AddQuestTrigger& default_instance();

  void Swap(Game2Battle_AddQuestTrigger* other);

  // implements Message ----------------------------------------------

  Game2Battle_AddQuestTrigger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_AddQuestTrigger& from);
  void MergeFrom(const Game2Battle_AddQuestTrigger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiQuestId = 1;
  inline bool has_uiquestid() const;
  inline void clear_uiquestid();
  static const int kUiQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiquestid() const;
  inline void set_uiquestid(::google::protobuf::uint32 value);

  // required uint32 uiQuestTargetType = 2;
  inline bool has_uiquesttargettype() const;
  inline void clear_uiquesttargettype();
  static const int kUiQuestTargetTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uiquesttargettype() const;
  inline void set_uiquesttargettype(::google::protobuf::uint32 value);

  // required uint32 uiTriggerId = 3;
  inline bool has_uitriggerid() const;
  inline void clear_uitriggerid();
  static const int kUiTriggerIdFieldNumber = 3;
  inline ::google::protobuf::uint32 uitriggerid() const;
  inline void set_uitriggerid(::google::protobuf::uint32 value);

  // required uint32 uiTriggerNPCId = 4;
  inline bool has_uitriggernpcid() const;
  inline void clear_uitriggernpcid();
  static const int kUiTriggerNPCIdFieldNumber = 4;
  inline ::google::protobuf::uint32 uitriggernpcid() const;
  inline void set_uitriggernpcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_AddQuestTrigger)
 private:
  inline void set_has_uiquestid();
  inline void clear_has_uiquestid();
  inline void set_has_uiquesttargettype();
  inline void clear_has_uiquesttargettype();
  inline void set_has_uitriggerid();
  inline void clear_has_uitriggerid();
  inline void set_has_uitriggernpcid();
  inline void clear_has_uitriggernpcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiquestid_;
  ::google::protobuf::uint32 uiquesttargettype_;
  ::google::protobuf::uint32 uitriggerid_;
  ::google::protobuf::uint32 uitriggernpcid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_AddQuestTrigger* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_UpdateTask : public ::google::protobuf::Message {
 public:
  Game2Battle_UpdateTask();
  virtual ~Game2Battle_UpdateTask();

  Game2Battle_UpdateTask(const Game2Battle_UpdateTask& from);

  inline Game2Battle_UpdateTask& operator=(const Game2Battle_UpdateTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_UpdateTask& default_instance();

  void Swap(Game2Battle_UpdateTask* other);

  // implements Message ----------------------------------------------

  Game2Battle_UpdateTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_UpdateTask& from);
  void MergeFrom(const Game2Battle_UpdateTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiId = 1;
  inline bool has_uiid() const;
  inline void clear_uiid();
  static const int kUiIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiid() const;
  inline void set_uiid(::google::protobuf::uint32 value);

  // required uint32 uiValue = 2;
  inline bool has_uivalue() const;
  inline void clear_uivalue();
  static const int kUiValueFieldNumber = 2;
  inline ::google::protobuf::uint32 uivalue() const;
  inline void set_uivalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_UpdateTask)
 private:
  inline void set_has_uiid();
  inline void clear_has_uiid();
  inline void set_has_uivalue();
  inline void clear_has_uivalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiid_;
  ::google::protobuf::uint32 uivalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_UpdateTask* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_QuestNPCAddBuff : public ::google::protobuf::Message {
 public:
  Game2Battle_QuestNPCAddBuff();
  virtual ~Game2Battle_QuestNPCAddBuff();

  Game2Battle_QuestNPCAddBuff(const Game2Battle_QuestNPCAddBuff& from);

  inline Game2Battle_QuestNPCAddBuff& operator=(const Game2Battle_QuestNPCAddBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_QuestNPCAddBuff& default_instance();

  void Swap(Game2Battle_QuestNPCAddBuff* other);

  // implements Message ----------------------------------------------

  Game2Battle_QuestNPCAddBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_QuestNPCAddBuff& from);
  void MergeFrom(const Game2Battle_QuestNPCAddBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nTriggerNPCId = 1;
  inline bool has_ntriggernpcid() const;
  inline void clear_ntriggernpcid();
  static const int kNTriggerNPCIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ntriggernpcid() const;
  inline void set_ntriggernpcid(::google::protobuf::uint32 value);

  // required uint32 uiType = 2;
  inline bool has_uitype() const;
  inline void clear_uitype();
  static const int kUiTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uitype() const;
  inline void set_uitype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_QuestNPCAddBuff)
 private:
  inline void set_has_ntriggernpcid();
  inline void clear_has_ntriggernpcid();
  inline void set_has_uitype();
  inline void clear_has_uitype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ntriggernpcid_;
  ::google::protobuf::uint32 uitype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_QuestNPCAddBuff* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_GameStoryStart : public ::google::protobuf::Message {
 public:
  Client2Battle_GameStoryStart();
  virtual ~Client2Battle_GameStoryStart();

  Client2Battle_GameStoryStart(const Client2Battle_GameStoryStart& from);

  inline Client2Battle_GameStoryStart& operator=(const Client2Battle_GameStoryStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_GameStoryStart& default_instance();

  void Swap(Client2Battle_GameStoryStart* other);

  // implements Message ----------------------------------------------

  Client2Battle_GameStoryStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_GameStoryStart& from);
  void MergeFrom(const Client2Battle_GameStoryStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 GameStoryID = 1;
  inline bool has_gamestoryid() const;
  inline void clear_gamestoryid();
  static const int kGameStoryIDFieldNumber = 1;
  inline ::google::protobuf::uint32 gamestoryid() const;
  inline void set_gamestoryid(::google::protobuf::uint32 value);

  // optional uint32 NPCID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNPCIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_GameStoryStart)
 private:
  inline void set_has_gamestoryid();
  inline void clear_has_gamestoryid();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 gamestoryid_;
  ::google::protobuf::uint32 npcid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_GameStoryStart* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_GameStoryEnd : public ::google::protobuf::Message {
 public:
  Client2Battle_GameStoryEnd();
  virtual ~Client2Battle_GameStoryEnd();

  Client2Battle_GameStoryEnd(const Client2Battle_GameStoryEnd& from);

  inline Client2Battle_GameStoryEnd& operator=(const Client2Battle_GameStoryEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_GameStoryEnd& default_instance();

  void Swap(Client2Battle_GameStoryEnd* other);

  // implements Message ----------------------------------------------

  Client2Battle_GameStoryEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_GameStoryEnd& from);
  void MergeFrom(const Client2Battle_GameStoryEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 GameStoryID = 1;
  inline bool has_gamestoryid() const;
  inline void clear_gamestoryid();
  static const int kGameStoryIDFieldNumber = 1;
  inline ::google::protobuf::uint32 gamestoryid() const;
  inline void set_gamestoryid(::google::protobuf::uint32 value);

  // optional uint32 NPCID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNPCIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_GameStoryEnd)
 private:
  inline void set_has_gamestoryid();
  inline void clear_has_gamestoryid();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 gamestoryid_;
  ::google::protobuf::uint32 npcid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_GameStoryEnd* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_NPCStopAI : public ::google::protobuf::Message {
 public:
  Client2Battle_NPCStopAI();
  virtual ~Client2Battle_NPCStopAI();

  Client2Battle_NPCStopAI(const Client2Battle_NPCStopAI& from);

  inline Client2Battle_NPCStopAI& operator=(const Client2Battle_NPCStopAI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_NPCStopAI& default_instance();

  void Swap(Client2Battle_NPCStopAI* other);

  // implements Message ----------------------------------------------

  Client2Battle_NPCStopAI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_NPCStopAI& from);
  void MergeFrom(const Client2Battle_NPCStopAI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 NPCID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNPCIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_NPCStopAI)
 private:
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 npcid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_NPCStopAI* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_NPCActiveAI : public ::google::protobuf::Message {
 public:
  Client2Battle_NPCActiveAI();
  virtual ~Client2Battle_NPCActiveAI();

  Client2Battle_NPCActiveAI(const Client2Battle_NPCActiveAI& from);

  inline Client2Battle_NPCActiveAI& operator=(const Client2Battle_NPCActiveAI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_NPCActiveAI& default_instance();

  void Swap(Client2Battle_NPCActiveAI* other);

  // implements Message ----------------------------------------------

  Client2Battle_NPCActiveAI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_NPCActiveAI& from);
  void MergeFrom(const Client2Battle_NPCActiveAI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 NPCID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNPCIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_NPCActiveAI)
 private:
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 npcid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_NPCActiveAI* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_DungeonLoadOk : public ::google::protobuf::Message {
 public:
  Battle2Game_DungeonLoadOk();
  virtual ~Battle2Game_DungeonLoadOk();

  Battle2Game_DungeonLoadOk(const Battle2Game_DungeonLoadOk& from);

  inline Battle2Game_DungeonLoadOk& operator=(const Battle2Game_DungeonLoadOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_DungeonLoadOk& default_instance();

  void Swap(Battle2Game_DungeonLoadOk* other);

  // implements Message ----------------------------------------------

  Battle2Game_DungeonLoadOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_DungeonLoadOk& from);
  void MergeFrom(const Battle2Game_DungeonLoadOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiProId = 1;
  inline bool has_uiproid() const;
  inline void clear_uiproid();
  static const int kUiProIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiproid() const;
  inline void set_uiproid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_DungeonLoadOk)
 private:
  inline void set_has_uiproid();
  inline void clear_has_uiproid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiproid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_DungeonLoadOk* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_WolrdBossDorp_ItemList : public ::google::protobuf::Message {
 public:
  Client2Battle_WolrdBossDorp_ItemList();
  virtual ~Client2Battle_WolrdBossDorp_ItemList();

  Client2Battle_WolrdBossDorp_ItemList(const Client2Battle_WolrdBossDorp_ItemList& from);

  inline Client2Battle_WolrdBossDorp_ItemList& operator=(const Client2Battle_WolrdBossDorp_ItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_WolrdBossDorp_ItemList& default_instance();

  void Swap(Client2Battle_WolrdBossDorp_ItemList* other);

  // implements Message ----------------------------------------------

  Client2Battle_WolrdBossDorp_ItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_WolrdBossDorp_ItemList& from);
  void MergeFrom(const Client2Battle_WolrdBossDorp_ItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.IDNum vecItemList = 1;
  inline int vecitemlist_size() const;
  inline void clear_vecitemlist();
  static const int kVecItemListFieldNumber = 1;
  inline const ::proto::message::IDNum& vecitemlist(int index) const;
  inline ::proto::message::IDNum* mutable_vecitemlist(int index);
  inline ::proto::message::IDNum* add_vecitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      vecitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_vecitemlist();

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_WolrdBossDorp_ItemList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > vecitemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_WolrdBossDorp_ItemList* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_WorldBoss_HurtRankList : public ::google::protobuf::Message {
 public:
  Client2Battle_WorldBoss_HurtRankList();
  virtual ~Client2Battle_WorldBoss_HurtRankList();

  Client2Battle_WorldBoss_HurtRankList(const Client2Battle_WorldBoss_HurtRankList& from);

  inline Client2Battle_WorldBoss_HurtRankList& operator=(const Client2Battle_WorldBoss_HurtRankList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_WorldBoss_HurtRankList& default_instance();

  void Swap(Client2Battle_WorldBoss_HurtRankList* other);

  // implements Message ----------------------------------------------

  Client2Battle_WorldBoss_HurtRankList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_WorldBoss_HurtRankList& from);
  void MergeFrom(const Client2Battle_WorldBoss_HurtRankList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiBossType = 1;
  inline bool has_uibosstype() const;
  inline void clear_uibosstype();
  static const int kUiBossTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 uibosstype() const;
  inline void set_uibosstype(::google::protobuf::uint32 value);

  // optional uint32 uiBossTableId = 2;
  inline bool has_uibosstableid() const;
  inline void clear_uibosstableid();
  static const int kUiBossTableIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uibosstableid() const;
  inline void set_uibosstableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_WorldBoss_HurtRankList)
 private:
  inline void set_has_uibosstype();
  inline void clear_has_uibosstype();
  inline void set_has_uibosstableid();
  inline void clear_has_uibosstableid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uibosstype_;
  ::google::protobuf::uint32 uibosstableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_WorldBoss_HurtRankList* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_WolrdBoss_HurtRankList : public ::google::protobuf::Message {
 public:
  Battle2Client_WolrdBoss_HurtRankList();
  virtual ~Battle2Client_WolrdBoss_HurtRankList();

  Battle2Client_WolrdBoss_HurtRankList(const Battle2Client_WolrdBoss_HurtRankList& from);

  inline Battle2Client_WolrdBoss_HurtRankList& operator=(const Battle2Client_WolrdBoss_HurtRankList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_WolrdBoss_HurtRankList& default_instance();

  void Swap(Battle2Client_WolrdBoss_HurtRankList* other);

  // implements Message ----------------------------------------------

  Battle2Client_WolrdBoss_HurtRankList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_WolrdBoss_HurtRankList& from);
  void MergeFrom(const Battle2Client_WolrdBoss_HurtRankList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string namelist = 1;
  inline int namelist_size() const;
  inline void clear_namelist();
  static const int kNamelistFieldNumber = 1;
  inline const ::std::string& namelist(int index) const;
  inline ::std::string* mutable_namelist(int index);
  inline void set_namelist(int index, const ::std::string& value);
  inline void set_namelist(int index, const char* value);
  inline void set_namelist(int index, const char* value, size_t size);
  inline ::std::string* add_namelist();
  inline void add_namelist(const ::std::string& value);
  inline void add_namelist(const char* value);
  inline void add_namelist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& namelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_namelist();

  // repeated uint64 hurttotal = 2;
  inline int hurttotal_size() const;
  inline void clear_hurttotal();
  static const int kHurttotalFieldNumber = 2;
  inline ::google::protobuf::uint64 hurttotal(int index) const;
  inline void set_hurttotal(int index, ::google::protobuf::uint64 value);
  inline void add_hurttotal(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      hurttotal() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_hurttotal();

  // required uint64 selfhurttotal = 3;
  inline bool has_selfhurttotal() const;
  inline void clear_selfhurttotal();
  static const int kSelfhurttotalFieldNumber = 3;
  inline ::google::protobuf::uint64 selfhurttotal() const;
  inline void set_selfhurttotal(::google::protobuf::uint64 value);

  // required uint32 selfrank = 4;
  inline bool has_selfrank() const;
  inline void clear_selfrank();
  static const int kSelfrankFieldNumber = 4;
  inline ::google::protobuf::uint32 selfrank() const;
  inline void set_selfrank(::google::protobuf::uint32 value);

  // required uint32 uiBossType = 5;
  inline bool has_uibosstype() const;
  inline void clear_uibosstype();
  static const int kUiBossTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 uibosstype() const;
  inline void set_uibosstype(::google::protobuf::uint32 value);

  // optional uint32 uiBossTableId = 6;
  inline bool has_uibosstableid() const;
  inline void clear_uibosstableid();
  static const int kUiBossTableIdFieldNumber = 6;
  inline ::google::protobuf::uint32 uibosstableid() const;
  inline void set_uibosstableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_WolrdBoss_HurtRankList)
 private:
  inline void set_has_selfhurttotal();
  inline void clear_has_selfhurttotal();
  inline void set_has_selfrank();
  inline void clear_has_selfrank();
  inline void set_has_uibosstype();
  inline void clear_has_uibosstype();
  inline void set_has_uibosstableid();
  inline void clear_has_uibosstableid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> namelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > hurttotal_;
  ::google::protobuf::uint64 selfhurttotal_;
  ::google::protobuf::uint32 selfrank_;
  ::google::protobuf::uint32 uibosstype_;
  ::google::protobuf::uint32 uibosstableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_WolrdBoss_HurtRankList* default_instance_;
};
// -------------------------------------------------------------------

class WolrdBossSaleItem : public ::google::protobuf::Message {
 public:
  WolrdBossSaleItem();
  virtual ~WolrdBossSaleItem();

  WolrdBossSaleItem(const WolrdBossSaleItem& from);

  inline WolrdBossSaleItem& operator=(const WolrdBossSaleItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WolrdBossSaleItem& default_instance();

  void Swap(WolrdBossSaleItem* other);

  // implements Message ----------------------------------------------

  WolrdBossSaleItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WolrdBossSaleItem& from);
  void MergeFrom(const WolrdBossSaleItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiIndex = 1;
  inline bool has_uiindex() const;
  inline void clear_uiindex();
  static const int kUiIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 uiindex() const;
  inline void set_uiindex(::google::protobuf::uint32 value);

  // required uint32 uiExpiryTime = 2;
  inline bool has_uiexpirytime() const;
  inline void clear_uiexpirytime();
  static const int kUiExpiryTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 uiexpirytime() const;
  inline void set_uiexpirytime(::google::protobuf::uint32 value);

  // required uint32 uiShareNum = 3;
  inline bool has_uisharenum() const;
  inline void clear_uisharenum();
  static const int kUiShareNumFieldNumber = 3;
  inline ::google::protobuf::uint32 uisharenum() const;
  inline void set_uisharenum(::google::protobuf::uint32 value);

  // required string uiPlayerName = 4;
  inline bool has_uiplayername() const;
  inline void clear_uiplayername();
  static const int kUiPlayerNameFieldNumber = 4;
  inline const ::std::string& uiplayername() const;
  inline void set_uiplayername(const ::std::string& value);
  inline void set_uiplayername(const char* value);
  inline void set_uiplayername(const char* value, size_t size);
  inline ::std::string* mutable_uiplayername();
  inline ::std::string* release_uiplayername();
  inline void set_allocated_uiplayername(::std::string* uiplayername);

  // required uint32 uiPlayerJob = 5;
  inline bool has_uiplayerjob() const;
  inline void clear_uiplayerjob();
  static const int kUiPlayerJobFieldNumber = 5;
  inline ::google::protobuf::uint32 uiplayerjob() const;
  inline void set_uiplayerjob(::google::protobuf::uint32 value);

  // required uint32 uiPlayerLevel = 6;
  inline bool has_uiplayerlevel() const;
  inline void clear_uiplayerlevel();
  static const int kUiPlayerLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 uiplayerlevel() const;
  inline void set_uiplayerlevel(::google::protobuf::uint32 value);

  // required uint32 uiPrice = 7;
  inline bool has_uiprice() const;
  inline void clear_uiprice();
  static const int kUiPriceFieldNumber = 7;
  inline ::google::protobuf::uint32 uiprice() const;
  inline void set_uiprice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.WolrdBossSaleItem)
 private:
  inline void set_has_uiindex();
  inline void clear_has_uiindex();
  inline void set_has_uiexpirytime();
  inline void clear_has_uiexpirytime();
  inline void set_has_uisharenum();
  inline void clear_has_uisharenum();
  inline void set_has_uiplayername();
  inline void clear_has_uiplayername();
  inline void set_has_uiplayerjob();
  inline void clear_has_uiplayerjob();
  inline void set_has_uiplayerlevel();
  inline void clear_has_uiplayerlevel();
  inline void set_has_uiprice();
  inline void clear_has_uiprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiindex_;
  ::google::protobuf::uint32 uiexpirytime_;
  ::std::string* uiplayername_;
  ::google::protobuf::uint32 uisharenum_;
  ::google::protobuf::uint32 uiplayerjob_;
  ::google::protobuf::uint32 uiplayerlevel_;
  ::google::protobuf::uint32 uiprice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static WolrdBossSaleItem* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_WolrdBoss_DorpItemList : public ::google::protobuf::Message {
 public:
  Battle2Client_WolrdBoss_DorpItemList();
  virtual ~Battle2Client_WolrdBoss_DorpItemList();

  Battle2Client_WolrdBoss_DorpItemList(const Battle2Client_WolrdBoss_DorpItemList& from);

  inline Battle2Client_WolrdBoss_DorpItemList& operator=(const Battle2Client_WolrdBoss_DorpItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_WolrdBoss_DorpItemList& default_instance();

  void Swap(Battle2Client_WolrdBoss_DorpItemList* other);

  // implements Message ----------------------------------------------

  Battle2Client_WolrdBoss_DorpItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_WolrdBoss_DorpItemList& from);
  void MergeFrom(const Battle2Client_WolrdBoss_DorpItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.IDNum vecItemList = 1;
  inline int vecitemlist_size() const;
  inline void clear_vecitemlist();
  static const int kVecItemListFieldNumber = 1;
  inline const ::proto::message::IDNum& vecitemlist(int index) const;
  inline ::proto::message::IDNum* mutable_vecitemlist(int index);
  inline ::proto::message::IDNum* add_vecitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      vecitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_vecitemlist();

  // required .proto.message.WolrdBossSaleItem sSaleItem = 2;
  inline bool has_ssaleitem() const;
  inline void clear_ssaleitem();
  static const int kSSaleItemFieldNumber = 2;
  inline const ::proto::message::WolrdBossSaleItem& ssaleitem() const;
  inline ::proto::message::WolrdBossSaleItem* mutable_ssaleitem();
  inline ::proto::message::WolrdBossSaleItem* release_ssaleitem();
  inline void set_allocated_ssaleitem(::proto::message::WolrdBossSaleItem* ssaleitem);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_WolrdBoss_DorpItemList)
 private:
  inline void set_has_ssaleitem();
  inline void clear_has_ssaleitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > vecitemlist_;
  ::proto::message::WolrdBossSaleItem* ssaleitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_WolrdBoss_DorpItemList* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_WolrdBoss_SaleBid : public ::google::protobuf::Message {
 public:
  Battle2Client_WolrdBoss_SaleBid();
  virtual ~Battle2Client_WolrdBoss_SaleBid();

  Battle2Client_WolrdBoss_SaleBid(const Battle2Client_WolrdBoss_SaleBid& from);

  inline Battle2Client_WolrdBoss_SaleBid& operator=(const Battle2Client_WolrdBoss_SaleBid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_WolrdBoss_SaleBid& default_instance();

  void Swap(Battle2Client_WolrdBoss_SaleBid* other);

  // implements Message ----------------------------------------------

  Battle2Client_WolrdBoss_SaleBid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_WolrdBoss_SaleBid& from);
  void MergeFrom(const Battle2Client_WolrdBoss_SaleBid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiIndex = 1;
  inline bool has_uiindex() const;
  inline void clear_uiindex();
  static const int kUiIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 uiindex() const;
  inline void set_uiindex(::google::protobuf::uint32 value);

  // required string uiPlayerName = 2;
  inline bool has_uiplayername() const;
  inline void clear_uiplayername();
  static const int kUiPlayerNameFieldNumber = 2;
  inline const ::std::string& uiplayername() const;
  inline void set_uiplayername(const ::std::string& value);
  inline void set_uiplayername(const char* value);
  inline void set_uiplayername(const char* value, size_t size);
  inline ::std::string* mutable_uiplayername();
  inline ::std::string* release_uiplayername();
  inline void set_allocated_uiplayername(::std::string* uiplayername);

  // required uint32 uiPlayerJob = 3;
  inline bool has_uiplayerjob() const;
  inline void clear_uiplayerjob();
  static const int kUiPlayerJobFieldNumber = 3;
  inline ::google::protobuf::uint32 uiplayerjob() const;
  inline void set_uiplayerjob(::google::protobuf::uint32 value);

  // required uint32 uiPlayerLevel = 4;
  inline bool has_uiplayerlevel() const;
  inline void clear_uiplayerlevel();
  static const int kUiPlayerLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 uiplayerlevel() const;
  inline void set_uiplayerlevel(::google::protobuf::uint32 value);

  // required uint32 uiPrice = 5;
  inline bool has_uiprice() const;
  inline void clear_uiprice();
  static const int kUiPriceFieldNumber = 5;
  inline ::google::protobuf::uint32 uiprice() const;
  inline void set_uiprice(::google::protobuf::uint32 value);

  // optional uint32 uiExpiryTime = 6;
  inline bool has_uiexpirytime() const;
  inline void clear_uiexpirytime();
  static const int kUiExpiryTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 uiexpirytime() const;
  inline void set_uiexpirytime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_WolrdBoss_SaleBid)
 private:
  inline void set_has_uiindex();
  inline void clear_has_uiindex();
  inline void set_has_uiplayername();
  inline void clear_has_uiplayername();
  inline void set_has_uiplayerjob();
  inline void clear_has_uiplayerjob();
  inline void set_has_uiplayerlevel();
  inline void clear_has_uiplayerlevel();
  inline void set_has_uiprice();
  inline void clear_has_uiprice();
  inline void set_has_uiexpirytime();
  inline void clear_has_uiexpirytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* uiplayername_;
  ::google::protobuf::uint32 uiindex_;
  ::google::protobuf::uint32 uiplayerjob_;
  ::google::protobuf::uint32 uiplayerlevel_;
  ::google::protobuf::uint32 uiprice_;
  ::google::protobuf::uint32 uiexpirytime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_WolrdBoss_SaleBid* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_WolrdBoss_SaleResult : public ::google::protobuf::Message {
 public:
  Battle2Client_WolrdBoss_SaleResult();
  virtual ~Battle2Client_WolrdBoss_SaleResult();

  Battle2Client_WolrdBoss_SaleResult(const Battle2Client_WolrdBoss_SaleResult& from);

  inline Battle2Client_WolrdBoss_SaleResult& operator=(const Battle2Client_WolrdBoss_SaleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_WolrdBoss_SaleResult& default_instance();

  void Swap(Battle2Client_WolrdBoss_SaleResult* other);

  // implements Message ----------------------------------------------

  Battle2Client_WolrdBoss_SaleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_WolrdBoss_SaleResult& from);
  void MergeFrom(const Battle2Client_WolrdBoss_SaleResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiIndex = 1;
  inline bool has_uiindex() const;
  inline void clear_uiindex();
  static const int kUiIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 uiindex() const;
  inline void set_uiindex(::google::protobuf::uint32 value);

  // optional string uiPlayerName = 2;
  inline bool has_uiplayername() const;
  inline void clear_uiplayername();
  static const int kUiPlayerNameFieldNumber = 2;
  inline const ::std::string& uiplayername() const;
  inline void set_uiplayername(const ::std::string& value);
  inline void set_uiplayername(const char* value);
  inline void set_uiplayername(const char* value, size_t size);
  inline ::std::string* mutable_uiplayername();
  inline ::std::string* release_uiplayername();
  inline void set_allocated_uiplayername(::std::string* uiplayername);

  // optional uint32 uiPlayerJob = 3;
  inline bool has_uiplayerjob() const;
  inline void clear_uiplayerjob();
  static const int kUiPlayerJobFieldNumber = 3;
  inline ::google::protobuf::uint32 uiplayerjob() const;
  inline void set_uiplayerjob(::google::protobuf::uint32 value);

  // optional uint32 uiPlayerLevel = 4;
  inline bool has_uiplayerlevel() const;
  inline void clear_uiplayerlevel();
  static const int kUiPlayerLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 uiplayerlevel() const;
  inline void set_uiplayerlevel(::google::protobuf::uint32 value);

  // optional uint32 uiPrice = 5;
  inline bool has_uiprice() const;
  inline void clear_uiprice();
  static const int kUiPriceFieldNumber = 5;
  inline ::google::protobuf::uint32 uiprice() const;
  inline void set_uiprice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_WolrdBoss_SaleResult)
 private:
  inline void set_has_uiindex();
  inline void clear_has_uiindex();
  inline void set_has_uiplayername();
  inline void clear_has_uiplayername();
  inline void set_has_uiplayerjob();
  inline void clear_has_uiplayerjob();
  inline void set_has_uiplayerlevel();
  inline void clear_has_uiplayerlevel();
  inline void set_has_uiprice();
  inline void clear_has_uiprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* uiplayername_;
  ::google::protobuf::uint32 uiindex_;
  ::google::protobuf::uint32 uiplayerjob_;
  ::google::protobuf::uint32 uiplayerlevel_;
  ::google::protobuf::uint32 uiprice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_WolrdBoss_SaleResult* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_WolrdBoss_SaleResult : public ::google::protobuf::Message {
 public:
  Battle2Game_WolrdBoss_SaleResult();
  virtual ~Battle2Game_WolrdBoss_SaleResult();

  Battle2Game_WolrdBoss_SaleResult(const Battle2Game_WolrdBoss_SaleResult& from);

  inline Battle2Game_WolrdBoss_SaleResult& operator=(const Battle2Game_WolrdBoss_SaleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_WolrdBoss_SaleResult& default_instance();

  void Swap(Battle2Game_WolrdBoss_SaleResult* other);

  // implements Message ----------------------------------------------

  Battle2Game_WolrdBoss_SaleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_WolrdBoss_SaleResult& from);
  void MergeFrom(const Battle2Game_WolrdBoss_SaleResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.WolrdBossSaledItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::proto::message::WolrdBossSaledItem& item() const;
  inline ::proto::message::WolrdBossSaledItem* mutable_item();
  inline ::proto::message::WolrdBossSaledItem* release_item();
  inline void set_allocated_item(::proto::message::WolrdBossSaledItem* item);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_WolrdBoss_SaleResult)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::WolrdBossSaledItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_WolrdBoss_SaleResult* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_SendMail : public ::google::protobuf::Message {
 public:
  Battle2Game_SendMail();
  virtual ~Battle2Game_SendMail();

  Battle2Game_SendMail(const Battle2Game_SendMail& from);

  inline Battle2Game_SendMail& operator=(const Battle2Game_SendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_SendMail& default_instance();

  void Swap(Battle2Game_SendMail* other);

  // implements Message ----------------------------------------------

  Battle2Game_SendMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_SendMail& from);
  void MergeFrom(const Battle2Game_SendMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uiSendTo = 1;
  inline bool has_uisendto() const;
  inline void clear_uisendto();
  static const int kUiSendToFieldNumber = 1;
  inline ::google::protobuf::uint64 uisendto() const;
  inline void set_uisendto(::google::protobuf::uint64 value);

  // required uint32 uiMode = 2;
  inline bool has_uimode() const;
  inline void clear_uimode();
  static const int kUiModeFieldNumber = 2;
  inline ::google::protobuf::uint32 uimode() const;
  inline void set_uimode(::google::protobuf::uint32 value);

  // required uint32 uiArg = 3;
  inline bool has_uiarg() const;
  inline void clear_uiarg();
  static const int kUiArgFieldNumber = 3;
  inline ::google::protobuf::uint32 uiarg() const;
  inline void set_uiarg(::google::protobuf::uint32 value);

  // optional string szArg = 4;
  inline bool has_szarg() const;
  inline void clear_szarg();
  static const int kSzArgFieldNumber = 4;
  inline const ::std::string& szarg() const;
  inline void set_szarg(const ::std::string& value);
  inline void set_szarg(const char* value);
  inline void set_szarg(const char* value, size_t size);
  inline ::std::string* mutable_szarg();
  inline ::std::string* release_szarg();
  inline void set_allocated_szarg(::std::string* szarg);

  // repeated .proto.message.IDNum vecItemList = 5;
  inline int vecitemlist_size() const;
  inline void clear_vecitemlist();
  static const int kVecItemListFieldNumber = 5;
  inline const ::proto::message::IDNum& vecitemlist(int index) const;
  inline ::proto::message::IDNum* mutable_vecitemlist(int index);
  inline ::proto::message::IDNum* add_vecitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      vecitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_vecitemlist();

  // optional uint32 uiOpt = 6;
  inline bool has_uiopt() const;
  inline void clear_uiopt();
  static const int kUiOptFieldNumber = 6;
  inline ::google::protobuf::uint32 uiopt() const;
  inline void set_uiopt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_SendMail)
 private:
  inline void set_has_uisendto();
  inline void clear_has_uisendto();
  inline void set_has_uimode();
  inline void clear_has_uimode();
  inline void set_has_uiarg();
  inline void clear_has_uiarg();
  inline void set_has_szarg();
  inline void clear_has_szarg();
  inline void set_has_uiopt();
  inline void clear_has_uiopt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uisendto_;
  ::google::protobuf::uint32 uimode_;
  ::google::protobuf::uint32 uiarg_;
  ::std::string* szarg_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > vecitemlist_;
  ::google::protobuf::uint32 uiopt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_SendMail* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_WolrdBoss_HpChange : public ::google::protobuf::Message {
 public:
  Battle2Game_WolrdBoss_HpChange();
  virtual ~Battle2Game_WolrdBoss_HpChange();

  Battle2Game_WolrdBoss_HpChange(const Battle2Game_WolrdBoss_HpChange& from);

  inline Battle2Game_WolrdBoss_HpChange& operator=(const Battle2Game_WolrdBoss_HpChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_WolrdBoss_HpChange& default_instance();

  void Swap(Battle2Game_WolrdBoss_HpChange* other);

  // implements Message ----------------------------------------------

  Battle2Game_WolrdBoss_HpChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_WolrdBoss_HpChange& from);
  void MergeFrom(const Battle2Game_WolrdBoss_HpChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiBossType = 1;
  inline bool has_uibosstype() const;
  inline void clear_uibosstype();
  static const int kUiBossTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 uibosstype() const;
  inline void set_uibosstype(::google::protobuf::uint32 value);

  // required uint64 uiHp = 2;
  inline bool has_uihp() const;
  inline void clear_uihp();
  static const int kUiHpFieldNumber = 2;
  inline ::google::protobuf::uint64 uihp() const;
  inline void set_uihp(::google::protobuf::uint64 value);

  // optional uint32 uiBossTableId = 3;
  inline bool has_uibosstableid() const;
  inline void clear_uibosstableid();
  static const int kUiBossTableIdFieldNumber = 3;
  inline ::google::protobuf::uint32 uibosstableid() const;
  inline void set_uibosstableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_WolrdBoss_HpChange)
 private:
  inline void set_has_uibosstype();
  inline void clear_has_uibosstype();
  inline void set_has_uihp();
  inline void clear_has_uihp();
  inline void set_has_uibosstableid();
  inline void clear_has_uibosstableid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uihp_;
  ::google::protobuf::uint32 uibosstype_;
  ::google::protobuf::uint32 uibosstableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_WolrdBoss_HpChange* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_WolrdBoss_HpChange : public ::google::protobuf::Message {
 public:
  Battle2Client_WolrdBoss_HpChange();
  virtual ~Battle2Client_WolrdBoss_HpChange();

  Battle2Client_WolrdBoss_HpChange(const Battle2Client_WolrdBoss_HpChange& from);

  inline Battle2Client_WolrdBoss_HpChange& operator=(const Battle2Client_WolrdBoss_HpChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_WolrdBoss_HpChange& default_instance();

  void Swap(Battle2Client_WolrdBoss_HpChange* other);

  // implements Message ----------------------------------------------

  Battle2Client_WolrdBoss_HpChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_WolrdBoss_HpChange& from);
  void MergeFrom(const Battle2Client_WolrdBoss_HpChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiBossType = 1;
  inline bool has_uibosstype() const;
  inline void clear_uibosstype();
  static const int kUiBossTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 uibosstype() const;
  inline void set_uibosstype(::google::protobuf::uint32 value);

  // required uint64 uiHp = 2;
  inline bool has_uihp() const;
  inline void clear_uihp();
  static const int kUiHpFieldNumber = 2;
  inline ::google::protobuf::uint64 uihp() const;
  inline void set_uihp(::google::protobuf::uint64 value);

  // optional uint32 uiBossTableId = 3;
  inline bool has_uibosstableid() const;
  inline void clear_uibosstableid();
  static const int kUiBossTableIdFieldNumber = 3;
  inline ::google::protobuf::uint32 uibosstableid() const;
  inline void set_uibosstableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_WolrdBoss_HpChange)
 private:
  inline void set_has_uibosstype();
  inline void clear_has_uibosstype();
  inline void set_has_uihp();
  inline void clear_has_uihp();
  inline void set_has_uibosstableid();
  inline void clear_has_uibosstableid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uihp_;
  ::google::protobuf::uint32 uibosstype_;
  ::google::protobuf::uint32 uibosstableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_WolrdBoss_HpChange* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_AddCurHp : public ::google::protobuf::Message {
 public:
  Game2Battle_AddCurHp();
  virtual ~Game2Battle_AddCurHp();

  Game2Battle_AddCurHp(const Game2Battle_AddCurHp& from);

  inline Game2Battle_AddCurHp& operator=(const Game2Battle_AddCurHp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_AddCurHp& default_instance();

  void Swap(Game2Battle_AddCurHp* other);

  // implements Message ----------------------------------------------

  Game2Battle_AddCurHp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_AddCurHp& from);
  void MergeFrom(const Game2Battle_AddCurHp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiHp = 1;
  inline bool has_uihp() const;
  inline void clear_uihp();
  static const int kUiHpFieldNumber = 1;
  inline ::google::protobuf::uint32 uihp() const;
  inline void set_uihp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_AddCurHp)
 private:
  inline void set_has_uihp();
  inline void clear_has_uihp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uihp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_AddCurHp* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_AddBuff : public ::google::protobuf::Message {
 public:
  Game2Battle_AddBuff();
  virtual ~Game2Battle_AddBuff();

  Game2Battle_AddBuff(const Game2Battle_AddBuff& from);

  inline Game2Battle_AddBuff& operator=(const Game2Battle_AddBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_AddBuff& default_instance();

  void Swap(Game2Battle_AddBuff* other);

  // implements Message ----------------------------------------------

  Game2Battle_AddBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_AddBuff& from);
  void MergeFrom(const Game2Battle_AddBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiBuffId = 1;
  inline bool has_uibuffid() const;
  inline void clear_uibuffid();
  static const int kUiBuffIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uibuffid() const;
  inline void set_uibuffid(::google::protobuf::uint32 value);

  // required uint32 uiQuality = 2;
  inline bool has_uiquality() const;
  inline void clear_uiquality();
  static const int kUiQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 uiquality() const;
  inline void set_uiquality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_AddBuff)
 private:
  inline void set_has_uibuffid();
  inline void clear_has_uibuffid();
  inline void set_has_uiquality();
  inline void clear_has_uiquality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uibuffid_;
  ::google::protobuf::uint32 uiquality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_AddBuff* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_WorldBoss_SaledItem : public ::google::protobuf::Message {
 public:
  Client2Battle_WorldBoss_SaledItem();
  virtual ~Client2Battle_WorldBoss_SaledItem();

  Client2Battle_WorldBoss_SaledItem(const Client2Battle_WorldBoss_SaledItem& from);

  inline Client2Battle_WorldBoss_SaledItem& operator=(const Client2Battle_WorldBoss_SaledItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_WorldBoss_SaledItem& default_instance();

  void Swap(Client2Battle_WorldBoss_SaledItem* other);

  // implements Message ----------------------------------------------

  Client2Battle_WorldBoss_SaledItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_WorldBoss_SaledItem& from);
  void MergeFrom(const Client2Battle_WorldBoss_SaledItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiIndex = 1;
  inline bool has_uiindex() const;
  inline void clear_uiindex();
  static const int kUiIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 uiindex() const;
  inline void set_uiindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_WorldBoss_SaledItem)
 private:
  inline void set_has_uiindex();
  inline void clear_has_uiindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_WorldBoss_SaledItem* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_WorldBoss_SaledItem : public ::google::protobuf::Message {
 public:
  Battle2Client_WorldBoss_SaledItem();
  virtual ~Battle2Client_WorldBoss_SaledItem();

  Battle2Client_WorldBoss_SaledItem(const Battle2Client_WorldBoss_SaledItem& from);

  inline Battle2Client_WorldBoss_SaledItem& operator=(const Battle2Client_WorldBoss_SaledItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_WorldBoss_SaledItem& default_instance();

  void Swap(Battle2Client_WorldBoss_SaledItem* other);

  // implements Message ----------------------------------------------

  Battle2Client_WorldBoss_SaledItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_WorldBoss_SaledItem& from);
  void MergeFrom(const Battle2Client_WorldBoss_SaledItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.WolrdBossSaleItem sItem = 1;
  inline bool has_sitem() const;
  inline void clear_sitem();
  static const int kSItemFieldNumber = 1;
  inline const ::proto::message::WolrdBossSaleItem& sitem() const;
  inline ::proto::message::WolrdBossSaleItem* mutable_sitem();
  inline ::proto::message::WolrdBossSaleItem* release_sitem();
  inline void set_allocated_sitem(::proto::message::WolrdBossSaleItem* sitem);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_WorldBoss_SaledItem)
 private:
  inline void set_has_sitem();
  inline void clear_has_sitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::WolrdBossSaleItem* sitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_WorldBoss_SaledItem* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncDropItemAppear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncDropItemAppear();
  virtual ~Battle2Client_SyncDropItemAppear();

  Battle2Client_SyncDropItemAppear(const Battle2Client_SyncDropItemAppear& from);

  inline Battle2Client_SyncDropItemAppear& operator=(const Battle2Client_SyncDropItemAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncDropItemAppear& default_instance();

  void Swap(Battle2Client_SyncDropItemAppear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncDropItemAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncDropItemAppear& from);
  void MergeFrom(const Battle2Client_SyncDropItemAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // required uint32 uiType = 2;
  inline bool has_uitype() const;
  inline void clear_uitype();
  static const int kUiTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uitype() const;
  inline void set_uitype(::google::protobuf::uint32 value);

  // required .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // repeated .proto.message.IDNum vecItemId = 4;
  inline int vecitemid_size() const;
  inline void clear_vecitemid();
  static const int kVecItemIdFieldNumber = 4;
  inline const ::proto::message::IDNum& vecitemid(int index) const;
  inline ::proto::message::IDNum* mutable_vecitemid(int index);
  inline ::proto::message::IDNum* add_vecitemid();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      vecitemid() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_vecitemid();

  // required uint64 uiOwnerId = 5;
  inline bool has_uiownerid() const;
  inline void clear_uiownerid();
  static const int kUiOwnerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 uiownerid() const;
  inline void set_uiownerid(::google::protobuf::uint64 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncDropItemAppear)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_uitype();
  inline void clear_has_uitype();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_uiownerid();
  inline void clear_has_uiownerid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;
  ::google::protobuf::uint32 uitype_;
  ::proto::message::Point3D* pt_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > vecitemid_;
  ::google::protobuf::uint64 uiownerid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncDropItemAppear* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_TicketBoss_DropItem : public ::google::protobuf::Message {
 public:
  Battle2Client_TicketBoss_DropItem();
  virtual ~Battle2Client_TicketBoss_DropItem();

  Battle2Client_TicketBoss_DropItem(const Battle2Client_TicketBoss_DropItem& from);

  inline Battle2Client_TicketBoss_DropItem& operator=(const Battle2Client_TicketBoss_DropItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_TicketBoss_DropItem& default_instance();

  void Swap(Battle2Client_TicketBoss_DropItem* other);

  // implements Message ----------------------------------------------

  Battle2Client_TicketBoss_DropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_TicketBoss_DropItem& from);
  void MergeFrom(const Battle2Client_TicketBoss_DropItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiBossTableId = 1;
  inline bool has_uibosstableid() const;
  inline void clear_uibosstableid();
  static const int kUiBossTableIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uibosstableid() const;
  inline void set_uibosstableid(::google::protobuf::uint32 value);

  // repeated .proto.message.Battle2Client_SyncDropItemAppear vecItemList = 2;
  inline int vecitemlist_size() const;
  inline void clear_vecitemlist();
  static const int kVecItemListFieldNumber = 2;
  inline const ::proto::message::Battle2Client_SyncDropItemAppear& vecitemlist(int index) const;
  inline ::proto::message::Battle2Client_SyncDropItemAppear* mutable_vecitemlist(int index);
  inline ::proto::message::Battle2Client_SyncDropItemAppear* add_vecitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >&
      vecitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >*
      mutable_vecitemlist();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_TicketBoss_DropItem)
 private:
  inline void set_has_uibosstableid();
  inline void clear_has_uibosstableid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear > vecitemlist_;
  ::google::protobuf::uint32 uibosstableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_TicketBoss_DropItem* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncDropItemChange : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncDropItemChange();
  virtual ~Battle2Client_SyncDropItemChange();

  Battle2Client_SyncDropItemChange(const Battle2Client_SyncDropItemChange& from);

  inline Battle2Client_SyncDropItemChange& operator=(const Battle2Client_SyncDropItemChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncDropItemChange& default_instance();

  void Swap(Battle2Client_SyncDropItemChange* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncDropItemChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncDropItemChange& from);
  void MergeFrom(const Battle2Client_SyncDropItemChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // required int32 iItemIndex = 2;
  inline bool has_iitemindex() const;
  inline void clear_iitemindex();
  static const int kIItemIndexFieldNumber = 2;
  inline ::google::protobuf::int32 iitemindex() const;
  inline void set_iitemindex(::google::protobuf::int32 value);

  // required uint64 uiOwnerId = 3;
  inline bool has_uiownerid() const;
  inline void clear_uiownerid();
  static const int kUiOwnerIdFieldNumber = 3;
  inline ::google::protobuf::uint64 uiownerid() const;
  inline void set_uiownerid(::google::protobuf::uint64 value);

  // required uint32 uiTakeObjId = 4;
  inline bool has_uitakeobjid() const;
  inline void clear_uitakeobjid();
  static const int kUiTakeObjIdFieldNumber = 4;
  inline ::google::protobuf::uint32 uitakeobjid() const;
  inline void set_uitakeobjid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncDropItemChange)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_iitemindex();
  inline void clear_has_iitemindex();
  inline void set_has_uiownerid();
  inline void clear_has_uiownerid();
  inline void set_has_uitakeobjid();
  inline void clear_has_uitakeobjid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;
  ::google::protobuf::int32 iitemindex_;
  ::google::protobuf::uint64 uiownerid_;
  ::google::protobuf::uint32 uitakeobjid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncDropItemChange* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_Ping : public ::google::protobuf::Message {
 public:
  Client2Battle_Ping();
  virtual ~Client2Battle_Ping();

  Client2Battle_Ping(const Client2Battle_Ping& from);

  inline Client2Battle_Ping& operator=(const Client2Battle_Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_Ping& default_instance();

  void Swap(Client2Battle_Ping* other);

  // implements Message ----------------------------------------------

  Client2Battle_Ping* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_Ping& from);
  void MergeFrom(const Client2Battle_Ping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_Ping)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_Ping* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_Ping : public ::google::protobuf::Message {
 public:
  Battle2Client_Ping();
  virtual ~Battle2Client_Ping();

  Battle2Client_Ping(const Battle2Client_Ping& from);

  inline Battle2Client_Ping& operator=(const Battle2Client_Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_Ping& default_instance();

  void Swap(Battle2Client_Ping* other);

  // implements Message ----------------------------------------------

  Battle2Client_Ping* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_Ping& from);
  void MergeFrom(const Battle2Client_Ping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_Ping)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_Ping* default_instance_;
};
// -------------------------------------------------------------------

class Game2Battle_CreateMonster : public ::google::protobuf::Message {
 public:
  Game2Battle_CreateMonster();
  virtual ~Game2Battle_CreateMonster();

  Game2Battle_CreateMonster(const Game2Battle_CreateMonster& from);

  inline Game2Battle_CreateMonster& operator=(const Game2Battle_CreateMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2Battle_CreateMonster& default_instance();

  void Swap(Game2Battle_CreateMonster* other);

  // implements Message ----------------------------------------------

  Game2Battle_CreateMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2Battle_CreateMonster& from);
  void MergeFrom(const Game2Battle_CreateMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProID = 1;
  inline bool has_proid() const;
  inline void clear_proid();
  static const int kProIDFieldNumber = 1;
  inline ::google::protobuf::uint32 proid() const;
  inline void set_proid(::google::protobuf::uint32 value);

  // optional .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 from = 5;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 5;
  inline ::google::protobuf::int32 from() const;
  inline void set_from(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Game2Battle_CreateMonster)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_from();
  inline void clear_has_from();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 proid_;
  float dir_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 from_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Game2Battle_CreateMonster* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_ChangeAttackMode : public ::google::protobuf::Message {
 public:
  Client2Battle_ChangeAttackMode();
  virtual ~Client2Battle_ChangeAttackMode();

  Client2Battle_ChangeAttackMode(const Client2Battle_ChangeAttackMode& from);

  inline Client2Battle_ChangeAttackMode& operator=(const Client2Battle_ChangeAttackMode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_ChangeAttackMode& default_instance();

  void Swap(Client2Battle_ChangeAttackMode* other);

  // implements Message ----------------------------------------------

  Client2Battle_ChangeAttackMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_ChangeAttackMode& from);
  void MergeFrom(const Client2Battle_ChangeAttackMode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiAttackMode = 1;
  inline bool has_uiattackmode() const;
  inline void clear_uiattackmode();
  static const int kUiAttackModeFieldNumber = 1;
  inline ::google::protobuf::uint32 uiattackmode() const;
  inline void set_uiattackmode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_ChangeAttackMode)
 private:
  inline void set_has_uiattackmode();
  inline void clear_has_uiattackmode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiattackmode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_ChangeAttackMode* default_instance_;
};
// -------------------------------------------------------------------

class Client2Battle_Transfer : public ::google::protobuf::Message {
 public:
  Client2Battle_Transfer();
  virtual ~Client2Battle_Transfer();

  Client2Battle_Transfer(const Client2Battle_Transfer& from);

  inline Client2Battle_Transfer& operator=(const Client2Battle_Transfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Client2Battle_Transfer& default_instance();

  void Swap(Client2Battle_Transfer* other);

  // implements Message ----------------------------------------------

  Client2Battle_Transfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Client2Battle_Transfer& from);
  void MergeFrom(const Client2Battle_Transfer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiTransferTableId = 1;
  inline bool has_uitransfertableid() const;
  inline void clear_uitransfertableid();
  static const int kUiTransferTableIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uitransfertableid() const;
  inline void set_uitransfertableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Client2Battle_Transfer)
 private:
  inline void set_has_uitransfertableid();
  inline void clear_has_uitransfertableid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uitransfertableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Client2Battle_Transfer* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_Anchor : public ::google::protobuf::Message {
 public:
  Battle2Client_Anchor();
  virtual ~Battle2Client_Anchor();

  Battle2Client_Anchor(const Battle2Client_Anchor& from);

  inline Battle2Client_Anchor& operator=(const Battle2Client_Anchor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_Anchor& default_instance();

  void Swap(Battle2Client_Anchor* other);

  // implements Message ----------------------------------------------

  Battle2Client_Anchor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_Anchor& from);
  void MergeFrom(const Battle2Client_Anchor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_Anchor)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_Anchor* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_UpdateHeadInfo : public ::google::protobuf::Message {
 public:
  Battle2Client_UpdateHeadInfo();
  virtual ~Battle2Client_UpdateHeadInfo();

  Battle2Client_UpdateHeadInfo(const Battle2Client_UpdateHeadInfo& from);

  inline Battle2Client_UpdateHeadInfo& operator=(const Battle2Client_UpdateHeadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_UpdateHeadInfo& default_instance();

  void Swap(Battle2Client_UpdateHeadInfo* other);

  // implements Message ----------------------------------------------

  Battle2Client_UpdateHeadInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_UpdateHeadInfo& from);
  void MergeFrom(const Battle2Client_UpdateHeadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.BattleSingleHeadInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto::message::BattleSingleHeadInfo& info() const;
  inline ::proto::message::BattleSingleHeadInfo* mutable_info();
  inline ::proto::message::BattleSingleHeadInfo* release_info();
  inline void set_allocated_info(::proto::message::BattleSingleHeadInfo* info);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_UpdateHeadInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::BattleSingleHeadInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_UpdateHeadInfo* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_UpdateMercenaryRank : public ::google::protobuf::Message {
 public:
  Battle2Client_UpdateMercenaryRank();
  virtual ~Battle2Client_UpdateMercenaryRank();

  Battle2Client_UpdateMercenaryRank(const Battle2Client_UpdateMercenaryRank& from);

  inline Battle2Client_UpdateMercenaryRank& operator=(const Battle2Client_UpdateMercenaryRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_UpdateMercenaryRank& default_instance();

  void Swap(Battle2Client_UpdateMercenaryRank* other);

  // implements Message ----------------------------------------------

  Battle2Client_UpdateMercenaryRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_UpdateMercenaryRank& from);
  void MergeFrom(const Battle2Client_UpdateMercenaryRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiObjId = 1;
  inline bool has_uiobjid() const;
  inline void clear_uiobjid();
  static const int kUiObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uiobjid() const;
  inline void set_uiobjid(::google::protobuf::uint32 value);

  // optional int32 ranking = 2;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 2;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_UpdateMercenaryRank)
 private:
  inline void set_has_uiobjid();
  inline void clear_has_uiobjid();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiobjid_;
  ::google::protobuf::int32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_UpdateMercenaryRank* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_TriggerRadius : public ::google::protobuf::Message {
 public:
  Battle2Client_TriggerRadius();
  virtual ~Battle2Client_TriggerRadius();

  Battle2Client_TriggerRadius(const Battle2Client_TriggerRadius& from);

  inline Battle2Client_TriggerRadius& operator=(const Battle2Client_TriggerRadius& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_TriggerRadius& default_instance();

  void Swap(Battle2Client_TriggerRadius* other);

  // implements Message ----------------------------------------------

  Battle2Client_TriggerRadius* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_TriggerRadius& from);
  void MergeFrom(const Battle2Client_TriggerRadius& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiTriggerId = 1;
  inline bool has_uitriggerid() const;
  inline void clear_uitriggerid();
  static const int kUiTriggerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uitriggerid() const;
  inline void set_uitriggerid(::google::protobuf::uint32 value);

  // optional .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float fRadius = 3;
  inline bool has_fradius() const;
  inline void clear_fradius();
  static const int kFRadiusFieldNumber = 3;
  inline float fradius() const;
  inline void set_fradius(float value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_TriggerRadius)
 private:
  inline void set_has_uitriggerid();
  inline void clear_has_uitriggerid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_fradius();
  inline void clear_has_fradius();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 uitriggerid_;
  float fradius_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_TriggerRadius* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ScenePlayerNum : public ::google::protobuf::Message {
 public:
  Battle2Client_ScenePlayerNum();
  virtual ~Battle2Client_ScenePlayerNum();

  Battle2Client_ScenePlayerNum(const Battle2Client_ScenePlayerNum& from);

  inline Battle2Client_ScenePlayerNum& operator=(const Battle2Client_ScenePlayerNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ScenePlayerNum& default_instance();

  void Swap(Battle2Client_ScenePlayerNum* other);

  // implements Message ----------------------------------------------

  Battle2Client_ScenePlayerNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ScenePlayerNum& from);
  void MergeFrom(const Battle2Client_ScenePlayerNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSceneId = 1;
  inline bool has_uisceneid() const;
  inline void clear_uisceneid();
  static const int kUiSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisceneid() const;
  inline void set_uisceneid(::google::protobuf::uint32 value);

  // optional uint32 uiCurNum = 2;
  inline bool has_uicurnum() const;
  inline void clear_uicurnum();
  static const int kUiCurNumFieldNumber = 2;
  inline ::google::protobuf::uint32 uicurnum() const;
  inline void set_uicurnum(::google::protobuf::uint32 value);

  // optional uint32 uiMaxNum = 3;
  inline bool has_uimaxnum() const;
  inline void clear_uimaxnum();
  static const int kUiMaxNumFieldNumber = 3;
  inline ::google::protobuf::uint32 uimaxnum() const;
  inline void set_uimaxnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ScenePlayerNum)
 private:
  inline void set_has_uisceneid();
  inline void clear_has_uisceneid();
  inline void set_has_uicurnum();
  inline void clear_has_uicurnum();
  inline void set_has_uimaxnum();
  inline void clear_has_uimaxnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uisceneid_;
  ::google::protobuf::uint32 uicurnum_;
  ::google::protobuf::uint32 uimaxnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ScenePlayerNum* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_GradeDataChanged : public ::google::protobuf::Message {
 public:
  Battle2Client_GradeDataChanged();
  virtual ~Battle2Client_GradeDataChanged();

  Battle2Client_GradeDataChanged(const Battle2Client_GradeDataChanged& from);

  inline Battle2Client_GradeDataChanged& operator=(const Battle2Client_GradeDataChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_GradeDataChanged& default_instance();

  void Swap(Battle2Client_GradeDataChanged* other);

  // implements Message ----------------------------------------------

  Battle2Client_GradeDataChanged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_GradeDataChanged& from);
  void MergeFrom(const Battle2Client_GradeDataChanged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // optional .proto.message.IDNum data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto::message::IDNum& data() const;
  inline ::proto::message::IDNum* mutable_data();
  inline ::proto::message::IDNum* release_data();
  inline void set_allocated_data(::proto::message::IDNum* data);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_GradeDataChanged)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::IDNum* data_;
  ::google::protobuf::int32 grade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_GradeDataChanged* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncMonsterOnwer : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncMonsterOnwer();
  virtual ~Battle2Client_SyncMonsterOnwer();

  Battle2Client_SyncMonsterOnwer(const Battle2Client_SyncMonsterOnwer& from);

  inline Battle2Client_SyncMonsterOnwer& operator=(const Battle2Client_SyncMonsterOnwer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncMonsterOnwer& default_instance();

  void Swap(Battle2Client_SyncMonsterOnwer* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncMonsterOnwer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncMonsterOnwer& from);
  void MergeFrom(const Battle2Client_SyncMonsterOnwer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 monsterid = 1;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 1;
  inline ::google::protobuf::uint32 monsterid() const;
  inline void set_monsterid(::google::protobuf::uint32 value);

  // optional .proto.message.OwnerInfo owner = 2;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 2;
  inline const ::proto::message::OwnerInfo& owner() const;
  inline ::proto::message::OwnerInfo* mutable_owner();
  inline ::proto::message::OwnerInfo* release_owner();
  inline void set_allocated_owner(::proto::message::OwnerInfo* owner);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncMonsterOnwer)
 private:
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_owner();
  inline void clear_has_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::OwnerInfo* owner_;
  ::google::protobuf::uint32 monsterid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncMonsterOnwer* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SafeAreaStatus : public ::google::protobuf::Message {
 public:
  Battle2Client_SafeAreaStatus();
  virtual ~Battle2Client_SafeAreaStatus();

  Battle2Client_SafeAreaStatus(const Battle2Client_SafeAreaStatus& from);

  inline Battle2Client_SafeAreaStatus& operator=(const Battle2Client_SafeAreaStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SafeAreaStatus& default_instance();

  void Swap(Battle2Client_SafeAreaStatus* other);

  // implements Message ----------------------------------------------

  Battle2Client_SafeAreaStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SafeAreaStatus& from);
  void MergeFrom(const Battle2Client_SafeAreaStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SafeAreaStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SafeAreaStatus* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_ServerMove : public ::google::protobuf::Message {
 public:
  Battle2Client_ServerMove();
  virtual ~Battle2Client_ServerMove();

  Battle2Client_ServerMove(const Battle2Client_ServerMove& from);

  inline Battle2Client_ServerMove& operator=(const Battle2Client_ServerMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_ServerMove& default_instance();

  void Swap(Battle2Client_ServerMove* other);

  // implements Message ----------------------------------------------

  Battle2Client_ServerMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_ServerMove& from);
  void MergeFrom(const Battle2Client_ServerMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.Point3D pt = 1;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 1;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // required float dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline float dir() const;
  inline void set_dir(float value);

  // optional float speed = 3;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 3;
  inline float speed() const;
  inline void set_speed(float value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_ServerMove)
 private:
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_speed();
  inline void clear_has_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  float dir_;
  float speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_ServerMove* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_PlayerDie : public ::google::protobuf::Message {
 public:
  Battle2Client_PlayerDie();
  virtual ~Battle2Client_PlayerDie();

  Battle2Client_PlayerDie(const Battle2Client_PlayerDie& from);

  inline Battle2Client_PlayerDie& operator=(const Battle2Client_PlayerDie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_PlayerDie& default_instance();

  void Swap(Battle2Client_PlayerDie* other);

  // implements Message ----------------------------------------------

  Battle2Client_PlayerDie* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_PlayerDie& from);
  void MergeFrom(const Battle2Client_PlayerDie& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string killerName = 1;
  inline bool has_killername() const;
  inline void clear_killername();
  static const int kKillerNameFieldNumber = 1;
  inline const ::std::string& killername() const;
  inline void set_killername(const ::std::string& value);
  inline void set_killername(const char* value);
  inline void set_killername(const char* value, size_t size);
  inline ::std::string* mutable_killername();
  inline ::std::string* release_killername();
  inline void set_allocated_killername(::std::string* killername);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_PlayerDie)
 private:
  inline void set_has_killername();
  inline void clear_has_killername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* killername_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_PlayerDie* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_MonsterCountChanged : public ::google::protobuf::Message {
 public:
  Battle2Client_MonsterCountChanged();
  virtual ~Battle2Client_MonsterCountChanged();

  Battle2Client_MonsterCountChanged(const Battle2Client_MonsterCountChanged& from);

  inline Battle2Client_MonsterCountChanged& operator=(const Battle2Client_MonsterCountChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_MonsterCountChanged& default_instance();

  void Swap(Battle2Client_MonsterCountChanged* other);

  // implements Message ----------------------------------------------

  Battle2Client_MonsterCountChanged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_MonsterCountChanged& from);
  void MergeFrom(const Battle2Client_MonsterCountChanged& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // repeated .proto.message.IDNum monsters = 2;
  inline int monsters_size() const;
  inline void clear_monsters();
  static const int kMonstersFieldNumber = 2;
  inline const ::proto::message::IDNum& monsters(int index) const;
  inline ::proto::message::IDNum* mutable_monsters(int index);
  inline ::proto::message::IDNum* add_monsters();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_monsters();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_MonsterCountChanged)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > monsters_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_MonsterCountChanged* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_AckTBPlayerInfo : public ::google::protobuf::Message {
 public:
  Battle2Client_AckTBPlayerInfo();
  virtual ~Battle2Client_AckTBPlayerInfo();

  Battle2Client_AckTBPlayerInfo(const Battle2Client_AckTBPlayerInfo& from);

  inline Battle2Client_AckTBPlayerInfo& operator=(const Battle2Client_AckTBPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_AckTBPlayerInfo& default_instance();

  void Swap(Battle2Client_AckTBPlayerInfo* other);

  // implements Message ----------------------------------------------

  Battle2Client_AckTBPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_AckTBPlayerInfo& from);
  void MergeFrom(const Battle2Client_AckTBPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 jointime = 2;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 2;
  inline ::google::protobuf::uint32 jointime() const;
  inline void set_jointime(::google::protobuf::uint32 value);

  // optional uint32 overtime = 3;
  inline bool has_overtime() const;
  inline void clear_overtime();
  static const int kOvertimeFieldNumber = 3;
  inline ::google::protobuf::uint32 overtime() const;
  inline void set_overtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_AckTBPlayerInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_overtime();
  inline void clear_has_overtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 jointime_;
  ::google::protobuf::uint32 overtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_AckTBPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncSceneObjDisappear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncSceneObjDisappear();
  virtual ~Battle2Client_SyncSceneObjDisappear();

  Battle2Client_SyncSceneObjDisappear(const Battle2Client_SyncSceneObjDisappear& from);

  inline Battle2Client_SyncSceneObjDisappear& operator=(const Battle2Client_SyncSceneObjDisappear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncSceneObjDisappear& default_instance();

  void Swap(Battle2Client_SyncSceneObjDisappear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncSceneObjDisappear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncSceneObjDisappear& from);
  void MergeFrom(const Battle2Client_SyncSceneObjDisappear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.Battle2Client_SyncObjDisappear objs = 1;
  inline int objs_size() const;
  inline void clear_objs();
  static const int kObjsFieldNumber = 1;
  inline const ::proto::message::Battle2Client_SyncObjDisappear& objs(int index) const;
  inline ::proto::message::Battle2Client_SyncObjDisappear* mutable_objs(int index);
  inline ::proto::message::Battle2Client_SyncObjDisappear* add_objs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncObjDisappear >&
      objs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncObjDisappear >*
      mutable_objs();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncSceneObjDisappear)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncObjDisappear > objs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncSceneObjDisappear* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Client_SyncSceneObjAppear : public ::google::protobuf::Message {
 public:
  Battle2Client_SyncSceneObjAppear();
  virtual ~Battle2Client_SyncSceneObjAppear();

  Battle2Client_SyncSceneObjAppear(const Battle2Client_SyncSceneObjAppear& from);

  inline Battle2Client_SyncSceneObjAppear& operator=(const Battle2Client_SyncSceneObjAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Client_SyncSceneObjAppear& default_instance();

  void Swap(Battle2Client_SyncSceneObjAppear* other);

  // implements Message ----------------------------------------------

  Battle2Client_SyncSceneObjAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Client_SyncSceneObjAppear& from);
  void MergeFrom(const Battle2Client_SyncSceneObjAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.Battle2Client_SyncMonsterAppear monsters = 1;
  inline int monsters_size() const;
  inline void clear_monsters();
  static const int kMonstersFieldNumber = 1;
  inline const ::proto::message::Battle2Client_SyncMonsterAppear& monsters(int index) const;
  inline ::proto::message::Battle2Client_SyncMonsterAppear* mutable_monsters(int index);
  inline ::proto::message::Battle2Client_SyncMonsterAppear* add_monsters();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMonsterAppear >&
      monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMonsterAppear >*
      mutable_monsters();

  // repeated .proto.message.Battle2Client_SyncPlayerAppear players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::proto::message::Battle2Client_SyncPlayerAppear& players(int index) const;
  inline ::proto::message::Battle2Client_SyncPlayerAppear* mutable_players(int index);
  inline ::proto::message::Battle2Client_SyncPlayerAppear* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncPlayerAppear >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncPlayerAppear >*
      mutable_players();

  // repeated .proto.message.Battle2Client_SyncDropItemAppear drop_items = 3;
  inline int drop_items_size() const;
  inline void clear_drop_items();
  static const int kDropItemsFieldNumber = 3;
  inline const ::proto::message::Battle2Client_SyncDropItemAppear& drop_items(int index) const;
  inline ::proto::message::Battle2Client_SyncDropItemAppear* mutable_drop_items(int index);
  inline ::proto::message::Battle2Client_SyncDropItemAppear* add_drop_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >&
      drop_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >*
      mutable_drop_items();

  // repeated .proto.message.Battle2Client_SyncMercenaryAppear mercenarys = 4;
  inline int mercenarys_size() const;
  inline void clear_mercenarys();
  static const int kMercenarysFieldNumber = 4;
  inline const ::proto::message::Battle2Client_SyncMercenaryAppear& mercenarys(int index) const;
  inline ::proto::message::Battle2Client_SyncMercenaryAppear* mutable_mercenarys(int index);
  inline ::proto::message::Battle2Client_SyncMercenaryAppear* add_mercenarys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMercenaryAppear >&
      mercenarys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMercenaryAppear >*
      mutable_mercenarys();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Client_SyncSceneObjAppear)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMonsterAppear > monsters_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncPlayerAppear > players_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear > drop_items_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMercenaryAppear > mercenarys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_battle_2eproto();
  friend void protobuf_AssignDesc_battle_2eproto();
  friend void protobuf_ShutdownFile_battle_2eproto();

  void InitAsDefaultInstance();
  static Battle2Client_SyncSceneObjAppear* default_instance_;
};
// ===================================================================


// ===================================================================

// SyncBattleObjAtt

// optional uint32 objid = 1;
inline bool SyncBattleObjAtt::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncBattleObjAtt::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncBattleObjAtt::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncBattleObjAtt::clear_objid() {
  objid_ = 0u;
  clear_has_objid();
}
inline ::google::protobuf::uint32 SyncBattleObjAtt::objid() const {
  return objid_;
}
inline void SyncBattleObjAtt::set_objid(::google::protobuf::uint32 value) {
  set_has_objid();
  objid_ = value;
}

// repeated uint32 atttype = 2;
inline int SyncBattleObjAtt::atttype_size() const {
  return atttype_.size();
}
inline void SyncBattleObjAtt::clear_atttype() {
  atttype_.Clear();
}
inline ::google::protobuf::uint32 SyncBattleObjAtt::atttype(int index) const {
  return atttype_.Get(index);
}
inline void SyncBattleObjAtt::set_atttype(int index, ::google::protobuf::uint32 value) {
  atttype_.Set(index, value);
}
inline void SyncBattleObjAtt::add_atttype(::google::protobuf::uint32 value) {
  atttype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SyncBattleObjAtt::atttype() const {
  return atttype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SyncBattleObjAtt::mutable_atttype() {
  return &atttype_;
}

// repeated uint64 attvalue = 3;
inline int SyncBattleObjAtt::attvalue_size() const {
  return attvalue_.size();
}
inline void SyncBattleObjAtt::clear_attvalue() {
  attvalue_.Clear();
}
inline ::google::protobuf::uint64 SyncBattleObjAtt::attvalue(int index) const {
  return attvalue_.Get(index);
}
inline void SyncBattleObjAtt::set_attvalue(int index, ::google::protobuf::uint64 value) {
  attvalue_.Set(index, value);
}
inline void SyncBattleObjAtt::add_attvalue(::google::protobuf::uint64 value) {
  attvalue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SyncBattleObjAtt::attvalue() const {
  return attvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SyncBattleObjAtt::mutable_attvalue() {
  return &attvalue_;
}

// -------------------------------------------------------------------

// Battle2Match_ServerInfo

// optional string szIp = 1;
inline bool Battle2Match_ServerInfo::has_szip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Match_ServerInfo::set_has_szip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Match_ServerInfo::clear_has_szip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Match_ServerInfo::clear_szip() {
  if (szip_ != &::google::protobuf::internal::kEmptyString) {
    szip_->clear();
  }
  clear_has_szip();
}
inline const ::std::string& Battle2Match_ServerInfo::szip() const {
  return *szip_;
}
inline void Battle2Match_ServerInfo::set_szip(const ::std::string& value) {
  set_has_szip();
  if (szip_ == &::google::protobuf::internal::kEmptyString) {
    szip_ = new ::std::string;
  }
  szip_->assign(value);
}
inline void Battle2Match_ServerInfo::set_szip(const char* value) {
  set_has_szip();
  if (szip_ == &::google::protobuf::internal::kEmptyString) {
    szip_ = new ::std::string;
  }
  szip_->assign(value);
}
inline void Battle2Match_ServerInfo::set_szip(const char* value, size_t size) {
  set_has_szip();
  if (szip_ == &::google::protobuf::internal::kEmptyString) {
    szip_ = new ::std::string;
  }
  szip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Match_ServerInfo::mutable_szip() {
  set_has_szip();
  if (szip_ == &::google::protobuf::internal::kEmptyString) {
    szip_ = new ::std::string;
  }
  return szip_;
}
inline ::std::string* Battle2Match_ServerInfo::release_szip() {
  clear_has_szip();
  if (szip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szip_;
    szip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Match_ServerInfo::set_allocated_szip(::std::string* szip) {
  if (szip_ != &::google::protobuf::internal::kEmptyString) {
    delete szip_;
  }
  if (szip) {
    set_has_szip();
    szip_ = szip;
  } else {
    clear_has_szip();
    szip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uiPort = 2;
inline bool Battle2Match_ServerInfo::has_uiport() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Match_ServerInfo::set_has_uiport() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Match_ServerInfo::clear_has_uiport() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Match_ServerInfo::clear_uiport() {
  uiport_ = 0u;
  clear_has_uiport();
}
inline ::google::protobuf::uint32 Battle2Match_ServerInfo::uiport() const {
  return uiport_;
}
inline void Battle2Match_ServerInfo::set_uiport(::google::protobuf::uint32 value) {
  set_has_uiport();
  uiport_ = value;
}

// repeated uint32 uiMapId = 3;
inline int Battle2Match_ServerInfo::uimapid_size() const {
  return uimapid_.size();
}
inline void Battle2Match_ServerInfo::clear_uimapid() {
  uimapid_.Clear();
}
inline ::google::protobuf::uint32 Battle2Match_ServerInfo::uimapid(int index) const {
  return uimapid_.Get(index);
}
inline void Battle2Match_ServerInfo::set_uimapid(int index, ::google::protobuf::uint32 value) {
  uimapid_.Set(index, value);
}
inline void Battle2Match_ServerInfo::add_uimapid(::google::protobuf::uint32 value) {
  uimapid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Battle2Match_ServerInfo::uimapid() const {
  return uimapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Battle2Match_ServerInfo::mutable_uimapid() {
  return &uimapid_;
}

// -------------------------------------------------------------------

// Game2Battle_EnterScene

// required int32 mapid = 1;
inline bool Game2Battle_EnterScene::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_EnterScene::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_EnterScene::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_EnterScene::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 Game2Battle_EnterScene::mapid() const {
  return mapid_;
}
inline void Game2Battle_EnterScene::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Game2Battle_EnterScene::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_EnterScene::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_EnterScene::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_EnterScene::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Game2Battle_EnterScene::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Game2Battle_EnterScene::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Game2Battle_EnterScene::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Game2Battle_EnterScene::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Game2Battle_EnterScene::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_EnterScene::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_EnterScene::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_EnterScene::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Game2Battle_EnterScene::dir() const {
  return dir_;
}
inline void Game2Battle_EnterScene::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// required int32 layer = 4;
inline bool Game2Battle_EnterScene::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_EnterScene::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_EnterScene::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_EnterScene::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Game2Battle_EnterScene::layer() const {
  return layer_;
}
inline void Game2Battle_EnterScene::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// required .proto.message.BattlePlayerInfo sPlyInfo = 5;
inline bool Game2Battle_EnterScene::has_splyinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Game2Battle_EnterScene::set_has_splyinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Game2Battle_EnterScene::clear_has_splyinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Game2Battle_EnterScene::clear_splyinfo() {
  if (splyinfo_ != NULL) splyinfo_->::proto::message::BattlePlayerInfo::Clear();
  clear_has_splyinfo();
}
inline const ::proto::message::BattlePlayerInfo& Game2Battle_EnterScene::splyinfo() const {
  return splyinfo_ != NULL ? *splyinfo_ : *default_instance_->splyinfo_;
}
inline ::proto::message::BattlePlayerInfo* Game2Battle_EnterScene::mutable_splyinfo() {
  set_has_splyinfo();
  if (splyinfo_ == NULL) splyinfo_ = new ::proto::message::BattlePlayerInfo;
  return splyinfo_;
}
inline ::proto::message::BattlePlayerInfo* Game2Battle_EnterScene::release_splyinfo() {
  clear_has_splyinfo();
  ::proto::message::BattlePlayerInfo* temp = splyinfo_;
  splyinfo_ = NULL;
  return temp;
}
inline void Game2Battle_EnterScene::set_allocated_splyinfo(::proto::message::BattlePlayerInfo* splyinfo) {
  delete splyinfo_;
  splyinfo_ = splyinfo;
  if (splyinfo) {
    set_has_splyinfo();
  } else {
    clear_has_splyinfo();
  }
}

// optional .proto.message.BattleBoatInfo sBoatInfo = 6;
inline bool Game2Battle_EnterScene::has_sboatinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Game2Battle_EnterScene::set_has_sboatinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Game2Battle_EnterScene::clear_has_sboatinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Game2Battle_EnterScene::clear_sboatinfo() {
  if (sboatinfo_ != NULL) sboatinfo_->::proto::message::BattleBoatInfo::Clear();
  clear_has_sboatinfo();
}
inline const ::proto::message::BattleBoatInfo& Game2Battle_EnterScene::sboatinfo() const {
  return sboatinfo_ != NULL ? *sboatinfo_ : *default_instance_->sboatinfo_;
}
inline ::proto::message::BattleBoatInfo* Game2Battle_EnterScene::mutable_sboatinfo() {
  set_has_sboatinfo();
  if (sboatinfo_ == NULL) sboatinfo_ = new ::proto::message::BattleBoatInfo;
  return sboatinfo_;
}
inline ::proto::message::BattleBoatInfo* Game2Battle_EnterScene::release_sboatinfo() {
  clear_has_sboatinfo();
  ::proto::message::BattleBoatInfo* temp = sboatinfo_;
  sboatinfo_ = NULL;
  return temp;
}
inline void Game2Battle_EnterScene::set_allocated_sboatinfo(::proto::message::BattleBoatInfo* sboatinfo) {
  delete sboatinfo_;
  sboatinfo_ = sboatinfo;
  if (sboatinfo) {
    set_has_sboatinfo();
  } else {
    clear_has_sboatinfo();
  }
}

// optional int32 combat = 7;
inline bool Game2Battle_EnterScene::has_combat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Game2Battle_EnterScene::set_has_combat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Game2Battle_EnterScene::clear_has_combat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Game2Battle_EnterScene::clear_combat() {
  combat_ = 0;
  clear_has_combat();
}
inline ::google::protobuf::int32 Game2Battle_EnterScene::combat() const {
  return combat_;
}
inline void Game2Battle_EnterScene::set_combat(::google::protobuf::int32 value) {
  set_has_combat();
  combat_ = value;
}

// optional .proto.message.TBFieldInfo tbinfo = 8;
inline bool Game2Battle_EnterScene::has_tbinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Game2Battle_EnterScene::set_has_tbinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Game2Battle_EnterScene::clear_has_tbinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Game2Battle_EnterScene::clear_tbinfo() {
  if (tbinfo_ != NULL) tbinfo_->::proto::message::TBFieldInfo::Clear();
  clear_has_tbinfo();
}
inline const ::proto::message::TBFieldInfo& Game2Battle_EnterScene::tbinfo() const {
  return tbinfo_ != NULL ? *tbinfo_ : *default_instance_->tbinfo_;
}
inline ::proto::message::TBFieldInfo* Game2Battle_EnterScene::mutable_tbinfo() {
  set_has_tbinfo();
  if (tbinfo_ == NULL) tbinfo_ = new ::proto::message::TBFieldInfo;
  return tbinfo_;
}
inline ::proto::message::TBFieldInfo* Game2Battle_EnterScene::release_tbinfo() {
  clear_has_tbinfo();
  ::proto::message::TBFieldInfo* temp = tbinfo_;
  tbinfo_ = NULL;
  return temp;
}
inline void Game2Battle_EnterScene::set_allocated_tbinfo(::proto::message::TBFieldInfo* tbinfo) {
  delete tbinfo_;
  tbinfo_ = tbinfo;
  if (tbinfo) {
    set_has_tbinfo();
  } else {
    clear_has_tbinfo();
  }
}

// optional bool isbackline = 9;
inline bool Game2Battle_EnterScene::has_isbackline() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Game2Battle_EnterScene::set_has_isbackline() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Game2Battle_EnterScene::clear_has_isbackline() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Game2Battle_EnterScene::clear_isbackline() {
  isbackline_ = false;
  clear_has_isbackline();
}
inline bool Game2Battle_EnterScene::isbackline() const {
  return isbackline_;
}
inline void Game2Battle_EnterScene::set_isbackline(bool value) {
  set_has_isbackline();
  isbackline_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeMap

// required int32 mapid = 1;
inline bool Game2Battle_ChangeMap::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeMap::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeMap::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeMap::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 Game2Battle_ChangeMap::mapid() const {
  return mapid_;
}
inline void Game2Battle_ChangeMap::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Game2Battle_ChangeMap::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_ChangeMap::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_ChangeMap::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_ChangeMap::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Game2Battle_ChangeMap::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Game2Battle_ChangeMap::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Game2Battle_ChangeMap::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Game2Battle_ChangeMap::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Game2Battle_ChangeMap::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_ChangeMap::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_ChangeMap::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_ChangeMap::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Game2Battle_ChangeMap::dir() const {
  return dir_;
}
inline void Game2Battle_ChangeMap::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// required int32 layer = 4;
inline bool Game2Battle_ChangeMap::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_ChangeMap::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_ChangeMap::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_ChangeMap::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Game2Battle_ChangeMap::layer() const {
  return layer_;
}
inline void Game2Battle_ChangeMap::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeTttle

// required uint32 nId = 1;
inline bool Game2Battle_ChangeTttle::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeTttle::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeTttle::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeTttle::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_ChangeTttle::nid() const {
  return nid_;
}
inline void Game2Battle_ChangeTttle::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 titleID = 2;
inline bool Game2Battle_ChangeTttle::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_ChangeTttle::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_ChangeTttle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_ChangeTttle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Game2Battle_ChangeTttle::titleid() const {
  return titleid_;
}
inline void Game2Battle_ChangeTttle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional string titlename = 3;
inline bool Game2Battle_ChangeTttle::has_titlename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_ChangeTttle::set_has_titlename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_ChangeTttle::clear_has_titlename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_ChangeTttle::clear_titlename() {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    titlename_->clear();
  }
  clear_has_titlename();
}
inline const ::std::string& Game2Battle_ChangeTttle::titlename() const {
  return *titlename_;
}
inline void Game2Battle_ChangeTttle::set_titlename(const ::std::string& value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void Game2Battle_ChangeTttle::set_titlename(const char* value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void Game2Battle_ChangeTttle::set_titlename(const char* value, size_t size) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Game2Battle_ChangeTttle::mutable_titlename() {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  return titlename_;
}
inline ::std::string* Game2Battle_ChangeTttle::release_titlename() {
  clear_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = titlename_;
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Game2Battle_ChangeTttle::set_allocated_titlename(::std::string* titlename) {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    delete titlename_;
  }
  if (titlename) {
    set_has_titlename();
    titlename_ = titlename;
  } else {
    clear_has_titlename();
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 ishide = 4;
inline bool Game2Battle_ChangeTttle::has_ishide() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_ChangeTttle::set_has_ishide() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_ChangeTttle::clear_has_ishide() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_ChangeTttle::clear_ishide() {
  ishide_ = 0;
  clear_has_ishide();
}
inline ::google::protobuf::int32 Game2Battle_ChangeTttle::ishide() const {
  return ishide_;
}
inline void Game2Battle_ChangeTttle::set_ishide(::google::protobuf::int32 value) {
  set_has_ishide();
  ishide_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeAwaken

// required uint32 nId = 1;
inline bool Game2Battle_ChangeAwaken::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeAwaken::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeAwaken::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeAwaken::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_ChangeAwaken::nid() const {
  return nid_;
}
inline void Game2Battle_ChangeAwaken::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 awakenID = 2;
inline bool Game2Battle_ChangeAwaken::has_awakenid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_ChangeAwaken::set_has_awakenid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_ChangeAwaken::clear_has_awakenid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_ChangeAwaken::clear_awakenid() {
  awakenid_ = 0;
  clear_has_awakenid();
}
inline ::google::protobuf::int32 Game2Battle_ChangeAwaken::awakenid() const {
  return awakenid_;
}
inline void Game2Battle_ChangeAwaken::set_awakenid(::google::protobuf::int32 value) {
  set_has_awakenid();
  awakenid_ = value;
}

// required bool status = 3;
inline bool Game2Battle_ChangeAwaken::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_ChangeAwaken::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_ChangeAwaken::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_ChangeAwaken::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Game2Battle_ChangeAwaken::status() const {
  return status_;
}
inline void Game2Battle_ChangeAwaken::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// required bool isDead = 4;
inline bool Game2Battle_ChangeAwaken::has_isdead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_ChangeAwaken::set_has_isdead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_ChangeAwaken::clear_has_isdead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_ChangeAwaken::clear_isdead() {
  isdead_ = false;
  clear_has_isdead();
}
inline bool Game2Battle_ChangeAwaken::isdead() const {
  return isdead_;
}
inline void Game2Battle_ChangeAwaken::set_isdead(bool value) {
  set_has_isdead();
  isdead_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangePet

// required uint32 nId = 1;
inline bool Game2Battle_ChangePet::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangePet::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangePet::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangePet::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_ChangePet::nid() const {
  return nid_;
}
inline void Game2Battle_ChangePet::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 petID = 2;
inline bool Game2Battle_ChangePet::has_petid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_ChangePet::set_has_petid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_ChangePet::clear_has_petid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_ChangePet::clear_petid() {
  petid_ = 0;
  clear_has_petid();
}
inline ::google::protobuf::int32 Game2Battle_ChangePet::petid() const {
  return petid_;
}
inline void Game2Battle_ChangePet::set_petid(::google::protobuf::int32 value) {
  set_has_petid();
  petid_ = value;
}

// optional int32 ranking = 3;
inline bool Game2Battle_ChangePet::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_ChangePet::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_ChangePet::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_ChangePet::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 Game2Battle_ChangePet::ranking() const {
  return ranking_;
}
inline void Game2Battle_ChangePet::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_UpdateMyCombat

// required uint32 combat = 1;
inline bool Game2Battle_UpdateMyCombat::has_combat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_UpdateMyCombat::set_has_combat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_UpdateMyCombat::clear_has_combat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_UpdateMyCombat::clear_combat() {
  combat_ = 0u;
  clear_has_combat();
}
inline ::google::protobuf::uint32 Game2Battle_UpdateMyCombat::combat() const {
  return combat_;
}
inline void Game2Battle_UpdateMyCombat::set_combat(::google::protobuf::uint32 value) {
  set_has_combat();
  combat_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeAvatar

// required uint32 nId = 1;
inline bool Game2Battle_ChangeAvatar::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeAvatar::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeAvatar::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeAvatar::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_ChangeAvatar::nid() const {
  return nid_;
}
inline void Game2Battle_ChangeAvatar::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 avatarID = 2;
inline bool Game2Battle_ChangeAvatar::has_avatarid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_ChangeAvatar::set_has_avatarid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_ChangeAvatar::clear_has_avatarid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_ChangeAvatar::clear_avatarid() {
  avatarid_ = 0;
  clear_has_avatarid();
}
inline ::google::protobuf::int32 Game2Battle_ChangeAvatar::avatarid() const {
  return avatarid_;
}
inline void Game2Battle_ChangeAvatar::set_avatarid(::google::protobuf::int32 value) {
  set_has_avatarid();
  avatarid_ = value;
}

// required int32 colorID = 3;
inline bool Game2Battle_ChangeAvatar::has_colorid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_ChangeAvatar::set_has_colorid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_ChangeAvatar::clear_has_colorid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_ChangeAvatar::clear_colorid() {
  colorid_ = 0;
  clear_has_colorid();
}
inline ::google::protobuf::int32 Game2Battle_ChangeAvatar::colorid() const {
  return colorid_;
}
inline void Game2Battle_ChangeAvatar::set_colorid(::google::protobuf::int32 value) {
  set_has_colorid();
  colorid_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeRide

// required uint32 nId = 1;
inline bool Game2Battle_ChangeRide::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeRide::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeRide::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeRide::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_ChangeRide::nid() const {
  return nid_;
}
inline void Game2Battle_ChangeRide::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 RideID = 2;
inline bool Game2Battle_ChangeRide::has_rideid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_ChangeRide::set_has_rideid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_ChangeRide::clear_has_rideid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_ChangeRide::clear_rideid() {
  rideid_ = 0;
  clear_has_rideid();
}
inline ::google::protobuf::int32 Game2Battle_ChangeRide::rideid() const {
  return rideid_;
}
inline void Game2Battle_ChangeRide::set_rideid(::google::protobuf::int32 value) {
  set_has_rideid();
  rideid_ = value;
}

// required bool status = 3;
inline bool Game2Battle_ChangeRide::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_ChangeRide::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_ChangeRide::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_ChangeRide::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Game2Battle_ChangeRide::status() const {
  return status_;
}
inline void Game2Battle_ChangeRide::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// required bool isDead = 4;
inline bool Game2Battle_ChangeRide::has_isdead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_ChangeRide::set_has_isdead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_ChangeRide::clear_has_isdead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_ChangeRide::clear_isdead() {
  isdead_ = false;
  clear_has_isdead();
}
inline bool Game2Battle_ChangeRide::isdead() const {
  return isdead_;
}
inline void Game2Battle_ChangeRide::set_isdead(bool value) {
  set_has_isdead();
  isdead_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_BornMercenary

// required uint32 nId = 1;
inline bool Game2Battle_BornMercenary::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_BornMercenary::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_BornMercenary::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_BornMercenary::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_BornMercenary::nid() const {
  return nid_;
}
inline void Game2Battle_BornMercenary::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// optional uint32 hpper = 2;
inline bool Game2Battle_BornMercenary::has_hpper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_BornMercenary::set_has_hpper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_BornMercenary::clear_has_hpper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_BornMercenary::clear_hpper() {
  hpper_ = 0u;
  clear_has_hpper();
}
inline ::google::protobuf::uint32 Game2Battle_BornMercenary::hpper() const {
  return hpper_;
}
inline void Game2Battle_BornMercenary::set_hpper(::google::protobuf::uint32 value) {
  set_has_hpper();
  hpper_ = value;
}

// optional uint32 ranking = 3;
inline bool Game2Battle_BornMercenary::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_BornMercenary::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_BornMercenary::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_BornMercenary::clear_ranking() {
  ranking_ = 0u;
  clear_has_ranking();
}
inline ::google::protobuf::uint32 Game2Battle_BornMercenary::ranking() const {
  return ranking_;
}
inline void Game2Battle_BornMercenary::set_ranking(::google::protobuf::uint32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_UpdateMercenaryScript

// repeated uint32 script = 1;
inline int Game2Battle_UpdateMercenaryScript::script_size() const {
  return script_.size();
}
inline void Game2Battle_UpdateMercenaryScript::clear_script() {
  script_.Clear();
}
inline ::google::protobuf::uint32 Game2Battle_UpdateMercenaryScript::script(int index) const {
  return script_.Get(index);
}
inline void Game2Battle_UpdateMercenaryScript::set_script(int index, ::google::protobuf::uint32 value) {
  script_.Set(index, value);
}
inline void Game2Battle_UpdateMercenaryScript::add_script(::google::protobuf::uint32 value) {
  script_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Game2Battle_UpdateMercenaryScript::script() const {
  return script_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Game2Battle_UpdateMercenaryScript::mutable_script() {
  return &script_;
}

// -------------------------------------------------------------------

// Game2Battle_UpdateRideScript

// repeated uint32 script = 1;
inline int Game2Battle_UpdateRideScript::script_size() const {
  return script_.size();
}
inline void Game2Battle_UpdateRideScript::clear_script() {
  script_.Clear();
}
inline ::google::protobuf::uint32 Game2Battle_UpdateRideScript::script(int index) const {
  return script_.Get(index);
}
inline void Game2Battle_UpdateRideScript::set_script(int index, ::google::protobuf::uint32 value) {
  script_.Set(index, value);
}
inline void Game2Battle_UpdateRideScript::add_script(::google::protobuf::uint32 value) {
  script_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Game2Battle_UpdateRideScript::script() const {
  return script_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Game2Battle_UpdateRideScript::mutable_script() {
  return &script_;
}

// -------------------------------------------------------------------

// Game2Battle_UpdateAwakenScript

// repeated uint32 script = 1;
inline int Game2Battle_UpdateAwakenScript::script_size() const {
  return script_.size();
}
inline void Game2Battle_UpdateAwakenScript::clear_script() {
  script_.Clear();
}
inline ::google::protobuf::uint32 Game2Battle_UpdateAwakenScript::script(int index) const {
  return script_.Get(index);
}
inline void Game2Battle_UpdateAwakenScript::set_script(int index, ::google::protobuf::uint32 value) {
  script_.Set(index, value);
}
inline void Game2Battle_UpdateAwakenScript::add_script(::google::protobuf::uint32 value) {
  script_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Game2Battle_UpdateAwakenScript::script() const {
  return script_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Game2Battle_UpdateAwakenScript::mutable_script() {
  return &script_;
}

// -------------------------------------------------------------------

// Battle2Game_SaveMercenaryHp

// required uint32 nId = 1;
inline bool Battle2Game_SaveMercenaryHp::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_SaveMercenaryHp::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_SaveMercenaryHp::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_SaveMercenaryHp::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Game_SaveMercenaryHp::nid() const {
  return nid_;
}
inline void Battle2Game_SaveMercenaryHp::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// optional uint32 hpper = 2;
inline bool Battle2Game_SaveMercenaryHp::has_hpper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_SaveMercenaryHp::set_has_hpper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_SaveMercenaryHp::clear_has_hpper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_SaveMercenaryHp::clear_hpper() {
  hpper_ = 0u;
  clear_has_hpper();
}
inline ::google::protobuf::uint32 Battle2Game_SaveMercenaryHp::hpper() const {
  return hpper_;
}
inline void Battle2Game_SaveMercenaryHp::set_hpper(::google::protobuf::uint32 value) {
  set_has_hpper();
  hpper_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_UpdatePlayerStatus

// optional uint64 status = 1;
inline bool Battle2Game_UpdatePlayerStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_UpdatePlayerStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_UpdatePlayerStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_UpdatePlayerStatus::clear_status() {
  status_ = GOOGLE_ULONGLONG(0);
  clear_has_status();
}
inline ::google::protobuf::uint64 Battle2Game_UpdatePlayerStatus::status() const {
  return status_;
}
inline void Battle2Game_UpdatePlayerStatus::set_status(::google::protobuf::uint64 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeEquip

// required uint32 nId = 1;
inline bool Game2Battle_ChangeEquip::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeEquip::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeEquip::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeEquip::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Game2Battle_ChangeEquip::nid() const {
  return nid_;
}
inline void Game2Battle_ChangeEquip::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// repeated .proto.message.Equip equip_list = 2;
inline int Game2Battle_ChangeEquip::equip_list_size() const {
  return equip_list_.size();
}
inline void Game2Battle_ChangeEquip::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::message::Equip& Game2Battle_ChangeEquip::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline ::proto::message::Equip* Game2Battle_ChangeEquip::mutable_equip_list(int index) {
  return equip_list_.Mutable(index);
}
inline ::proto::message::Equip* Game2Battle_ChangeEquip::add_equip_list() {
  return equip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Game2Battle_ChangeEquip::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Game2Battle_ChangeEquip::mutable_equip_list() {
  return &equip_list_;
}

// -------------------------------------------------------------------

// Game2Battle_FollowLeader

// required uint64 nId = 1;
inline bool Game2Battle_FollowLeader::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_FollowLeader::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_FollowLeader::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_FollowLeader::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
  clear_has_nid();
}
inline ::google::protobuf::uint64 Game2Battle_FollowLeader::nid() const {
  return nid_;
}
inline void Game2Battle_FollowLeader::set_nid(::google::protobuf::uint64 value) {
  set_has_nid();
  nid_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_ChangeMapPendingBranch

// required uint64 nId = 1;
inline bool Game2Battle_ChangeMapPendingBranch::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_ChangeMapPendingBranch::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_ChangeMapPendingBranch::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_ChangeMapPendingBranch::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
  clear_has_nid();
}
inline ::google::protobuf::uint64 Game2Battle_ChangeMapPendingBranch::nid() const {
  return nid_;
}
inline void Game2Battle_ChangeMapPendingBranch::set_nid(::google::protobuf::uint64 value) {
  set_has_nid();
  nid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ChangePet

// required uint32 nId = 1;
inline bool Battle2Client_ChangePet::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangePet::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangePet::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangePet::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangePet::nid() const {
  return nid_;
}
inline void Battle2Client_ChangePet::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required uint32 petid = 2;
inline bool Battle2Client_ChangePet::has_petid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ChangePet::set_has_petid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ChangePet::clear_has_petid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ChangePet::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangePet::petid() const {
  return petid_;
}
inline void Battle2Client_ChangePet::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
}

// optional int32 ranking = 3;
inline bool Battle2Client_ChangePet::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ChangePet::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ChangePet::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ChangePet::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 Battle2Client_ChangePet::ranking() const {
  return ranking_;
}
inline void Battle2Client_ChangePet::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeRide

// required uint32 nId = 1;
inline bool Battle2Client_ChangeRide::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeRide::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeRide::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeRide::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeRide::nid() const {
  return nid_;
}
inline void Battle2Client_ChangeRide::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required uint32 rideid = 2;
inline bool Battle2Client_ChangeRide::has_rideid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ChangeRide::set_has_rideid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ChangeRide::clear_has_rideid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ChangeRide::clear_rideid() {
  rideid_ = 0u;
  clear_has_rideid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeRide::rideid() const {
  return rideid_;
}
inline void Battle2Client_ChangeRide::set_rideid(::google::protobuf::uint32 value) {
  set_has_rideid();
  rideid_ = value;
}

// required bool status = 3;
inline bool Battle2Client_ChangeRide::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ChangeRide::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ChangeRide::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ChangeRide::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Battle2Client_ChangeRide::status() const {
  return status_;
}
inline void Battle2Client_ChangeRide::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeAwaken

// required uint32 nId = 1;
inline bool Battle2Client_ChangeAwaken::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeAwaken::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeAwaken::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeAwaken::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeAwaken::nid() const {
  return nid_;
}
inline void Battle2Client_ChangeAwaken::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required uint32 awakenid = 2;
inline bool Battle2Client_ChangeAwaken::has_awakenid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ChangeAwaken::set_has_awakenid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ChangeAwaken::clear_has_awakenid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ChangeAwaken::clear_awakenid() {
  awakenid_ = 0u;
  clear_has_awakenid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeAwaken::awakenid() const {
  return awakenid_;
}
inline void Battle2Client_ChangeAwaken::set_awakenid(::google::protobuf::uint32 value) {
  set_has_awakenid();
  awakenid_ = value;
}

// required bool status = 3;
inline bool Battle2Client_ChangeAwaken::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ChangeAwaken::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ChangeAwaken::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ChangeAwaken::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Battle2Client_ChangeAwaken::status() const {
  return status_;
}
inline void Battle2Client_ChangeAwaken::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeAvatar

// required uint32 nId = 1;
inline bool Battle2Client_ChangeAvatar::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeAvatar::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeAvatar::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeAvatar::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeAvatar::nid() const {
  return nid_;
}
inline void Battle2Client_ChangeAvatar::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required uint32 avatarid = 2;
inline bool Battle2Client_ChangeAvatar::has_avatarid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ChangeAvatar::set_has_avatarid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ChangeAvatar::clear_has_avatarid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ChangeAvatar::clear_avatarid() {
  avatarid_ = 0u;
  clear_has_avatarid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeAvatar::avatarid() const {
  return avatarid_;
}
inline void Battle2Client_ChangeAvatar::set_avatarid(::google::protobuf::uint32 value) {
  set_has_avatarid();
  avatarid_ = value;
}

// required uint32 colorid = 3;
inline bool Battle2Client_ChangeAvatar::has_colorid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ChangeAvatar::set_has_colorid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ChangeAvatar::clear_has_colorid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ChangeAvatar::clear_colorid() {
  colorid_ = 0u;
  clear_has_colorid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeAvatar::colorid() const {
  return colorid_;
}
inline void Battle2Client_ChangeAvatar::set_colorid(::google::protobuf::uint32 value) {
  set_has_colorid();
  colorid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeSuit

// required uint32 nId = 1;
inline bool Battle2Client_ChangeSuit::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeSuit::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeSuit::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeSuit::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeSuit::nid() const {
  return nid_;
}
inline void Battle2Client_ChangeSuit::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required uint32 suitid = 2;
inline bool Battle2Client_ChangeSuit::has_suitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ChangeSuit::set_has_suitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ChangeSuit::clear_has_suitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ChangeSuit::clear_suitid() {
  suitid_ = 0u;
  clear_has_suitid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeSuit::suitid() const {
  return suitid_;
}
inline void Battle2Client_ChangeSuit::set_suitid(::google::protobuf::uint32 value) {
  set_has_suitid();
  suitid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ReconnectUnDoTrigger

// repeated int32 triggerid = 1;
inline int Battle2Client_ReconnectUnDoTrigger::triggerid_size() const {
  return triggerid_.size();
}
inline void Battle2Client_ReconnectUnDoTrigger::clear_triggerid() {
  triggerid_.Clear();
}
inline ::google::protobuf::int32 Battle2Client_ReconnectUnDoTrigger::triggerid(int index) const {
  return triggerid_.Get(index);
}
inline void Battle2Client_ReconnectUnDoTrigger::set_triggerid(int index, ::google::protobuf::int32 value) {
  triggerid_.Set(index, value);
}
inline void Battle2Client_ReconnectUnDoTrigger::add_triggerid(::google::protobuf::int32 value) {
  triggerid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Battle2Client_ReconnectUnDoTrigger::triggerid() const {
  return triggerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Battle2Client_ReconnectUnDoTrigger::mutable_triggerid() {
  return &triggerid_;
}

// -------------------------------------------------------------------

// Game2Battle_UpdatePlayerValue

// required uint32 type = 1;
inline bool Game2Battle_UpdatePlayerValue::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_UpdatePlayerValue::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_UpdatePlayerValue::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_UpdatePlayerValue::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Game2Battle_UpdatePlayerValue::type() const {
  return type_;
}
inline void Game2Battle_UpdatePlayerValue::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 iValue = 2;
inline bool Game2Battle_UpdatePlayerValue::has_ivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_UpdatePlayerValue::set_has_ivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_UpdatePlayerValue::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_UpdatePlayerValue::clear_ivalue() {
  ivalue_ = 0;
  clear_has_ivalue();
}
inline ::google::protobuf::int32 Game2Battle_UpdatePlayerValue::ivalue() const {
  return ivalue_;
}
inline void Game2Battle_UpdatePlayerValue::set_ivalue(::google::protobuf::int32 value) {
  set_has_ivalue();
  ivalue_ = value;
}

// optional int64 llValue = 3;
inline bool Game2Battle_UpdatePlayerValue::has_llvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_UpdatePlayerValue::set_has_llvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_UpdatePlayerValue::clear_has_llvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_UpdatePlayerValue::clear_llvalue() {
  llvalue_ = GOOGLE_LONGLONG(0);
  clear_has_llvalue();
}
inline ::google::protobuf::int64 Game2Battle_UpdatePlayerValue::llvalue() const {
  return llvalue_;
}
inline void Game2Battle_UpdatePlayerValue::set_llvalue(::google::protobuf::int64 value) {
  set_has_llvalue();
  llvalue_ = value;
}

// optional string szValue = 4;
inline bool Game2Battle_UpdatePlayerValue::has_szvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_UpdatePlayerValue::set_has_szvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_UpdatePlayerValue::clear_has_szvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_UpdatePlayerValue::clear_szvalue() {
  if (szvalue_ != &::google::protobuf::internal::kEmptyString) {
    szvalue_->clear();
  }
  clear_has_szvalue();
}
inline const ::std::string& Game2Battle_UpdatePlayerValue::szvalue() const {
  return *szvalue_;
}
inline void Game2Battle_UpdatePlayerValue::set_szvalue(const ::std::string& value) {
  set_has_szvalue();
  if (szvalue_ == &::google::protobuf::internal::kEmptyString) {
    szvalue_ = new ::std::string;
  }
  szvalue_->assign(value);
}
inline void Game2Battle_UpdatePlayerValue::set_szvalue(const char* value) {
  set_has_szvalue();
  if (szvalue_ == &::google::protobuf::internal::kEmptyString) {
    szvalue_ = new ::std::string;
  }
  szvalue_->assign(value);
}
inline void Game2Battle_UpdatePlayerValue::set_szvalue(const char* value, size_t size) {
  set_has_szvalue();
  if (szvalue_ == &::google::protobuf::internal::kEmptyString) {
    szvalue_ = new ::std::string;
  }
  szvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Game2Battle_UpdatePlayerValue::mutable_szvalue() {
  set_has_szvalue();
  if (szvalue_ == &::google::protobuf::internal::kEmptyString) {
    szvalue_ = new ::std::string;
  }
  return szvalue_;
}
inline ::std::string* Game2Battle_UpdatePlayerValue::release_szvalue() {
  clear_has_szvalue();
  if (szvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szvalue_;
    szvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Game2Battle_UpdatePlayerValue::set_allocated_szvalue(::std::string* szvalue) {
  if (szvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete szvalue_;
  }
  if (szvalue) {
    set_has_szvalue();
    szvalue_ = szvalue;
  } else {
    clear_has_szvalue();
    szvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Battle2Game_EnterScene

// required int32 mapid = 1;
inline bool Battle2Game_EnterScene::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_EnterScene::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_EnterScene::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_EnterScene::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 Battle2Game_EnterScene::mapid() const {
  return mapid_;
}
inline void Battle2Game_EnterScene::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Battle2Game_EnterScene::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_EnterScene::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_EnterScene::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_EnterScene::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Game_EnterScene::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Game_EnterScene::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Game_EnterScene::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Game_EnterScene::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Battle2Game_EnterScene::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_EnterScene::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_EnterScene::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_EnterScene::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Game_EnterScene::dir() const {
  return dir_;
}
inline void Battle2Game_EnterScene::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// required int32 layer = 4;
inline bool Battle2Game_EnterScene::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Game_EnterScene::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Game_EnterScene::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Game_EnterScene::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Battle2Game_EnterScene::layer() const {
  return layer_;
}
inline void Battle2Game_EnterScene::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional string ip = 5;
inline bool Battle2Game_EnterScene::has_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Game_EnterScene::set_has_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Game_EnterScene::clear_has_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Game_EnterScene::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& Battle2Game_EnterScene::ip() const {
  return *ip_;
}
inline void Battle2Game_EnterScene::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Battle2Game_EnterScene::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Battle2Game_EnterScene::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Game_EnterScene::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* Battle2Game_EnterScene::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Game_EnterScene::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 port = 6;
inline bool Battle2Game_EnterScene::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Game_EnterScene::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Game_EnterScene::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Game_EnterScene::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 Battle2Game_EnterScene::port() const {
  return port_;
}
inline void Battle2Game_EnterScene::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_EnterScene

// required int32 mapid = 1;
inline bool Battle2Client_EnterScene::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_EnterScene::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_EnterScene::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_EnterScene::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 Battle2Client_EnterScene::mapid() const {
  return mapid_;
}
inline void Battle2Client_EnterScene::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Battle2Client_EnterScene::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_EnterScene::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_EnterScene::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_EnterScene::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_EnterScene::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_EnterScene::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_EnterScene::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_EnterScene::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Battle2Client_EnterScene::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_EnterScene::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_EnterScene::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_EnterScene::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Client_EnterScene::dir() const {
  return dir_;
}
inline void Battle2Client_EnterScene::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// required int32 layer = 4;
inline bool Battle2Client_EnterScene::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_EnterScene::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_EnterScene::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_EnterScene::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Battle2Client_EnterScene::layer() const {
  return layer_;
}
inline void Battle2Client_EnterScene::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_ClientLoadOK

// required uint64 uuid = 1;
inline bool Client2Battle_ClientLoadOK::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_ClientLoadOK::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_ClientLoadOK::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_ClientLoadOK::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Client2Battle_ClientLoadOK::uuid() const {
  return uuid_;
}
inline void Client2Battle_ClientLoadOK::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional uint32 dungeon_assign_id = 2;
inline bool Client2Battle_ClientLoadOK::has_dungeon_assign_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle_ClientLoadOK::set_has_dungeon_assign_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle_ClientLoadOK::clear_has_dungeon_assign_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle_ClientLoadOK::clear_dungeon_assign_id() {
  dungeon_assign_id_ = 0u;
  clear_has_dungeon_assign_id();
}
inline ::google::protobuf::uint32 Client2Battle_ClientLoadOK::dungeon_assign_id() const {
  return dungeon_assign_id_;
}
inline void Client2Battle_ClientLoadOK::set_dungeon_assign_id(::google::protobuf::uint32 value) {
  set_has_dungeon_assign_id();
  dungeon_assign_id_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_SyncMove

// required .proto.message.Point3D pt = 1;
inline bool Client2Battle_SyncMove::has_pt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_SyncMove::set_has_pt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_SyncMove::clear_has_pt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_SyncMove::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Client2Battle_SyncMove::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Client2Battle_SyncMove::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Client2Battle_SyncMove::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Client2Battle_SyncMove::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 2;
inline bool Client2Battle_SyncMove::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle_SyncMove::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle_SyncMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle_SyncMove::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Client2Battle_SyncMove::dir() const {
  return dir_;
}
inline void Client2Battle_SyncMove::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 arrival = 3;
inline bool Client2Battle_SyncMove::has_arrival() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Client2Battle_SyncMove::set_has_arrival() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Client2Battle_SyncMove::clear_has_arrival() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Client2Battle_SyncMove::clear_arrival() {
  arrival_ = 0;
  clear_has_arrival();
}
inline ::google::protobuf::int32 Client2Battle_SyncMove::arrival() const {
  return arrival_;
}
inline void Client2Battle_SyncMove::set_arrival(::google::protobuf::int32 value) {
  set_has_arrival();
  arrival_ = value;
}

// optional int32 objType = 4;
inline bool Client2Battle_SyncMove::has_objtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Client2Battle_SyncMove::set_has_objtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Client2Battle_SyncMove::clear_has_objtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Client2Battle_SyncMove::clear_objtype() {
  objtype_ = 0;
  clear_has_objtype();
}
inline ::google::protobuf::int32 Client2Battle_SyncMove::objtype() const {
  return objtype_;
}
inline void Client2Battle_SyncMove::set_objtype(::google::protobuf::int32 value) {
  set_has_objtype();
  objtype_ = value;
}

// optional float speed = 5;
inline bool Client2Battle_SyncMove::has_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Client2Battle_SyncMove::set_has_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Client2Battle_SyncMove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Client2Battle_SyncMove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float Client2Battle_SyncMove::speed() const {
  return speed_;
}
inline void Client2Battle_SyncMove::set_speed(float value) {
  set_has_speed();
  speed_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_GetMapBranch

// -------------------------------------------------------------------

// Client2Battle_ChangeBranch

// required int32 BranchId = 1;
inline bool Client2Battle_ChangeBranch::has_branchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_ChangeBranch::set_has_branchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_ChangeBranch::clear_has_branchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_ChangeBranch::clear_branchid() {
  branchid_ = 0;
  clear_has_branchid();
}
inline ::google::protobuf::int32 Client2Battle_ChangeBranch::branchid() const {
  return branchid_;
}
inline void Client2Battle_ChangeBranch::set_branchid(::google::protobuf::int32 value) {
  set_has_branchid();
  branchid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_SyncPlayerAppear

// required uint32 uiObjId = 1;
inline bool Battle2Client_SyncPlayerAppear::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncPlayerAppear::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncPlayerAppear::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncPlayerAppear::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncPlayerAppear::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_SyncPlayerAppear::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// required uint32 uiType = 2;
inline bool Battle2Client_SyncPlayerAppear::has_uitype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncPlayerAppear::set_has_uitype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncPlayerAppear::clear_has_uitype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncPlayerAppear::clear_uitype() {
  uitype_ = 0u;
  clear_has_uitype();
}
inline ::google::protobuf::uint32 Battle2Client_SyncPlayerAppear::uitype() const {
  return uitype_;
}
inline void Battle2Client_SyncPlayerAppear::set_uitype(::google::protobuf::uint32 value) {
  set_has_uitype();
  uitype_ = value;
}

// required .proto.message.BattlePlayerInfo sPlyInfo = 3;
inline bool Battle2Client_SyncPlayerAppear::has_splyinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SyncPlayerAppear::set_has_splyinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SyncPlayerAppear::clear_has_splyinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SyncPlayerAppear::clear_splyinfo() {
  if (splyinfo_ != NULL) splyinfo_->::proto::message::BattlePlayerInfo::Clear();
  clear_has_splyinfo();
}
inline const ::proto::message::BattlePlayerInfo& Battle2Client_SyncPlayerAppear::splyinfo() const {
  return splyinfo_ != NULL ? *splyinfo_ : *default_instance_->splyinfo_;
}
inline ::proto::message::BattlePlayerInfo* Battle2Client_SyncPlayerAppear::mutable_splyinfo() {
  set_has_splyinfo();
  if (splyinfo_ == NULL) splyinfo_ = new ::proto::message::BattlePlayerInfo;
  return splyinfo_;
}
inline ::proto::message::BattlePlayerInfo* Battle2Client_SyncPlayerAppear::release_splyinfo() {
  clear_has_splyinfo();
  ::proto::message::BattlePlayerInfo* temp = splyinfo_;
  splyinfo_ = NULL;
  return temp;
}
inline void Battle2Client_SyncPlayerAppear::set_allocated_splyinfo(::proto::message::BattlePlayerInfo* splyinfo) {
  delete splyinfo_;
  splyinfo_ = splyinfo;
  if (splyinfo) {
    set_has_splyinfo();
  } else {
    clear_has_splyinfo();
  }
}

// optional .proto.message.BattleBoatInfo sBoatInfo = 4;
inline bool Battle2Client_SyncPlayerAppear::has_sboatinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_SyncPlayerAppear::set_has_sboatinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_SyncPlayerAppear::clear_has_sboatinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_SyncPlayerAppear::clear_sboatinfo() {
  if (sboatinfo_ != NULL) sboatinfo_->::proto::message::BattleBoatInfo::Clear();
  clear_has_sboatinfo();
}
inline const ::proto::message::BattleBoatInfo& Battle2Client_SyncPlayerAppear::sboatinfo() const {
  return sboatinfo_ != NULL ? *sboatinfo_ : *default_instance_->sboatinfo_;
}
inline ::proto::message::BattleBoatInfo* Battle2Client_SyncPlayerAppear::mutable_sboatinfo() {
  set_has_sboatinfo();
  if (sboatinfo_ == NULL) sboatinfo_ = new ::proto::message::BattleBoatInfo;
  return sboatinfo_;
}
inline ::proto::message::BattleBoatInfo* Battle2Client_SyncPlayerAppear::release_sboatinfo() {
  clear_has_sboatinfo();
  ::proto::message::BattleBoatInfo* temp = sboatinfo_;
  sboatinfo_ = NULL;
  return temp;
}
inline void Battle2Client_SyncPlayerAppear::set_allocated_sboatinfo(::proto::message::BattleBoatInfo* sboatinfo) {
  delete sboatinfo_;
  sboatinfo_ = sboatinfo;
  if (sboatinfo) {
    set_has_sboatinfo();
  } else {
    clear_has_sboatinfo();
  }
}

// optional uint64 Status = 5;
inline bool Battle2Client_SyncPlayerAppear::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_SyncPlayerAppear::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_SyncPlayerAppear::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_SyncPlayerAppear::clear_status() {
  status_ = GOOGLE_ULONGLONG(0);
  clear_has_status();
}
inline ::google::protobuf::uint64 Battle2Client_SyncPlayerAppear::status() const {
  return status_;
}
inline void Battle2Client_SyncPlayerAppear::set_status(::google::protobuf::uint64 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 attack_mode = 6;
inline bool Battle2Client_SyncPlayerAppear::has_attack_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Client_SyncPlayerAppear::set_has_attack_mode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Client_SyncPlayerAppear::clear_has_attack_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Client_SyncPlayerAppear::clear_attack_mode() {
  attack_mode_ = 0u;
  clear_has_attack_mode();
}
inline ::google::protobuf::uint32 Battle2Client_SyncPlayerAppear::attack_mode() const {
  return attack_mode_;
}
inline void Battle2Client_SyncPlayerAppear::set_attack_mode(::google::protobuf::uint32 value) {
  set_has_attack_mode();
  attack_mode_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_SyncObjDisappear

// required uint32 uiObjId = 1;
inline bool Battle2Client_SyncObjDisappear::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncObjDisappear::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncObjDisappear::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncObjDisappear::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncObjDisappear::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_SyncObjDisappear::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// required uint32 uiObjType = 2;
inline bool Battle2Client_SyncObjDisappear::has_uiobjtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncObjDisappear::set_has_uiobjtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncObjDisappear::clear_has_uiobjtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncObjDisappear::clear_uiobjtype() {
  uiobjtype_ = 0u;
  clear_has_uiobjtype();
}
inline ::google::protobuf::uint32 Battle2Client_SyncObjDisappear::uiobjtype() const {
  return uiobjtype_;
}
inline void Battle2Client_SyncObjDisappear::set_uiobjtype(::google::protobuf::uint32 value) {
  set_has_uiobjtype();
  uiobjtype_ = value;
}

// -------------------------------------------------------------------

// OwnerInfo

// optional uint64 playerid = 1;
inline bool OwnerInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OwnerInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OwnerInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OwnerInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 OwnerInfo::playerid() const {
  return playerid_;
}
inline void OwnerInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string name = 2;
inline bool OwnerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OwnerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OwnerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OwnerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OwnerInfo::name() const {
  return *name_;
}
inline void OwnerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OwnerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OwnerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OwnerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* OwnerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OwnerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 career = 3;
inline bool OwnerInfo::has_career() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OwnerInfo::set_has_career() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OwnerInfo::clear_has_career() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OwnerInfo::clear_career() {
  career_ = 0u;
  clear_has_career();
}
inline ::google::protobuf::uint32 OwnerInfo::career() const {
  return career_;
}
inline void OwnerInfo::set_career(::google::protobuf::uint32 value) {
  set_has_career();
  career_ = value;
}

// optional uint32 level = 4;
inline bool OwnerInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OwnerInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OwnerInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OwnerInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 OwnerInfo::level() const {
  return level_;
}
inline void OwnerInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 dhlev = 5;
inline bool OwnerInfo::has_dhlev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OwnerInfo::set_has_dhlev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OwnerInfo::clear_has_dhlev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OwnerInfo::clear_dhlev() {
  dhlev_ = 0u;
  clear_has_dhlev();
}
inline ::google::protobuf::uint32 OwnerInfo::dhlev() const {
  return dhlev_;
}
inline void OwnerInfo::set_dhlev(::google::protobuf::uint32 value) {
  set_has_dhlev();
  dhlev_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_SyncMonsterAppear

// required uint32 ID = 1;
inline bool Battle2Client_SyncMonsterAppear::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncMonsterAppear::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMonsterAppear::id() const {
  return id_;
}
inline void Battle2Client_SyncMonsterAppear::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 ProID = 2;
inline bool Battle2Client_SyncMonsterAppear::has_proid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_proid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_proid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncMonsterAppear::clear_proid() {
  proid_ = 0u;
  clear_has_proid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMonsterAppear::proid() const {
  return proid_;
}
inline void Battle2Client_SyncMonsterAppear::set_proid(::google::protobuf::uint32 value) {
  set_has_proid();
  proid_ = value;
}

// required .proto.message.Point3D pt = 3;
inline bool Battle2Client_SyncMonsterAppear::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SyncMonsterAppear::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_SyncMonsterAppear::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_SyncMonsterAppear::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_SyncMonsterAppear::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_SyncMonsterAppear::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 4;
inline bool Battle2Client_SyncMonsterAppear::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_SyncMonsterAppear::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Client_SyncMonsterAppear::dir() const {
  return dir_;
}
inline void Battle2Client_SyncMonsterAppear::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 Velocity = 5;
inline bool Battle2Client_SyncMonsterAppear::has_velocity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_velocity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_SyncMonsterAppear::clear_velocity() {
  velocity_ = 0;
  clear_has_velocity();
}
inline ::google::protobuf::int32 Battle2Client_SyncMonsterAppear::velocity() const {
  return velocity_;
}
inline void Battle2Client_SyncMonsterAppear::set_velocity(::google::protobuf::int32 value) {
  set_has_velocity();
  velocity_ = value;
}

// optional int64 MaxHP = 6;
inline bool Battle2Client_SyncMonsterAppear::has_maxhp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_maxhp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Client_SyncMonsterAppear::clear_maxhp() {
  maxhp_ = GOOGLE_LONGLONG(0);
  clear_has_maxhp();
}
inline ::google::protobuf::int64 Battle2Client_SyncMonsterAppear::maxhp() const {
  return maxhp_;
}
inline void Battle2Client_SyncMonsterAppear::set_maxhp(::google::protobuf::int64 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// optional int64 CurHP = 7;
inline bool Battle2Client_SyncMonsterAppear::has_curhp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_curhp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Battle2Client_SyncMonsterAppear::clear_curhp() {
  curhp_ = GOOGLE_LONGLONG(0);
  clear_has_curhp();
}
inline ::google::protobuf::int64 Battle2Client_SyncMonsterAppear::curhp() const {
  return curhp_;
}
inline void Battle2Client_SyncMonsterAppear::set_curhp(::google::protobuf::int64 value) {
  set_has_curhp();
  curhp_ = value;
}

// optional int32 max_tp = 8;
inline bool Battle2Client_SyncMonsterAppear::has_max_tp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_max_tp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_max_tp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Battle2Client_SyncMonsterAppear::clear_max_tp() {
  max_tp_ = 0;
  clear_has_max_tp();
}
inline ::google::protobuf::int32 Battle2Client_SyncMonsterAppear::max_tp() const {
  return max_tp_;
}
inline void Battle2Client_SyncMonsterAppear::set_max_tp(::google::protobuf::int32 value) {
  set_has_max_tp();
  max_tp_ = value;
}

// optional int32 cur_tp = 9;
inline bool Battle2Client_SyncMonsterAppear::has_cur_tp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_cur_tp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_cur_tp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Battle2Client_SyncMonsterAppear::clear_cur_tp() {
  cur_tp_ = 0;
  clear_has_cur_tp();
}
inline ::google::protobuf::int32 Battle2Client_SyncMonsterAppear::cur_tp() const {
  return cur_tp_;
}
inline void Battle2Client_SyncMonsterAppear::set_cur_tp(::google::protobuf::int32 value) {
  set_has_cur_tp();
  cur_tp_ = value;
}

// optional int32 cmap = 10;
inline bool Battle2Client_SyncMonsterAppear::has_cmap() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_cmap() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_cmap() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Battle2Client_SyncMonsterAppear::clear_cmap() {
  cmap_ = 0;
  clear_has_cmap();
}
inline ::google::protobuf::int32 Battle2Client_SyncMonsterAppear::cmap() const {
  return cmap_;
}
inline void Battle2Client_SyncMonsterAppear::set_cmap(::google::protobuf::int32 value) {
  set_has_cmap();
  cmap_ = value;
}

// optional int32 layer = 11;
inline bool Battle2Client_SyncMonsterAppear::has_layer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_layer() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_layer() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Battle2Client_SyncMonsterAppear::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Battle2Client_SyncMonsterAppear::layer() const {
  return layer_;
}
inline void Battle2Client_SyncMonsterAppear::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional .proto.message.BattleBoatInfo sBoatInfo = 12;
inline bool Battle2Client_SyncMonsterAppear::has_sboatinfo() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_sboatinfo() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_sboatinfo() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Battle2Client_SyncMonsterAppear::clear_sboatinfo() {
  if (sboatinfo_ != NULL) sboatinfo_->::proto::message::BattleBoatInfo::Clear();
  clear_has_sboatinfo();
}
inline const ::proto::message::BattleBoatInfo& Battle2Client_SyncMonsterAppear::sboatinfo() const {
  return sboatinfo_ != NULL ? *sboatinfo_ : *default_instance_->sboatinfo_;
}
inline ::proto::message::BattleBoatInfo* Battle2Client_SyncMonsterAppear::mutable_sboatinfo() {
  set_has_sboatinfo();
  if (sboatinfo_ == NULL) sboatinfo_ = new ::proto::message::BattleBoatInfo;
  return sboatinfo_;
}
inline ::proto::message::BattleBoatInfo* Battle2Client_SyncMonsterAppear::release_sboatinfo() {
  clear_has_sboatinfo();
  ::proto::message::BattleBoatInfo* temp = sboatinfo_;
  sboatinfo_ = NULL;
  return temp;
}
inline void Battle2Client_SyncMonsterAppear::set_allocated_sboatinfo(::proto::message::BattleBoatInfo* sboatinfo) {
  delete sboatinfo_;
  sboatinfo_ = sboatinfo;
  if (sboatinfo) {
    set_has_sboatinfo();
  } else {
    clear_has_sboatinfo();
  }
}

// optional uint64 Status = 13;
inline bool Battle2Client_SyncMonsterAppear::has_status() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_status() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_status() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Battle2Client_SyncMonsterAppear::clear_status() {
  status_ = GOOGLE_ULONGLONG(0);
  clear_has_status();
}
inline ::google::protobuf::uint64 Battle2Client_SyncMonsterAppear::status() const {
  return status_;
}
inline void Battle2Client_SyncMonsterAppear::set_status(::google::protobuf::uint64 value) {
  set_has_status();
  status_ = value;
}

// optional .proto.message.OwnerInfo owner = 14;
inline bool Battle2Client_SyncMonsterAppear::has_owner() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Battle2Client_SyncMonsterAppear::set_has_owner() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Battle2Client_SyncMonsterAppear::clear_has_owner() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Battle2Client_SyncMonsterAppear::clear_owner() {
  if (owner_ != NULL) owner_->::proto::message::OwnerInfo::Clear();
  clear_has_owner();
}
inline const ::proto::message::OwnerInfo& Battle2Client_SyncMonsterAppear::owner() const {
  return owner_ != NULL ? *owner_ : *default_instance_->owner_;
}
inline ::proto::message::OwnerInfo* Battle2Client_SyncMonsterAppear::mutable_owner() {
  set_has_owner();
  if (owner_ == NULL) owner_ = new ::proto::message::OwnerInfo;
  return owner_;
}
inline ::proto::message::OwnerInfo* Battle2Client_SyncMonsterAppear::release_owner() {
  clear_has_owner();
  ::proto::message::OwnerInfo* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline void Battle2Client_SyncMonsterAppear::set_allocated_owner(::proto::message::OwnerInfo* owner) {
  delete owner_;
  owner_ = owner;
  if (owner) {
    set_has_owner();
  } else {
    clear_has_owner();
  }
}

// -------------------------------------------------------------------

// mercenarySkillCD

// required int32 nskillID = 1;
inline bool mercenarySkillCD::has_nskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mercenarySkillCD::set_has_nskillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mercenarySkillCD::clear_has_nskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mercenarySkillCD::clear_nskillid() {
  nskillid_ = 0;
  clear_has_nskillid();
}
inline ::google::protobuf::int32 mercenarySkillCD::nskillid() const {
  return nskillid_;
}
inline void mercenarySkillCD::set_nskillid(::google::protobuf::int32 value) {
  set_has_nskillid();
  nskillid_ = value;
}

// required int32 nCD = 2;
inline bool mercenarySkillCD::has_ncd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mercenarySkillCD::set_has_ncd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mercenarySkillCD::clear_has_ncd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mercenarySkillCD::clear_ncd() {
  ncd_ = 0;
  clear_has_ncd();
}
inline ::google::protobuf::int32 mercenarySkillCD::ncd() const {
  return ncd_;
}
inline void mercenarySkillCD::set_ncd(::google::protobuf::int32 value) {
  set_has_ncd();
  ncd_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_SyncMercenaryAppear

// required uint32 uiObjId = 1;
inline bool Battle2Client_SyncMercenaryAppear::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncMercenaryAppear::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMercenaryAppear::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_SyncMercenaryAppear::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// required uint32 uiType = 2;
inline bool Battle2Client_SyncMercenaryAppear::has_uitype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncMercenaryAppear::set_has_uitype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_has_uitype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_uitype() {
  uitype_ = 0u;
  clear_has_uitype();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMercenaryAppear::uitype() const {
  return uitype_;
}
inline void Battle2Client_SyncMercenaryAppear::set_uitype(::google::protobuf::uint32 value) {
  set_has_uitype();
  uitype_ = value;
}

// required uint32 lordObjId = 3;
inline bool Battle2Client_SyncMercenaryAppear::has_lordobjid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SyncMercenaryAppear::set_has_lordobjid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_has_lordobjid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_lordobjid() {
  lordobjid_ = 0u;
  clear_has_lordobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMercenaryAppear::lordobjid() const {
  return lordobjid_;
}
inline void Battle2Client_SyncMercenaryAppear::set_lordobjid(::google::protobuf::uint32 value) {
  set_has_lordobjid();
  lordobjid_ = value;
}

// required .proto.message.BattleMercenaryInfo sMerInfo = 4;
inline bool Battle2Client_SyncMercenaryAppear::has_smerinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_SyncMercenaryAppear::set_has_smerinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_has_smerinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_SyncMercenaryAppear::clear_smerinfo() {
  if (smerinfo_ != NULL) smerinfo_->::proto::message::BattleMercenaryInfo::Clear();
  clear_has_smerinfo();
}
inline const ::proto::message::BattleMercenaryInfo& Battle2Client_SyncMercenaryAppear::smerinfo() const {
  return smerinfo_ != NULL ? *smerinfo_ : *default_instance_->smerinfo_;
}
inline ::proto::message::BattleMercenaryInfo* Battle2Client_SyncMercenaryAppear::mutable_smerinfo() {
  set_has_smerinfo();
  if (smerinfo_ == NULL) smerinfo_ = new ::proto::message::BattleMercenaryInfo;
  return smerinfo_;
}
inline ::proto::message::BattleMercenaryInfo* Battle2Client_SyncMercenaryAppear::release_smerinfo() {
  clear_has_smerinfo();
  ::proto::message::BattleMercenaryInfo* temp = smerinfo_;
  smerinfo_ = NULL;
  return temp;
}
inline void Battle2Client_SyncMercenaryAppear::set_allocated_smerinfo(::proto::message::BattleMercenaryInfo* smerinfo) {
  delete smerinfo_;
  smerinfo_ = smerinfo;
  if (smerinfo) {
    set_has_smerinfo();
  } else {
    clear_has_smerinfo();
  }
}

// repeated .proto.message.mercenarySkillCD merCD = 5;
inline int Battle2Client_SyncMercenaryAppear::mercd_size() const {
  return mercd_.size();
}
inline void Battle2Client_SyncMercenaryAppear::clear_mercd() {
  mercd_.Clear();
}
inline const ::proto::message::mercenarySkillCD& Battle2Client_SyncMercenaryAppear::mercd(int index) const {
  return mercd_.Get(index);
}
inline ::proto::message::mercenarySkillCD* Battle2Client_SyncMercenaryAppear::mutable_mercd(int index) {
  return mercd_.Mutable(index);
}
inline ::proto::message::mercenarySkillCD* Battle2Client_SyncMercenaryAppear::add_mercd() {
  return mercd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::mercenarySkillCD >&
Battle2Client_SyncMercenaryAppear::mercd() const {
  return mercd_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::mercenarySkillCD >*
Battle2Client_SyncMercenaryAppear::mutable_mercd() {
  return &mercd_;
}

// -------------------------------------------------------------------

// Battle2Client_SyncMove

// required uint32 uiObjId = 1;
inline bool Battle2Client_SyncMove::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncMove::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncMove::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncMove::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMove::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_SyncMove::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Battle2Client_SyncMove::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncMove::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncMove::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncMove::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_SyncMove::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_SyncMove::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_SyncMove::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_SyncMove::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Battle2Client_SyncMove::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SyncMove::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SyncMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SyncMove::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Client_SyncMove::dir() const {
  return dir_;
}
inline void Battle2Client_SyncMove::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// required float velocity = 4;
inline bool Battle2Client_SyncMove::has_velocity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_SyncMove::set_has_velocity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_SyncMove::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_SyncMove::clear_velocity() {
  velocity_ = 0;
  clear_has_velocity();
}
inline float Battle2Client_SyncMove::velocity() const {
  return velocity_;
}
inline void Battle2Client_SyncMove::set_velocity(float value) {
  set_has_velocity();
  velocity_ = value;
}

// optional int32 arrival = 5;
inline bool Battle2Client_SyncMove::has_arrival() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_SyncMove::set_has_arrival() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_SyncMove::clear_has_arrival() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_SyncMove::clear_arrival() {
  arrival_ = 0;
  clear_has_arrival();
}
inline ::google::protobuf::int32 Battle2Client_SyncMove::arrival() const {
  return arrival_;
}
inline void Battle2Client_SyncMove::set_arrival(::google::protobuf::int32 value) {
  set_has_arrival();
  arrival_ = value;
}

// optional int32 objType = 6;
inline bool Battle2Client_SyncMove::has_objtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Client_SyncMove::set_has_objtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Client_SyncMove::clear_has_objtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Client_SyncMove::clear_objtype() {
  objtype_ = 0;
  clear_has_objtype();
}
inline ::google::protobuf::int32 Battle2Client_SyncMove::objtype() const {
  return objtype_;
}
inline void Battle2Client_SyncMove::set_objtype(::google::protobuf::int32 value) {
  set_has_objtype();
  objtype_ = value;
}

// optional uint64 timestamp = 7;
inline bool Battle2Client_SyncMove::has_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Battle2Client_SyncMove::set_has_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Battle2Client_SyncMove::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Battle2Client_SyncMove::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Battle2Client_SyncMove::timestamp() const {
  return timestamp_;
}
inline void Battle2Client_SyncMove::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_SpeelBegin

// required uint32 Layer = 1;
inline bool Client2Battle_SpeelBegin::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_SpeelBegin::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_SpeelBegin::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_SpeelBegin::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 Client2Battle_SpeelBegin::layer() const {
  return layer_;
}
inline void Client2Battle_SpeelBegin::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 TriggerId = 2;
inline bool Client2Battle_SpeelBegin::has_triggerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle_SpeelBegin::set_has_triggerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle_SpeelBegin::clear_has_triggerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle_SpeelBegin::clear_triggerid() {
  triggerid_ = 0;
  clear_has_triggerid();
}
inline ::google::protobuf::int32 Client2Battle_SpeelBegin::triggerid() const {
  return triggerid_;
}
inline void Client2Battle_SpeelBegin::set_triggerid(::google::protobuf::int32 value) {
  set_has_triggerid();
  triggerid_ = value;
}

// optional uint32 TriggerType = 3;
inline bool Client2Battle_SpeelBegin::has_triggertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Client2Battle_SpeelBegin::set_has_triggertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Client2Battle_SpeelBegin::clear_has_triggertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Client2Battle_SpeelBegin::clear_triggertype() {
  triggertype_ = 0u;
  clear_has_triggertype();
}
inline ::google::protobuf::uint32 Client2Battle_SpeelBegin::triggertype() const {
  return triggertype_;
}
inline void Client2Battle_SpeelBegin::set_triggertype(::google::protobuf::uint32 value) {
  set_has_triggertype();
  triggertype_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_SpeelEnd

// required .proto.message.Point3D pt = 1;
inline bool Client2Battle_SpeelEnd::has_pt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_SpeelEnd::set_has_pt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_SpeelEnd::clear_has_pt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_SpeelEnd::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Client2Battle_SpeelEnd::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Client2Battle_SpeelEnd::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Client2Battle_SpeelEnd::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Client2Battle_SpeelEnd::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// -------------------------------------------------------------------

// Battle2Client_SpeelBegin

// required uint32 PlyId = 1;
inline bool Battle2Client_SpeelBegin::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SpeelBegin::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SpeelBegin::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SpeelBegin::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Battle2Client_SpeelBegin::plyid() const {
  return plyid_;
}
inline void Battle2Client_SpeelBegin::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required uint32 Layer = 2;
inline bool Battle2Client_SpeelBegin::has_layer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SpeelBegin::set_has_layer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SpeelBegin::clear_has_layer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SpeelBegin::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 Battle2Client_SpeelBegin::layer() const {
  return layer_;
}
inline void Battle2Client_SpeelBegin::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 TriggerId = 3;
inline bool Battle2Client_SpeelBegin::has_triggerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SpeelBegin::set_has_triggerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SpeelBegin::clear_has_triggerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SpeelBegin::clear_triggerid() {
  triggerid_ = 0;
  clear_has_triggerid();
}
inline ::google::protobuf::int32 Battle2Client_SpeelBegin::triggerid() const {
  return triggerid_;
}
inline void Battle2Client_SpeelBegin::set_triggerid(::google::protobuf::int32 value) {
  set_has_triggerid();
  triggerid_ = value;
}

// optional uint32 TriggerType = 4;
inline bool Battle2Client_SpeelBegin::has_triggertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_SpeelBegin::set_has_triggertype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_SpeelBegin::clear_has_triggertype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_SpeelBegin::clear_triggertype() {
  triggertype_ = 0u;
  clear_has_triggertype();
}
inline ::google::protobuf::uint32 Battle2Client_SpeelBegin::triggertype() const {
  return triggertype_;
}
inline void Battle2Client_SpeelBegin::set_triggertype(::google::protobuf::uint32 value) {
  set_has_triggertype();
  triggertype_ = value;
}

// -------------------------------------------------------------------

// SceneBranchInfo

// required int32 BranchId = 1;
inline bool SceneBranchInfo::has_branchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneBranchInfo::set_has_branchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneBranchInfo::clear_has_branchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneBranchInfo::clear_branchid() {
  branchid_ = 0;
  clear_has_branchid();
}
inline ::google::protobuf::int32 SceneBranchInfo::branchid() const {
  return branchid_;
}
inline void SceneBranchInfo::set_branchid(::google::protobuf::int32 value) {
  set_has_branchid();
  branchid_ = value;
}

// required int32 PlayerNum = 2;
inline bool SceneBranchInfo::has_playernum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneBranchInfo::set_has_playernum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneBranchInfo::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneBranchInfo::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google::protobuf::int32 SceneBranchInfo::playernum() const {
  return playernum_;
}
inline void SceneBranchInfo::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
}

// optional int32 DisplyBranchId = 3;
inline bool SceneBranchInfo::has_displybranchid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneBranchInfo::set_has_displybranchid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneBranchInfo::clear_has_displybranchid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneBranchInfo::clear_displybranchid() {
  displybranchid_ = 0;
  clear_has_displybranchid();
}
inline ::google::protobuf::int32 SceneBranchInfo::displybranchid() const {
  return displybranchid_;
}
inline void SceneBranchInfo::set_displybranchid(::google::protobuf::int32 value) {
  set_has_displybranchid();
  displybranchid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_GetMapBranch

// repeated .proto.message.SceneBranchInfo branch_list = 1;
inline int Battle2Client_GetMapBranch::branch_list_size() const {
  return branch_list_.size();
}
inline void Battle2Client_GetMapBranch::clear_branch_list() {
  branch_list_.Clear();
}
inline const ::proto::message::SceneBranchInfo& Battle2Client_GetMapBranch::branch_list(int index) const {
  return branch_list_.Get(index);
}
inline ::proto::message::SceneBranchInfo* Battle2Client_GetMapBranch::mutable_branch_list(int index) {
  return branch_list_.Mutable(index);
}
inline ::proto::message::SceneBranchInfo* Battle2Client_GetMapBranch::add_branch_list() {
  return branch_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SceneBranchInfo >&
Battle2Client_GetMapBranch::branch_list() const {
  return branch_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SceneBranchInfo >*
Battle2Client_GetMapBranch::mutable_branch_list() {
  return &branch_list_;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeBranch

// required int32 rt = 1;
inline bool Battle2Client_ChangeBranch::has_rt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeBranch::set_has_rt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeBranch::clear_has_rt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeBranch::clear_rt() {
  rt_ = 0;
  clear_has_rt();
}
inline ::google::protobuf::int32 Battle2Client_ChangeBranch::rt() const {
  return rt_;
}
inline void Battle2Client_ChangeBranch::set_rt(::google::protobuf::int32 value) {
  set_has_rt();
  rt_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_ChangeMap

// required uint32 uiMapId = 1;
inline bool Client2Battle_ChangeMap::has_uimapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_ChangeMap::set_has_uimapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_ChangeMap::clear_has_uimapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_ChangeMap::clear_uimapid() {
  uimapid_ = 0u;
  clear_has_uimapid();
}
inline ::google::protobuf::uint32 Client2Battle_ChangeMap::uimapid() const {
  return uimapid_;
}
inline void Client2Battle_ChangeMap::set_uimapid(::google::protobuf::uint32 value) {
  set_has_uimapid();
  uimapid_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_SummonMercenary

// -------------------------------------------------------------------

// Battle2Client_CheckPosition

// required uint32 nId = 1;
inline bool Battle2Client_CheckPosition::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_CheckPosition::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_CheckPosition::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_CheckPosition::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_CheckPosition::nid() const {
  return nid_;
}
inline void Battle2Client_CheckPosition::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Battle2Client_CheckPosition::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_CheckPosition::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_CheckPosition::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_CheckPosition::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_CheckPosition::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_CheckPosition::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_CheckPosition::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_CheckPosition::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Battle2Client_CheckPosition::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_CheckPosition::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_CheckPosition::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_CheckPosition::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Client_CheckPosition::dir() const {
  return dir_;
}
inline void Battle2Client_CheckPosition::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_MonsterStopMove

// required uint32 nId = 1;
inline bool Battle2Client_MonsterStopMove::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_MonsterStopMove::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_MonsterStopMove::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_MonsterStopMove::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_MonsterStopMove::nid() const {
  return nid_;
}
inline void Battle2Client_MonsterStopMove::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Battle2Client_MonsterStopMove::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_MonsterStopMove::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_MonsterStopMove::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_MonsterStopMove::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_MonsterStopMove::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_MonsterStopMove::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_MonsterStopMove::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_MonsterStopMove::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Battle2Client_MonsterStopMove::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_MonsterStopMove::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_MonsterStopMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_MonsterStopMove::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Client_MonsterStopMove::dir() const {
  return dir_;
}
inline void Battle2Client_MonsterStopMove::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_TriggerEvent

// required uint32 PlyId = 1;
inline bool Battle2Client_TriggerEvent::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_TriggerEvent::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_TriggerEvent::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_TriggerEvent::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Battle2Client_TriggerEvent::plyid() const {
  return plyid_;
}
inline void Battle2Client_TriggerEvent::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required uint32 TriggerType = 2;
inline bool Battle2Client_TriggerEvent::has_triggertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_TriggerEvent::set_has_triggertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_TriggerEvent::clear_has_triggertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_TriggerEvent::clear_triggertype() {
  triggertype_ = 0u;
  clear_has_triggertype();
}
inline ::google::protobuf::uint32 Battle2Client_TriggerEvent::triggertype() const {
  return triggertype_;
}
inline void Battle2Client_TriggerEvent::set_triggertype(::google::protobuf::uint32 value) {
  set_has_triggertype();
  triggertype_ = value;
}

// required uint32 TriggerId = 3;
inline bool Battle2Client_TriggerEvent::has_triggerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_TriggerEvent::set_has_triggerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_TriggerEvent::clear_has_triggerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_TriggerEvent::clear_triggerid() {
  triggerid_ = 0u;
  clear_has_triggerid();
}
inline ::google::protobuf::uint32 Battle2Client_TriggerEvent::triggerid() const {
  return triggerid_;
}
inline void Battle2Client_TriggerEvent::set_triggerid(::google::protobuf::uint32 value) {
  set_has_triggerid();
  triggerid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_TriggerServerTips

// optional uint32 ServerTipsId = 1;
inline bool Battle2Client_TriggerServerTips::has_servertipsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_TriggerServerTips::set_has_servertipsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_TriggerServerTips::clear_has_servertipsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_TriggerServerTips::clear_servertipsid() {
  servertipsid_ = 0u;
  clear_has_servertipsid();
}
inline ::google::protobuf::uint32 Battle2Client_TriggerServerTips::servertipsid() const {
  return servertipsid_;
}
inline void Battle2Client_TriggerServerTips::set_servertipsid(::google::protobuf::uint32 value) {
  set_has_servertipsid();
  servertipsid_ = value;
}

// repeated string arg = 2;
inline int Battle2Client_TriggerServerTips::arg_size() const {
  return arg_.size();
}
inline void Battle2Client_TriggerServerTips::clear_arg() {
  arg_.Clear();
}
inline const ::std::string& Battle2Client_TriggerServerTips::arg(int index) const {
  return arg_.Get(index);
}
inline ::std::string* Battle2Client_TriggerServerTips::mutable_arg(int index) {
  return arg_.Mutable(index);
}
inline void Battle2Client_TriggerServerTips::set_arg(int index, const ::std::string& value) {
  arg_.Mutable(index)->assign(value);
}
inline void Battle2Client_TriggerServerTips::set_arg(int index, const char* value) {
  arg_.Mutable(index)->assign(value);
}
inline void Battle2Client_TriggerServerTips::set_arg(int index, const char* value, size_t size) {
  arg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_TriggerServerTips::add_arg() {
  return arg_.Add();
}
inline void Battle2Client_TriggerServerTips::add_arg(const ::std::string& value) {
  arg_.Add()->assign(value);
}
inline void Battle2Client_TriggerServerTips::add_arg(const char* value) {
  arg_.Add()->assign(value);
}
inline void Battle2Client_TriggerServerTips::add_arg(const char* value, size_t size) {
  arg_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Battle2Client_TriggerServerTips::arg() const {
  return arg_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Battle2Client_TriggerServerTips::mutable_arg() {
  return &arg_;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeTttle

// required uint32 nId = 1;
inline bool Battle2Client_ChangeTttle::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeTttle::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeTttle::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeTttle::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeTttle::nid() const {
  return nid_;
}
inline void Battle2Client_ChangeTttle::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 titleID = 2;
inline bool Battle2Client_ChangeTttle::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ChangeTttle::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ChangeTttle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ChangeTttle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Battle2Client_ChangeTttle::titleid() const {
  return titleid_;
}
inline void Battle2Client_ChangeTttle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional string titlename = 3;
inline bool Battle2Client_ChangeTttle::has_titlename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ChangeTttle::set_has_titlename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ChangeTttle::clear_has_titlename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ChangeTttle::clear_titlename() {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    titlename_->clear();
  }
  clear_has_titlename();
}
inline const ::std::string& Battle2Client_ChangeTttle::titlename() const {
  return *titlename_;
}
inline void Battle2Client_ChangeTttle::set_titlename(const ::std::string& value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void Battle2Client_ChangeTttle::set_titlename(const char* value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void Battle2Client_ChangeTttle::set_titlename(const char* value, size_t size) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_ChangeTttle::mutable_titlename() {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  return titlename_;
}
inline ::std::string* Battle2Client_ChangeTttle::release_titlename() {
  clear_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = titlename_;
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Client_ChangeTttle::set_allocated_titlename(::std::string* titlename) {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    delete titlename_;
  }
  if (titlename) {
    set_has_titlename();
    titlename_ = titlename;
  } else {
    clear_has_titlename();
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 ishide = 4;
inline bool Battle2Client_ChangeTttle::has_ishide() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_ChangeTttle::set_has_ishide() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_ChangeTttle::clear_has_ishide() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_ChangeTttle::clear_ishide() {
  ishide_ = 0;
  clear_has_ishide();
}
inline ::google::protobuf::int32 Battle2Client_ChangeTttle::ishide() const {
  return ishide_;
}
inline void Battle2Client_ChangeTttle::set_ishide(::google::protobuf::int32 value) {
  set_has_ishide();
  ishide_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ChangeEquip

// required uint32 nId = 1;
inline bool Battle2Client_ChangeEquip::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ChangeEquip::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ChangeEquip::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ChangeEquip::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 Battle2Client_ChangeEquip::nid() const {
  return nid_;
}
inline void Battle2Client_ChangeEquip::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// repeated .proto.message.Equip equip_list = 2;
inline int Battle2Client_ChangeEquip::equip_list_size() const {
  return equip_list_.size();
}
inline void Battle2Client_ChangeEquip::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::message::Equip& Battle2Client_ChangeEquip::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline ::proto::message::Equip* Battle2Client_ChangeEquip::mutable_equip_list(int index) {
  return equip_list_.Mutable(index);
}
inline ::proto::message::Equip* Battle2Client_ChangeEquip::add_equip_list() {
  return equip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Battle2Client_ChangeEquip::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Battle2Client_ChangeEquip::mutable_equip_list() {
  return &equip_list_;
}

// -------------------------------------------------------------------

// Battle2Client_ClientLoadOK

// optional int32 Branch = 1;
inline bool Battle2Client_ClientLoadOK::has_branch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ClientLoadOK::set_has_branch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ClientLoadOK::clear_has_branch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ClientLoadOK::clear_branch() {
  branch_ = 0;
  clear_has_branch();
}
inline ::google::protobuf::int32 Battle2Client_ClientLoadOK::branch() const {
  return branch_;
}
inline void Battle2Client_ClientLoadOK::set_branch(::google::protobuf::int32 value) {
  set_has_branch();
  branch_ = value;
}

// optional int32 initTime = 2;
inline bool Battle2Client_ClientLoadOK::has_inittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ClientLoadOK::set_has_inittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ClientLoadOK::clear_has_inittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ClientLoadOK::clear_inittime() {
  inittime_ = 0;
  clear_has_inittime();
}
inline ::google::protobuf::int32 Battle2Client_ClientLoadOK::inittime() const {
  return inittime_;
}
inline void Battle2Client_ClientLoadOK::set_inittime(::google::protobuf::int32 value) {
  set_has_inittime();
  inittime_ = value;
}

// optional int32 DisplyBranchId = 3;
inline bool Battle2Client_ClientLoadOK::has_displybranchid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ClientLoadOK::set_has_displybranchid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ClientLoadOK::clear_has_displybranchid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ClientLoadOK::clear_displybranchid() {
  displybranchid_ = 0;
  clear_has_displybranchid();
}
inline ::google::protobuf::int32 Battle2Client_ClientLoadOK::displybranchid() const {
  return displybranchid_;
}
inline void Battle2Client_ClientLoadOK::set_displybranchid(::google::protobuf::int32 value) {
  set_has_displybranchid();
  displybranchid_ = value;
}

// optional int32 reliveNum = 4;
inline bool Battle2Client_ClientLoadOK::has_relivenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_ClientLoadOK::set_has_relivenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_ClientLoadOK::clear_has_relivenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_ClientLoadOK::clear_relivenum() {
  relivenum_ = 0;
  clear_has_relivenum();
}
inline ::google::protobuf::int32 Battle2Client_ClientLoadOK::relivenum() const {
  return relivenum_;
}
inline void Battle2Client_ClientLoadOK::set_relivenum(::google::protobuf::int32 value) {
  set_has_relivenum();
  relivenum_ = value;
}

// -------------------------------------------------------------------

// Client2Battle__TriggerEvent

// required uint32 TriggerType = 1;
inline bool Client2Battle__TriggerEvent::has_triggertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle__TriggerEvent::set_has_triggertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle__TriggerEvent::clear_has_triggertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle__TriggerEvent::clear_triggertype() {
  triggertype_ = 0u;
  clear_has_triggertype();
}
inline ::google::protobuf::uint32 Client2Battle__TriggerEvent::triggertype() const {
  return triggertype_;
}
inline void Client2Battle__TriggerEvent::set_triggertype(::google::protobuf::uint32 value) {
  set_has_triggertype();
  triggertype_ = value;
}

// required uint32 TriggerId = 2;
inline bool Client2Battle__TriggerEvent::has_triggerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle__TriggerEvent::set_has_triggerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle__TriggerEvent::clear_has_triggerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle__TriggerEvent::clear_triggerid() {
  triggerid_ = 0u;
  clear_has_triggerid();
}
inline ::google::protobuf::uint32 Client2Battle__TriggerEvent::triggerid() const {
  return triggerid_;
}
inline void Client2Battle__TriggerEvent::set_triggerid(::google::protobuf::uint32 value) {
  set_has_triggerid();
  triggerid_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_AddDropItem

// required uint32 uiGetWay = 1;
inline bool Battle2Game_AddDropItem::has_uigetway() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_AddDropItem::set_has_uigetway() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_AddDropItem::clear_has_uigetway() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_AddDropItem::clear_uigetway() {
  uigetway_ = 0u;
  clear_has_uigetway();
}
inline ::google::protobuf::uint32 Battle2Game_AddDropItem::uigetway() const {
  return uigetway_;
}
inline void Battle2Game_AddDropItem::set_uigetway(::google::protobuf::uint32 value) {
  set_has_uigetway();
  uigetway_ = value;
}

// repeated .proto.message.IDNum vecItemList = 2;
inline int Battle2Game_AddDropItem::vecitemlist_size() const {
  return vecitemlist_.size();
}
inline void Battle2Game_AddDropItem::clear_vecitemlist() {
  vecitemlist_.Clear();
}
inline const ::proto::message::IDNum& Battle2Game_AddDropItem::vecitemlist(int index) const {
  return vecitemlist_.Get(index);
}
inline ::proto::message::IDNum* Battle2Game_AddDropItem::mutable_vecitemlist(int index) {
  return vecitemlist_.Mutable(index);
}
inline ::proto::message::IDNum* Battle2Game_AddDropItem::add_vecitemlist() {
  return vecitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Battle2Game_AddDropItem::vecitemlist() const {
  return vecitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Battle2Game_AddDropItem::mutable_vecitemlist() {
  return &vecitemlist_;
}

// required uint32 uiSendTips = 3;
inline bool Battle2Game_AddDropItem::has_uisendtips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_AddDropItem::set_has_uisendtips() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_AddDropItem::clear_has_uisendtips() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_AddDropItem::clear_uisendtips() {
  uisendtips_ = 0u;
  clear_has_uisendtips();
}
inline ::google::protobuf::uint32 Battle2Game_AddDropItem::uisendtips() const {
  return uisendtips_;
}
inline void Battle2Game_AddDropItem::set_uisendtips(::google::protobuf::uint32 value) {
  set_has_uisendtips();
  uisendtips_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_DungeonResult

// required uint32 uiProId = 1;
inline bool Battle2Game_DungeonResult::has_uiproid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uiproid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_DungeonResult::clear_has_uiproid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_DungeonResult::clear_uiproid() {
  uiproid_ = 0u;
  clear_has_uiproid();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uiproid() const {
  return uiproid_;
}
inline void Battle2Game_DungeonResult::set_uiproid(::google::protobuf::uint32 value) {
  set_has_uiproid();
  uiproid_ = value;
}

// required uint32 uiResult = 2;
inline bool Battle2Game_DungeonResult::has_uiresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uiresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_DungeonResult::clear_has_uiresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_DungeonResult::clear_uiresult() {
  uiresult_ = 0u;
  clear_has_uiresult();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uiresult() const {
  return uiresult_;
}
inline void Battle2Game_DungeonResult::set_uiresult(::google::protobuf::uint32 value) {
  set_has_uiresult();
  uiresult_ = value;
}

// optional uint32 uiGrade = 3;
inline bool Battle2Game_DungeonResult::has_uigrade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uigrade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_DungeonResult::clear_has_uigrade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_DungeonResult::clear_uigrade() {
  uigrade_ = 0u;
  clear_has_uigrade();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uigrade() const {
  return uigrade_;
}
inline void Battle2Game_DungeonResult::set_uigrade(::google::protobuf::uint32 value) {
  set_has_uigrade();
  uigrade_ = value;
}

// optional uint32 uiPassTime = 4;
inline bool Battle2Game_DungeonResult::has_uipasstime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uipasstime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Game_DungeonResult::clear_has_uipasstime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Game_DungeonResult::clear_uipasstime() {
  uipasstime_ = 0u;
  clear_has_uipasstime();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uipasstime() const {
  return uipasstime_;
}
inline void Battle2Game_DungeonResult::set_uipasstime(::google::protobuf::uint32 value) {
  set_has_uipasstime();
  uipasstime_ = value;
}

// optional uint32 uiBeAttTimes = 5;
inline bool Battle2Game_DungeonResult::has_uibeatttimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uibeatttimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Game_DungeonResult::clear_has_uibeatttimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Game_DungeonResult::clear_uibeatttimes() {
  uibeatttimes_ = 0u;
  clear_has_uibeatttimes();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uibeatttimes() const {
  return uibeatttimes_;
}
inline void Battle2Game_DungeonResult::set_uibeatttimes(::google::protobuf::uint32 value) {
  set_has_uibeatttimes();
  uibeatttimes_ = value;
}

// optional uint32 uiRemainHP = 6;
inline bool Battle2Game_DungeonResult::has_uiremainhp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uiremainhp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Game_DungeonResult::clear_has_uiremainhp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Game_DungeonResult::clear_uiremainhp() {
  uiremainhp_ = 0u;
  clear_has_uiremainhp();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uiremainhp() const {
  return uiremainhp_;
}
inline void Battle2Game_DungeonResult::set_uiremainhp(::google::protobuf::uint32 value) {
  set_has_uiremainhp();
  uiremainhp_ = value;
}

// optional uint32 uiNPCHP = 7;
inline bool Battle2Game_DungeonResult::has_uinpchp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uinpchp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Battle2Game_DungeonResult::clear_has_uinpchp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Battle2Game_DungeonResult::clear_uinpchp() {
  uinpchp_ = 0u;
  clear_has_uinpchp();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uinpchp() const {
  return uinpchp_;
}
inline void Battle2Game_DungeonResult::set_uinpchp(::google::protobuf::uint32 value) {
  set_has_uinpchp();
  uinpchp_ = value;
}

// optional uint32 uiDieTimes = 8;
inline bool Battle2Game_DungeonResult::has_uidietimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uidietimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Battle2Game_DungeonResult::clear_has_uidietimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Battle2Game_DungeonResult::clear_uidietimes() {
  uidietimes_ = 0u;
  clear_has_uidietimes();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uidietimes() const {
  return uidietimes_;
}
inline void Battle2Game_DungeonResult::set_uidietimes(::google::protobuf::uint32 value) {
  set_has_uidietimes();
  uidietimes_ = value;
}

// optional uint32 uiNotComTask = 9;
inline bool Battle2Game_DungeonResult::has_uinotcomtask() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uinotcomtask() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Battle2Game_DungeonResult::clear_has_uinotcomtask() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Battle2Game_DungeonResult::clear_uinotcomtask() {
  uinotcomtask_ = 0u;
  clear_has_uinotcomtask();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonResult::uinotcomtask() const {
  return uinotcomtask_;
}
inline void Battle2Game_DungeonResult::set_uinotcomtask(::google::protobuf::uint32 value) {
  set_has_uinotcomtask();
  uinotcomtask_ = value;
}

// optional uint64 uleaderid = 10;
inline bool Battle2Game_DungeonResult::has_uleaderid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Battle2Game_DungeonResult::set_has_uleaderid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Battle2Game_DungeonResult::clear_has_uleaderid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Battle2Game_DungeonResult::clear_uleaderid() {
  uleaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_uleaderid();
}
inline ::google::protobuf::uint64 Battle2Game_DungeonResult::uleaderid() const {
  return uleaderid_;
}
inline void Battle2Game_DungeonResult::set_uleaderid(::google::protobuf::uint64 value) {
  set_has_uleaderid();
  uleaderid_ = value;
}

// -------------------------------------------------------------------

// GameToBattle_PlayerDisconnect

// optional uint32 uiBackOnline = 1;
inline bool GameToBattle_PlayerDisconnect::has_uibackonline() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameToBattle_PlayerDisconnect::set_has_uibackonline() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameToBattle_PlayerDisconnect::clear_has_uibackonline() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameToBattle_PlayerDisconnect::clear_uibackonline() {
  uibackonline_ = 0u;
  clear_has_uibackonline();
}
inline ::google::protobuf::uint32 GameToBattle_PlayerDisconnect::uibackonline() const {
  return uibackonline_;
}
inline void GameToBattle_PlayerDisconnect::set_uibackonline(::google::protobuf::uint32 value) {
  set_has_uibackonline();
  uibackonline_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_SyncMove

// required uint32 uiSceneId = 1;
inline bool Battle2Game_SyncMove::has_uisceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_SyncMove::set_has_uisceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_SyncMove::clear_has_uisceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_SyncMove::clear_uisceneid() {
  uisceneid_ = 0u;
  clear_has_uisceneid();
}
inline ::google::protobuf::uint32 Battle2Game_SyncMove::uisceneid() const {
  return uisceneid_;
}
inline void Battle2Game_SyncMove::set_uisceneid(::google::protobuf::uint32 value) {
  set_has_uisceneid();
  uisceneid_ = value;
}

// required .proto.message.Point3D pt = 2;
inline bool Battle2Game_SyncMove::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_SyncMove::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_SyncMove::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_SyncMove::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Game_SyncMove::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Game_SyncMove::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Game_SyncMove::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Game_SyncMove::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 3;
inline bool Battle2Game_SyncMove::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_SyncMove::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_SyncMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_SyncMove::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Game_SyncMove::dir() const {
  return dir_;
}
inline void Battle2Game_SyncMove::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// required uint32 layer = 4;
inline bool Battle2Game_SyncMove::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Game_SyncMove::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Game_SyncMove::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Game_SyncMove::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 Battle2Game_SyncMove::layer() const {
  return layer_;
}
inline void Battle2Game_SyncMove::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
}

// optional uint32 branchid = 5;
inline bool Battle2Game_SyncMove::has_branchid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Game_SyncMove::set_has_branchid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Game_SyncMove::clear_has_branchid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Game_SyncMove::clear_branchid() {
  branchid_ = 0u;
  clear_has_branchid();
}
inline ::google::protobuf::uint32 Battle2Game_SyncMove::branchid() const {
  return branchid_;
}
inline void Battle2Game_SyncMove::set_branchid(::google::protobuf::uint32 value) {
  set_has_branchid();
  branchid_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_UpdateQuest

// required uint32 uiQuestType = 1;
inline bool Battle2Game_UpdateQuest::has_uiquesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_UpdateQuest::set_has_uiquesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_UpdateQuest::clear_has_uiquesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_UpdateQuest::clear_uiquesttype() {
  uiquesttype_ = 0u;
  clear_has_uiquesttype();
}
inline ::google::protobuf::uint32 Battle2Game_UpdateQuest::uiquesttype() const {
  return uiquesttype_;
}
inline void Battle2Game_UpdateQuest::set_uiquesttype(::google::protobuf::uint32 value) {
  set_has_uiquesttype();
  uiquesttype_ = value;
}

// required uint32 uiTargetId = 2;
inline bool Battle2Game_UpdateQuest::has_uitargetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_UpdateQuest::set_has_uitargetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_UpdateQuest::clear_has_uitargetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_UpdateQuest::clear_uitargetid() {
  uitargetid_ = 0u;
  clear_has_uitargetid();
}
inline ::google::protobuf::uint32 Battle2Game_UpdateQuest::uitargetid() const {
  return uitargetid_;
}
inline void Battle2Game_UpdateQuest::set_uitargetid(::google::protobuf::uint32 value) {
  set_has_uitargetid();
  uitargetid_ = value;
}

// required uint32 uiArg = 3;
inline bool Battle2Game_UpdateQuest::has_uiarg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_UpdateQuest::set_has_uiarg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_UpdateQuest::clear_has_uiarg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_UpdateQuest::clear_uiarg() {
  uiarg_ = 0u;
  clear_has_uiarg();
}
inline ::google::protobuf::uint32 Battle2Game_UpdateQuest::uiarg() const {
  return uiarg_;
}
inline void Battle2Game_UpdateQuest::set_uiarg(::google::protobuf::uint32 value) {
  set_has_uiarg();
  uiarg_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_TriggerQuest

// required uint32 uiQuestId = 1;
inline bool Battle2Game_TriggerQuest::has_uiquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_TriggerQuest::set_has_uiquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_TriggerQuest::clear_has_uiquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_TriggerQuest::clear_uiquestid() {
  uiquestid_ = 0u;
  clear_has_uiquestid();
}
inline ::google::protobuf::uint32 Battle2Game_TriggerQuest::uiquestid() const {
  return uiquestid_;
}
inline void Battle2Game_TriggerQuest::set_uiquestid(::google::protobuf::uint32 value) {
  set_has_uiquestid();
  uiquestid_ = value;
}

// required uint32 uiQuestType = 2;
inline bool Battle2Game_TriggerQuest::has_uiquesttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_TriggerQuest::set_has_uiquesttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_TriggerQuest::clear_has_uiquesttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_TriggerQuest::clear_uiquesttype() {
  uiquesttype_ = 0u;
  clear_has_uiquesttype();
}
inline ::google::protobuf::uint32 Battle2Game_TriggerQuest::uiquesttype() const {
  return uiquesttype_;
}
inline void Battle2Game_TriggerQuest::set_uiquesttype(::google::protobuf::uint32 value) {
  set_has_uiquesttype();
  uiquesttype_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_MonsterDie

// required uint32 uiMonsterProId = 1;
inline bool Battle2Game_MonsterDie::has_uimonsterproid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_MonsterDie::set_has_uimonsterproid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_MonsterDie::clear_has_uimonsterproid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_MonsterDie::clear_uimonsterproid() {
  uimonsterproid_ = 0u;
  clear_has_uimonsterproid();
}
inline ::google::protobuf::uint32 Battle2Game_MonsterDie::uimonsterproid() const {
  return uimonsterproid_;
}
inline void Battle2Game_MonsterDie::set_uimonsterproid(::google::protobuf::uint32 value) {
  set_has_uimonsterproid();
  uimonsterproid_ = value;
}

// required uint32 uiMonsterObjId = 2;
inline bool Battle2Game_MonsterDie::has_uimonsterobjid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_MonsterDie::set_has_uimonsterobjid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_MonsterDie::clear_has_uimonsterobjid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_MonsterDie::clear_uimonsterobjid() {
  uimonsterobjid_ = 0u;
  clear_has_uimonsterobjid();
}
inline ::google::protobuf::uint32 Battle2Game_MonsterDie::uimonsterobjid() const {
  return uimonsterobjid_;
}
inline void Battle2Game_MonsterDie::set_uimonsterobjid(::google::protobuf::uint32 value) {
  set_has_uimonsterobjid();
  uimonsterobjid_ = value;
}

// required .proto.message.Point3D pt = 3;
inline bool Battle2Game_MonsterDie::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_MonsterDie::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_MonsterDie::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_MonsterDie::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Game_MonsterDie::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Game_MonsterDie::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Game_MonsterDie::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Game_MonsterDie::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// -------------------------------------------------------------------

// Battle2Game_LeaveDungeon

// required uint32 uiEnd = 1;
inline bool Battle2Game_LeaveDungeon::has_uiend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_LeaveDungeon::set_has_uiend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_LeaveDungeon::clear_has_uiend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_LeaveDungeon::clear_uiend() {
  uiend_ = 0u;
  clear_has_uiend();
}
inline ::google::protobuf::uint32 Battle2Game_LeaveDungeon::uiend() const {
  return uiend_;
}
inline void Battle2Game_LeaveDungeon::set_uiend(::google::protobuf::uint32 value) {
  set_has_uiend();
  uiend_ = value;
}

// required uint32 uiAgain = 2;
inline bool Battle2Game_LeaveDungeon::has_uiagain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_LeaveDungeon::set_has_uiagain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_LeaveDungeon::clear_has_uiagain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_LeaveDungeon::clear_uiagain() {
  uiagain_ = 0u;
  clear_has_uiagain();
}
inline ::google::protobuf::uint32 Battle2Game_LeaveDungeon::uiagain() const {
  return uiagain_;
}
inline void Battle2Game_LeaveDungeon::set_uiagain(::google::protobuf::uint32 value) {
  set_has_uiagain();
  uiagain_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_ChangeMapForceAwakenOff

// -------------------------------------------------------------------

// Battle2Game_DieToChangeAwakenAndRide

// -------------------------------------------------------------------

// Battle2Game_SceneLoadOk

// -------------------------------------------------------------------

// Battle2Game_MercenaryDieInfo

// required uint32 uiMercenary = 1;
inline bool Battle2Game_MercenaryDieInfo::has_uimercenary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_MercenaryDieInfo::set_has_uimercenary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_MercenaryDieInfo::clear_has_uimercenary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_MercenaryDieInfo::clear_uimercenary() {
  uimercenary_ = 0u;
  clear_has_uimercenary();
}
inline ::google::protobuf::uint32 Battle2Game_MercenaryDieInfo::uimercenary() const {
  return uimercenary_;
}
inline void Battle2Game_MercenaryDieInfo::set_uimercenary(::google::protobuf::uint32 value) {
  set_has_uimercenary();
  uimercenary_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_CheckTrigger

// required uint32 uiType = 1;
inline bool Game2Battle_CheckTrigger::has_uitype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_CheckTrigger::set_has_uitype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_CheckTrigger::clear_has_uitype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_CheckTrigger::clear_uitype() {
  uitype_ = 0u;
  clear_has_uitype();
}
inline ::google::protobuf::uint32 Game2Battle_CheckTrigger::uitype() const {
  return uitype_;
}
inline void Game2Battle_CheckTrigger::set_uitype(::google::protobuf::uint32 value) {
  set_has_uitype();
  uitype_ = value;
}

// required uint32 uiValue = 2;
inline bool Game2Battle_CheckTrigger::has_uivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_CheckTrigger::set_has_uivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_CheckTrigger::clear_has_uivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_CheckTrigger::clear_uivalue() {
  uivalue_ = 0u;
  clear_has_uivalue();
}
inline ::google::protobuf::uint32 Game2Battle_CheckTrigger::uivalue() const {
  return uivalue_;
}
inline void Game2Battle_CheckTrigger::set_uivalue(::google::protobuf::uint32 value) {
  set_has_uivalue();
  uivalue_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_AddQuestTrigger

// required uint32 uiQuestId = 1;
inline bool Game2Battle_AddQuestTrigger::has_uiquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_AddQuestTrigger::set_has_uiquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_AddQuestTrigger::clear_has_uiquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_AddQuestTrigger::clear_uiquestid() {
  uiquestid_ = 0u;
  clear_has_uiquestid();
}
inline ::google::protobuf::uint32 Game2Battle_AddQuestTrigger::uiquestid() const {
  return uiquestid_;
}
inline void Game2Battle_AddQuestTrigger::set_uiquestid(::google::protobuf::uint32 value) {
  set_has_uiquestid();
  uiquestid_ = value;
}

// required uint32 uiQuestTargetType = 2;
inline bool Game2Battle_AddQuestTrigger::has_uiquesttargettype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_AddQuestTrigger::set_has_uiquesttargettype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_AddQuestTrigger::clear_has_uiquesttargettype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_AddQuestTrigger::clear_uiquesttargettype() {
  uiquesttargettype_ = 0u;
  clear_has_uiquesttargettype();
}
inline ::google::protobuf::uint32 Game2Battle_AddQuestTrigger::uiquesttargettype() const {
  return uiquesttargettype_;
}
inline void Game2Battle_AddQuestTrigger::set_uiquesttargettype(::google::protobuf::uint32 value) {
  set_has_uiquesttargettype();
  uiquesttargettype_ = value;
}

// required uint32 uiTriggerId = 3;
inline bool Game2Battle_AddQuestTrigger::has_uitriggerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_AddQuestTrigger::set_has_uitriggerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_AddQuestTrigger::clear_has_uitriggerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_AddQuestTrigger::clear_uitriggerid() {
  uitriggerid_ = 0u;
  clear_has_uitriggerid();
}
inline ::google::protobuf::uint32 Game2Battle_AddQuestTrigger::uitriggerid() const {
  return uitriggerid_;
}
inline void Game2Battle_AddQuestTrigger::set_uitriggerid(::google::protobuf::uint32 value) {
  set_has_uitriggerid();
  uitriggerid_ = value;
}

// required uint32 uiTriggerNPCId = 4;
inline bool Game2Battle_AddQuestTrigger::has_uitriggernpcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_AddQuestTrigger::set_has_uitriggernpcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_AddQuestTrigger::clear_has_uitriggernpcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_AddQuestTrigger::clear_uitriggernpcid() {
  uitriggernpcid_ = 0u;
  clear_has_uitriggernpcid();
}
inline ::google::protobuf::uint32 Game2Battle_AddQuestTrigger::uitriggernpcid() const {
  return uitriggernpcid_;
}
inline void Game2Battle_AddQuestTrigger::set_uitriggernpcid(::google::protobuf::uint32 value) {
  set_has_uitriggernpcid();
  uitriggernpcid_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_UpdateTask

// required uint32 uiId = 1;
inline bool Game2Battle_UpdateTask::has_uiid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_UpdateTask::set_has_uiid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_UpdateTask::clear_has_uiid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_UpdateTask::clear_uiid() {
  uiid_ = 0u;
  clear_has_uiid();
}
inline ::google::protobuf::uint32 Game2Battle_UpdateTask::uiid() const {
  return uiid_;
}
inline void Game2Battle_UpdateTask::set_uiid(::google::protobuf::uint32 value) {
  set_has_uiid();
  uiid_ = value;
}

// required uint32 uiValue = 2;
inline bool Game2Battle_UpdateTask::has_uivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_UpdateTask::set_has_uivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_UpdateTask::clear_has_uivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_UpdateTask::clear_uivalue() {
  uivalue_ = 0u;
  clear_has_uivalue();
}
inline ::google::protobuf::uint32 Game2Battle_UpdateTask::uivalue() const {
  return uivalue_;
}
inline void Game2Battle_UpdateTask::set_uivalue(::google::protobuf::uint32 value) {
  set_has_uivalue();
  uivalue_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_QuestNPCAddBuff

// required uint32 nTriggerNPCId = 1;
inline bool Game2Battle_QuestNPCAddBuff::has_ntriggernpcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_QuestNPCAddBuff::set_has_ntriggernpcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_QuestNPCAddBuff::clear_has_ntriggernpcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_QuestNPCAddBuff::clear_ntriggernpcid() {
  ntriggernpcid_ = 0u;
  clear_has_ntriggernpcid();
}
inline ::google::protobuf::uint32 Game2Battle_QuestNPCAddBuff::ntriggernpcid() const {
  return ntriggernpcid_;
}
inline void Game2Battle_QuestNPCAddBuff::set_ntriggernpcid(::google::protobuf::uint32 value) {
  set_has_ntriggernpcid();
  ntriggernpcid_ = value;
}

// required uint32 uiType = 2;
inline bool Game2Battle_QuestNPCAddBuff::has_uitype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_QuestNPCAddBuff::set_has_uitype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_QuestNPCAddBuff::clear_has_uitype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_QuestNPCAddBuff::clear_uitype() {
  uitype_ = 0u;
  clear_has_uitype();
}
inline ::google::protobuf::uint32 Game2Battle_QuestNPCAddBuff::uitype() const {
  return uitype_;
}
inline void Game2Battle_QuestNPCAddBuff::set_uitype(::google::protobuf::uint32 value) {
  set_has_uitype();
  uitype_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_GameStoryStart

// required uint32 GameStoryID = 1;
inline bool Client2Battle_GameStoryStart::has_gamestoryid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_GameStoryStart::set_has_gamestoryid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_GameStoryStart::clear_has_gamestoryid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_GameStoryStart::clear_gamestoryid() {
  gamestoryid_ = 0u;
  clear_has_gamestoryid();
}
inline ::google::protobuf::uint32 Client2Battle_GameStoryStart::gamestoryid() const {
  return gamestoryid_;
}
inline void Client2Battle_GameStoryStart::set_gamestoryid(::google::protobuf::uint32 value) {
  set_has_gamestoryid();
  gamestoryid_ = value;
}

// optional uint32 NPCID = 2;
inline bool Client2Battle_GameStoryStart::has_npcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle_GameStoryStart::set_has_npcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle_GameStoryStart::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle_GameStoryStart::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 Client2Battle_GameStoryStart::npcid() const {
  return npcid_;
}
inline void Client2Battle_GameStoryStart::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_GameStoryEnd

// required uint32 GameStoryID = 1;
inline bool Client2Battle_GameStoryEnd::has_gamestoryid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_GameStoryEnd::set_has_gamestoryid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_GameStoryEnd::clear_has_gamestoryid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_GameStoryEnd::clear_gamestoryid() {
  gamestoryid_ = 0u;
  clear_has_gamestoryid();
}
inline ::google::protobuf::uint32 Client2Battle_GameStoryEnd::gamestoryid() const {
  return gamestoryid_;
}
inline void Client2Battle_GameStoryEnd::set_gamestoryid(::google::protobuf::uint32 value) {
  set_has_gamestoryid();
  gamestoryid_ = value;
}

// optional uint32 NPCID = 2;
inline bool Client2Battle_GameStoryEnd::has_npcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle_GameStoryEnd::set_has_npcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle_GameStoryEnd::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle_GameStoryEnd::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 Client2Battle_GameStoryEnd::npcid() const {
  return npcid_;
}
inline void Client2Battle_GameStoryEnd::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_NPCStopAI

// optional uint32 NPCID = 1;
inline bool Client2Battle_NPCStopAI::has_npcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_NPCStopAI::set_has_npcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_NPCStopAI::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_NPCStopAI::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 Client2Battle_NPCStopAI::npcid() const {
  return npcid_;
}
inline void Client2Battle_NPCStopAI::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_NPCActiveAI

// optional uint32 NPCID = 1;
inline bool Client2Battle_NPCActiveAI::has_npcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_NPCActiveAI::set_has_npcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_NPCActiveAI::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_NPCActiveAI::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 Client2Battle_NPCActiveAI::npcid() const {
  return npcid_;
}
inline void Client2Battle_NPCActiveAI::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_DungeonLoadOk

// required uint32 uiProId = 1;
inline bool Battle2Game_DungeonLoadOk::has_uiproid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_DungeonLoadOk::set_has_uiproid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_DungeonLoadOk::clear_has_uiproid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_DungeonLoadOk::clear_uiproid() {
  uiproid_ = 0u;
  clear_has_uiproid();
}
inline ::google::protobuf::uint32 Battle2Game_DungeonLoadOk::uiproid() const {
  return uiproid_;
}
inline void Battle2Game_DungeonLoadOk::set_uiproid(::google::protobuf::uint32 value) {
  set_has_uiproid();
  uiproid_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_WolrdBossDorp_ItemList

// repeated .proto.message.IDNum vecItemList = 1;
inline int Client2Battle_WolrdBossDorp_ItemList::vecitemlist_size() const {
  return vecitemlist_.size();
}
inline void Client2Battle_WolrdBossDorp_ItemList::clear_vecitemlist() {
  vecitemlist_.Clear();
}
inline const ::proto::message::IDNum& Client2Battle_WolrdBossDorp_ItemList::vecitemlist(int index) const {
  return vecitemlist_.Get(index);
}
inline ::proto::message::IDNum* Client2Battle_WolrdBossDorp_ItemList::mutable_vecitemlist(int index) {
  return vecitemlist_.Mutable(index);
}
inline ::proto::message::IDNum* Client2Battle_WolrdBossDorp_ItemList::add_vecitemlist() {
  return vecitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Client2Battle_WolrdBossDorp_ItemList::vecitemlist() const {
  return vecitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Client2Battle_WolrdBossDorp_ItemList::mutable_vecitemlist() {
  return &vecitemlist_;
}

// -------------------------------------------------------------------

// Client2Battle_WorldBoss_HurtRankList

// required uint32 uiBossType = 1;
inline bool Client2Battle_WorldBoss_HurtRankList::has_uibosstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_WorldBoss_HurtRankList::set_has_uibosstype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_WorldBoss_HurtRankList::clear_has_uibosstype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_WorldBoss_HurtRankList::clear_uibosstype() {
  uibosstype_ = 0u;
  clear_has_uibosstype();
}
inline ::google::protobuf::uint32 Client2Battle_WorldBoss_HurtRankList::uibosstype() const {
  return uibosstype_;
}
inline void Client2Battle_WorldBoss_HurtRankList::set_uibosstype(::google::protobuf::uint32 value) {
  set_has_uibosstype();
  uibosstype_ = value;
}

// optional uint32 uiBossTableId = 2;
inline bool Client2Battle_WorldBoss_HurtRankList::has_uibosstableid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Client2Battle_WorldBoss_HurtRankList::set_has_uibosstableid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Client2Battle_WorldBoss_HurtRankList::clear_has_uibosstableid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Client2Battle_WorldBoss_HurtRankList::clear_uibosstableid() {
  uibosstableid_ = 0u;
  clear_has_uibosstableid();
}
inline ::google::protobuf::uint32 Client2Battle_WorldBoss_HurtRankList::uibosstableid() const {
  return uibosstableid_;
}
inline void Client2Battle_WorldBoss_HurtRankList::set_uibosstableid(::google::protobuf::uint32 value) {
  set_has_uibosstableid();
  uibosstableid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_WolrdBoss_HurtRankList

// repeated string namelist = 1;
inline int Battle2Client_WolrdBoss_HurtRankList::namelist_size() const {
  return namelist_.size();
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_namelist() {
  namelist_.Clear();
}
inline const ::std::string& Battle2Client_WolrdBoss_HurtRankList::namelist(int index) const {
  return namelist_.Get(index);
}
inline ::std::string* Battle2Client_WolrdBoss_HurtRankList::mutable_namelist(int index) {
  return namelist_.Mutable(index);
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_namelist(int index, const ::std::string& value) {
  namelist_.Mutable(index)->assign(value);
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_namelist(int index, const char* value) {
  namelist_.Mutable(index)->assign(value);
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_namelist(int index, const char* value, size_t size) {
  namelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_WolrdBoss_HurtRankList::add_namelist() {
  return namelist_.Add();
}
inline void Battle2Client_WolrdBoss_HurtRankList::add_namelist(const ::std::string& value) {
  namelist_.Add()->assign(value);
}
inline void Battle2Client_WolrdBoss_HurtRankList::add_namelist(const char* value) {
  namelist_.Add()->assign(value);
}
inline void Battle2Client_WolrdBoss_HurtRankList::add_namelist(const char* value, size_t size) {
  namelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Battle2Client_WolrdBoss_HurtRankList::namelist() const {
  return namelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Battle2Client_WolrdBoss_HurtRankList::mutable_namelist() {
  return &namelist_;
}

// repeated uint64 hurttotal = 2;
inline int Battle2Client_WolrdBoss_HurtRankList::hurttotal_size() const {
  return hurttotal_.size();
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_hurttotal() {
  hurttotal_.Clear();
}
inline ::google::protobuf::uint64 Battle2Client_WolrdBoss_HurtRankList::hurttotal(int index) const {
  return hurttotal_.Get(index);
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_hurttotal(int index, ::google::protobuf::uint64 value) {
  hurttotal_.Set(index, value);
}
inline void Battle2Client_WolrdBoss_HurtRankList::add_hurttotal(::google::protobuf::uint64 value) {
  hurttotal_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Battle2Client_WolrdBoss_HurtRankList::hurttotal() const {
  return hurttotal_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Battle2Client_WolrdBoss_HurtRankList::mutable_hurttotal() {
  return &hurttotal_;
}

// required uint64 selfhurttotal = 3;
inline bool Battle2Client_WolrdBoss_HurtRankList::has_selfhurttotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_has_selfhurttotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_has_selfhurttotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_selfhurttotal() {
  selfhurttotal_ = GOOGLE_ULONGLONG(0);
  clear_has_selfhurttotal();
}
inline ::google::protobuf::uint64 Battle2Client_WolrdBoss_HurtRankList::selfhurttotal() const {
  return selfhurttotal_;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_selfhurttotal(::google::protobuf::uint64 value) {
  set_has_selfhurttotal();
  selfhurttotal_ = value;
}

// required uint32 selfrank = 4;
inline bool Battle2Client_WolrdBoss_HurtRankList::has_selfrank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_has_selfrank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_has_selfrank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_selfrank() {
  selfrank_ = 0u;
  clear_has_selfrank();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_HurtRankList::selfrank() const {
  return selfrank_;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_selfrank(::google::protobuf::uint32 value) {
  set_has_selfrank();
  selfrank_ = value;
}

// required uint32 uiBossType = 5;
inline bool Battle2Client_WolrdBoss_HurtRankList::has_uibosstype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_has_uibosstype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_has_uibosstype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_uibosstype() {
  uibosstype_ = 0u;
  clear_has_uibosstype();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_HurtRankList::uibosstype() const {
  return uibosstype_;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_uibosstype(::google::protobuf::uint32 value) {
  set_has_uibosstype();
  uibosstype_ = value;
}

// optional uint32 uiBossTableId = 6;
inline bool Battle2Client_WolrdBoss_HurtRankList::has_uibosstableid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_has_uibosstableid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_has_uibosstableid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Client_WolrdBoss_HurtRankList::clear_uibosstableid() {
  uibosstableid_ = 0u;
  clear_has_uibosstableid();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_HurtRankList::uibosstableid() const {
  return uibosstableid_;
}
inline void Battle2Client_WolrdBoss_HurtRankList::set_uibosstableid(::google::protobuf::uint32 value) {
  set_has_uibosstableid();
  uibosstableid_ = value;
}

// -------------------------------------------------------------------

// WolrdBossSaleItem

// required uint32 uiIndex = 1;
inline bool WolrdBossSaleItem::has_uiindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WolrdBossSaleItem::set_has_uiindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WolrdBossSaleItem::clear_has_uiindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WolrdBossSaleItem::clear_uiindex() {
  uiindex_ = 0u;
  clear_has_uiindex();
}
inline ::google::protobuf::uint32 WolrdBossSaleItem::uiindex() const {
  return uiindex_;
}
inline void WolrdBossSaleItem::set_uiindex(::google::protobuf::uint32 value) {
  set_has_uiindex();
  uiindex_ = value;
}

// required uint32 uiExpiryTime = 2;
inline bool WolrdBossSaleItem::has_uiexpirytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WolrdBossSaleItem::set_has_uiexpirytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WolrdBossSaleItem::clear_has_uiexpirytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WolrdBossSaleItem::clear_uiexpirytime() {
  uiexpirytime_ = 0u;
  clear_has_uiexpirytime();
}
inline ::google::protobuf::uint32 WolrdBossSaleItem::uiexpirytime() const {
  return uiexpirytime_;
}
inline void WolrdBossSaleItem::set_uiexpirytime(::google::protobuf::uint32 value) {
  set_has_uiexpirytime();
  uiexpirytime_ = value;
}

// required uint32 uiShareNum = 3;
inline bool WolrdBossSaleItem::has_uisharenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WolrdBossSaleItem::set_has_uisharenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WolrdBossSaleItem::clear_has_uisharenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WolrdBossSaleItem::clear_uisharenum() {
  uisharenum_ = 0u;
  clear_has_uisharenum();
}
inline ::google::protobuf::uint32 WolrdBossSaleItem::uisharenum() const {
  return uisharenum_;
}
inline void WolrdBossSaleItem::set_uisharenum(::google::protobuf::uint32 value) {
  set_has_uisharenum();
  uisharenum_ = value;
}

// required string uiPlayerName = 4;
inline bool WolrdBossSaleItem::has_uiplayername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WolrdBossSaleItem::set_has_uiplayername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WolrdBossSaleItem::clear_has_uiplayername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WolrdBossSaleItem::clear_uiplayername() {
  if (uiplayername_ != &::google::protobuf::internal::kEmptyString) {
    uiplayername_->clear();
  }
  clear_has_uiplayername();
}
inline const ::std::string& WolrdBossSaleItem::uiplayername() const {
  return *uiplayername_;
}
inline void WolrdBossSaleItem::set_uiplayername(const ::std::string& value) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(value);
}
inline void WolrdBossSaleItem::set_uiplayername(const char* value) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(value);
}
inline void WolrdBossSaleItem::set_uiplayername(const char* value, size_t size) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WolrdBossSaleItem::mutable_uiplayername() {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  return uiplayername_;
}
inline ::std::string* WolrdBossSaleItem::release_uiplayername() {
  clear_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uiplayername_;
    uiplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WolrdBossSaleItem::set_allocated_uiplayername(::std::string* uiplayername) {
  if (uiplayername_ != &::google::protobuf::internal::kEmptyString) {
    delete uiplayername_;
  }
  if (uiplayername) {
    set_has_uiplayername();
    uiplayername_ = uiplayername;
  } else {
    clear_has_uiplayername();
    uiplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uiPlayerJob = 5;
inline bool WolrdBossSaleItem::has_uiplayerjob() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WolrdBossSaleItem::set_has_uiplayerjob() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WolrdBossSaleItem::clear_has_uiplayerjob() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WolrdBossSaleItem::clear_uiplayerjob() {
  uiplayerjob_ = 0u;
  clear_has_uiplayerjob();
}
inline ::google::protobuf::uint32 WolrdBossSaleItem::uiplayerjob() const {
  return uiplayerjob_;
}
inline void WolrdBossSaleItem::set_uiplayerjob(::google::protobuf::uint32 value) {
  set_has_uiplayerjob();
  uiplayerjob_ = value;
}

// required uint32 uiPlayerLevel = 6;
inline bool WolrdBossSaleItem::has_uiplayerlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WolrdBossSaleItem::set_has_uiplayerlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WolrdBossSaleItem::clear_has_uiplayerlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WolrdBossSaleItem::clear_uiplayerlevel() {
  uiplayerlevel_ = 0u;
  clear_has_uiplayerlevel();
}
inline ::google::protobuf::uint32 WolrdBossSaleItem::uiplayerlevel() const {
  return uiplayerlevel_;
}
inline void WolrdBossSaleItem::set_uiplayerlevel(::google::protobuf::uint32 value) {
  set_has_uiplayerlevel();
  uiplayerlevel_ = value;
}

// required uint32 uiPrice = 7;
inline bool WolrdBossSaleItem::has_uiprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WolrdBossSaleItem::set_has_uiprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WolrdBossSaleItem::clear_has_uiprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WolrdBossSaleItem::clear_uiprice() {
  uiprice_ = 0u;
  clear_has_uiprice();
}
inline ::google::protobuf::uint32 WolrdBossSaleItem::uiprice() const {
  return uiprice_;
}
inline void WolrdBossSaleItem::set_uiprice(::google::protobuf::uint32 value) {
  set_has_uiprice();
  uiprice_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_WolrdBoss_DorpItemList

// repeated .proto.message.IDNum vecItemList = 1;
inline int Battle2Client_WolrdBoss_DorpItemList::vecitemlist_size() const {
  return vecitemlist_.size();
}
inline void Battle2Client_WolrdBoss_DorpItemList::clear_vecitemlist() {
  vecitemlist_.Clear();
}
inline const ::proto::message::IDNum& Battle2Client_WolrdBoss_DorpItemList::vecitemlist(int index) const {
  return vecitemlist_.Get(index);
}
inline ::proto::message::IDNum* Battle2Client_WolrdBoss_DorpItemList::mutable_vecitemlist(int index) {
  return vecitemlist_.Mutable(index);
}
inline ::proto::message::IDNum* Battle2Client_WolrdBoss_DorpItemList::add_vecitemlist() {
  return vecitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Battle2Client_WolrdBoss_DorpItemList::vecitemlist() const {
  return vecitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Battle2Client_WolrdBoss_DorpItemList::mutable_vecitemlist() {
  return &vecitemlist_;
}

// required .proto.message.WolrdBossSaleItem sSaleItem = 2;
inline bool Battle2Client_WolrdBoss_DorpItemList::has_ssaleitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_WolrdBoss_DorpItemList::set_has_ssaleitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_WolrdBoss_DorpItemList::clear_has_ssaleitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_WolrdBoss_DorpItemList::clear_ssaleitem() {
  if (ssaleitem_ != NULL) ssaleitem_->::proto::message::WolrdBossSaleItem::Clear();
  clear_has_ssaleitem();
}
inline const ::proto::message::WolrdBossSaleItem& Battle2Client_WolrdBoss_DorpItemList::ssaleitem() const {
  return ssaleitem_ != NULL ? *ssaleitem_ : *default_instance_->ssaleitem_;
}
inline ::proto::message::WolrdBossSaleItem* Battle2Client_WolrdBoss_DorpItemList::mutable_ssaleitem() {
  set_has_ssaleitem();
  if (ssaleitem_ == NULL) ssaleitem_ = new ::proto::message::WolrdBossSaleItem;
  return ssaleitem_;
}
inline ::proto::message::WolrdBossSaleItem* Battle2Client_WolrdBoss_DorpItemList::release_ssaleitem() {
  clear_has_ssaleitem();
  ::proto::message::WolrdBossSaleItem* temp = ssaleitem_;
  ssaleitem_ = NULL;
  return temp;
}
inline void Battle2Client_WolrdBoss_DorpItemList::set_allocated_ssaleitem(::proto::message::WolrdBossSaleItem* ssaleitem) {
  delete ssaleitem_;
  ssaleitem_ = ssaleitem;
  if (ssaleitem) {
    set_has_ssaleitem();
  } else {
    clear_has_ssaleitem();
  }
}

// -------------------------------------------------------------------

// Battle2Client_WolrdBoss_SaleBid

// required uint32 uiIndex = 1;
inline bool Battle2Client_WolrdBoss_SaleBid::has_uiindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_has_uiindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_has_uiindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_uiindex() {
  uiindex_ = 0u;
  clear_has_uiindex();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleBid::uiindex() const {
  return uiindex_;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiindex(::google::protobuf::uint32 value) {
  set_has_uiindex();
  uiindex_ = value;
}

// required string uiPlayerName = 2;
inline bool Battle2Client_WolrdBoss_SaleBid::has_uiplayername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_has_uiplayername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_has_uiplayername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_uiplayername() {
  if (uiplayername_ != &::google::protobuf::internal::kEmptyString) {
    uiplayername_->clear();
  }
  clear_has_uiplayername();
}
inline const ::std::string& Battle2Client_WolrdBoss_SaleBid::uiplayername() const {
  return *uiplayername_;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiplayername(const ::std::string& value) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(value);
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiplayername(const char* value) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(value);
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiplayername(const char* value, size_t size) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_WolrdBoss_SaleBid::mutable_uiplayername() {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  return uiplayername_;
}
inline ::std::string* Battle2Client_WolrdBoss_SaleBid::release_uiplayername() {
  clear_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uiplayername_;
    uiplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Client_WolrdBoss_SaleBid::set_allocated_uiplayername(::std::string* uiplayername) {
  if (uiplayername_ != &::google::protobuf::internal::kEmptyString) {
    delete uiplayername_;
  }
  if (uiplayername) {
    set_has_uiplayername();
    uiplayername_ = uiplayername;
  } else {
    clear_has_uiplayername();
    uiplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uiPlayerJob = 3;
inline bool Battle2Client_WolrdBoss_SaleBid::has_uiplayerjob() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_has_uiplayerjob() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_has_uiplayerjob() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_uiplayerjob() {
  uiplayerjob_ = 0u;
  clear_has_uiplayerjob();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleBid::uiplayerjob() const {
  return uiplayerjob_;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiplayerjob(::google::protobuf::uint32 value) {
  set_has_uiplayerjob();
  uiplayerjob_ = value;
}

// required uint32 uiPlayerLevel = 4;
inline bool Battle2Client_WolrdBoss_SaleBid::has_uiplayerlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_has_uiplayerlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_has_uiplayerlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_uiplayerlevel() {
  uiplayerlevel_ = 0u;
  clear_has_uiplayerlevel();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleBid::uiplayerlevel() const {
  return uiplayerlevel_;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiplayerlevel(::google::protobuf::uint32 value) {
  set_has_uiplayerlevel();
  uiplayerlevel_ = value;
}

// required uint32 uiPrice = 5;
inline bool Battle2Client_WolrdBoss_SaleBid::has_uiprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_has_uiprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_has_uiprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_uiprice() {
  uiprice_ = 0u;
  clear_has_uiprice();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleBid::uiprice() const {
  return uiprice_;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiprice(::google::protobuf::uint32 value) {
  set_has_uiprice();
  uiprice_ = value;
}

// optional uint32 uiExpiryTime = 6;
inline bool Battle2Client_WolrdBoss_SaleBid::has_uiexpirytime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_has_uiexpirytime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_has_uiexpirytime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Client_WolrdBoss_SaleBid::clear_uiexpirytime() {
  uiexpirytime_ = 0u;
  clear_has_uiexpirytime();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleBid::uiexpirytime() const {
  return uiexpirytime_;
}
inline void Battle2Client_WolrdBoss_SaleBid::set_uiexpirytime(::google::protobuf::uint32 value) {
  set_has_uiexpirytime();
  uiexpirytime_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_WolrdBoss_SaleResult

// required uint32 uiIndex = 1;
inline bool Battle2Client_WolrdBoss_SaleResult::has_uiindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_has_uiindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_has_uiindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_uiindex() {
  uiindex_ = 0u;
  clear_has_uiindex();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleResult::uiindex() const {
  return uiindex_;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiindex(::google::protobuf::uint32 value) {
  set_has_uiindex();
  uiindex_ = value;
}

// optional string uiPlayerName = 2;
inline bool Battle2Client_WolrdBoss_SaleResult::has_uiplayername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_has_uiplayername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_has_uiplayername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_uiplayername() {
  if (uiplayername_ != &::google::protobuf::internal::kEmptyString) {
    uiplayername_->clear();
  }
  clear_has_uiplayername();
}
inline const ::std::string& Battle2Client_WolrdBoss_SaleResult::uiplayername() const {
  return *uiplayername_;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiplayername(const ::std::string& value) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(value);
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiplayername(const char* value) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(value);
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiplayername(const char* value, size_t size) {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  uiplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_WolrdBoss_SaleResult::mutable_uiplayername() {
  set_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    uiplayername_ = new ::std::string;
  }
  return uiplayername_;
}
inline ::std::string* Battle2Client_WolrdBoss_SaleResult::release_uiplayername() {
  clear_has_uiplayername();
  if (uiplayername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uiplayername_;
    uiplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Client_WolrdBoss_SaleResult::set_allocated_uiplayername(::std::string* uiplayername) {
  if (uiplayername_ != &::google::protobuf::internal::kEmptyString) {
    delete uiplayername_;
  }
  if (uiplayername) {
    set_has_uiplayername();
    uiplayername_ = uiplayername;
  } else {
    clear_has_uiplayername();
    uiplayername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 uiPlayerJob = 3;
inline bool Battle2Client_WolrdBoss_SaleResult::has_uiplayerjob() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_has_uiplayerjob() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_has_uiplayerjob() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_uiplayerjob() {
  uiplayerjob_ = 0u;
  clear_has_uiplayerjob();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleResult::uiplayerjob() const {
  return uiplayerjob_;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiplayerjob(::google::protobuf::uint32 value) {
  set_has_uiplayerjob();
  uiplayerjob_ = value;
}

// optional uint32 uiPlayerLevel = 4;
inline bool Battle2Client_WolrdBoss_SaleResult::has_uiplayerlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_has_uiplayerlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_has_uiplayerlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_uiplayerlevel() {
  uiplayerlevel_ = 0u;
  clear_has_uiplayerlevel();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleResult::uiplayerlevel() const {
  return uiplayerlevel_;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiplayerlevel(::google::protobuf::uint32 value) {
  set_has_uiplayerlevel();
  uiplayerlevel_ = value;
}

// optional uint32 uiPrice = 5;
inline bool Battle2Client_WolrdBoss_SaleResult::has_uiprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_has_uiprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_has_uiprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_WolrdBoss_SaleResult::clear_uiprice() {
  uiprice_ = 0u;
  clear_has_uiprice();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_SaleResult::uiprice() const {
  return uiprice_;
}
inline void Battle2Client_WolrdBoss_SaleResult::set_uiprice(::google::protobuf::uint32 value) {
  set_has_uiprice();
  uiprice_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_WolrdBoss_SaleResult

// optional .proto.message.WolrdBossSaledItem item = 1;
inline bool Battle2Game_WolrdBoss_SaleResult::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_WolrdBoss_SaleResult::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_WolrdBoss_SaleResult::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_WolrdBoss_SaleResult::clear_item() {
  if (item_ != NULL) item_->::proto::message::WolrdBossSaledItem::Clear();
  clear_has_item();
}
inline const ::proto::message::WolrdBossSaledItem& Battle2Game_WolrdBoss_SaleResult::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::proto::message::WolrdBossSaledItem* Battle2Game_WolrdBoss_SaleResult::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::proto::message::WolrdBossSaledItem;
  return item_;
}
inline ::proto::message::WolrdBossSaledItem* Battle2Game_WolrdBoss_SaleResult::release_item() {
  clear_has_item();
  ::proto::message::WolrdBossSaledItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void Battle2Game_WolrdBoss_SaleResult::set_allocated_item(::proto::message::WolrdBossSaledItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// Battle2Game_SendMail

// required uint64 uiSendTo = 1;
inline bool Battle2Game_SendMail::has_uisendto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_SendMail::set_has_uisendto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_SendMail::clear_has_uisendto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_SendMail::clear_uisendto() {
  uisendto_ = GOOGLE_ULONGLONG(0);
  clear_has_uisendto();
}
inline ::google::protobuf::uint64 Battle2Game_SendMail::uisendto() const {
  return uisendto_;
}
inline void Battle2Game_SendMail::set_uisendto(::google::protobuf::uint64 value) {
  set_has_uisendto();
  uisendto_ = value;
}

// required uint32 uiMode = 2;
inline bool Battle2Game_SendMail::has_uimode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_SendMail::set_has_uimode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_SendMail::clear_has_uimode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_SendMail::clear_uimode() {
  uimode_ = 0u;
  clear_has_uimode();
}
inline ::google::protobuf::uint32 Battle2Game_SendMail::uimode() const {
  return uimode_;
}
inline void Battle2Game_SendMail::set_uimode(::google::protobuf::uint32 value) {
  set_has_uimode();
  uimode_ = value;
}

// required uint32 uiArg = 3;
inline bool Battle2Game_SendMail::has_uiarg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_SendMail::set_has_uiarg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_SendMail::clear_has_uiarg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_SendMail::clear_uiarg() {
  uiarg_ = 0u;
  clear_has_uiarg();
}
inline ::google::protobuf::uint32 Battle2Game_SendMail::uiarg() const {
  return uiarg_;
}
inline void Battle2Game_SendMail::set_uiarg(::google::protobuf::uint32 value) {
  set_has_uiarg();
  uiarg_ = value;
}

// optional string szArg = 4;
inline bool Battle2Game_SendMail::has_szarg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Game_SendMail::set_has_szarg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Game_SendMail::clear_has_szarg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Game_SendMail::clear_szarg() {
  if (szarg_ != &::google::protobuf::internal::kEmptyString) {
    szarg_->clear();
  }
  clear_has_szarg();
}
inline const ::std::string& Battle2Game_SendMail::szarg() const {
  return *szarg_;
}
inline void Battle2Game_SendMail::set_szarg(const ::std::string& value) {
  set_has_szarg();
  if (szarg_ == &::google::protobuf::internal::kEmptyString) {
    szarg_ = new ::std::string;
  }
  szarg_->assign(value);
}
inline void Battle2Game_SendMail::set_szarg(const char* value) {
  set_has_szarg();
  if (szarg_ == &::google::protobuf::internal::kEmptyString) {
    szarg_ = new ::std::string;
  }
  szarg_->assign(value);
}
inline void Battle2Game_SendMail::set_szarg(const char* value, size_t size) {
  set_has_szarg();
  if (szarg_ == &::google::protobuf::internal::kEmptyString) {
    szarg_ = new ::std::string;
  }
  szarg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Game_SendMail::mutable_szarg() {
  set_has_szarg();
  if (szarg_ == &::google::protobuf::internal::kEmptyString) {
    szarg_ = new ::std::string;
  }
  return szarg_;
}
inline ::std::string* Battle2Game_SendMail::release_szarg() {
  clear_has_szarg();
  if (szarg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szarg_;
    szarg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Game_SendMail::set_allocated_szarg(::std::string* szarg) {
  if (szarg_ != &::google::protobuf::internal::kEmptyString) {
    delete szarg_;
  }
  if (szarg) {
    set_has_szarg();
    szarg_ = szarg;
  } else {
    clear_has_szarg();
    szarg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto.message.IDNum vecItemList = 5;
inline int Battle2Game_SendMail::vecitemlist_size() const {
  return vecitemlist_.size();
}
inline void Battle2Game_SendMail::clear_vecitemlist() {
  vecitemlist_.Clear();
}
inline const ::proto::message::IDNum& Battle2Game_SendMail::vecitemlist(int index) const {
  return vecitemlist_.Get(index);
}
inline ::proto::message::IDNum* Battle2Game_SendMail::mutable_vecitemlist(int index) {
  return vecitemlist_.Mutable(index);
}
inline ::proto::message::IDNum* Battle2Game_SendMail::add_vecitemlist() {
  return vecitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Battle2Game_SendMail::vecitemlist() const {
  return vecitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Battle2Game_SendMail::mutable_vecitemlist() {
  return &vecitemlist_;
}

// optional uint32 uiOpt = 6;
inline bool Battle2Game_SendMail::has_uiopt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Game_SendMail::set_has_uiopt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Game_SendMail::clear_has_uiopt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Game_SendMail::clear_uiopt() {
  uiopt_ = 0u;
  clear_has_uiopt();
}
inline ::google::protobuf::uint32 Battle2Game_SendMail::uiopt() const {
  return uiopt_;
}
inline void Battle2Game_SendMail::set_uiopt(::google::protobuf::uint32 value) {
  set_has_uiopt();
  uiopt_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_WolrdBoss_HpChange

// required uint32 uiBossType = 1;
inline bool Battle2Game_WolrdBoss_HpChange::has_uibosstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_WolrdBoss_HpChange::set_has_uibosstype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_WolrdBoss_HpChange::clear_has_uibosstype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_WolrdBoss_HpChange::clear_uibosstype() {
  uibosstype_ = 0u;
  clear_has_uibosstype();
}
inline ::google::protobuf::uint32 Battle2Game_WolrdBoss_HpChange::uibosstype() const {
  return uibosstype_;
}
inline void Battle2Game_WolrdBoss_HpChange::set_uibosstype(::google::protobuf::uint32 value) {
  set_has_uibosstype();
  uibosstype_ = value;
}

// required uint64 uiHp = 2;
inline bool Battle2Game_WolrdBoss_HpChange::has_uihp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Game_WolrdBoss_HpChange::set_has_uihp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Game_WolrdBoss_HpChange::clear_has_uihp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Game_WolrdBoss_HpChange::clear_uihp() {
  uihp_ = GOOGLE_ULONGLONG(0);
  clear_has_uihp();
}
inline ::google::protobuf::uint64 Battle2Game_WolrdBoss_HpChange::uihp() const {
  return uihp_;
}
inline void Battle2Game_WolrdBoss_HpChange::set_uihp(::google::protobuf::uint64 value) {
  set_has_uihp();
  uihp_ = value;
}

// optional uint32 uiBossTableId = 3;
inline bool Battle2Game_WolrdBoss_HpChange::has_uibosstableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Game_WolrdBoss_HpChange::set_has_uibosstableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Game_WolrdBoss_HpChange::clear_has_uibosstableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Game_WolrdBoss_HpChange::clear_uibosstableid() {
  uibosstableid_ = 0u;
  clear_has_uibosstableid();
}
inline ::google::protobuf::uint32 Battle2Game_WolrdBoss_HpChange::uibosstableid() const {
  return uibosstableid_;
}
inline void Battle2Game_WolrdBoss_HpChange::set_uibosstableid(::google::protobuf::uint32 value) {
  set_has_uibosstableid();
  uibosstableid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_WolrdBoss_HpChange

// required uint32 uiBossType = 1;
inline bool Battle2Client_WolrdBoss_HpChange::has_uibosstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_WolrdBoss_HpChange::set_has_uibosstype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_WolrdBoss_HpChange::clear_has_uibosstype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_WolrdBoss_HpChange::clear_uibosstype() {
  uibosstype_ = 0u;
  clear_has_uibosstype();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_HpChange::uibosstype() const {
  return uibosstype_;
}
inline void Battle2Client_WolrdBoss_HpChange::set_uibosstype(::google::protobuf::uint32 value) {
  set_has_uibosstype();
  uibosstype_ = value;
}

// required uint64 uiHp = 2;
inline bool Battle2Client_WolrdBoss_HpChange::has_uihp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_WolrdBoss_HpChange::set_has_uihp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_WolrdBoss_HpChange::clear_has_uihp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_WolrdBoss_HpChange::clear_uihp() {
  uihp_ = GOOGLE_ULONGLONG(0);
  clear_has_uihp();
}
inline ::google::protobuf::uint64 Battle2Client_WolrdBoss_HpChange::uihp() const {
  return uihp_;
}
inline void Battle2Client_WolrdBoss_HpChange::set_uihp(::google::protobuf::uint64 value) {
  set_has_uihp();
  uihp_ = value;
}

// optional uint32 uiBossTableId = 3;
inline bool Battle2Client_WolrdBoss_HpChange::has_uibosstableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_WolrdBoss_HpChange::set_has_uibosstableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_WolrdBoss_HpChange::clear_has_uibosstableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_WolrdBoss_HpChange::clear_uibosstableid() {
  uibosstableid_ = 0u;
  clear_has_uibosstableid();
}
inline ::google::protobuf::uint32 Battle2Client_WolrdBoss_HpChange::uibosstableid() const {
  return uibosstableid_;
}
inline void Battle2Client_WolrdBoss_HpChange::set_uibosstableid(::google::protobuf::uint32 value) {
  set_has_uibosstableid();
  uibosstableid_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_AddCurHp

// required uint32 uiHp = 1;
inline bool Game2Battle_AddCurHp::has_uihp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_AddCurHp::set_has_uihp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_AddCurHp::clear_has_uihp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_AddCurHp::clear_uihp() {
  uihp_ = 0u;
  clear_has_uihp();
}
inline ::google::protobuf::uint32 Game2Battle_AddCurHp::uihp() const {
  return uihp_;
}
inline void Game2Battle_AddCurHp::set_uihp(::google::protobuf::uint32 value) {
  set_has_uihp();
  uihp_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_AddBuff

// required uint32 uiBuffId = 1;
inline bool Game2Battle_AddBuff::has_uibuffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_AddBuff::set_has_uibuffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_AddBuff::clear_has_uibuffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_AddBuff::clear_uibuffid() {
  uibuffid_ = 0u;
  clear_has_uibuffid();
}
inline ::google::protobuf::uint32 Game2Battle_AddBuff::uibuffid() const {
  return uibuffid_;
}
inline void Game2Battle_AddBuff::set_uibuffid(::google::protobuf::uint32 value) {
  set_has_uibuffid();
  uibuffid_ = value;
}

// required uint32 uiQuality = 2;
inline bool Game2Battle_AddBuff::has_uiquality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_AddBuff::set_has_uiquality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_AddBuff::clear_has_uiquality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_AddBuff::clear_uiquality() {
  uiquality_ = 0u;
  clear_has_uiquality();
}
inline ::google::protobuf::uint32 Game2Battle_AddBuff::uiquality() const {
  return uiquality_;
}
inline void Game2Battle_AddBuff::set_uiquality(::google::protobuf::uint32 value) {
  set_has_uiquality();
  uiquality_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_WorldBoss_SaledItem

// optional uint32 uiIndex = 1;
inline bool Client2Battle_WorldBoss_SaledItem::has_uiindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_WorldBoss_SaledItem::set_has_uiindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_WorldBoss_SaledItem::clear_has_uiindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_WorldBoss_SaledItem::clear_uiindex() {
  uiindex_ = 0u;
  clear_has_uiindex();
}
inline ::google::protobuf::uint32 Client2Battle_WorldBoss_SaledItem::uiindex() const {
  return uiindex_;
}
inline void Client2Battle_WorldBoss_SaledItem::set_uiindex(::google::protobuf::uint32 value) {
  set_has_uiindex();
  uiindex_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_WorldBoss_SaledItem

// optional .proto.message.WolrdBossSaleItem sItem = 1;
inline bool Battle2Client_WorldBoss_SaledItem::has_sitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_WorldBoss_SaledItem::set_has_sitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_WorldBoss_SaledItem::clear_has_sitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_WorldBoss_SaledItem::clear_sitem() {
  if (sitem_ != NULL) sitem_->::proto::message::WolrdBossSaleItem::Clear();
  clear_has_sitem();
}
inline const ::proto::message::WolrdBossSaleItem& Battle2Client_WorldBoss_SaledItem::sitem() const {
  return sitem_ != NULL ? *sitem_ : *default_instance_->sitem_;
}
inline ::proto::message::WolrdBossSaleItem* Battle2Client_WorldBoss_SaledItem::mutable_sitem() {
  set_has_sitem();
  if (sitem_ == NULL) sitem_ = new ::proto::message::WolrdBossSaleItem;
  return sitem_;
}
inline ::proto::message::WolrdBossSaleItem* Battle2Client_WorldBoss_SaledItem::release_sitem() {
  clear_has_sitem();
  ::proto::message::WolrdBossSaleItem* temp = sitem_;
  sitem_ = NULL;
  return temp;
}
inline void Battle2Client_WorldBoss_SaledItem::set_allocated_sitem(::proto::message::WolrdBossSaleItem* sitem) {
  delete sitem_;
  sitem_ = sitem;
  if (sitem) {
    set_has_sitem();
  } else {
    clear_has_sitem();
  }
}

// -------------------------------------------------------------------

// Battle2Client_SyncDropItemAppear

// required uint32 uiObjId = 1;
inline bool Battle2Client_SyncDropItemAppear::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncDropItemAppear::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncDropItemAppear::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncDropItemAppear::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncDropItemAppear::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_SyncDropItemAppear::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// required uint32 uiType = 2;
inline bool Battle2Client_SyncDropItemAppear::has_uitype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncDropItemAppear::set_has_uitype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncDropItemAppear::clear_has_uitype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncDropItemAppear::clear_uitype() {
  uitype_ = 0u;
  clear_has_uitype();
}
inline ::google::protobuf::uint32 Battle2Client_SyncDropItemAppear::uitype() const {
  return uitype_;
}
inline void Battle2Client_SyncDropItemAppear::set_uitype(::google::protobuf::uint32 value) {
  set_has_uitype();
  uitype_ = value;
}

// required .proto.message.Point3D pt = 3;
inline bool Battle2Client_SyncDropItemAppear::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SyncDropItemAppear::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SyncDropItemAppear::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SyncDropItemAppear::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_SyncDropItemAppear::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_SyncDropItemAppear::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_SyncDropItemAppear::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_SyncDropItemAppear::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// repeated .proto.message.IDNum vecItemId = 4;
inline int Battle2Client_SyncDropItemAppear::vecitemid_size() const {
  return vecitemid_.size();
}
inline void Battle2Client_SyncDropItemAppear::clear_vecitemid() {
  vecitemid_.Clear();
}
inline const ::proto::message::IDNum& Battle2Client_SyncDropItemAppear::vecitemid(int index) const {
  return vecitemid_.Get(index);
}
inline ::proto::message::IDNum* Battle2Client_SyncDropItemAppear::mutable_vecitemid(int index) {
  return vecitemid_.Mutable(index);
}
inline ::proto::message::IDNum* Battle2Client_SyncDropItemAppear::add_vecitemid() {
  return vecitemid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Battle2Client_SyncDropItemAppear::vecitemid() const {
  return vecitemid_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Battle2Client_SyncDropItemAppear::mutable_vecitemid() {
  return &vecitemid_;
}

// required uint64 uiOwnerId = 5;
inline bool Battle2Client_SyncDropItemAppear::has_uiownerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle2Client_SyncDropItemAppear::set_has_uiownerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle2Client_SyncDropItemAppear::clear_has_uiownerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle2Client_SyncDropItemAppear::clear_uiownerid() {
  uiownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_uiownerid();
}
inline ::google::protobuf::uint64 Battle2Client_SyncDropItemAppear::uiownerid() const {
  return uiownerid_;
}
inline void Battle2Client_SyncDropItemAppear::set_uiownerid(::google::protobuf::uint64 value) {
  set_has_uiownerid();
  uiownerid_ = value;
}

// optional string name = 6;
inline bool Battle2Client_SyncDropItemAppear::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle2Client_SyncDropItemAppear::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle2Client_SyncDropItemAppear::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle2Client_SyncDropItemAppear::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Battle2Client_SyncDropItemAppear::name() const {
  return *name_;
}
inline void Battle2Client_SyncDropItemAppear::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Battle2Client_SyncDropItemAppear::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Battle2Client_SyncDropItemAppear::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_SyncDropItemAppear::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Battle2Client_SyncDropItemAppear::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Client_SyncDropItemAppear::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Battle2Client_TicketBoss_DropItem

// required uint32 uiBossTableId = 1;
inline bool Battle2Client_TicketBoss_DropItem::has_uibosstableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_TicketBoss_DropItem::set_has_uibosstableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_TicketBoss_DropItem::clear_has_uibosstableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_TicketBoss_DropItem::clear_uibosstableid() {
  uibosstableid_ = 0u;
  clear_has_uibosstableid();
}
inline ::google::protobuf::uint32 Battle2Client_TicketBoss_DropItem::uibosstableid() const {
  return uibosstableid_;
}
inline void Battle2Client_TicketBoss_DropItem::set_uibosstableid(::google::protobuf::uint32 value) {
  set_has_uibosstableid();
  uibosstableid_ = value;
}

// repeated .proto.message.Battle2Client_SyncDropItemAppear vecItemList = 2;
inline int Battle2Client_TicketBoss_DropItem::vecitemlist_size() const {
  return vecitemlist_.size();
}
inline void Battle2Client_TicketBoss_DropItem::clear_vecitemlist() {
  vecitemlist_.Clear();
}
inline const ::proto::message::Battle2Client_SyncDropItemAppear& Battle2Client_TicketBoss_DropItem::vecitemlist(int index) const {
  return vecitemlist_.Get(index);
}
inline ::proto::message::Battle2Client_SyncDropItemAppear* Battle2Client_TicketBoss_DropItem::mutable_vecitemlist(int index) {
  return vecitemlist_.Mutable(index);
}
inline ::proto::message::Battle2Client_SyncDropItemAppear* Battle2Client_TicketBoss_DropItem::add_vecitemlist() {
  return vecitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >&
Battle2Client_TicketBoss_DropItem::vecitemlist() const {
  return vecitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >*
Battle2Client_TicketBoss_DropItem::mutable_vecitemlist() {
  return &vecitemlist_;
}

// -------------------------------------------------------------------

// Battle2Client_SyncDropItemChange

// required uint32 uiObjId = 1;
inline bool Battle2Client_SyncDropItemChange::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncDropItemChange::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncDropItemChange::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncDropItemChange::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncDropItemChange::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_SyncDropItemChange::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// required int32 iItemIndex = 2;
inline bool Battle2Client_SyncDropItemChange::has_iitemindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncDropItemChange::set_has_iitemindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncDropItemChange::clear_has_iitemindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncDropItemChange::clear_iitemindex() {
  iitemindex_ = 0;
  clear_has_iitemindex();
}
inline ::google::protobuf::int32 Battle2Client_SyncDropItemChange::iitemindex() const {
  return iitemindex_;
}
inline void Battle2Client_SyncDropItemChange::set_iitemindex(::google::protobuf::int32 value) {
  set_has_iitemindex();
  iitemindex_ = value;
}

// required uint64 uiOwnerId = 3;
inline bool Battle2Client_SyncDropItemChange::has_uiownerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_SyncDropItemChange::set_has_uiownerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_SyncDropItemChange::clear_has_uiownerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_SyncDropItemChange::clear_uiownerid() {
  uiownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_uiownerid();
}
inline ::google::protobuf::uint64 Battle2Client_SyncDropItemChange::uiownerid() const {
  return uiownerid_;
}
inline void Battle2Client_SyncDropItemChange::set_uiownerid(::google::protobuf::uint64 value) {
  set_has_uiownerid();
  uiownerid_ = value;
}

// required uint32 uiTakeObjId = 4;
inline bool Battle2Client_SyncDropItemChange::has_uitakeobjid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle2Client_SyncDropItemChange::set_has_uitakeobjid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle2Client_SyncDropItemChange::clear_has_uitakeobjid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle2Client_SyncDropItemChange::clear_uitakeobjid() {
  uitakeobjid_ = 0u;
  clear_has_uitakeobjid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncDropItemChange::uitakeobjid() const {
  return uitakeobjid_;
}
inline void Battle2Client_SyncDropItemChange::set_uitakeobjid(::google::protobuf::uint32 value) {
  set_has_uitakeobjid();
  uitakeobjid_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_Ping

// -------------------------------------------------------------------

// Battle2Client_Ping

// optional uint64 timestamp = 1;
inline bool Battle2Client_Ping::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_Ping::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_Ping::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_Ping::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Battle2Client_Ping::timestamp() const {
  return timestamp_;
}
inline void Battle2Client_Ping::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// Game2Battle_CreateMonster

// optional uint32 ProID = 1;
inline bool Game2Battle_CreateMonster::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2Battle_CreateMonster::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2Battle_CreateMonster::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2Battle_CreateMonster::clear_proid() {
  proid_ = 0u;
  clear_has_proid();
}
inline ::google::protobuf::uint32 Game2Battle_CreateMonster::proid() const {
  return proid_;
}
inline void Game2Battle_CreateMonster::set_proid(::google::protobuf::uint32 value) {
  set_has_proid();
  proid_ = value;
}

// optional .proto.message.Point3D pt = 2;
inline bool Game2Battle_CreateMonster::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Game2Battle_CreateMonster::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Game2Battle_CreateMonster::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Game2Battle_CreateMonster::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Game2Battle_CreateMonster::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Game2Battle_CreateMonster::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Game2Battle_CreateMonster::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Game2Battle_CreateMonster::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float dir = 3;
inline bool Game2Battle_CreateMonster::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2Battle_CreateMonster::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2Battle_CreateMonster::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2Battle_CreateMonster::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Game2Battle_CreateMonster::dir() const {
  return dir_;
}
inline void Game2Battle_CreateMonster::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 layer = 4;
inline bool Game2Battle_CreateMonster::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2Battle_CreateMonster::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2Battle_CreateMonster::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2Battle_CreateMonster::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Game2Battle_CreateMonster::layer() const {
  return layer_;
}
inline void Game2Battle_CreateMonster::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 from = 5;
inline bool Game2Battle_CreateMonster::has_from() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Game2Battle_CreateMonster::set_has_from() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Game2Battle_CreateMonster::clear_has_from() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Game2Battle_CreateMonster::clear_from() {
  from_ = 0;
  clear_has_from();
}
inline ::google::protobuf::int32 Game2Battle_CreateMonster::from() const {
  return from_;
}
inline void Game2Battle_CreateMonster::set_from(::google::protobuf::int32 value) {
  set_has_from();
  from_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_ChangeAttackMode

// optional uint32 uiAttackMode = 1;
inline bool Client2Battle_ChangeAttackMode::has_uiattackmode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_ChangeAttackMode::set_has_uiattackmode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_ChangeAttackMode::clear_has_uiattackmode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_ChangeAttackMode::clear_uiattackmode() {
  uiattackmode_ = 0u;
  clear_has_uiattackmode();
}
inline ::google::protobuf::uint32 Client2Battle_ChangeAttackMode::uiattackmode() const {
  return uiattackmode_;
}
inline void Client2Battle_ChangeAttackMode::set_uiattackmode(::google::protobuf::uint32 value) {
  set_has_uiattackmode();
  uiattackmode_ = value;
}

// -------------------------------------------------------------------

// Client2Battle_Transfer

// optional uint32 uiTransferTableId = 1;
inline bool Client2Battle_Transfer::has_uitransfertableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Client2Battle_Transfer::set_has_uitransfertableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Client2Battle_Transfer::clear_has_uitransfertableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Client2Battle_Transfer::clear_uitransfertableid() {
  uitransfertableid_ = 0u;
  clear_has_uitransfertableid();
}
inline ::google::protobuf::uint32 Client2Battle_Transfer::uitransfertableid() const {
  return uitransfertableid_;
}
inline void Client2Battle_Transfer::set_uitransfertableid(::google::protobuf::uint32 value) {
  set_has_uitransfertableid();
  uitransfertableid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_Anchor

// required uint32 uiObjId = 1;
inline bool Battle2Client_Anchor::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_Anchor::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_Anchor::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_Anchor::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_Anchor::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_Anchor::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_UpdateHeadInfo

// optional .proto.message.BattleSingleHeadInfo info = 1;
inline bool Battle2Client_UpdateHeadInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_UpdateHeadInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_UpdateHeadInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_UpdateHeadInfo::clear_info() {
  if (info_ != NULL) info_->::proto::message::BattleSingleHeadInfo::Clear();
  clear_has_info();
}
inline const ::proto::message::BattleSingleHeadInfo& Battle2Client_UpdateHeadInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto::message::BattleSingleHeadInfo* Battle2Client_UpdateHeadInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto::message::BattleSingleHeadInfo;
  return info_;
}
inline ::proto::message::BattleSingleHeadInfo* Battle2Client_UpdateHeadInfo::release_info() {
  clear_has_info();
  ::proto::message::BattleSingleHeadInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void Battle2Client_UpdateHeadInfo::set_allocated_info(::proto::message::BattleSingleHeadInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// Battle2Client_UpdateMercenaryRank

// required uint32 uiObjId = 1;
inline bool Battle2Client_UpdateMercenaryRank::has_uiobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_UpdateMercenaryRank::set_has_uiobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_UpdateMercenaryRank::clear_has_uiobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_UpdateMercenaryRank::clear_uiobjid() {
  uiobjid_ = 0u;
  clear_has_uiobjid();
}
inline ::google::protobuf::uint32 Battle2Client_UpdateMercenaryRank::uiobjid() const {
  return uiobjid_;
}
inline void Battle2Client_UpdateMercenaryRank::set_uiobjid(::google::protobuf::uint32 value) {
  set_has_uiobjid();
  uiobjid_ = value;
}

// optional int32 ranking = 2;
inline bool Battle2Client_UpdateMercenaryRank::has_ranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_UpdateMercenaryRank::set_has_ranking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_UpdateMercenaryRank::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_UpdateMercenaryRank::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 Battle2Client_UpdateMercenaryRank::ranking() const {
  return ranking_;
}
inline void Battle2Client_UpdateMercenaryRank::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_TriggerRadius

// optional uint32 uiTriggerId = 1;
inline bool Battle2Client_TriggerRadius::has_uitriggerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_TriggerRadius::set_has_uitriggerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_TriggerRadius::clear_has_uitriggerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_TriggerRadius::clear_uitriggerid() {
  uitriggerid_ = 0u;
  clear_has_uitriggerid();
}
inline ::google::protobuf::uint32 Battle2Client_TriggerRadius::uitriggerid() const {
  return uitriggerid_;
}
inline void Battle2Client_TriggerRadius::set_uitriggerid(::google::protobuf::uint32 value) {
  set_has_uitriggerid();
  uitriggerid_ = value;
}

// optional .proto.message.Point3D pt = 2;
inline bool Battle2Client_TriggerRadius::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_TriggerRadius::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_TriggerRadius::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_TriggerRadius::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_TriggerRadius::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_TriggerRadius::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_TriggerRadius::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_TriggerRadius::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float fRadius = 3;
inline bool Battle2Client_TriggerRadius::has_fradius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_TriggerRadius::set_has_fradius() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_TriggerRadius::clear_has_fradius() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_TriggerRadius::clear_fradius() {
  fradius_ = 0;
  clear_has_fradius();
}
inline float Battle2Client_TriggerRadius::fradius() const {
  return fradius_;
}
inline void Battle2Client_TriggerRadius::set_fradius(float value) {
  set_has_fradius();
  fradius_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ScenePlayerNum

// optional uint32 uiSceneId = 1;
inline bool Battle2Client_ScenePlayerNum::has_uisceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ScenePlayerNum::set_has_uisceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ScenePlayerNum::clear_has_uisceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ScenePlayerNum::clear_uisceneid() {
  uisceneid_ = 0u;
  clear_has_uisceneid();
}
inline ::google::protobuf::uint32 Battle2Client_ScenePlayerNum::uisceneid() const {
  return uisceneid_;
}
inline void Battle2Client_ScenePlayerNum::set_uisceneid(::google::protobuf::uint32 value) {
  set_has_uisceneid();
  uisceneid_ = value;
}

// optional uint32 uiCurNum = 2;
inline bool Battle2Client_ScenePlayerNum::has_uicurnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ScenePlayerNum::set_has_uicurnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ScenePlayerNum::clear_has_uicurnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ScenePlayerNum::clear_uicurnum() {
  uicurnum_ = 0u;
  clear_has_uicurnum();
}
inline ::google::protobuf::uint32 Battle2Client_ScenePlayerNum::uicurnum() const {
  return uicurnum_;
}
inline void Battle2Client_ScenePlayerNum::set_uicurnum(::google::protobuf::uint32 value) {
  set_has_uicurnum();
  uicurnum_ = value;
}

// optional uint32 uiMaxNum = 3;
inline bool Battle2Client_ScenePlayerNum::has_uimaxnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ScenePlayerNum::set_has_uimaxnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ScenePlayerNum::clear_has_uimaxnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ScenePlayerNum::clear_uimaxnum() {
  uimaxnum_ = 0u;
  clear_has_uimaxnum();
}
inline ::google::protobuf::uint32 Battle2Client_ScenePlayerNum::uimaxnum() const {
  return uimaxnum_;
}
inline void Battle2Client_ScenePlayerNum::set_uimaxnum(::google::protobuf::uint32 value) {
  set_has_uimaxnum();
  uimaxnum_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_GradeDataChanged

// required int32 grade = 1;
inline bool Battle2Client_GradeDataChanged::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_GradeDataChanged::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_GradeDataChanged::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_GradeDataChanged::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 Battle2Client_GradeDataChanged::grade() const {
  return grade_;
}
inline void Battle2Client_GradeDataChanged::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional .proto.message.IDNum data = 2;
inline bool Battle2Client_GradeDataChanged::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_GradeDataChanged::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_GradeDataChanged::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_GradeDataChanged::clear_data() {
  if (data_ != NULL) data_->::proto::message::IDNum::Clear();
  clear_has_data();
}
inline const ::proto::message::IDNum& Battle2Client_GradeDataChanged::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto::message::IDNum* Battle2Client_GradeDataChanged::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto::message::IDNum;
  return data_;
}
inline ::proto::message::IDNum* Battle2Client_GradeDataChanged::release_data() {
  clear_has_data();
  ::proto::message::IDNum* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Battle2Client_GradeDataChanged::set_allocated_data(::proto::message::IDNum* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// Battle2Client_SyncMonsterOnwer

// optional uint32 monsterid = 1;
inline bool Battle2Client_SyncMonsterOnwer::has_monsterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SyncMonsterOnwer::set_has_monsterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SyncMonsterOnwer::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SyncMonsterOnwer::clear_monsterid() {
  monsterid_ = 0u;
  clear_has_monsterid();
}
inline ::google::protobuf::uint32 Battle2Client_SyncMonsterOnwer::monsterid() const {
  return monsterid_;
}
inline void Battle2Client_SyncMonsterOnwer::set_monsterid(::google::protobuf::uint32 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional .proto.message.OwnerInfo owner = 2;
inline bool Battle2Client_SyncMonsterOnwer::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_SyncMonsterOnwer::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_SyncMonsterOnwer::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_SyncMonsterOnwer::clear_owner() {
  if (owner_ != NULL) owner_->::proto::message::OwnerInfo::Clear();
  clear_has_owner();
}
inline const ::proto::message::OwnerInfo& Battle2Client_SyncMonsterOnwer::owner() const {
  return owner_ != NULL ? *owner_ : *default_instance_->owner_;
}
inline ::proto::message::OwnerInfo* Battle2Client_SyncMonsterOnwer::mutable_owner() {
  set_has_owner();
  if (owner_ == NULL) owner_ = new ::proto::message::OwnerInfo;
  return owner_;
}
inline ::proto::message::OwnerInfo* Battle2Client_SyncMonsterOnwer::release_owner() {
  clear_has_owner();
  ::proto::message::OwnerInfo* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline void Battle2Client_SyncMonsterOnwer::set_allocated_owner(::proto::message::OwnerInfo* owner) {
  delete owner_;
  owner_ = owner;
  if (owner) {
    set_has_owner();
  } else {
    clear_has_owner();
  }
}

// -------------------------------------------------------------------

// Battle2Client_SafeAreaStatus

// optional uint32 status = 1;
inline bool Battle2Client_SafeAreaStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_SafeAreaStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_SafeAreaStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_SafeAreaStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 Battle2Client_SafeAreaStatus::status() const {
  return status_;
}
inline void Battle2Client_SafeAreaStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_ServerMove

// required .proto.message.Point3D pt = 1;
inline bool Battle2Client_ServerMove::has_pt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_ServerMove::set_has_pt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_ServerMove::clear_has_pt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_ServerMove::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Battle2Client_ServerMove::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Battle2Client_ServerMove::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Battle2Client_ServerMove::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Battle2Client_ServerMove::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// required float dir = 2;
inline bool Battle2Client_ServerMove::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_ServerMove::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_ServerMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_ServerMove::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Battle2Client_ServerMove::dir() const {
  return dir_;
}
inline void Battle2Client_ServerMove::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional float speed = 3;
inline bool Battle2Client_ServerMove::has_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_ServerMove::set_has_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_ServerMove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_ServerMove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float Battle2Client_ServerMove::speed() const {
  return speed_;
}
inline void Battle2Client_ServerMove::set_speed(float value) {
  set_has_speed();
  speed_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_PlayerDie

// optional string killerName = 1;
inline bool Battle2Client_PlayerDie::has_killername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_PlayerDie::set_has_killername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_PlayerDie::clear_has_killername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_PlayerDie::clear_killername() {
  if (killername_ != &::google::protobuf::internal::kEmptyString) {
    killername_->clear();
  }
  clear_has_killername();
}
inline const ::std::string& Battle2Client_PlayerDie::killername() const {
  return *killername_;
}
inline void Battle2Client_PlayerDie::set_killername(const ::std::string& value) {
  set_has_killername();
  if (killername_ == &::google::protobuf::internal::kEmptyString) {
    killername_ = new ::std::string;
  }
  killername_->assign(value);
}
inline void Battle2Client_PlayerDie::set_killername(const char* value) {
  set_has_killername();
  if (killername_ == &::google::protobuf::internal::kEmptyString) {
    killername_ = new ::std::string;
  }
  killername_->assign(value);
}
inline void Battle2Client_PlayerDie::set_killername(const char* value, size_t size) {
  set_has_killername();
  if (killername_ == &::google::protobuf::internal::kEmptyString) {
    killername_ = new ::std::string;
  }
  killername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle2Client_PlayerDie::mutable_killername() {
  set_has_killername();
  if (killername_ == &::google::protobuf::internal::kEmptyString) {
    killername_ = new ::std::string;
  }
  return killername_;
}
inline ::std::string* Battle2Client_PlayerDie::release_killername() {
  clear_has_killername();
  if (killername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = killername_;
    killername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle2Client_PlayerDie::set_allocated_killername(::std::string* killername) {
  if (killername_ != &::google::protobuf::internal::kEmptyString) {
    delete killername_;
  }
  if (killername) {
    set_has_killername();
    killername_ = killername;
  } else {
    clear_has_killername();
    killername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Battle2Client_MonsterCountChanged

// required uint32 count = 1;
inline bool Battle2Client_MonsterCountChanged::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_MonsterCountChanged::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_MonsterCountChanged::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_MonsterCountChanged::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 Battle2Client_MonsterCountChanged::count() const {
  return count_;
}
inline void Battle2Client_MonsterCountChanged::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// repeated .proto.message.IDNum monsters = 2;
inline int Battle2Client_MonsterCountChanged::monsters_size() const {
  return monsters_.size();
}
inline void Battle2Client_MonsterCountChanged::clear_monsters() {
  monsters_.Clear();
}
inline const ::proto::message::IDNum& Battle2Client_MonsterCountChanged::monsters(int index) const {
  return monsters_.Get(index);
}
inline ::proto::message::IDNum* Battle2Client_MonsterCountChanged::mutable_monsters(int index) {
  return monsters_.Mutable(index);
}
inline ::proto::message::IDNum* Battle2Client_MonsterCountChanged::add_monsters() {
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Battle2Client_MonsterCountChanged::monsters() const {
  return monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Battle2Client_MonsterCountChanged::mutable_monsters() {
  return &monsters_;
}

// -------------------------------------------------------------------

// Battle2Client_AckTBPlayerInfo

// optional uint32 id = 1;
inline bool Battle2Client_AckTBPlayerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Client_AckTBPlayerInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Client_AckTBPlayerInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Client_AckTBPlayerInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Battle2Client_AckTBPlayerInfo::id() const {
  return id_;
}
inline void Battle2Client_AckTBPlayerInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 jointime = 2;
inline bool Battle2Client_AckTBPlayerInfo::has_jointime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle2Client_AckTBPlayerInfo::set_has_jointime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle2Client_AckTBPlayerInfo::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle2Client_AckTBPlayerInfo::clear_jointime() {
  jointime_ = 0u;
  clear_has_jointime();
}
inline ::google::protobuf::uint32 Battle2Client_AckTBPlayerInfo::jointime() const {
  return jointime_;
}
inline void Battle2Client_AckTBPlayerInfo::set_jointime(::google::protobuf::uint32 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional uint32 overtime = 3;
inline bool Battle2Client_AckTBPlayerInfo::has_overtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle2Client_AckTBPlayerInfo::set_has_overtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle2Client_AckTBPlayerInfo::clear_has_overtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle2Client_AckTBPlayerInfo::clear_overtime() {
  overtime_ = 0u;
  clear_has_overtime();
}
inline ::google::protobuf::uint32 Battle2Client_AckTBPlayerInfo::overtime() const {
  return overtime_;
}
inline void Battle2Client_AckTBPlayerInfo::set_overtime(::google::protobuf::uint32 value) {
  set_has_overtime();
  overtime_ = value;
}

// -------------------------------------------------------------------

// Battle2Client_SyncSceneObjDisappear

// repeated .proto.message.Battle2Client_SyncObjDisappear objs = 1;
inline int Battle2Client_SyncSceneObjDisappear::objs_size() const {
  return objs_.size();
}
inline void Battle2Client_SyncSceneObjDisappear::clear_objs() {
  objs_.Clear();
}
inline const ::proto::message::Battle2Client_SyncObjDisappear& Battle2Client_SyncSceneObjDisappear::objs(int index) const {
  return objs_.Get(index);
}
inline ::proto::message::Battle2Client_SyncObjDisappear* Battle2Client_SyncSceneObjDisappear::mutable_objs(int index) {
  return objs_.Mutable(index);
}
inline ::proto::message::Battle2Client_SyncObjDisappear* Battle2Client_SyncSceneObjDisappear::add_objs() {
  return objs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncObjDisappear >&
Battle2Client_SyncSceneObjDisappear::objs() const {
  return objs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncObjDisappear >*
Battle2Client_SyncSceneObjDisappear::mutable_objs() {
  return &objs_;
}

// -------------------------------------------------------------------

// Battle2Client_SyncSceneObjAppear

// repeated .proto.message.Battle2Client_SyncMonsterAppear monsters = 1;
inline int Battle2Client_SyncSceneObjAppear::monsters_size() const {
  return monsters_.size();
}
inline void Battle2Client_SyncSceneObjAppear::clear_monsters() {
  monsters_.Clear();
}
inline const ::proto::message::Battle2Client_SyncMonsterAppear& Battle2Client_SyncSceneObjAppear::monsters(int index) const {
  return monsters_.Get(index);
}
inline ::proto::message::Battle2Client_SyncMonsterAppear* Battle2Client_SyncSceneObjAppear::mutable_monsters(int index) {
  return monsters_.Mutable(index);
}
inline ::proto::message::Battle2Client_SyncMonsterAppear* Battle2Client_SyncSceneObjAppear::add_monsters() {
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMonsterAppear >&
Battle2Client_SyncSceneObjAppear::monsters() const {
  return monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMonsterAppear >*
Battle2Client_SyncSceneObjAppear::mutable_monsters() {
  return &monsters_;
}

// repeated .proto.message.Battle2Client_SyncPlayerAppear players = 2;
inline int Battle2Client_SyncSceneObjAppear::players_size() const {
  return players_.size();
}
inline void Battle2Client_SyncSceneObjAppear::clear_players() {
  players_.Clear();
}
inline const ::proto::message::Battle2Client_SyncPlayerAppear& Battle2Client_SyncSceneObjAppear::players(int index) const {
  return players_.Get(index);
}
inline ::proto::message::Battle2Client_SyncPlayerAppear* Battle2Client_SyncSceneObjAppear::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::proto::message::Battle2Client_SyncPlayerAppear* Battle2Client_SyncSceneObjAppear::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncPlayerAppear >&
Battle2Client_SyncSceneObjAppear::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncPlayerAppear >*
Battle2Client_SyncSceneObjAppear::mutable_players() {
  return &players_;
}

// repeated .proto.message.Battle2Client_SyncDropItemAppear drop_items = 3;
inline int Battle2Client_SyncSceneObjAppear::drop_items_size() const {
  return drop_items_.size();
}
inline void Battle2Client_SyncSceneObjAppear::clear_drop_items() {
  drop_items_.Clear();
}
inline const ::proto::message::Battle2Client_SyncDropItemAppear& Battle2Client_SyncSceneObjAppear::drop_items(int index) const {
  return drop_items_.Get(index);
}
inline ::proto::message::Battle2Client_SyncDropItemAppear* Battle2Client_SyncSceneObjAppear::mutable_drop_items(int index) {
  return drop_items_.Mutable(index);
}
inline ::proto::message::Battle2Client_SyncDropItemAppear* Battle2Client_SyncSceneObjAppear::add_drop_items() {
  return drop_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >&
Battle2Client_SyncSceneObjAppear::drop_items() const {
  return drop_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncDropItemAppear >*
Battle2Client_SyncSceneObjAppear::mutable_drop_items() {
  return &drop_items_;
}

// repeated .proto.message.Battle2Client_SyncMercenaryAppear mercenarys = 4;
inline int Battle2Client_SyncSceneObjAppear::mercenarys_size() const {
  return mercenarys_.size();
}
inline void Battle2Client_SyncSceneObjAppear::clear_mercenarys() {
  mercenarys_.Clear();
}
inline const ::proto::message::Battle2Client_SyncMercenaryAppear& Battle2Client_SyncSceneObjAppear::mercenarys(int index) const {
  return mercenarys_.Get(index);
}
inline ::proto::message::Battle2Client_SyncMercenaryAppear* Battle2Client_SyncSceneObjAppear::mutable_mercenarys(int index) {
  return mercenarys_.Mutable(index);
}
inline ::proto::message::Battle2Client_SyncMercenaryAppear* Battle2Client_SyncSceneObjAppear::add_mercenarys() {
  return mercenarys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMercenaryAppear >&
Battle2Client_SyncSceneObjAppear::mercenarys() const {
  return mercenarys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Battle2Client_SyncMercenaryAppear >*
Battle2Client_SyncSceneObjAppear::mutable_mercenarys() {
  return &mercenarys_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::Battle2Client_GradeDataType>() {
  return ::proto::message::Battle2Client_GradeDataType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_battle_2eproto__INCLUDED
