// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy_msg.proto

#include "proxy_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace NFMsg {
class ProxyCmdMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProxyCmdMessage>
      _instance;
} _ProxyCmdMessage_default_instance_;
class UserLoginTokenLoginUserPmd_CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginTokenLoginUserPmd_C>
      _instance;
} _UserLoginTokenLoginUserPmd_C_default_instance_;
class UserJsMessageForwardUserPmd_CSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserJsMessageForwardUserPmd_CS>
      _instance;
} _UserJsMessageForwardUserPmd_CS_default_instance_;
class AccountConnectGameServer_CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountConnectGameServer_C>
      _instance;
} _AccountConnectGameServer_C_default_instance_;
class UserLoginReconnectLoginUserPmd_CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginReconnectLoginUserPmd_C>
      _instance;
} _UserLoginReconnectLoginUserPmd_C_default_instance_;
}  // namespace NFMsg
namespace protobuf_proxy_5fmsg_2eproto {
static void InitDefaultsProxyCmdMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_ProxyCmdMessage_default_instance_;
    new (ptr) ::NFMsg::ProxyCmdMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ProxyCmdMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProxyCmdMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProxyCmdMessage}, {}};

static void InitDefaultsUserLoginTokenLoginUserPmd_C() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_UserLoginTokenLoginUserPmd_C_default_instance_;
    new (ptr) ::NFMsg::UserLoginTokenLoginUserPmd_C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::UserLoginTokenLoginUserPmd_C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserLoginTokenLoginUserPmd_C =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserLoginTokenLoginUserPmd_C}, {}};

static void InitDefaultsUserJsMessageForwardUserPmd_CS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_UserJsMessageForwardUserPmd_CS_default_instance_;
    new (ptr) ::NFMsg::UserJsMessageForwardUserPmd_CS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::UserJsMessageForwardUserPmd_CS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserJsMessageForwardUserPmd_CS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserJsMessageForwardUserPmd_CS}, {}};

static void InitDefaultsAccountConnectGameServer_C() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_AccountConnectGameServer_C_default_instance_;
    new (ptr) ::NFMsg::AccountConnectGameServer_C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::AccountConnectGameServer_C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountConnectGameServer_C =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountConnectGameServer_C}, {}};

static void InitDefaultsUserLoginReconnectLoginUserPmd_C() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_UserLoginReconnectLoginUserPmd_C_default_instance_;
    new (ptr) ::NFMsg::UserLoginReconnectLoginUserPmd_C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::UserLoginReconnectLoginUserPmd_C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserLoginReconnectLoginUserPmd_C =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserLoginReconnectLoginUserPmd_C}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProxyCmdMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLoginTokenLoginUserPmd_C.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserJsMessageForwardUserPmd_CS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountConnectGameServer_C.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLoginReconnectLoginUserPmd_C.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ProxyCmdMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ProxyCmdMessage, cmd_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, logintempid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, compress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginTokenLoginUserPmd_C, tokenmd5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserJsMessageForwardUserPmd_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserJsMessageForwardUserPmd_CS, cmd_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserJsMessageForwardUserPmd_CS, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::AccountConnectGameServer_C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::AccountConnectGameServer_C, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::AccountConnectGameServer_C, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::AccountConnectGameServer_C, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, tokenmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, logintempid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, lastseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::UserLoginReconnectLoginUserPmd_C, url_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFMsg::ProxyCmdMessage)},
  { 6, -1, sizeof(::NFMsg::UserLoginTokenLoginUserPmd_C)},
  { 19, -1, sizeof(::NFMsg::UserJsMessageForwardUserPmd_CS)},
  { 26, -1, sizeof(::NFMsg::AccountConnectGameServer_C)},
  { 34, -1, sizeof(::NFMsg::UserLoginReconnectLoginUserPmd_C)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ProxyCmdMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_UserLoginTokenLoginUserPmd_C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_UserJsMessageForwardUserPmd_CS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_AccountConnectGameServer_C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_UserLoginReconnectLoginUserPmd_C_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proxy_msg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017proxy_msg.proto\022\005NFMsg\"#\n\017ProxyCmdMess"
      "age\022\020\n\010cmd_name\030\001 \001(\t\"\256\001\n\034UserLoginToken"
      "LoginUserPmd_C\022\017\n\007version\030\001 \001(\r\022\016\n\006gamei"
      "d\030\002 \001(\r\022\016\n\006zoneid\030\003 \001(\r\022\021\n\taccountid\030\004 \001"
      "(\004\022\023\n\013logintempid\030\005 \001(\r\022\021\n\ttimestamp\030\006 \001"
      "(\004\022\020\n\010compress\030\007 \001(\t\022\020\n\010tokenmd5\030\010 \001(\t\"\?"
      "\n\036UserJsMessageForwardUserPmd_CS\022\020\n\010cmd_"
      "name\030\001 \001(\t\022\013\n\003msg\030\002 \001(\t\"F\n\032AccountConnec"
      "tGameServer_C\022\013\n\003uid\030\001 \001(\004\022\n\n\002ip\030\002 \001(\t\022\017"
      "\n\007account\030\003 \001(\t\"\255\001\n UserLoginReconnectLo"
      "ginUserPmd_C\022\021\n\taccountid\030\001 \001(\004\022\021\n\ttimes"
      "tamp\030\002 \001(\004\022\020\n\010tokenmd5\030\003 \001(\t\022\023\n\013logintem"
      "pid\030\004 \001(\r\022\016\n\006gameid\030\005 \001(\r\022\016\n\006zoneid\030\006 \001("
      "\r\022\017\n\007lastseq\030\007 \001(\r\022\013\n\003url\030\t \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 559);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proxy_msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proxy_5fmsg_2eproto
namespace NFMsg {

// ===================================================================

void ProxyCmdMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyCmdMessage::kCmdNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyCmdMessage::ProxyCmdMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proxy_5fmsg_2eproto::scc_info_ProxyCmdMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ProxyCmdMessage)
}
ProxyCmdMessage::ProxyCmdMessage(const ProxyCmdMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd_name().size() > 0) {
    cmd_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_name_);
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ProxyCmdMessage)
}

void ProxyCmdMessage::SharedCtor() {
  cmd_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProxyCmdMessage::~ProxyCmdMessage() {
  // @@protoc_insertion_point(destructor:NFMsg.ProxyCmdMessage)
  SharedDtor();
}

void ProxyCmdMessage::SharedDtor() {
  cmd_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProxyCmdMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProxyCmdMessage::descriptor() {
  ::protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProxyCmdMessage& ProxyCmdMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proxy_5fmsg_2eproto::scc_info_ProxyCmdMessage.base);
  return *internal_default_instance();
}


void ProxyCmdMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ProxyCmdMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProxyCmdMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ProxyCmdMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cmd_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd_name().data(), static_cast<int>(this->cmd_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.ProxyCmdMessage.cmd_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ProxyCmdMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ProxyCmdMessage)
  return false;
#undef DO_
}

void ProxyCmdMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ProxyCmdMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmd_name = 1;
  if (this->cmd_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd_name().data(), static_cast<int>(this->cmd_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.ProxyCmdMessage.cmd_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ProxyCmdMessage)
}

::google::protobuf::uint8* ProxyCmdMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ProxyCmdMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmd_name = 1;
  if (this->cmd_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd_name().data(), static_cast<int>(this->cmd_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.ProxyCmdMessage.cmd_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ProxyCmdMessage)
  return target;
}

size_t ProxyCmdMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ProxyCmdMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cmd_name = 1;
  if (this->cmd_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProxyCmdMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ProxyCmdMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyCmdMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProxyCmdMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ProxyCmdMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ProxyCmdMessage)
    MergeFrom(*source);
  }
}

void ProxyCmdMessage::MergeFrom(const ProxyCmdMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ProxyCmdMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd_name().size() > 0) {

    cmd_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_name_);
  }
}

void ProxyCmdMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ProxyCmdMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyCmdMessage::CopyFrom(const ProxyCmdMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ProxyCmdMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyCmdMessage::IsInitialized() const {
  return true;
}

void ProxyCmdMessage::Swap(ProxyCmdMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyCmdMessage::InternalSwap(ProxyCmdMessage* other) {
  using std::swap;
  cmd_name_.Swap(&other->cmd_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProxyCmdMessage::GetMetadata() const {
  protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginTokenLoginUserPmd_C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginTokenLoginUserPmd_C::kVersionFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kGameidFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kZoneidFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kAccountidFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kLogintempidFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kTimestampFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kCompressFieldNumber;
const int UserLoginTokenLoginUserPmd_C::kTokenmd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginTokenLoginUserPmd_C::UserLoginTokenLoginUserPmd_C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proxy_5fmsg_2eproto::scc_info_UserLoginTokenLoginUserPmd_C.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.UserLoginTokenLoginUserPmd_C)
}
UserLoginTokenLoginUserPmd_C::UserLoginTokenLoginUserPmd_C(const UserLoginTokenLoginUserPmd_C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compress().size() > 0) {
    compress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compress_);
  }
  tokenmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tokenmd5().size() > 0) {
    tokenmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenmd5_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&version_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.UserLoginTokenLoginUserPmd_C)
}

void UserLoginTokenLoginUserPmd_C::SharedCtor() {
  compress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tokenmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&version_)) + sizeof(timestamp_));
}

UserLoginTokenLoginUserPmd_C::~UserLoginTokenLoginUserPmd_C() {
  // @@protoc_insertion_point(destructor:NFMsg.UserLoginTokenLoginUserPmd_C)
  SharedDtor();
}

void UserLoginTokenLoginUserPmd_C::SharedDtor() {
  compress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tokenmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLoginTokenLoginUserPmd_C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserLoginTokenLoginUserPmd_C::descriptor() {
  ::protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginTokenLoginUserPmd_C& UserLoginTokenLoginUserPmd_C::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proxy_5fmsg_2eproto::scc_info_UserLoginTokenLoginUserPmd_C.base);
  return *internal_default_instance();
}


void UserLoginTokenLoginUserPmd_C::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tokenmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&version_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool UserLoginTokenLoginUserPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 logintempid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logintempid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compress = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compress().data(), static_cast<int>(this->compress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.UserLoginTokenLoginUserPmd_C.compress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tokenmd5 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tokenmd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tokenmd5().data(), static_cast<int>(this->tokenmd5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.UserLoginTokenLoginUserPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.UserLoginTokenLoginUserPmd_C)
  return false;
#undef DO_
}

void UserLoginTokenLoginUserPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // uint32 gameid = 2;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gameid(), output);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->accountid(), output);
  }

  // uint32 logintempid = 5;
  if (this->logintempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->logintempid(), output);
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->timestamp(), output);
  }

  // string compress = 7;
  if (this->compress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compress().data(), static_cast<int>(this->compress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginTokenLoginUserPmd_C.compress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->compress(), output);
  }

  // string tokenmd5 = 8;
  if (this->tokenmd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokenmd5().data(), static_cast<int>(this->tokenmd5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->tokenmd5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.UserLoginTokenLoginUserPmd_C)
}

::google::protobuf::uint8* UserLoginTokenLoginUserPmd_C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // uint32 gameid = 2;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gameid(), target);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->accountid(), target);
  }

  // uint32 logintempid = 5;
  if (this->logintempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->logintempid(), target);
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->timestamp(), target);
  }

  // string compress = 7;
  if (this->compress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compress().data(), static_cast<int>(this->compress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginTokenLoginUserPmd_C.compress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->compress(), target);
  }

  // string tokenmd5 = 8;
  if (this->tokenmd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokenmd5().data(), static_cast<int>(this->tokenmd5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tokenmd5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.UserLoginTokenLoginUserPmd_C)
  return target;
}

size_t UserLoginTokenLoginUserPmd_C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string compress = 7;
  if (this->compress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compress());
  }

  // string tokenmd5 = 8;
  if (this->tokenmd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tokenmd5());
  }

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 gameid = 2;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameid());
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  // uint32 logintempid = 5;
  if (this->logintempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logintempid());
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLoginTokenLoginUserPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginTokenLoginUserPmd_C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginTokenLoginUserPmd_C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.UserLoginTokenLoginUserPmd_C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.UserLoginTokenLoginUserPmd_C)
    MergeFrom(*source);
  }
}

void UserLoginTokenLoginUserPmd_C::MergeFrom(const UserLoginTokenLoginUserPmd_C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compress().size() > 0) {

    compress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compress_);
  }
  if (from.tokenmd5().size() > 0) {

    tokenmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenmd5_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.logintempid() != 0) {
    set_logintempid(from.logintempid());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void UserLoginTokenLoginUserPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginTokenLoginUserPmd_C::CopyFrom(const UserLoginTokenLoginUserPmd_C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.UserLoginTokenLoginUserPmd_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginTokenLoginUserPmd_C::IsInitialized() const {
  return true;
}

void UserLoginTokenLoginUserPmd_C::Swap(UserLoginTokenLoginUserPmd_C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginTokenLoginUserPmd_C::InternalSwap(UserLoginTokenLoginUserPmd_C* other) {
  using std::swap;
  compress_.Swap(&other->compress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tokenmd5_.Swap(&other->tokenmd5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(gameid_, other->gameid_);
  swap(accountid_, other->accountid_);
  swap(zoneid_, other->zoneid_);
  swap(logintempid_, other->logintempid_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserLoginTokenLoginUserPmd_C::GetMetadata() const {
  protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserJsMessageForwardUserPmd_CS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserJsMessageForwardUserPmd_CS::kCmdNameFieldNumber;
const int UserJsMessageForwardUserPmd_CS::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserJsMessageForwardUserPmd_CS::UserJsMessageForwardUserPmd_CS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proxy_5fmsg_2eproto::scc_info_UserJsMessageForwardUserPmd_CS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.UserJsMessageForwardUserPmd_CS)
}
UserJsMessageForwardUserPmd_CS::UserJsMessageForwardUserPmd_CS(const UserJsMessageForwardUserPmd_CS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd_name().size() > 0) {
    cmd_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_name_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.UserJsMessageForwardUserPmd_CS)
}

void UserJsMessageForwardUserPmd_CS::SharedCtor() {
  cmd_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserJsMessageForwardUserPmd_CS::~UserJsMessageForwardUserPmd_CS() {
  // @@protoc_insertion_point(destructor:NFMsg.UserJsMessageForwardUserPmd_CS)
  SharedDtor();
}

void UserJsMessageForwardUserPmd_CS::SharedDtor() {
  cmd_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserJsMessageForwardUserPmd_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserJsMessageForwardUserPmd_CS::descriptor() {
  ::protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserJsMessageForwardUserPmd_CS& UserJsMessageForwardUserPmd_CS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proxy_5fmsg_2eproto::scc_info_UserJsMessageForwardUserPmd_CS.base);
  return *internal_default_instance();
}


void UserJsMessageForwardUserPmd_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserJsMessageForwardUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cmd_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd_name().data(), static_cast<int>(this->cmd_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.UserJsMessageForwardUserPmd_CS.cmd_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.UserJsMessageForwardUserPmd_CS.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.UserJsMessageForwardUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.UserJsMessageForwardUserPmd_CS)
  return false;
#undef DO_
}

void UserJsMessageForwardUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmd_name = 1;
  if (this->cmd_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd_name().data(), static_cast<int>(this->cmd_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserJsMessageForwardUserPmd_CS.cmd_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd_name(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserJsMessageForwardUserPmd_CS.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.UserJsMessageForwardUserPmd_CS)
}

::google::protobuf::uint8* UserJsMessageForwardUserPmd_CS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmd_name = 1;
  if (this->cmd_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd_name().data(), static_cast<int>(this->cmd_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserJsMessageForwardUserPmd_CS.cmd_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd_name(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserJsMessageForwardUserPmd_CS.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.UserJsMessageForwardUserPmd_CS)
  return target;
}

size_t UserJsMessageForwardUserPmd_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cmd_name = 1;
  if (this->cmd_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd_name());
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserJsMessageForwardUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const UserJsMessageForwardUserPmd_CS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserJsMessageForwardUserPmd_CS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.UserJsMessageForwardUserPmd_CS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.UserJsMessageForwardUserPmd_CS)
    MergeFrom(*source);
  }
}

void UserJsMessageForwardUserPmd_CS::MergeFrom(const UserJsMessageForwardUserPmd_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd_name().size() > 0) {

    cmd_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_name_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void UserJsMessageForwardUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserJsMessageForwardUserPmd_CS::CopyFrom(const UserJsMessageForwardUserPmd_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.UserJsMessageForwardUserPmd_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserJsMessageForwardUserPmd_CS::IsInitialized() const {
  return true;
}

void UserJsMessageForwardUserPmd_CS::Swap(UserJsMessageForwardUserPmd_CS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserJsMessageForwardUserPmd_CS::InternalSwap(UserJsMessageForwardUserPmd_CS* other) {
  using std::swap;
  cmd_name_.Swap(&other->cmd_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserJsMessageForwardUserPmd_CS::GetMetadata() const {
  protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountConnectGameServer_C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountConnectGameServer_C::kUidFieldNumber;
const int AccountConnectGameServer_C::kIpFieldNumber;
const int AccountConnectGameServer_C::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountConnectGameServer_C::AccountConnectGameServer_C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proxy_5fmsg_2eproto::scc_info_AccountConnectGameServer_C.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.AccountConnectGameServer_C)
}
AccountConnectGameServer_C::AccountConnectGameServer_C(const AccountConnectGameServer_C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.AccountConnectGameServer_C)
}

void AccountConnectGameServer_C::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = GOOGLE_ULONGLONG(0);
}

AccountConnectGameServer_C::~AccountConnectGameServer_C() {
  // @@protoc_insertion_point(destructor:NFMsg.AccountConnectGameServer_C)
  SharedDtor();
}

void AccountConnectGameServer_C::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountConnectGameServer_C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountConnectGameServer_C::descriptor() {
  ::protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountConnectGameServer_C& AccountConnectGameServer_C::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proxy_5fmsg_2eproto::scc_info_AccountConnectGameServer_C.base);
  return *internal_default_instance();
}


void AccountConnectGameServer_C::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.AccountConnectGameServer_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool AccountConnectGameServer_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.AccountConnectGameServer_C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.AccountConnectGameServer_C.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.AccountConnectGameServer_C.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.AccountConnectGameServer_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.AccountConnectGameServer_C)
  return false;
#undef DO_
}

void AccountConnectGameServer_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.AccountConnectGameServer_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.AccountConnectGameServer_C.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.AccountConnectGameServer_C.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.AccountConnectGameServer_C)
}

::google::protobuf::uint8* AccountConnectGameServer_C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.AccountConnectGameServer_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.AccountConnectGameServer_C.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.AccountConnectGameServer_C.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.AccountConnectGameServer_C)
  return target;
}

size_t AccountConnectGameServer_C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.AccountConnectGameServer_C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // uint64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountConnectGameServer_C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.AccountConnectGameServer_C)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountConnectGameServer_C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountConnectGameServer_C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.AccountConnectGameServer_C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.AccountConnectGameServer_C)
    MergeFrom(*source);
  }
}

void AccountConnectGameServer_C::MergeFrom(const AccountConnectGameServer_C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.AccountConnectGameServer_C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void AccountConnectGameServer_C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.AccountConnectGameServer_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountConnectGameServer_C::CopyFrom(const AccountConnectGameServer_C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.AccountConnectGameServer_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountConnectGameServer_C::IsInitialized() const {
  return true;
}

void AccountConnectGameServer_C::Swap(AccountConnectGameServer_C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountConnectGameServer_C::InternalSwap(AccountConnectGameServer_C* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountConnectGameServer_C::GetMetadata() const {
  protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginReconnectLoginUserPmd_C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginReconnectLoginUserPmd_C::kAccountidFieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kTimestampFieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kTokenmd5FieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kLogintempidFieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kGameidFieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kZoneidFieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kLastseqFieldNumber;
const int UserLoginReconnectLoginUserPmd_C::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginReconnectLoginUserPmd_C::UserLoginReconnectLoginUserPmd_C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proxy_5fmsg_2eproto::scc_info_UserLoginReconnectLoginUserPmd_C.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.UserLoginReconnectLoginUserPmd_C)
}
UserLoginReconnectLoginUserPmd_C::UserLoginReconnectLoginUserPmd_C(const UserLoginReconnectLoginUserPmd_C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tokenmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tokenmd5().size() > 0) {
    tokenmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenmd5_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastseq_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(lastseq_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.UserLoginReconnectLoginUserPmd_C)
}

void UserLoginReconnectLoginUserPmd_C::SharedCtor() {
  tokenmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastseq_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(lastseq_));
}

UserLoginReconnectLoginUserPmd_C::~UserLoginReconnectLoginUserPmd_C() {
  // @@protoc_insertion_point(destructor:NFMsg.UserLoginReconnectLoginUserPmd_C)
  SharedDtor();
}

void UserLoginReconnectLoginUserPmd_C::SharedDtor() {
  tokenmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLoginReconnectLoginUserPmd_C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserLoginReconnectLoginUserPmd_C::descriptor() {
  ::protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginReconnectLoginUserPmd_C& UserLoginReconnectLoginUserPmd_C::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proxy_5fmsg_2eproto::scc_info_UserLoginReconnectLoginUserPmd_C.base);
  return *internal_default_instance();
}


void UserLoginReconnectLoginUserPmd_C::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tokenmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastseq_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(lastseq_));
  _internal_metadata_.Clear();
}

bool UserLoginReconnectLoginUserPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tokenmd5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tokenmd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tokenmd5().data(), static_cast<int>(this->tokenmd5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.UserLoginReconnectLoginUserPmd_C.tokenmd5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 logintempid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logintempid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lastseq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NFMsg.UserLoginReconnectLoginUserPmd_C.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.UserLoginReconnectLoginUserPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.UserLoginReconnectLoginUserPmd_C)
  return false;
#undef DO_
}

void UserLoginReconnectLoginUserPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // string tokenmd5 = 3;
  if (this->tokenmd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokenmd5().data(), static_cast<int>(this->tokenmd5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginReconnectLoginUserPmd_C.tokenmd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tokenmd5(), output);
  }

  // uint32 logintempid = 4;
  if (this->logintempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->logintempid(), output);
  }

  // uint32 gameid = 5;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gameid(), output);
  }

  // uint32 zoneid = 6;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->zoneid(), output);
  }

  // uint32 lastseq = 7;
  if (this->lastseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->lastseq(), output);
  }

  // string url = 9;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginReconnectLoginUserPmd_C.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.UserLoginReconnectLoginUserPmd_C)
}

::google::protobuf::uint8* UserLoginReconnectLoginUserPmd_C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // string tokenmd5 = 3;
  if (this->tokenmd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tokenmd5().data(), static_cast<int>(this->tokenmd5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginReconnectLoginUserPmd_C.tokenmd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tokenmd5(), target);
  }

  // uint32 logintempid = 4;
  if (this->logintempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->logintempid(), target);
  }

  // uint32 gameid = 5;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gameid(), target);
  }

  // uint32 zoneid = 6;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->zoneid(), target);
  }

  // uint32 lastseq = 7;
  if (this->lastseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->lastseq(), target);
  }

  // string url = 9;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NFMsg.UserLoginReconnectLoginUserPmd_C.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.UserLoginReconnectLoginUserPmd_C)
  return target;
}

size_t UserLoginReconnectLoginUserPmd_C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tokenmd5 = 3;
  if (this->tokenmd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tokenmd5());
  }

  // string url = 9;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 logintempid = 4;
  if (this->logintempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logintempid());
  }

  // uint32 gameid = 5;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameid());
  }

  // uint32 zoneid = 6;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  // uint32 lastseq = 7;
  if (this->lastseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lastseq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLoginReconnectLoginUserPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginReconnectLoginUserPmd_C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginReconnectLoginUserPmd_C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.UserLoginReconnectLoginUserPmd_C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.UserLoginReconnectLoginUserPmd_C)
    MergeFrom(*source);
  }
}

void UserLoginReconnectLoginUserPmd_C::MergeFrom(const UserLoginReconnectLoginUserPmd_C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tokenmd5().size() > 0) {

    tokenmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tokenmd5_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.logintempid() != 0) {
    set_logintempid(from.logintempid());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.lastseq() != 0) {
    set_lastseq(from.lastseq());
  }
}

void UserLoginReconnectLoginUserPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginReconnectLoginUserPmd_C::CopyFrom(const UserLoginReconnectLoginUserPmd_C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.UserLoginReconnectLoginUserPmd_C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginReconnectLoginUserPmd_C::IsInitialized() const {
  return true;
}

void UserLoginReconnectLoginUserPmd_C::Swap(UserLoginReconnectLoginUserPmd_C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginReconnectLoginUserPmd_C::InternalSwap(UserLoginReconnectLoginUserPmd_C* other) {
  using std::swap;
  tokenmd5_.Swap(&other->tokenmd5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(timestamp_, other->timestamp_);
  swap(logintempid_, other->logintempid_);
  swap(gameid_, other->gameid_);
  swap(zoneid_, other->zoneid_);
  swap(lastseq_, other->lastseq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserLoginReconnectLoginUserPmd_C::GetMetadata() const {
  protobuf_proxy_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proxy_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::ProxyCmdMessage* Arena::CreateMaybeMessage< ::NFMsg::ProxyCmdMessage >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::ProxyCmdMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::UserLoginTokenLoginUserPmd_C* Arena::CreateMaybeMessage< ::NFMsg::UserLoginTokenLoginUserPmd_C >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::UserLoginTokenLoginUserPmd_C >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::UserJsMessageForwardUserPmd_CS* Arena::CreateMaybeMessage< ::NFMsg::UserJsMessageForwardUserPmd_CS >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::UserJsMessageForwardUserPmd_CS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::AccountConnectGameServer_C* Arena::CreateMaybeMessage< ::NFMsg::AccountConnectGameServer_C >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::AccountConnectGameServer_C >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::UserLoginReconnectLoginUserPmd_C* Arena::CreateMaybeMessage< ::NFMsg::UserLoginReconnectLoginUserPmd_C >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::UserLoginReconnectLoginUserPmd_C >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
