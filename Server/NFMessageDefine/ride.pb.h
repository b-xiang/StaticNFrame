// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ride.proto

#ifndef PROTOBUF_ride_2eproto__INCLUDED
#define PROTOBUF_ride_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ride_2eproto();
void protobuf_AssignDesc_ride_2eproto();
void protobuf_ShutdownFile_ride_2eproto();

class ProtoRideEquipCell;
class ProtoRideAllCellInfo;
class Ride_CS_GetRideInfo;
class Ride_SC_GetRideInfo;
class Ride_CS_Upgrade;
class Ride_SC_Upgrade;
class Ride_CS_UpgSkill;
class Ride_SC_UpgSkill;
class Ride_CS_OpenEquipCell;
class Ride_SC_OpenEquipCell;
class Ride_CS_PutOnRideEquip;
class Ride_SC_PutOnRideEquip;
class Ride_CS_GetOffRideEquip;
class Ride_SC_GetOffRideEquip;
class Ride_CS_RideStatus;
class Ride_SC_RideStatus;
class Ride_CS_Eat;
class Ride_SC_Eat;
class Ride_CS_SkillOpen;
class Ride_SC_SkillOpen;

// ===================================================================

class ProtoRideEquipCell : public ::google::protobuf::Message {
 public:
  ProtoRideEquipCell();
  virtual ~ProtoRideEquipCell();

  ProtoRideEquipCell(const ProtoRideEquipCell& from);

  inline ProtoRideEquipCell& operator=(const ProtoRideEquipCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRideEquipCell& default_instance();

  void Swap(ProtoRideEquipCell* other);

  // implements Message ----------------------------------------------

  ProtoRideEquipCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRideEquipCell& from);
  void MergeFrom(const ProtoRideEquipCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 equipid = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 1;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // required bool isOpen = 2;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 2;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRideEquipCell)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_isopen();
  inline void clear_has_isopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 equipid_;
  bool isopen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static ProtoRideEquipCell* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRideAllCellInfo : public ::google::protobuf::Message {
 public:
  ProtoRideAllCellInfo();
  virtual ~ProtoRideAllCellInfo();

  ProtoRideAllCellInfo(const ProtoRideAllCellInfo& from);

  inline ProtoRideAllCellInfo& operator=(const ProtoRideAllCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRideAllCellInfo& default_instance();

  void Swap(ProtoRideAllCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoRideAllCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRideAllCellInfo& from);
  void MergeFrom(const ProtoRideAllCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nID = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIDFieldNumber = 1;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);

  // optional int32 nLucky = 2;
  inline bool has_nlucky() const;
  inline void clear_nlucky();
  static const int kNLuckyFieldNumber = 2;
  inline ::google::protobuf::int32 nlucky() const;
  inline void set_nlucky(::google::protobuf::int32 value);

  // repeated int32 nSkill = 3;
  inline int nskill_size() const;
  inline void clear_nskill();
  static const int kNSkillFieldNumber = 3;
  inline ::google::protobuf::int32 nskill(int index) const;
  inline void set_nskill(int index, ::google::protobuf::int32 value);
  inline void add_nskill(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nskill();

  // repeated .proto.message.ProtoRideEquipCell equips = 4;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 4;
  inline const ::proto::message::ProtoRideEquipCell& equips(int index) const;
  inline ::proto::message::ProtoRideEquipCell* mutable_equips(int index);
  inline ::proto::message::ProtoRideEquipCell* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >*
      mutable_equips();

  // repeated .proto.message.Equip rideequipgird_list = 5;
  inline int rideequipgird_list_size() const;
  inline void clear_rideequipgird_list();
  static const int kRideequipgirdListFieldNumber = 5;
  inline const ::proto::message::Equip& rideequipgird_list(int index) const;
  inline ::proto::message::Equip* mutable_rideequipgird_list(int index);
  inline ::proto::message::Equip* add_rideequipgird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      rideequipgird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_rideequipgird_list();

  // optional uint32 eatFoodId = 6;
  inline bool has_eatfoodid() const;
  inline void clear_eatfoodid();
  static const int kEatFoodIdFieldNumber = 6;
  inline ::google::protobuf::uint32 eatfoodid() const;
  inline void set_eatfoodid(::google::protobuf::uint32 value);

  // optional uint32 eatFoodNum = 7;
  inline bool has_eatfoodnum() const;
  inline void clear_eatfoodnum();
  static const int kEatFoodNumFieldNumber = 7;
  inline ::google::protobuf::uint32 eatfoodnum() const;
  inline void set_eatfoodnum(::google::protobuf::uint32 value);

  // repeated uint32 skillbooks = 8;
  inline int skillbooks_size() const;
  inline void clear_skillbooks();
  static const int kSkillbooksFieldNumber = 8;
  inline ::google::protobuf::uint32 skillbooks(int index) const;
  inline void set_skillbooks(int index, ::google::protobuf::uint32 value);
  inline void add_skillbooks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillbooks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillbooks();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRideAllCellInfo)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_nlucky();
  inline void clear_has_nlucky();
  inline void set_has_eatfoodid();
  inline void clear_has_eatfoodid();
  inline void set_has_eatfoodnum();
  inline void clear_has_eatfoodnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nid_;
  ::google::protobuf::int32 nlucky_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nskill_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell > equips_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > rideequipgird_list_;
  ::google::protobuf::uint32 eatfoodid_;
  ::google::protobuf::uint32 eatfoodnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillbooks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static ProtoRideAllCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_GetRideInfo : public ::google::protobuf::Message {
 public:
  Ride_CS_GetRideInfo();
  virtual ~Ride_CS_GetRideInfo();

  Ride_CS_GetRideInfo(const Ride_CS_GetRideInfo& from);

  inline Ride_CS_GetRideInfo& operator=(const Ride_CS_GetRideInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_GetRideInfo& default_instance();

  void Swap(Ride_CS_GetRideInfo* other);

  // implements Message ----------------------------------------------

  Ride_CS_GetRideInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_GetRideInfo& from);
  void MergeFrom(const Ride_CS_GetRideInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_GetRideInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_GetRideInfo* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_GetRideInfo : public ::google::protobuf::Message {
 public:
  Ride_SC_GetRideInfo();
  virtual ~Ride_SC_GetRideInfo();

  Ride_SC_GetRideInfo(const Ride_SC_GetRideInfo& from);

  inline Ride_SC_GetRideInfo& operator=(const Ride_SC_GetRideInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_GetRideInfo& default_instance();

  void Swap(Ride_SC_GetRideInfo* other);

  // implements Message ----------------------------------------------

  Ride_SC_GetRideInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_GetRideInfo& from);
  void MergeFrom(const Ride_SC_GetRideInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nID = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIDFieldNumber = 1;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);

  // required int32 nLucky = 2;
  inline bool has_nlucky() const;
  inline void clear_nlucky();
  static const int kNLuckyFieldNumber = 2;
  inline ::google::protobuf::int32 nlucky() const;
  inline void set_nlucky(::google::protobuf::int32 value);

  // repeated int32 nSkill = 3;
  inline int nskill_size() const;
  inline void clear_nskill();
  static const int kNSkillFieldNumber = 3;
  inline ::google::protobuf::int32 nskill(int index) const;
  inline void set_nskill(int index, ::google::protobuf::int32 value);
  inline void add_nskill(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nskill();

  // repeated .proto.message.ProtoRideEquipCell equips = 4;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 4;
  inline const ::proto::message::ProtoRideEquipCell& equips(int index) const;
  inline ::proto::message::ProtoRideEquipCell* mutable_equips(int index);
  inline ::proto::message::ProtoRideEquipCell* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >*
      mutable_equips();

  // repeated .proto.message.Equip rideequipgird_list = 5;
  inline int rideequipgird_list_size() const;
  inline void clear_rideequipgird_list();
  static const int kRideequipgirdListFieldNumber = 5;
  inline const ::proto::message::Equip& rideequipgird_list(int index) const;
  inline ::proto::message::Equip* mutable_rideequipgird_list(int index);
  inline ::proto::message::Equip* add_rideequipgird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      rideequipgird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_rideequipgird_list();

  // optional uint32 eatFoodId = 6;
  inline bool has_eatfoodid() const;
  inline void clear_eatfoodid();
  static const int kEatFoodIdFieldNumber = 6;
  inline ::google::protobuf::uint32 eatfoodid() const;
  inline void set_eatfoodid(::google::protobuf::uint32 value);

  // optional uint32 eatFoodNum = 7;
  inline bool has_eatfoodnum() const;
  inline void clear_eatfoodnum();
  static const int kEatFoodNumFieldNumber = 7;
  inline ::google::protobuf::uint32 eatfoodnum() const;
  inline void set_eatfoodnum(::google::protobuf::uint32 value);

  // repeated uint32 skillbooks = 8;
  inline int skillbooks_size() const;
  inline void clear_skillbooks();
  static const int kSkillbooksFieldNumber = 8;
  inline ::google::protobuf::uint32 skillbooks(int index) const;
  inline void set_skillbooks(int index, ::google::protobuf::uint32 value);
  inline void add_skillbooks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillbooks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillbooks();

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_GetRideInfo)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_nlucky();
  inline void clear_has_nlucky();
  inline void set_has_eatfoodid();
  inline void clear_has_eatfoodid();
  inline void set_has_eatfoodnum();
  inline void clear_has_eatfoodnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nid_;
  ::google::protobuf::int32 nlucky_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nskill_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell > equips_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > rideequipgird_list_;
  ::google::protobuf::uint32 eatfoodid_;
  ::google::protobuf::uint32 eatfoodnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillbooks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_GetRideInfo* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_Upgrade : public ::google::protobuf::Message {
 public:
  Ride_CS_Upgrade();
  virtual ~Ride_CS_Upgrade();

  Ride_CS_Upgrade(const Ride_CS_Upgrade& from);

  inline Ride_CS_Upgrade& operator=(const Ride_CS_Upgrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_Upgrade& default_instance();

  void Swap(Ride_CS_Upgrade* other);

  // implements Message ----------------------------------------------

  Ride_CS_Upgrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_Upgrade& from);
  void MergeFrom(const Ride_CS_Upgrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_Upgrade)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_Upgrade* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_Upgrade : public ::google::protobuf::Message {
 public:
  Ride_SC_Upgrade();
  virtual ~Ride_SC_Upgrade();

  Ride_SC_Upgrade(const Ride_SC_Upgrade& from);

  inline Ride_SC_Upgrade& operator=(const Ride_SC_Upgrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_Upgrade& default_instance();

  void Swap(Ride_SC_Upgrade* other);

  // implements Message ----------------------------------------------

  Ride_SC_Upgrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_Upgrade& from);
  void MergeFrom(const Ride_SC_Upgrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_Upgrade)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_Upgrade* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_UpgSkill : public ::google::protobuf::Message {
 public:
  Ride_CS_UpgSkill();
  virtual ~Ride_CS_UpgSkill();

  Ride_CS_UpgSkill(const Ride_CS_UpgSkill& from);

  inline Ride_CS_UpgSkill& operator=(const Ride_CS_UpgSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_UpgSkill& default_instance();

  void Swap(Ride_CS_UpgSkill* other);

  // implements Message ----------------------------------------------

  Ride_CS_UpgSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_UpgSkill& from);
  void MergeFrom(const Ride_CS_UpgSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_UpgSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_UpgSkill* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_UpgSkill : public ::google::protobuf::Message {
 public:
  Ride_SC_UpgSkill();
  virtual ~Ride_SC_UpgSkill();

  Ride_SC_UpgSkill(const Ride_SC_UpgSkill& from);

  inline Ride_SC_UpgSkill& operator=(const Ride_SC_UpgSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_UpgSkill& default_instance();

  void Swap(Ride_SC_UpgSkill* other);

  // implements Message ----------------------------------------------

  Ride_SC_UpgSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_UpgSkill& from);
  void MergeFrom(const Ride_SC_UpgSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_UpgSkill)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_UpgSkill* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_OpenEquipCell : public ::google::protobuf::Message {
 public:
  Ride_CS_OpenEquipCell();
  virtual ~Ride_CS_OpenEquipCell();

  Ride_CS_OpenEquipCell(const Ride_CS_OpenEquipCell& from);

  inline Ride_CS_OpenEquipCell& operator=(const Ride_CS_OpenEquipCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_OpenEquipCell& default_instance();

  void Swap(Ride_CS_OpenEquipCell* other);

  // implements Message ----------------------------------------------

  Ride_CS_OpenEquipCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_OpenEquipCell& from);
  void MergeFrom(const Ride_CS_OpenEquipCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cellid = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 1;
  inline ::google::protobuf::int32 cellid() const;
  inline void set_cellid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_OpenEquipCell)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cellid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_OpenEquipCell* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_OpenEquipCell : public ::google::protobuf::Message {
 public:
  Ride_SC_OpenEquipCell();
  virtual ~Ride_SC_OpenEquipCell();

  Ride_SC_OpenEquipCell(const Ride_SC_OpenEquipCell& from);

  inline Ride_SC_OpenEquipCell& operator=(const Ride_SC_OpenEquipCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_OpenEquipCell& default_instance();

  void Swap(Ride_SC_OpenEquipCell* other);

  // implements Message ----------------------------------------------

  Ride_SC_OpenEquipCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_OpenEquipCell& from);
  void MergeFrom(const Ride_SC_OpenEquipCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_OpenEquipCell)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_OpenEquipCell* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_PutOnRideEquip : public ::google::protobuf::Message {
 public:
  Ride_CS_PutOnRideEquip();
  virtual ~Ride_CS_PutOnRideEquip();

  Ride_CS_PutOnRideEquip(const Ride_CS_PutOnRideEquip& from);

  inline Ride_CS_PutOnRideEquip& operator=(const Ride_CS_PutOnRideEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_PutOnRideEquip& default_instance();

  void Swap(Ride_CS_PutOnRideEquip* other);

  // implements Message ----------------------------------------------

  Ride_CS_PutOnRideEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_PutOnRideEquip& from);
  void MergeFrom(const Ride_CS_PutOnRideEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_PutOnRideEquip)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_PutOnRideEquip* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_PutOnRideEquip : public ::google::protobuf::Message {
 public:
  Ride_SC_PutOnRideEquip();
  virtual ~Ride_SC_PutOnRideEquip();

  Ride_SC_PutOnRideEquip(const Ride_SC_PutOnRideEquip& from);

  inline Ride_SC_PutOnRideEquip& operator=(const Ride_SC_PutOnRideEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_PutOnRideEquip& default_instance();

  void Swap(Ride_SC_PutOnRideEquip* other);

  // implements Message ----------------------------------------------

  Ride_SC_PutOnRideEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_PutOnRideEquip& from);
  void MergeFrom(const Ride_SC_PutOnRideEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.Equip equip_list = 2;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 2;
  inline const ::proto::message::Equip& equip_list(int index) const;
  inline ::proto::message::Equip* mutable_equip_list(int index);
  inline ::proto::message::Equip* add_equip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      equip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_equip_list();

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_PutOnRideEquip)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > equip_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_PutOnRideEquip* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_GetOffRideEquip : public ::google::protobuf::Message {
 public:
  Ride_CS_GetOffRideEquip();
  virtual ~Ride_CS_GetOffRideEquip();

  Ride_CS_GetOffRideEquip(const Ride_CS_GetOffRideEquip& from);

  inline Ride_CS_GetOffRideEquip& operator=(const Ride_CS_GetOffRideEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_GetOffRideEquip& default_instance();

  void Swap(Ride_CS_GetOffRideEquip* other);

  // implements Message ----------------------------------------------

  Ride_CS_GetOffRideEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_GetOffRideEquip& from);
  void MergeFrom(const Ride_CS_GetOffRideEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_GetOffRideEquip)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_GetOffRideEquip* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_GetOffRideEquip : public ::google::protobuf::Message {
 public:
  Ride_SC_GetOffRideEquip();
  virtual ~Ride_SC_GetOffRideEquip();

  Ride_SC_GetOffRideEquip(const Ride_SC_GetOffRideEquip& from);

  inline Ride_SC_GetOffRideEquip& operator=(const Ride_SC_GetOffRideEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_GetOffRideEquip& default_instance();

  void Swap(Ride_SC_GetOffRideEquip* other);

  // implements Message ----------------------------------------------

  Ride_SC_GetOffRideEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_GetOffRideEquip& from);
  void MergeFrom(const Ride_SC_GetOffRideEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.Equip getoff_equip = 2;
  inline bool has_getoff_equip() const;
  inline void clear_getoff_equip();
  static const int kGetoffEquipFieldNumber = 2;
  inline const ::proto::message::Equip& getoff_equip() const;
  inline ::proto::message::Equip* mutable_getoff_equip();
  inline ::proto::message::Equip* release_getoff_equip();
  inline void set_allocated_getoff_equip(::proto::message::Equip* getoff_equip);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_GetOffRideEquip)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_getoff_equip();
  inline void clear_has_getoff_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Equip* getoff_equip_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_GetOffRideEquip* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_RideStatus : public ::google::protobuf::Message {
 public:
  Ride_CS_RideStatus();
  virtual ~Ride_CS_RideStatus();

  Ride_CS_RideStatus(const Ride_CS_RideStatus& from);

  inline Ride_CS_RideStatus& operator=(const Ride_CS_RideStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_RideStatus& default_instance();

  void Swap(Ride_CS_RideStatus* other);

  // implements Message ----------------------------------------------

  Ride_CS_RideStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_RideStatus& from);
  void MergeFrom(const Ride_CS_RideStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_RideStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_RideStatus* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_RideStatus : public ::google::protobuf::Message {
 public:
  Ride_SC_RideStatus();
  virtual ~Ride_SC_RideStatus();

  Ride_SC_RideStatus(const Ride_SC_RideStatus& from);

  inline Ride_SC_RideStatus& operator=(const Ride_SC_RideStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_RideStatus& default_instance();

  void Swap(Ride_SC_RideStatus* other);

  // implements Message ----------------------------------------------

  Ride_SC_RideStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_RideStatus& from);
  void MergeFrom(const Ride_SC_RideStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required bool status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_RideStatus)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_RideStatus* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_Eat : public ::google::protobuf::Message {
 public:
  Ride_CS_Eat();
  virtual ~Ride_CS_Eat();

  Ride_CS_Eat(const Ride_CS_Eat& from);

  inline Ride_CS_Eat& operator=(const Ride_CS_Eat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_Eat& default_instance();

  void Swap(Ride_CS_Eat* other);

  // implements Message ----------------------------------------------

  Ride_CS_Eat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_Eat& from);
  void MergeFrom(const Ride_CS_Eat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_Eat)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_Eat* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_Eat : public ::google::protobuf::Message {
 public:
  Ride_SC_Eat();
  virtual ~Ride_SC_Eat();

  Ride_SC_Eat(const Ride_SC_Eat& from);

  inline Ride_SC_Eat& operator=(const Ride_SC_Eat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_Eat& default_instance();

  void Swap(Ride_SC_Eat* other);

  // implements Message ----------------------------------------------

  Ride_SC_Eat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_Eat& from);
  void MergeFrom(const Ride_SC_Eat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_Eat)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_Eat* default_instance_;
};
// -------------------------------------------------------------------

class Ride_CS_SkillOpen : public ::google::protobuf::Message {
 public:
  Ride_CS_SkillOpen();
  virtual ~Ride_CS_SkillOpen();

  Ride_CS_SkillOpen(const Ride_CS_SkillOpen& from);

  inline Ride_CS_SkillOpen& operator=(const Ride_CS_SkillOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_CS_SkillOpen& default_instance();

  void Swap(Ride_CS_SkillOpen* other);

  // implements Message ----------------------------------------------

  Ride_CS_SkillOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_CS_SkillOpen& from);
  void MergeFrom(const Ride_CS_SkillOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bookItemId = 1;
  inline bool has_bookitemid() const;
  inline void clear_bookitemid();
  static const int kBookItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 bookitemid() const;
  inline void set_bookitemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_CS_SkillOpen)
 private:
  inline void set_has_bookitemid();
  inline void clear_has_bookitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bookitemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_CS_SkillOpen* default_instance_;
};
// -------------------------------------------------------------------

class Ride_SC_SkillOpen : public ::google::protobuf::Message {
 public:
  Ride_SC_SkillOpen();
  virtual ~Ride_SC_SkillOpen();

  Ride_SC_SkillOpen(const Ride_SC_SkillOpen& from);

  inline Ride_SC_SkillOpen& operator=(const Ride_SC_SkillOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ride_SC_SkillOpen& default_instance();

  void Swap(Ride_SC_SkillOpen* other);

  // implements Message ----------------------------------------------

  Ride_SC_SkillOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ride_SC_SkillOpen& from);
  void MergeFrom(const Ride_SC_SkillOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Ride_SC_SkillOpen)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ride_2eproto();
  friend void protobuf_AssignDesc_ride_2eproto();
  friend void protobuf_ShutdownFile_ride_2eproto();

  void InitAsDefaultInstance();
  static Ride_SC_SkillOpen* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoRideEquipCell

// required uint32 equipid = 1;
inline bool ProtoRideEquipCell::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRideEquipCell::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRideEquipCell::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRideEquipCell::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 ProtoRideEquipCell::equipid() const {
  return equipid_;
}
inline void ProtoRideEquipCell::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
}

// required bool isOpen = 2;
inline bool ProtoRideEquipCell::has_isopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRideEquipCell::set_has_isopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRideEquipCell::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRideEquipCell::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool ProtoRideEquipCell::isopen() const {
  return isopen_;
}
inline void ProtoRideEquipCell::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// ProtoRideAllCellInfo

// optional int32 nID = 1;
inline bool ProtoRideAllCellInfo::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRideAllCellInfo::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRideAllCellInfo::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRideAllCellInfo::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 ProtoRideAllCellInfo::nid() const {
  return nid_;
}
inline void ProtoRideAllCellInfo::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
}

// optional int32 nLucky = 2;
inline bool ProtoRideAllCellInfo::has_nlucky() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRideAllCellInfo::set_has_nlucky() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRideAllCellInfo::clear_has_nlucky() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRideAllCellInfo::clear_nlucky() {
  nlucky_ = 0;
  clear_has_nlucky();
}
inline ::google::protobuf::int32 ProtoRideAllCellInfo::nlucky() const {
  return nlucky_;
}
inline void ProtoRideAllCellInfo::set_nlucky(::google::protobuf::int32 value) {
  set_has_nlucky();
  nlucky_ = value;
}

// repeated int32 nSkill = 3;
inline int ProtoRideAllCellInfo::nskill_size() const {
  return nskill_.size();
}
inline void ProtoRideAllCellInfo::clear_nskill() {
  nskill_.Clear();
}
inline ::google::protobuf::int32 ProtoRideAllCellInfo::nskill(int index) const {
  return nskill_.Get(index);
}
inline void ProtoRideAllCellInfo::set_nskill(int index, ::google::protobuf::int32 value) {
  nskill_.Set(index, value);
}
inline void ProtoRideAllCellInfo::add_nskill(::google::protobuf::int32 value) {
  nskill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoRideAllCellInfo::nskill() const {
  return nskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoRideAllCellInfo::mutable_nskill() {
  return &nskill_;
}

// repeated .proto.message.ProtoRideEquipCell equips = 4;
inline int ProtoRideAllCellInfo::equips_size() const {
  return equips_.size();
}
inline void ProtoRideAllCellInfo::clear_equips() {
  equips_.Clear();
}
inline const ::proto::message::ProtoRideEquipCell& ProtoRideAllCellInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::proto::message::ProtoRideEquipCell* ProtoRideAllCellInfo::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::proto::message::ProtoRideEquipCell* ProtoRideAllCellInfo::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >&
ProtoRideAllCellInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >*
ProtoRideAllCellInfo::mutable_equips() {
  return &equips_;
}

// repeated .proto.message.Equip rideequipgird_list = 5;
inline int ProtoRideAllCellInfo::rideequipgird_list_size() const {
  return rideequipgird_list_.size();
}
inline void ProtoRideAllCellInfo::clear_rideequipgird_list() {
  rideequipgird_list_.Clear();
}
inline const ::proto::message::Equip& ProtoRideAllCellInfo::rideequipgird_list(int index) const {
  return rideequipgird_list_.Get(index);
}
inline ::proto::message::Equip* ProtoRideAllCellInfo::mutable_rideequipgird_list(int index) {
  return rideequipgird_list_.Mutable(index);
}
inline ::proto::message::Equip* ProtoRideAllCellInfo::add_rideequipgird_list() {
  return rideequipgird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
ProtoRideAllCellInfo::rideequipgird_list() const {
  return rideequipgird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
ProtoRideAllCellInfo::mutable_rideequipgird_list() {
  return &rideequipgird_list_;
}

// optional uint32 eatFoodId = 6;
inline bool ProtoRideAllCellInfo::has_eatfoodid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoRideAllCellInfo::set_has_eatfoodid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoRideAllCellInfo::clear_has_eatfoodid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoRideAllCellInfo::clear_eatfoodid() {
  eatfoodid_ = 0u;
  clear_has_eatfoodid();
}
inline ::google::protobuf::uint32 ProtoRideAllCellInfo::eatfoodid() const {
  return eatfoodid_;
}
inline void ProtoRideAllCellInfo::set_eatfoodid(::google::protobuf::uint32 value) {
  set_has_eatfoodid();
  eatfoodid_ = value;
}

// optional uint32 eatFoodNum = 7;
inline bool ProtoRideAllCellInfo::has_eatfoodnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoRideAllCellInfo::set_has_eatfoodnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoRideAllCellInfo::clear_has_eatfoodnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoRideAllCellInfo::clear_eatfoodnum() {
  eatfoodnum_ = 0u;
  clear_has_eatfoodnum();
}
inline ::google::protobuf::uint32 ProtoRideAllCellInfo::eatfoodnum() const {
  return eatfoodnum_;
}
inline void ProtoRideAllCellInfo::set_eatfoodnum(::google::protobuf::uint32 value) {
  set_has_eatfoodnum();
  eatfoodnum_ = value;
}

// repeated uint32 skillbooks = 8;
inline int ProtoRideAllCellInfo::skillbooks_size() const {
  return skillbooks_.size();
}
inline void ProtoRideAllCellInfo::clear_skillbooks() {
  skillbooks_.Clear();
}
inline ::google::protobuf::uint32 ProtoRideAllCellInfo::skillbooks(int index) const {
  return skillbooks_.Get(index);
}
inline void ProtoRideAllCellInfo::set_skillbooks(int index, ::google::protobuf::uint32 value) {
  skillbooks_.Set(index, value);
}
inline void ProtoRideAllCellInfo::add_skillbooks(::google::protobuf::uint32 value) {
  skillbooks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoRideAllCellInfo::skillbooks() const {
  return skillbooks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoRideAllCellInfo::mutable_skillbooks() {
  return &skillbooks_;
}

// -------------------------------------------------------------------

// Ride_CS_GetRideInfo

// -------------------------------------------------------------------

// Ride_SC_GetRideInfo

// required int32 nID = 1;
inline bool Ride_SC_GetRideInfo::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_GetRideInfo::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_GetRideInfo::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_GetRideInfo::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 Ride_SC_GetRideInfo::nid() const {
  return nid_;
}
inline void Ride_SC_GetRideInfo::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 nLucky = 2;
inline bool Ride_SC_GetRideInfo::has_nlucky() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ride_SC_GetRideInfo::set_has_nlucky() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ride_SC_GetRideInfo::clear_has_nlucky() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ride_SC_GetRideInfo::clear_nlucky() {
  nlucky_ = 0;
  clear_has_nlucky();
}
inline ::google::protobuf::int32 Ride_SC_GetRideInfo::nlucky() const {
  return nlucky_;
}
inline void Ride_SC_GetRideInfo::set_nlucky(::google::protobuf::int32 value) {
  set_has_nlucky();
  nlucky_ = value;
}

// repeated int32 nSkill = 3;
inline int Ride_SC_GetRideInfo::nskill_size() const {
  return nskill_.size();
}
inline void Ride_SC_GetRideInfo::clear_nskill() {
  nskill_.Clear();
}
inline ::google::protobuf::int32 Ride_SC_GetRideInfo::nskill(int index) const {
  return nskill_.Get(index);
}
inline void Ride_SC_GetRideInfo::set_nskill(int index, ::google::protobuf::int32 value) {
  nskill_.Set(index, value);
}
inline void Ride_SC_GetRideInfo::add_nskill(::google::protobuf::int32 value) {
  nskill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Ride_SC_GetRideInfo::nskill() const {
  return nskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Ride_SC_GetRideInfo::mutable_nskill() {
  return &nskill_;
}

// repeated .proto.message.ProtoRideEquipCell equips = 4;
inline int Ride_SC_GetRideInfo::equips_size() const {
  return equips_.size();
}
inline void Ride_SC_GetRideInfo::clear_equips() {
  equips_.Clear();
}
inline const ::proto::message::ProtoRideEquipCell& Ride_SC_GetRideInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::proto::message::ProtoRideEquipCell* Ride_SC_GetRideInfo::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::proto::message::ProtoRideEquipCell* Ride_SC_GetRideInfo::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >&
Ride_SC_GetRideInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRideEquipCell >*
Ride_SC_GetRideInfo::mutable_equips() {
  return &equips_;
}

// repeated .proto.message.Equip rideequipgird_list = 5;
inline int Ride_SC_GetRideInfo::rideequipgird_list_size() const {
  return rideequipgird_list_.size();
}
inline void Ride_SC_GetRideInfo::clear_rideequipgird_list() {
  rideequipgird_list_.Clear();
}
inline const ::proto::message::Equip& Ride_SC_GetRideInfo::rideequipgird_list(int index) const {
  return rideequipgird_list_.Get(index);
}
inline ::proto::message::Equip* Ride_SC_GetRideInfo::mutable_rideequipgird_list(int index) {
  return rideequipgird_list_.Mutable(index);
}
inline ::proto::message::Equip* Ride_SC_GetRideInfo::add_rideequipgird_list() {
  return rideequipgird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Ride_SC_GetRideInfo::rideequipgird_list() const {
  return rideequipgird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Ride_SC_GetRideInfo::mutable_rideequipgird_list() {
  return &rideequipgird_list_;
}

// optional uint32 eatFoodId = 6;
inline bool Ride_SC_GetRideInfo::has_eatfoodid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Ride_SC_GetRideInfo::set_has_eatfoodid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Ride_SC_GetRideInfo::clear_has_eatfoodid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Ride_SC_GetRideInfo::clear_eatfoodid() {
  eatfoodid_ = 0u;
  clear_has_eatfoodid();
}
inline ::google::protobuf::uint32 Ride_SC_GetRideInfo::eatfoodid() const {
  return eatfoodid_;
}
inline void Ride_SC_GetRideInfo::set_eatfoodid(::google::protobuf::uint32 value) {
  set_has_eatfoodid();
  eatfoodid_ = value;
}

// optional uint32 eatFoodNum = 7;
inline bool Ride_SC_GetRideInfo::has_eatfoodnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Ride_SC_GetRideInfo::set_has_eatfoodnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Ride_SC_GetRideInfo::clear_has_eatfoodnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Ride_SC_GetRideInfo::clear_eatfoodnum() {
  eatfoodnum_ = 0u;
  clear_has_eatfoodnum();
}
inline ::google::protobuf::uint32 Ride_SC_GetRideInfo::eatfoodnum() const {
  return eatfoodnum_;
}
inline void Ride_SC_GetRideInfo::set_eatfoodnum(::google::protobuf::uint32 value) {
  set_has_eatfoodnum();
  eatfoodnum_ = value;
}

// repeated uint32 skillbooks = 8;
inline int Ride_SC_GetRideInfo::skillbooks_size() const {
  return skillbooks_.size();
}
inline void Ride_SC_GetRideInfo::clear_skillbooks() {
  skillbooks_.Clear();
}
inline ::google::protobuf::uint32 Ride_SC_GetRideInfo::skillbooks(int index) const {
  return skillbooks_.Get(index);
}
inline void Ride_SC_GetRideInfo::set_skillbooks(int index, ::google::protobuf::uint32 value) {
  skillbooks_.Set(index, value);
}
inline void Ride_SC_GetRideInfo::add_skillbooks(::google::protobuf::uint32 value) {
  skillbooks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Ride_SC_GetRideInfo::skillbooks() const {
  return skillbooks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Ride_SC_GetRideInfo::mutable_skillbooks() {
  return &skillbooks_;
}

// -------------------------------------------------------------------

// Ride_CS_Upgrade

// -------------------------------------------------------------------

// Ride_SC_Upgrade

// required int32 ret = 1;
inline bool Ride_SC_Upgrade::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_Upgrade::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_Upgrade::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_Upgrade::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Ride_SC_Upgrade::ret() const {
  return ret_;
}
inline void Ride_SC_Upgrade::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Ride_CS_UpgSkill

// required int32 skillid = 1;
inline bool Ride_CS_UpgSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_CS_UpgSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_CS_UpgSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_CS_UpgSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Ride_CS_UpgSkill::skillid() const {
  return skillid_;
}
inline void Ride_CS_UpgSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// Ride_SC_UpgSkill

// required int32 ret = 1;
inline bool Ride_SC_UpgSkill::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_UpgSkill::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_UpgSkill::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_UpgSkill::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Ride_SC_UpgSkill::ret() const {
  return ret_;
}
inline void Ride_SC_UpgSkill::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Ride_CS_OpenEquipCell

// required int32 cellid = 1;
inline bool Ride_CS_OpenEquipCell::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_CS_OpenEquipCell::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_CS_OpenEquipCell::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_CS_OpenEquipCell::clear_cellid() {
  cellid_ = 0;
  clear_has_cellid();
}
inline ::google::protobuf::int32 Ride_CS_OpenEquipCell::cellid() const {
  return cellid_;
}
inline void Ride_CS_OpenEquipCell::set_cellid(::google::protobuf::int32 value) {
  set_has_cellid();
  cellid_ = value;
}

// -------------------------------------------------------------------

// Ride_SC_OpenEquipCell

// required int32 ret = 1;
inline bool Ride_SC_OpenEquipCell::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_OpenEquipCell::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_OpenEquipCell::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_OpenEquipCell::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Ride_SC_OpenEquipCell::ret() const {
  return ret_;
}
inline void Ride_SC_OpenEquipCell::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Ride_CS_PutOnRideEquip

// optional uint64 uuid = 1;
inline bool Ride_CS_PutOnRideEquip::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_CS_PutOnRideEquip::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_CS_PutOnRideEquip::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_CS_PutOnRideEquip::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Ride_CS_PutOnRideEquip::uuid() const {
  return uuid_;
}
inline void Ride_CS_PutOnRideEquip::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Ride_SC_PutOnRideEquip

// optional int32 result = 1;
inline bool Ride_SC_PutOnRideEquip::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_PutOnRideEquip::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_PutOnRideEquip::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_PutOnRideEquip::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Ride_SC_PutOnRideEquip::result() const {
  return result_;
}
inline void Ride_SC_PutOnRideEquip::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.Equip equip_list = 2;
inline int Ride_SC_PutOnRideEquip::equip_list_size() const {
  return equip_list_.size();
}
inline void Ride_SC_PutOnRideEquip::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::message::Equip& Ride_SC_PutOnRideEquip::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline ::proto::message::Equip* Ride_SC_PutOnRideEquip::mutable_equip_list(int index) {
  return equip_list_.Mutable(index);
}
inline ::proto::message::Equip* Ride_SC_PutOnRideEquip::add_equip_list() {
  return equip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Ride_SC_PutOnRideEquip::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Ride_SC_PutOnRideEquip::mutable_equip_list() {
  return &equip_list_;
}

// -------------------------------------------------------------------

// Ride_CS_GetOffRideEquip

// optional uint64 uuid = 1;
inline bool Ride_CS_GetOffRideEquip::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_CS_GetOffRideEquip::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_CS_GetOffRideEquip::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_CS_GetOffRideEquip::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Ride_CS_GetOffRideEquip::uuid() const {
  return uuid_;
}
inline void Ride_CS_GetOffRideEquip::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Ride_SC_GetOffRideEquip

// optional int32 result = 1;
inline bool Ride_SC_GetOffRideEquip::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_GetOffRideEquip::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_GetOffRideEquip::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_GetOffRideEquip::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Ride_SC_GetOffRideEquip::result() const {
  return result_;
}
inline void Ride_SC_GetOffRideEquip::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.Equip getoff_equip = 2;
inline bool Ride_SC_GetOffRideEquip::has_getoff_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ride_SC_GetOffRideEquip::set_has_getoff_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ride_SC_GetOffRideEquip::clear_has_getoff_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ride_SC_GetOffRideEquip::clear_getoff_equip() {
  if (getoff_equip_ != NULL) getoff_equip_->::proto::message::Equip::Clear();
  clear_has_getoff_equip();
}
inline const ::proto::message::Equip& Ride_SC_GetOffRideEquip::getoff_equip() const {
  return getoff_equip_ != NULL ? *getoff_equip_ : *default_instance_->getoff_equip_;
}
inline ::proto::message::Equip* Ride_SC_GetOffRideEquip::mutable_getoff_equip() {
  set_has_getoff_equip();
  if (getoff_equip_ == NULL) getoff_equip_ = new ::proto::message::Equip;
  return getoff_equip_;
}
inline ::proto::message::Equip* Ride_SC_GetOffRideEquip::release_getoff_equip() {
  clear_has_getoff_equip();
  ::proto::message::Equip* temp = getoff_equip_;
  getoff_equip_ = NULL;
  return temp;
}
inline void Ride_SC_GetOffRideEquip::set_allocated_getoff_equip(::proto::message::Equip* getoff_equip) {
  delete getoff_equip_;
  getoff_equip_ = getoff_equip;
  if (getoff_equip) {
    set_has_getoff_equip();
  } else {
    clear_has_getoff_equip();
  }
}

// -------------------------------------------------------------------

// Ride_CS_RideStatus

// required bool status = 1;
inline bool Ride_CS_RideStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_CS_RideStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_CS_RideStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_CS_RideStatus::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Ride_CS_RideStatus::status() const {
  return status_;
}
inline void Ride_CS_RideStatus::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Ride_SC_RideStatus

// required int32 ret = 1;
inline bool Ride_SC_RideStatus::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_RideStatus::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_RideStatus::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_RideStatus::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Ride_SC_RideStatus::ret() const {
  return ret_;
}
inline void Ride_SC_RideStatus::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required bool status = 2;
inline bool Ride_SC_RideStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ride_SC_RideStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ride_SC_RideStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ride_SC_RideStatus::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Ride_SC_RideStatus::status() const {
  return status_;
}
inline void Ride_SC_RideStatus::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Ride_CS_Eat

// -------------------------------------------------------------------

// Ride_SC_Eat

// optional int32 result = 1;
inline bool Ride_SC_Eat::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_Eat::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_Eat::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_Eat::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Ride_SC_Eat::result() const {
  return result_;
}
inline void Ride_SC_Eat::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Ride_CS_SkillOpen

// optional uint32 bookItemId = 1;
inline bool Ride_CS_SkillOpen::has_bookitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_CS_SkillOpen::set_has_bookitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_CS_SkillOpen::clear_has_bookitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_CS_SkillOpen::clear_bookitemid() {
  bookitemid_ = 0u;
  clear_has_bookitemid();
}
inline ::google::protobuf::uint32 Ride_CS_SkillOpen::bookitemid() const {
  return bookitemid_;
}
inline void Ride_CS_SkillOpen::set_bookitemid(::google::protobuf::uint32 value) {
  set_has_bookitemid();
  bookitemid_ = value;
}

// -------------------------------------------------------------------

// Ride_SC_SkillOpen

// optional int32 result = 1;
inline bool Ride_SC_SkillOpen::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ride_SC_SkillOpen::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ride_SC_SkillOpen::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ride_SC_SkillOpen::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Ride_SC_SkillOpen::result() const {
  return result_;
}
inline void Ride_SC_SkillOpen::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ride_2eproto__INCLUDED
