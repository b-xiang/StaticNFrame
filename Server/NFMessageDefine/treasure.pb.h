// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasure.proto

#ifndef PROTOBUF_treasure_2eproto__INCLUDED
#define PROTOBUF_treasure_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_treasure_2eproto();
void protobuf_AssignDesc_treasure_2eproto();
void protobuf_ShutdownFile_treasure_2eproto();

class Treasure_CS_Synthesis;
class Treasure_SC_Synthesis;
class Treasure_CS_UseTreasure;
class Treasure_SC_UseTreasure;
class Treasure_SC_UpdateEvent;

// ===================================================================

class Treasure_CS_Synthesis : public ::google::protobuf::Message {
 public:
  Treasure_CS_Synthesis();
  virtual ~Treasure_CS_Synthesis();

  Treasure_CS_Synthesis(const Treasure_CS_Synthesis& from);

  inline Treasure_CS_Synthesis& operator=(const Treasure_CS_Synthesis& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure_CS_Synthesis& default_instance();

  void Swap(Treasure_CS_Synthesis* other);

  // implements Message ----------------------------------------------

  Treasure_CS_Synthesis* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure_CS_Synthesis& from);
  void MergeFrom(const Treasure_CS_Synthesis& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 treasure_map_id = 1;
  inline bool has_treasure_map_id() const;
  inline void clear_treasure_map_id();
  static const int kTreasureMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 treasure_map_id() const;
  inline void set_treasure_map_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Treasure_CS_Synthesis)
 private:
  inline void set_has_treasure_map_id();
  inline void clear_has_treasure_map_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 treasure_map_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Treasure_CS_Synthesis* default_instance_;
};
// -------------------------------------------------------------------

class Treasure_SC_Synthesis : public ::google::protobuf::Message {
 public:
  Treasure_SC_Synthesis();
  virtual ~Treasure_SC_Synthesis();

  Treasure_SC_Synthesis(const Treasure_SC_Synthesis& from);

  inline Treasure_SC_Synthesis& operator=(const Treasure_SC_Synthesis& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure_SC_Synthesis& default_instance();

  void Swap(Treasure_SC_Synthesis* other);

  // implements Message ----------------------------------------------

  Treasure_SC_Synthesis* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure_SC_Synthesis& from);
  void MergeFrom(const Treasure_SC_Synthesis& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 treasure_map_id = 2;
  inline bool has_treasure_map_id() const;
  inline void clear_treasure_map_id();
  static const int kTreasureMapIdFieldNumber = 2;
  inline ::google::protobuf::int32 treasure_map_id() const;
  inline void set_treasure_map_id(::google::protobuf::int32 value);

  // optional int32 treasure_id = 3;
  inline bool has_treasure_id() const;
  inline void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 3;
  inline ::google::protobuf::int32 treasure_id() const;
  inline void set_treasure_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Treasure_SC_Synthesis)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_treasure_map_id();
  inline void clear_has_treasure_map_id();
  inline void set_has_treasure_id();
  inline void clear_has_treasure_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 treasure_map_id_;
  ::google::protobuf::int32 treasure_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Treasure_SC_Synthesis* default_instance_;
};
// -------------------------------------------------------------------

class Treasure_CS_UseTreasure : public ::google::protobuf::Message {
 public:
  Treasure_CS_UseTreasure();
  virtual ~Treasure_CS_UseTreasure();

  Treasure_CS_UseTreasure(const Treasure_CS_UseTreasure& from);

  inline Treasure_CS_UseTreasure& operator=(const Treasure_CS_UseTreasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure_CS_UseTreasure& default_instance();

  void Swap(Treasure_CS_UseTreasure* other);

  // implements Message ----------------------------------------------

  Treasure_CS_UseTreasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure_CS_UseTreasure& from);
  void MergeFrom(const Treasure_CS_UseTreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Treasure_CS_UseTreasure)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Treasure_CS_UseTreasure* default_instance_;
};
// -------------------------------------------------------------------

class Treasure_SC_UseTreasure : public ::google::protobuf::Message {
 public:
  Treasure_SC_UseTreasure();
  virtual ~Treasure_SC_UseTreasure();

  Treasure_SC_UseTreasure(const Treasure_SC_UseTreasure& from);

  inline Treasure_SC_UseTreasure& operator=(const Treasure_SC_UseTreasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure_SC_UseTreasure& default_instance();

  void Swap(Treasure_SC_UseTreasure* other);

  // implements Message ----------------------------------------------

  Treasure_SC_UseTreasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure_SC_UseTreasure& from);
  void MergeFrom(const Treasure_SC_UseTreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Treasure_SC_UseTreasure)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Treasure_SC_UseTreasure* default_instance_;
};
// -------------------------------------------------------------------

class Treasure_SC_UpdateEvent : public ::google::protobuf::Message {
 public:
  Treasure_SC_UpdateEvent();
  virtual ~Treasure_SC_UpdateEvent();

  Treasure_SC_UpdateEvent(const Treasure_SC_UpdateEvent& from);

  inline Treasure_SC_UpdateEvent& operator=(const Treasure_SC_UpdateEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure_SC_UpdateEvent& default_instance();

  void Swap(Treasure_SC_UpdateEvent* other);

  // implements Message ----------------------------------------------

  Treasure_SC_UpdateEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure_SC_UpdateEvent& from);
  void MergeFrom(const Treasure_SC_UpdateEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 event_type = 1;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Treasure_SC_UpdateEvent)
 private:
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Treasure_SC_UpdateEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// Treasure_CS_Synthesis

// optional int32 treasure_map_id = 1;
inline bool Treasure_CS_Synthesis::has_treasure_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Treasure_CS_Synthesis::set_has_treasure_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Treasure_CS_Synthesis::clear_has_treasure_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Treasure_CS_Synthesis::clear_treasure_map_id() {
  treasure_map_id_ = 0;
  clear_has_treasure_map_id();
}
inline ::google::protobuf::int32 Treasure_CS_Synthesis::treasure_map_id() const {
  return treasure_map_id_;
}
inline void Treasure_CS_Synthesis::set_treasure_map_id(::google::protobuf::int32 value) {
  set_has_treasure_map_id();
  treasure_map_id_ = value;
}

// -------------------------------------------------------------------

// Treasure_SC_Synthesis

// optional int32 result = 1;
inline bool Treasure_SC_Synthesis::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Treasure_SC_Synthesis::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Treasure_SC_Synthesis::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Treasure_SC_Synthesis::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Treasure_SC_Synthesis::result() const {
  return result_;
}
inline void Treasure_SC_Synthesis::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 treasure_map_id = 2;
inline bool Treasure_SC_Synthesis::has_treasure_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Treasure_SC_Synthesis::set_has_treasure_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Treasure_SC_Synthesis::clear_has_treasure_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Treasure_SC_Synthesis::clear_treasure_map_id() {
  treasure_map_id_ = 0;
  clear_has_treasure_map_id();
}
inline ::google::protobuf::int32 Treasure_SC_Synthesis::treasure_map_id() const {
  return treasure_map_id_;
}
inline void Treasure_SC_Synthesis::set_treasure_map_id(::google::protobuf::int32 value) {
  set_has_treasure_map_id();
  treasure_map_id_ = value;
}

// optional int32 treasure_id = 3;
inline bool Treasure_SC_Synthesis::has_treasure_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Treasure_SC_Synthesis::set_has_treasure_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Treasure_SC_Synthesis::clear_has_treasure_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Treasure_SC_Synthesis::clear_treasure_id() {
  treasure_id_ = 0;
  clear_has_treasure_id();
}
inline ::google::protobuf::int32 Treasure_SC_Synthesis::treasure_id() const {
  return treasure_id_;
}
inline void Treasure_SC_Synthesis::set_treasure_id(::google::protobuf::int32 value) {
  set_has_treasure_id();
  treasure_id_ = value;
}

// -------------------------------------------------------------------

// Treasure_CS_UseTreasure

// optional uint64 uuid = 1;
inline bool Treasure_CS_UseTreasure::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Treasure_CS_UseTreasure::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Treasure_CS_UseTreasure::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Treasure_CS_UseTreasure::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Treasure_CS_UseTreasure::uuid() const {
  return uuid_;
}
inline void Treasure_CS_UseTreasure::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Treasure_SC_UseTreasure

// optional int32 result = 1;
inline bool Treasure_SC_UseTreasure::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Treasure_SC_UseTreasure::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Treasure_SC_UseTreasure::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Treasure_SC_UseTreasure::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Treasure_SC_UseTreasure::result() const {
  return result_;
}
inline void Treasure_SC_UseTreasure::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 uuid = 2;
inline bool Treasure_SC_UseTreasure::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Treasure_SC_UseTreasure::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Treasure_SC_UseTreasure::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Treasure_SC_UseTreasure::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Treasure_SC_UseTreasure::uuid() const {
  return uuid_;
}
inline void Treasure_SC_UseTreasure::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Treasure_SC_UpdateEvent

// optional int32 event_type = 1;
inline bool Treasure_SC_UpdateEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Treasure_SC_UpdateEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Treasure_SC_UpdateEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Treasure_SC_UpdateEvent::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 Treasure_SC_UpdateEvent::event_type() const {
  return event_type_;
}
inline void Treasure_SC_UpdateEvent::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
}

// optional int32 result = 2;
inline bool Treasure_SC_UpdateEvent::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Treasure_SC_UpdateEvent::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Treasure_SC_UpdateEvent::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Treasure_SC_UpdateEvent::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Treasure_SC_UpdateEvent::result() const {
  return result_;
}
inline void Treasure_SC_UpdateEvent::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_treasure_2eproto__INCLUDED
