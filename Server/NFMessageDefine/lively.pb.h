// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lively.proto

#ifndef PROTOBUF_lively_2eproto__INCLUDED
#define PROTOBUF_lively_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "item.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_lively_2eproto();
void protobuf_AssignDesc_lively_2eproto();
void protobuf_ShutdownFile_lively_2eproto();

class LivelyUpInfo;
class Lively_CS_GetInfo;
class Lively_CS_ReqAward;
class LivelyInfo;
class Lively_SC_GetInfo;
class Lively_SC_ReqAward;
class PlayerLivelyInfo;
class Lively_CS_ReqLivelyUpData;
class Lively_SC_AckLivelyUpData;
class Lively_CS_ReqUpgradeLively;
class Lively_SC_AckUpgradeLively;

// ===================================================================

class LivelyUpInfo : public ::google::protobuf::Message {
 public:
  LivelyUpInfo();
  virtual ~LivelyUpInfo();

  LivelyUpInfo(const LivelyUpInfo& from);

  inline LivelyUpInfo& operator=(const LivelyUpInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LivelyUpInfo& default_instance();

  void Swap(LivelyUpInfo* other);

  // implements Message ----------------------------------------------

  LivelyUpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LivelyUpInfo& from);
  void MergeFrom(const LivelyUpInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 livelyupid = 1;
  inline bool has_livelyupid() const;
  inline void clear_livelyupid();
  static const int kLivelyupidFieldNumber = 1;
  inline ::google::protobuf::uint32 livelyupid() const;
  inline void set_livelyupid(::google::protobuf::uint32 value);

  // optional uint32 liveupexp = 2;
  inline bool has_liveupexp() const;
  inline void clear_liveupexp();
  static const int kLiveupexpFieldNumber = 2;
  inline ::google::protobuf::uint32 liveupexp() const;
  inline void set_liveupexp(::google::protobuf::uint32 value);

  // optional uint32 dayamass = 3;
  inline bool has_dayamass() const;
  inline void clear_dayamass();
  static const int kDayamassFieldNumber = 3;
  inline ::google::protobuf::uint32 dayamass() const;
  inline void set_dayamass(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.LivelyUpInfo)
 private:
  inline void set_has_livelyupid();
  inline void clear_has_livelyupid();
  inline void set_has_liveupexp();
  inline void clear_has_liveupexp();
  inline void set_has_dayamass();
  inline void clear_has_dayamass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 livelyupid_;
  ::google::protobuf::uint32 liveupexp_;
  ::google::protobuf::uint32 dayamass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static LivelyUpInfo* default_instance_;
};
// -------------------------------------------------------------------

class Lively_CS_GetInfo : public ::google::protobuf::Message {
 public:
  Lively_CS_GetInfo();
  virtual ~Lively_CS_GetInfo();

  Lively_CS_GetInfo(const Lively_CS_GetInfo& from);

  inline Lively_CS_GetInfo& operator=(const Lively_CS_GetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_CS_GetInfo& default_instance();

  void Swap(Lively_CS_GetInfo* other);

  // implements Message ----------------------------------------------

  Lively_CS_GetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_CS_GetInfo& from);
  void MergeFrom(const Lively_CS_GetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nType = 1;
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Lively_CS_GetInfo)
 private:
  inline void set_has_ntype();
  inline void clear_has_ntype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ntype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_CS_GetInfo* default_instance_;
};
// -------------------------------------------------------------------

class Lively_CS_ReqAward : public ::google::protobuf::Message {
 public:
  Lively_CS_ReqAward();
  virtual ~Lively_CS_ReqAward();

  Lively_CS_ReqAward(const Lively_CS_ReqAward& from);

  inline Lively_CS_ReqAward& operator=(const Lively_CS_ReqAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_CS_ReqAward& default_instance();

  void Swap(Lively_CS_ReqAward* other);

  // implements Message ----------------------------------------------

  Lively_CS_ReqAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_CS_ReqAward& from);
  void MergeFrom(const Lively_CS_ReqAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nNumber = 1;
  inline bool has_nnumber() const;
  inline void clear_nnumber();
  static const int kNNumberFieldNumber = 1;
  inline ::google::protobuf::int32 nnumber() const;
  inline void set_nnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Lively_CS_ReqAward)
 private:
  inline void set_has_nnumber();
  inline void clear_has_nnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_CS_ReqAward* default_instance_;
};
// -------------------------------------------------------------------

class LivelyInfo : public ::google::protobuf::Message {
 public:
  LivelyInfo();
  virtual ~LivelyInfo();

  LivelyInfo(const LivelyInfo& from);

  inline LivelyInfo& operator=(const LivelyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LivelyInfo& default_instance();

  void Swap(LivelyInfo* other);

  // implements Message ----------------------------------------------

  LivelyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LivelyInfo& from);
  void MergeFrom(const LivelyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nID = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIDFieldNumber = 1;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);

  // required int32 nFinishTimes = 2;
  inline bool has_nfinishtimes() const;
  inline void clear_nfinishtimes();
  static const int kNFinishTimesFieldNumber = 2;
  inline ::google::protobuf::int32 nfinishtimes() const;
  inline void set_nfinishtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.LivelyInfo)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_nfinishtimes();
  inline void clear_has_nfinishtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nid_;
  ::google::protobuf::int32 nfinishtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static LivelyInfo* default_instance_;
};
// -------------------------------------------------------------------

class Lively_SC_GetInfo : public ::google::protobuf::Message {
 public:
  Lively_SC_GetInfo();
  virtual ~Lively_SC_GetInfo();

  Lively_SC_GetInfo(const Lively_SC_GetInfo& from);

  inline Lively_SC_GetInfo& operator=(const Lively_SC_GetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_SC_GetInfo& default_instance();

  void Swap(Lively_SC_GetInfo* other);

  // implements Message ----------------------------------------------

  Lively_SC_GetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_SC_GetInfo& from);
  void MergeFrom(const Lively_SC_GetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.LivelyInfo lively_info = 1;
  inline int lively_info_size() const;
  inline void clear_lively_info();
  static const int kLivelyInfoFieldNumber = 1;
  inline const ::proto::message::LivelyInfo& lively_info(int index) const;
  inline ::proto::message::LivelyInfo* mutable_lively_info(int index);
  inline ::proto::message::LivelyInfo* add_lively_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >&
      lively_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >*
      mutable_lively_info();

  // required int32 multipleID = 2;
  inline bool has_multipleid() const;
  inline void clear_multipleid();
  static const int kMultipleIDFieldNumber = 2;
  inline ::google::protobuf::int32 multipleid() const;
  inline void set_multipleid(::google::protobuf::int32 value);

  // required int32 multipleValue = 3;
  inline bool has_multiplevalue() const;
  inline void clear_multiplevalue();
  static const int kMultipleValueFieldNumber = 3;
  inline ::google::protobuf::int32 multiplevalue() const;
  inline void set_multiplevalue(::google::protobuf::int32 value);

  // required int32 sumLively = 4;
  inline bool has_sumlively() const;
  inline void clear_sumlively();
  static const int kSumLivelyFieldNumber = 4;
  inline ::google::protobuf::int32 sumlively() const;
  inline void set_sumlively(::google::protobuf::int32 value);

  // required int32 nFlag = 5;
  inline bool has_nflag() const;
  inline void clear_nflag();
  static const int kNFlagFieldNumber = 5;
  inline ::google::protobuf::int32 nflag() const;
  inline void set_nflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Lively_SC_GetInfo)
 private:
  inline void set_has_multipleid();
  inline void clear_has_multipleid();
  inline void set_has_multiplevalue();
  inline void clear_has_multiplevalue();
  inline void set_has_sumlively();
  inline void clear_has_sumlively();
  inline void set_has_nflag();
  inline void clear_has_nflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo > lively_info_;
  ::google::protobuf::int32 multipleid_;
  ::google::protobuf::int32 multiplevalue_;
  ::google::protobuf::int32 sumlively_;
  ::google::protobuf::int32 nflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_SC_GetInfo* default_instance_;
};
// -------------------------------------------------------------------

class Lively_SC_ReqAward : public ::google::protobuf::Message {
 public:
  Lively_SC_ReqAward();
  virtual ~Lively_SC_ReqAward();

  Lively_SC_ReqAward(const Lively_SC_ReqAward& from);

  inline Lively_SC_ReqAward& operator=(const Lively_SC_ReqAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_SC_ReqAward& default_instance();

  void Swap(Lively_SC_ReqAward* other);

  // implements Message ----------------------------------------------

  Lively_SC_ReqAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_SC_ReqAward& from);
  void MergeFrom(const Lively_SC_ReqAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.DropItemNum items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::proto::message::DropItemNum& items(int index) const;
  inline ::proto::message::DropItemNum* mutable_items(int index);
  inline ::proto::message::DropItemNum* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto.message.Lively_SC_ReqAward)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum > items_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_SC_ReqAward* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLivelyInfo : public ::google::protobuf::Message {
 public:
  PlayerLivelyInfo();
  virtual ~PlayerLivelyInfo();

  PlayerLivelyInfo(const PlayerLivelyInfo& from);

  inline PlayerLivelyInfo& operator=(const PlayerLivelyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLivelyInfo& default_instance();

  void Swap(PlayerLivelyInfo* other);

  // implements Message ----------------------------------------------

  PlayerLivelyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLivelyInfo& from);
  void MergeFrom(const PlayerLivelyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sumLively = 1;
  inline bool has_sumlively() const;
  inline void clear_sumlively();
  static const int kSumLivelyFieldNumber = 1;
  inline ::google::protobuf::int32 sumlively() const;
  inline void set_sumlively(::google::protobuf::int32 value);

  // repeated .proto.message.LivelyInfo lively_info = 2;
  inline int lively_info_size() const;
  inline void clear_lively_info();
  static const int kLivelyInfoFieldNumber = 2;
  inline const ::proto::message::LivelyInfo& lively_info(int index) const;
  inline ::proto::message::LivelyInfo* mutable_lively_info(int index);
  inline ::proto::message::LivelyInfo* add_lively_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >&
      lively_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >*
      mutable_lively_info();

  // optional int32 nFlag = 3;
  inline bool has_nflag() const;
  inline void clear_nflag();
  static const int kNFlagFieldNumber = 3;
  inline ::google::protobuf::int32 nflag() const;
  inline void set_nflag(::google::protobuf::int32 value);

  // optional int64 resetTime = 4;
  inline bool has_resettime() const;
  inline void clear_resettime();
  static const int kResetTimeFieldNumber = 4;
  inline ::google::protobuf::int64 resettime() const;
  inline void set_resettime(::google::protobuf::int64 value);

  // optional int32 overlimitRecord = 5;
  inline bool has_overlimitrecord() const;
  inline void clear_overlimitrecord();
  static const int kOverlimitRecordFieldNumber = 5;
  inline ::google::protobuf::int32 overlimitrecord() const;
  inline void set_overlimitrecord(::google::protobuf::int32 value);

  // optional int32 overlimitToday = 6;
  inline bool has_overlimittoday() const;
  inline void clear_overlimittoday();
  static const int kOverlimitTodayFieldNumber = 6;
  inline ::google::protobuf::int32 overlimittoday() const;
  inline void set_overlimittoday(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.PlayerLivelyInfo)
 private:
  inline void set_has_sumlively();
  inline void clear_has_sumlively();
  inline void set_has_nflag();
  inline void clear_has_nflag();
  inline void set_has_resettime();
  inline void clear_has_resettime();
  inline void set_has_overlimitrecord();
  inline void clear_has_overlimitrecord();
  inline void set_has_overlimittoday();
  inline void clear_has_overlimittoday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo > lively_info_;
  ::google::protobuf::int32 sumlively_;
  ::google::protobuf::int32 nflag_;
  ::google::protobuf::int64 resettime_;
  ::google::protobuf::int32 overlimitrecord_;
  ::google::protobuf::int32 overlimittoday_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static PlayerLivelyInfo* default_instance_;
};
// -------------------------------------------------------------------

class Lively_CS_ReqLivelyUpData : public ::google::protobuf::Message {
 public:
  Lively_CS_ReqLivelyUpData();
  virtual ~Lively_CS_ReqLivelyUpData();

  Lively_CS_ReqLivelyUpData(const Lively_CS_ReqLivelyUpData& from);

  inline Lively_CS_ReqLivelyUpData& operator=(const Lively_CS_ReqLivelyUpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_CS_ReqLivelyUpData& default_instance();

  void Swap(Lively_CS_ReqLivelyUpData* other);

  // implements Message ----------------------------------------------

  Lively_CS_ReqLivelyUpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_CS_ReqLivelyUpData& from);
  void MergeFrom(const Lively_CS_ReqLivelyUpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Lively_CS_ReqLivelyUpData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_CS_ReqLivelyUpData* default_instance_;
};
// -------------------------------------------------------------------

class Lively_SC_AckLivelyUpData : public ::google::protobuf::Message {
 public:
  Lively_SC_AckLivelyUpData();
  virtual ~Lively_SC_AckLivelyUpData();

  Lively_SC_AckLivelyUpData(const Lively_SC_AckLivelyUpData& from);

  inline Lively_SC_AckLivelyUpData& operator=(const Lively_SC_AckLivelyUpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_SC_AckLivelyUpData& default_instance();

  void Swap(Lively_SC_AckLivelyUpData* other);

  // implements Message ----------------------------------------------

  Lively_SC_AckLivelyUpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_SC_AckLivelyUpData& from);
  void MergeFrom(const Lively_SC_AckLivelyUpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.LivelyUpInfo data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto::message::LivelyUpInfo& data() const;
  inline ::proto::message::LivelyUpInfo* mutable_data();
  inline ::proto::message::LivelyUpInfo* release_data();
  inline void set_allocated_data(::proto::message::LivelyUpInfo* data);

  // @@protoc_insertion_point(class_scope:proto.message.Lively_SC_AckLivelyUpData)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::LivelyUpInfo* data_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_SC_AckLivelyUpData* default_instance_;
};
// -------------------------------------------------------------------

class Lively_CS_ReqUpgradeLively : public ::google::protobuf::Message {
 public:
  Lively_CS_ReqUpgradeLively();
  virtual ~Lively_CS_ReqUpgradeLively();

  Lively_CS_ReqUpgradeLively(const Lively_CS_ReqUpgradeLively& from);

  inline Lively_CS_ReqUpgradeLively& operator=(const Lively_CS_ReqUpgradeLively& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_CS_ReqUpgradeLively& default_instance();

  void Swap(Lively_CS_ReqUpgradeLively* other);

  // implements Message ----------------------------------------------

  Lively_CS_ReqUpgradeLively* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_CS_ReqUpgradeLively& from);
  void MergeFrom(const Lively_CS_ReqUpgradeLively& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Lively_CS_ReqUpgradeLively)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_CS_ReqUpgradeLively* default_instance_;
};
// -------------------------------------------------------------------

class Lively_SC_AckUpgradeLively : public ::google::protobuf::Message {
 public:
  Lively_SC_AckUpgradeLively();
  virtual ~Lively_SC_AckUpgradeLively();

  Lively_SC_AckUpgradeLively(const Lively_SC_AckUpgradeLively& from);

  inline Lively_SC_AckUpgradeLively& operator=(const Lively_SC_AckUpgradeLively& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lively_SC_AckUpgradeLively& default_instance();

  void Swap(Lively_SC_AckUpgradeLively* other);

  // implements Message ----------------------------------------------

  Lively_SC_AckUpgradeLively* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lively_SC_AckUpgradeLively& from);
  void MergeFrom(const Lively_SC_AckUpgradeLively& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Lively_SC_AckUpgradeLively)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_lively_2eproto();
  friend void protobuf_AssignDesc_lively_2eproto();
  friend void protobuf_ShutdownFile_lively_2eproto();

  void InitAsDefaultInstance();
  static Lively_SC_AckUpgradeLively* default_instance_;
};
// ===================================================================


// ===================================================================

// LivelyUpInfo

// optional uint32 livelyupid = 1;
inline bool LivelyUpInfo::has_livelyupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LivelyUpInfo::set_has_livelyupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LivelyUpInfo::clear_has_livelyupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LivelyUpInfo::clear_livelyupid() {
  livelyupid_ = 0u;
  clear_has_livelyupid();
}
inline ::google::protobuf::uint32 LivelyUpInfo::livelyupid() const {
  return livelyupid_;
}
inline void LivelyUpInfo::set_livelyupid(::google::protobuf::uint32 value) {
  set_has_livelyupid();
  livelyupid_ = value;
}

// optional uint32 liveupexp = 2;
inline bool LivelyUpInfo::has_liveupexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LivelyUpInfo::set_has_liveupexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LivelyUpInfo::clear_has_liveupexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LivelyUpInfo::clear_liveupexp() {
  liveupexp_ = 0u;
  clear_has_liveupexp();
}
inline ::google::protobuf::uint32 LivelyUpInfo::liveupexp() const {
  return liveupexp_;
}
inline void LivelyUpInfo::set_liveupexp(::google::protobuf::uint32 value) {
  set_has_liveupexp();
  liveupexp_ = value;
}

// optional uint32 dayamass = 3;
inline bool LivelyUpInfo::has_dayamass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LivelyUpInfo::set_has_dayamass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LivelyUpInfo::clear_has_dayamass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LivelyUpInfo::clear_dayamass() {
  dayamass_ = 0u;
  clear_has_dayamass();
}
inline ::google::protobuf::uint32 LivelyUpInfo::dayamass() const {
  return dayamass_;
}
inline void LivelyUpInfo::set_dayamass(::google::protobuf::uint32 value) {
  set_has_dayamass();
  dayamass_ = value;
}

// -------------------------------------------------------------------

// Lively_CS_GetInfo

// optional int32 nType = 1;
inline bool Lively_CS_GetInfo::has_ntype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lively_CS_GetInfo::set_has_ntype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lively_CS_GetInfo::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lively_CS_GetInfo::clear_ntype() {
  ntype_ = 0;
  clear_has_ntype();
}
inline ::google::protobuf::int32 Lively_CS_GetInfo::ntype() const {
  return ntype_;
}
inline void Lively_CS_GetInfo::set_ntype(::google::protobuf::int32 value) {
  set_has_ntype();
  ntype_ = value;
}

// -------------------------------------------------------------------

// Lively_CS_ReqAward

// required int32 nNumber = 1;
inline bool Lively_CS_ReqAward::has_nnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lively_CS_ReqAward::set_has_nnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lively_CS_ReqAward::clear_has_nnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lively_CS_ReqAward::clear_nnumber() {
  nnumber_ = 0;
  clear_has_nnumber();
}
inline ::google::protobuf::int32 Lively_CS_ReqAward::nnumber() const {
  return nnumber_;
}
inline void Lively_CS_ReqAward::set_nnumber(::google::protobuf::int32 value) {
  set_has_nnumber();
  nnumber_ = value;
}

// -------------------------------------------------------------------

// LivelyInfo

// required int32 nID = 1;
inline bool LivelyInfo::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LivelyInfo::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LivelyInfo::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LivelyInfo::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 LivelyInfo::nid() const {
  return nid_;
}
inline void LivelyInfo::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
}

// required int32 nFinishTimes = 2;
inline bool LivelyInfo::has_nfinishtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LivelyInfo::set_has_nfinishtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LivelyInfo::clear_has_nfinishtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LivelyInfo::clear_nfinishtimes() {
  nfinishtimes_ = 0;
  clear_has_nfinishtimes();
}
inline ::google::protobuf::int32 LivelyInfo::nfinishtimes() const {
  return nfinishtimes_;
}
inline void LivelyInfo::set_nfinishtimes(::google::protobuf::int32 value) {
  set_has_nfinishtimes();
  nfinishtimes_ = value;
}

// -------------------------------------------------------------------

// Lively_SC_GetInfo

// repeated .proto.message.LivelyInfo lively_info = 1;
inline int Lively_SC_GetInfo::lively_info_size() const {
  return lively_info_.size();
}
inline void Lively_SC_GetInfo::clear_lively_info() {
  lively_info_.Clear();
}
inline const ::proto::message::LivelyInfo& Lively_SC_GetInfo::lively_info(int index) const {
  return lively_info_.Get(index);
}
inline ::proto::message::LivelyInfo* Lively_SC_GetInfo::mutable_lively_info(int index) {
  return lively_info_.Mutable(index);
}
inline ::proto::message::LivelyInfo* Lively_SC_GetInfo::add_lively_info() {
  return lively_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >&
Lively_SC_GetInfo::lively_info() const {
  return lively_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >*
Lively_SC_GetInfo::mutable_lively_info() {
  return &lively_info_;
}

// required int32 multipleID = 2;
inline bool Lively_SC_GetInfo::has_multipleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Lively_SC_GetInfo::set_has_multipleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Lively_SC_GetInfo::clear_has_multipleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Lively_SC_GetInfo::clear_multipleid() {
  multipleid_ = 0;
  clear_has_multipleid();
}
inline ::google::protobuf::int32 Lively_SC_GetInfo::multipleid() const {
  return multipleid_;
}
inline void Lively_SC_GetInfo::set_multipleid(::google::protobuf::int32 value) {
  set_has_multipleid();
  multipleid_ = value;
}

// required int32 multipleValue = 3;
inline bool Lively_SC_GetInfo::has_multiplevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Lively_SC_GetInfo::set_has_multiplevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Lively_SC_GetInfo::clear_has_multiplevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Lively_SC_GetInfo::clear_multiplevalue() {
  multiplevalue_ = 0;
  clear_has_multiplevalue();
}
inline ::google::protobuf::int32 Lively_SC_GetInfo::multiplevalue() const {
  return multiplevalue_;
}
inline void Lively_SC_GetInfo::set_multiplevalue(::google::protobuf::int32 value) {
  set_has_multiplevalue();
  multiplevalue_ = value;
}

// required int32 sumLively = 4;
inline bool Lively_SC_GetInfo::has_sumlively() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Lively_SC_GetInfo::set_has_sumlively() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Lively_SC_GetInfo::clear_has_sumlively() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Lively_SC_GetInfo::clear_sumlively() {
  sumlively_ = 0;
  clear_has_sumlively();
}
inline ::google::protobuf::int32 Lively_SC_GetInfo::sumlively() const {
  return sumlively_;
}
inline void Lively_SC_GetInfo::set_sumlively(::google::protobuf::int32 value) {
  set_has_sumlively();
  sumlively_ = value;
}

// required int32 nFlag = 5;
inline bool Lively_SC_GetInfo::has_nflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Lively_SC_GetInfo::set_has_nflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Lively_SC_GetInfo::clear_has_nflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Lively_SC_GetInfo::clear_nflag() {
  nflag_ = 0;
  clear_has_nflag();
}
inline ::google::protobuf::int32 Lively_SC_GetInfo::nflag() const {
  return nflag_;
}
inline void Lively_SC_GetInfo::set_nflag(::google::protobuf::int32 value) {
  set_has_nflag();
  nflag_ = value;
}

// -------------------------------------------------------------------

// Lively_SC_ReqAward

// required int32 result = 1;
inline bool Lively_SC_ReqAward::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lively_SC_ReqAward::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lively_SC_ReqAward::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lively_SC_ReqAward::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Lively_SC_ReqAward::result() const {
  return result_;
}
inline void Lively_SC_ReqAward::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.DropItemNum items = 2;
inline int Lively_SC_ReqAward::items_size() const {
  return items_.size();
}
inline void Lively_SC_ReqAward::clear_items() {
  items_.Clear();
}
inline const ::proto::message::DropItemNum& Lively_SC_ReqAward::items(int index) const {
  return items_.Get(index);
}
inline ::proto::message::DropItemNum* Lively_SC_ReqAward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto::message::DropItemNum* Lively_SC_ReqAward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >&
Lively_SC_ReqAward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >*
Lively_SC_ReqAward::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PlayerLivelyInfo

// optional int32 sumLively = 1;
inline bool PlayerLivelyInfo::has_sumlively() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLivelyInfo::set_has_sumlively() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLivelyInfo::clear_has_sumlively() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLivelyInfo::clear_sumlively() {
  sumlively_ = 0;
  clear_has_sumlively();
}
inline ::google::protobuf::int32 PlayerLivelyInfo::sumlively() const {
  return sumlively_;
}
inline void PlayerLivelyInfo::set_sumlively(::google::protobuf::int32 value) {
  set_has_sumlively();
  sumlively_ = value;
}

// repeated .proto.message.LivelyInfo lively_info = 2;
inline int PlayerLivelyInfo::lively_info_size() const {
  return lively_info_.size();
}
inline void PlayerLivelyInfo::clear_lively_info() {
  lively_info_.Clear();
}
inline const ::proto::message::LivelyInfo& PlayerLivelyInfo::lively_info(int index) const {
  return lively_info_.Get(index);
}
inline ::proto::message::LivelyInfo* PlayerLivelyInfo::mutable_lively_info(int index) {
  return lively_info_.Mutable(index);
}
inline ::proto::message::LivelyInfo* PlayerLivelyInfo::add_lively_info() {
  return lively_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >&
PlayerLivelyInfo::lively_info() const {
  return lively_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::LivelyInfo >*
PlayerLivelyInfo::mutable_lively_info() {
  return &lively_info_;
}

// optional int32 nFlag = 3;
inline bool PlayerLivelyInfo::has_nflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerLivelyInfo::set_has_nflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerLivelyInfo::clear_has_nflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerLivelyInfo::clear_nflag() {
  nflag_ = 0;
  clear_has_nflag();
}
inline ::google::protobuf::int32 PlayerLivelyInfo::nflag() const {
  return nflag_;
}
inline void PlayerLivelyInfo::set_nflag(::google::protobuf::int32 value) {
  set_has_nflag();
  nflag_ = value;
}

// optional int64 resetTime = 4;
inline bool PlayerLivelyInfo::has_resettime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerLivelyInfo::set_has_resettime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerLivelyInfo::clear_has_resettime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerLivelyInfo::clear_resettime() {
  resettime_ = GOOGLE_LONGLONG(0);
  clear_has_resettime();
}
inline ::google::protobuf::int64 PlayerLivelyInfo::resettime() const {
  return resettime_;
}
inline void PlayerLivelyInfo::set_resettime(::google::protobuf::int64 value) {
  set_has_resettime();
  resettime_ = value;
}

// optional int32 overlimitRecord = 5;
inline bool PlayerLivelyInfo::has_overlimitrecord() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerLivelyInfo::set_has_overlimitrecord() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerLivelyInfo::clear_has_overlimitrecord() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerLivelyInfo::clear_overlimitrecord() {
  overlimitrecord_ = 0;
  clear_has_overlimitrecord();
}
inline ::google::protobuf::int32 PlayerLivelyInfo::overlimitrecord() const {
  return overlimitrecord_;
}
inline void PlayerLivelyInfo::set_overlimitrecord(::google::protobuf::int32 value) {
  set_has_overlimitrecord();
  overlimitrecord_ = value;
}

// optional int32 overlimitToday = 6;
inline bool PlayerLivelyInfo::has_overlimittoday() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerLivelyInfo::set_has_overlimittoday() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerLivelyInfo::clear_has_overlimittoday() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerLivelyInfo::clear_overlimittoday() {
  overlimittoday_ = 0;
  clear_has_overlimittoday();
}
inline ::google::protobuf::int32 PlayerLivelyInfo::overlimittoday() const {
  return overlimittoday_;
}
inline void PlayerLivelyInfo::set_overlimittoday(::google::protobuf::int32 value) {
  set_has_overlimittoday();
  overlimittoday_ = value;
}

// -------------------------------------------------------------------

// Lively_CS_ReqLivelyUpData

// -------------------------------------------------------------------

// Lively_SC_AckLivelyUpData

// required int32 result = 1;
inline bool Lively_SC_AckLivelyUpData::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lively_SC_AckLivelyUpData::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lively_SC_AckLivelyUpData::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lively_SC_AckLivelyUpData::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Lively_SC_AckLivelyUpData::result() const {
  return result_;
}
inline void Lively_SC_AckLivelyUpData::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.LivelyUpInfo data = 2;
inline bool Lively_SC_AckLivelyUpData::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Lively_SC_AckLivelyUpData::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Lively_SC_AckLivelyUpData::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Lively_SC_AckLivelyUpData::clear_data() {
  if (data_ != NULL) data_->::proto::message::LivelyUpInfo::Clear();
  clear_has_data();
}
inline const ::proto::message::LivelyUpInfo& Lively_SC_AckLivelyUpData::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto::message::LivelyUpInfo* Lively_SC_AckLivelyUpData::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto::message::LivelyUpInfo;
  return data_;
}
inline ::proto::message::LivelyUpInfo* Lively_SC_AckLivelyUpData::release_data() {
  clear_has_data();
  ::proto::message::LivelyUpInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Lively_SC_AckLivelyUpData::set_allocated_data(::proto::message::LivelyUpInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// Lively_CS_ReqUpgradeLively

// -------------------------------------------------------------------

// Lively_SC_AckUpgradeLively

// required int32 result = 1;
inline bool Lively_SC_AckUpgradeLively::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lively_SC_AckUpgradeLively::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lively_SC_AckUpgradeLively::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lively_SC_AckUpgradeLively::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Lively_SC_AckUpgradeLively::result() const {
  return result_;
}
inline void Lively_SC_AckUpgradeLively::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lively_2eproto__INCLUDED
