// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy_msg.proto

#ifndef PROTOBUF_INCLUDED_proxy_5fmsg_2eproto
#define PROTOBUF_INCLUDED_proxy_5fmsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proxy_5fmsg_2eproto 

namespace protobuf_proxy_5fmsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proxy_5fmsg_2eproto
namespace NFMsg {
class ProxyCmdMessage;
class ProxyCmdMessageDefaultTypeInternal;
extern ProxyCmdMessageDefaultTypeInternal _ProxyCmdMessage_default_instance_;
class UserJsMessageForwardUserPmd_CS;
class UserJsMessageForwardUserPmd_CSDefaultTypeInternal;
extern UserJsMessageForwardUserPmd_CSDefaultTypeInternal _UserJsMessageForwardUserPmd_CS_default_instance_;
class UserLoginTokenLoginUserPmd_C;
class UserLoginTokenLoginUserPmd_CDefaultTypeInternal;
extern UserLoginTokenLoginUserPmd_CDefaultTypeInternal _UserLoginTokenLoginUserPmd_C_default_instance_;
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> ::NFMsg::ProxyCmdMessage* Arena::CreateMaybeMessage<::NFMsg::ProxyCmdMessage>(Arena*);
template<> ::NFMsg::UserJsMessageForwardUserPmd_CS* Arena::CreateMaybeMessage<::NFMsg::UserJsMessageForwardUserPmd_CS>(Arena*);
template<> ::NFMsg::UserLoginTokenLoginUserPmd_C* Arena::CreateMaybeMessage<::NFMsg::UserLoginTokenLoginUserPmd_C>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NFMsg {

// ===================================================================

class ProxyCmdMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.ProxyCmdMessage) */ {
 public:
  ProxyCmdMessage();
  virtual ~ProxyCmdMessage();

  ProxyCmdMessage(const ProxyCmdMessage& from);

  inline ProxyCmdMessage& operator=(const ProxyCmdMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyCmdMessage(ProxyCmdMessage&& from) noexcept
    : ProxyCmdMessage() {
    *this = ::std::move(from);
  }

  inline ProxyCmdMessage& operator=(ProxyCmdMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyCmdMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyCmdMessage* internal_default_instance() {
    return reinterpret_cast<const ProxyCmdMessage*>(
               &_ProxyCmdMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProxyCmdMessage* other);
  friend void swap(ProxyCmdMessage& a, ProxyCmdMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyCmdMessage* New() const final {
    return CreateMaybeMessage<ProxyCmdMessage>(NULL);
  }

  ProxyCmdMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyCmdMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyCmdMessage& from);
  void MergeFrom(const ProxyCmdMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyCmdMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cmd_name = 1;
  void clear_cmd_name();
  static const int kCmdNameFieldNumber = 1;
  const ::std::string& cmd_name() const;
  void set_cmd_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd_name(::std::string&& value);
  #endif
  void set_cmd_name(const char* value);
  void set_cmd_name(const char* value, size_t size);
  ::std::string* mutable_cmd_name();
  ::std::string* release_cmd_name();
  void set_allocated_cmd_name(::std::string* cmd_name);

  // @@protoc_insertion_point(class_scope:NFMsg.ProxyCmdMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cmd_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proxy_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserLoginTokenLoginUserPmd_C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.UserLoginTokenLoginUserPmd_C) */ {
 public:
  UserLoginTokenLoginUserPmd_C();
  virtual ~UserLoginTokenLoginUserPmd_C();

  UserLoginTokenLoginUserPmd_C(const UserLoginTokenLoginUserPmd_C& from);

  inline UserLoginTokenLoginUserPmd_C& operator=(const UserLoginTokenLoginUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLoginTokenLoginUserPmd_C(UserLoginTokenLoginUserPmd_C&& from) noexcept
    : UserLoginTokenLoginUserPmd_C() {
    *this = ::std::move(from);
  }

  inline UserLoginTokenLoginUserPmd_C& operator=(UserLoginTokenLoginUserPmd_C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginTokenLoginUserPmd_C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserLoginTokenLoginUserPmd_C* internal_default_instance() {
    return reinterpret_cast<const UserLoginTokenLoginUserPmd_C*>(
               &_UserLoginTokenLoginUserPmd_C_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UserLoginTokenLoginUserPmd_C* other);
  friend void swap(UserLoginTokenLoginUserPmd_C& a, UserLoginTokenLoginUserPmd_C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLoginTokenLoginUserPmd_C* New() const final {
    return CreateMaybeMessage<UserLoginTokenLoginUserPmd_C>(NULL);
  }

  UserLoginTokenLoginUserPmd_C* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserLoginTokenLoginUserPmd_C>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserLoginTokenLoginUserPmd_C& from);
  void MergeFrom(const UserLoginTokenLoginUserPmd_C& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserLoginTokenLoginUserPmd_C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string compress = 7;
  void clear_compress();
  static const int kCompressFieldNumber = 7;
  const ::std::string& compress() const;
  void set_compress(const ::std::string& value);
  #if LANG_CXX11
  void set_compress(::std::string&& value);
  #endif
  void set_compress(const char* value);
  void set_compress(const char* value, size_t size);
  ::std::string* mutable_compress();
  ::std::string* release_compress();
  void set_allocated_compress(::std::string* compress);

  // string tokenmd5 = 8;
  void clear_tokenmd5();
  static const int kTokenmd5FieldNumber = 8;
  const ::std::string& tokenmd5() const;
  void set_tokenmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_tokenmd5(::std::string&& value);
  #endif
  void set_tokenmd5(const char* value);
  void set_tokenmd5(const char* value, size_t size);
  ::std::string* mutable_tokenmd5();
  ::std::string* release_tokenmd5();
  void set_allocated_tokenmd5(::std::string* tokenmd5);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 gameid = 2;
  void clear_gameid();
  static const int kGameidFieldNumber = 2;
  ::google::protobuf::uint32 gameid() const;
  void set_gameid(::google::protobuf::uint32 value);

  // uint64 accountid = 4;
  void clear_accountid();
  static const int kAccountidFieldNumber = 4;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint32 zoneid = 3;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // uint32 logintempid = 5;
  void clear_logintempid();
  static const int kLogintempidFieldNumber = 5;
  ::google::protobuf::uint32 logintempid() const;
  void set_logintempid(::google::protobuf::uint32 value);

  // uint64 timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NFMsg.UserLoginTokenLoginUserPmd_C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr compress_;
  ::google::protobuf::internal::ArenaStringPtr tokenmd5_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 logintempid_;
  ::google::protobuf::uint64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proxy_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserJsMessageForwardUserPmd_CS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.UserJsMessageForwardUserPmd_CS) */ {
 public:
  UserJsMessageForwardUserPmd_CS();
  virtual ~UserJsMessageForwardUserPmd_CS();

  UserJsMessageForwardUserPmd_CS(const UserJsMessageForwardUserPmd_CS& from);

  inline UserJsMessageForwardUserPmd_CS& operator=(const UserJsMessageForwardUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserJsMessageForwardUserPmd_CS(UserJsMessageForwardUserPmd_CS&& from) noexcept
    : UserJsMessageForwardUserPmd_CS() {
    *this = ::std::move(from);
  }

  inline UserJsMessageForwardUserPmd_CS& operator=(UserJsMessageForwardUserPmd_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserJsMessageForwardUserPmd_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserJsMessageForwardUserPmd_CS* internal_default_instance() {
    return reinterpret_cast<const UserJsMessageForwardUserPmd_CS*>(
               &_UserJsMessageForwardUserPmd_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UserJsMessageForwardUserPmd_CS* other);
  friend void swap(UserJsMessageForwardUserPmd_CS& a, UserJsMessageForwardUserPmd_CS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserJsMessageForwardUserPmd_CS* New() const final {
    return CreateMaybeMessage<UserJsMessageForwardUserPmd_CS>(NULL);
  }

  UserJsMessageForwardUserPmd_CS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserJsMessageForwardUserPmd_CS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserJsMessageForwardUserPmd_CS& from);
  void MergeFrom(const UserJsMessageForwardUserPmd_CS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserJsMessageForwardUserPmd_CS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:NFMsg.UserJsMessageForwardUserPmd_CS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proxy_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProxyCmdMessage

// string cmd_name = 1;
inline void ProxyCmdMessage::clear_cmd_name() {
  cmd_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyCmdMessage::cmd_name() const {
  // @@protoc_insertion_point(field_get:NFMsg.ProxyCmdMessage.cmd_name)
  return cmd_name_.GetNoArena();
}
inline void ProxyCmdMessage::set_cmd_name(const ::std::string& value) {
  
  cmd_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.ProxyCmdMessage.cmd_name)
}
#if LANG_CXX11
inline void ProxyCmdMessage::set_cmd_name(::std::string&& value) {
  
  cmd_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.ProxyCmdMessage.cmd_name)
}
#endif
inline void ProxyCmdMessage::set_cmd_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cmd_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.ProxyCmdMessage.cmd_name)
}
inline void ProxyCmdMessage::set_cmd_name(const char* value, size_t size) {
  
  cmd_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.ProxyCmdMessage.cmd_name)
}
inline ::std::string* ProxyCmdMessage::mutable_cmd_name() {
  
  // @@protoc_insertion_point(field_mutable:NFMsg.ProxyCmdMessage.cmd_name)
  return cmd_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyCmdMessage::release_cmd_name() {
  // @@protoc_insertion_point(field_release:NFMsg.ProxyCmdMessage.cmd_name)
  
  return cmd_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyCmdMessage::set_allocated_cmd_name(::std::string* cmd_name) {
  if (cmd_name != NULL) {
    
  } else {
    
  }
  cmd_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd_name);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.ProxyCmdMessage.cmd_name)
}

// -------------------------------------------------------------------

// UserLoginTokenLoginUserPmd_C

// uint32 version = 1;
inline void UserLoginTokenLoginUserPmd_C::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 UserLoginTokenLoginUserPmd_C::version() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.version)
  return version_;
}
inline void UserLoginTokenLoginUserPmd_C::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.version)
}

// uint32 gameid = 2;
inline void UserLoginTokenLoginUserPmd_C::clear_gameid() {
  gameid_ = 0u;
}
inline ::google::protobuf::uint32 UserLoginTokenLoginUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.gameid)
  return gameid_;
}
inline void UserLoginTokenLoginUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.gameid)
}

// uint32 zoneid = 3;
inline void UserLoginTokenLoginUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 UserLoginTokenLoginUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.zoneid)
  return zoneid_;
}
inline void UserLoginTokenLoginUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.zoneid)
}

// uint64 accountid = 4;
inline void UserLoginTokenLoginUserPmd_C::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserLoginTokenLoginUserPmd_C::accountid() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.accountid)
  return accountid_;
}
inline void UserLoginTokenLoginUserPmd_C::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.accountid)
}

// uint32 logintempid = 5;
inline void UserLoginTokenLoginUserPmd_C::clear_logintempid() {
  logintempid_ = 0u;
}
inline ::google::protobuf::uint32 UserLoginTokenLoginUserPmd_C::logintempid() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.logintempid)
  return logintempid_;
}
inline void UserLoginTokenLoginUserPmd_C::set_logintempid(::google::protobuf::uint32 value) {
  
  logintempid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.logintempid)
}

// uint64 timestamp = 6;
inline void UserLoginTokenLoginUserPmd_C::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserLoginTokenLoginUserPmd_C::timestamp() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.timestamp)
  return timestamp_;
}
inline void UserLoginTokenLoginUserPmd_C::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.timestamp)
}

// string compress = 7;
inline void UserLoginTokenLoginUserPmd_C::clear_compress() {
  compress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginTokenLoginUserPmd_C::compress() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
  return compress_.GetNoArena();
}
inline void UserLoginTokenLoginUserPmd_C::set_compress(const ::std::string& value) {
  
  compress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
}
#if LANG_CXX11
inline void UserLoginTokenLoginUserPmd_C::set_compress(::std::string&& value) {
  
  compress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
}
#endif
inline void UserLoginTokenLoginUserPmd_C::set_compress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  compress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
}
inline void UserLoginTokenLoginUserPmd_C::set_compress(const char* value, size_t size) {
  
  compress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
}
inline ::std::string* UserLoginTokenLoginUserPmd_C::mutable_compress() {
  
  // @@protoc_insertion_point(field_mutable:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
  return compress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginTokenLoginUserPmd_C::release_compress() {
  // @@protoc_insertion_point(field_release:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
  
  return compress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginTokenLoginUserPmd_C::set_allocated_compress(::std::string* compress) {
  if (compress != NULL) {
    
  } else {
    
  }
  compress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), compress);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.UserLoginTokenLoginUserPmd_C.compress)
}

// string tokenmd5 = 8;
inline void UserLoginTokenLoginUserPmd_C::clear_tokenmd5() {
  tokenmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginTokenLoginUserPmd_C::tokenmd5() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
  return tokenmd5_.GetNoArena();
}
inline void UserLoginTokenLoginUserPmd_C::set_tokenmd5(const ::std::string& value) {
  
  tokenmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
}
#if LANG_CXX11
inline void UserLoginTokenLoginUserPmd_C::set_tokenmd5(::std::string&& value) {
  
  tokenmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
}
#endif
inline void UserLoginTokenLoginUserPmd_C::set_tokenmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tokenmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
}
inline void UserLoginTokenLoginUserPmd_C::set_tokenmd5(const char* value, size_t size) {
  
  tokenmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
}
inline ::std::string* UserLoginTokenLoginUserPmd_C::mutable_tokenmd5() {
  
  // @@protoc_insertion_point(field_mutable:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
  return tokenmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginTokenLoginUserPmd_C::release_tokenmd5() {
  // @@protoc_insertion_point(field_release:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
  
  return tokenmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginTokenLoginUserPmd_C::set_allocated_tokenmd5(::std::string* tokenmd5) {
  if (tokenmd5 != NULL) {
    
  } else {
    
  }
  tokenmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tokenmd5);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.UserLoginTokenLoginUserPmd_C.tokenmd5)
}

// -------------------------------------------------------------------

// UserJsMessageForwardUserPmd_CS

// string msg = 1;
inline void UserJsMessageForwardUserPmd_CS::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserJsMessageForwardUserPmd_CS::msg() const {
  // @@protoc_insertion_point(field_get:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
  return msg_.GetNoArena();
}
inline void UserJsMessageForwardUserPmd_CS::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
}
#if LANG_CXX11
inline void UserJsMessageForwardUserPmd_CS::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
}
#endif
inline void UserJsMessageForwardUserPmd_CS::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
}
inline void UserJsMessageForwardUserPmd_CS::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
}
inline ::std::string* UserJsMessageForwardUserPmd_CS::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserJsMessageForwardUserPmd_CS::release_msg() {
  // @@protoc_insertion_point(field_release:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserJsMessageForwardUserPmd_CS::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.UserJsMessageForwardUserPmd_CS.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proxy_5fmsg_2eproto
