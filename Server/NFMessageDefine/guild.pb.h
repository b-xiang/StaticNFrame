// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild.proto

#ifndef PROTOBUF_guild_2eproto__INCLUDED
#define PROTOBUF_guild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_guild_2eproto();
void protobuf_AssignDesc_guild_2eproto();
void protobuf_ShutdownFile_guild_2eproto();

class KickoutInfo;
class GuildListInfo;
class ReqInfo;
class GuildShopInfo;
class QuestHelpInfo;
class ImpeachInfo;
class BossDamage;
class GuildBoss;
class RecordData;
class MixGuildData;
class GuildData;
class MixMemberDate;
class GuildMemberData;
class MemberListInfo;
class UniteGuildData;
class GuildUsedName;
class GUsedName;
class GuildMSG_CS_ReqGuildList;
class GuildMSG_SC_AckGuildList;
class GuildMSG_CS_ReqCreate;
class GuildMSG_SC_AckCreate;
class GuildMSG_CS_ReqJoin;
class GuildMSG_SC_AckJoin;
class GuildMSG_CS_ReqQuickJoin;
class GuildMSG_SC_AckQuickJoin;
class GuildMSG_CS_ReqFind;
class GuildMSG_SC_AckFind;
class GuildMSG_CS_ReqGuildInfo;
class GuildMSG_SC_AckGuildInfo;
class GuildMSG_CS_ReqMemberInfo;
class GuildMSG_SC_AckMemberInfo;
class GuildMSG_CS_ReqMemberList;
class GuildMSG_SC_AckMemberList;
class GuildMSG_CS_ReqQuit;
class GuildMSG_SC_AckQuit;
class GuildMSG_CS_ReqSetJoin;
class GuildMSG_SC_AckSetJoin;
class GuildMSG_CS_ReqJoinList;
class GuildMSG_SC_AckJoinList;
class GuildMSG_CS_ReqOpreatJoiniList;
class GuildMSG_SC_AckOpreatJoiniList;
class GuildMSG_CS_ReqKickOut;
class GuildMSG_SC_AckKickOut;
class GuildMSG_CS_ReqAppointment;
class GuildMSG_SC_AckAppointment;
class GuildMSG_CS_ReqSetGuildPlacard;
class GuildMSG_SC_AckSetGuildPlacard;
class GuildMSG_CS_ReqSetRefrishMultiple;
class GuildMSG_SC_AckSetRefrishMultiple;
class GuildMSG_CS_ReqIncreaseBuilding;
class GuildMSG_SC_AckIncreaseBuilding;
class GuildMSG_CS_ReqDonate;
class GuildMSG_SC_AckDonate;
class GuildMSG_CS_ReqGetWages;
class GuildMSG_SC_AckGetWages;
class GuildMSG_CS_ReqImpeachInfo;
class GuildMSG_SC_AckImpeachInfo;
class GuildMSG_CS_ReqImpeachment;
class GuildMSG_SC_AckImpeachment;
class GuildMSG_CS_ReqCancelImpeachment;
class GuildMSG_SC_AckCancelImpeachment;
class GuildMSG_CS_ReqResponse;
class GuildMSG_SC_AckResponse;
class GuildMSG_CS_ReqMergeInfo;
class GuildMSG_SC_AckMergeInfo;
class GuildMSG_CS_ReqMergeGuild;
class GuildMSG_SC_AckMergeGuild;
class GuildMSG_CS_ReqMergeGuildList;
class GuildMSG_SC_AckMergeGuildList;
class GuildMSG_CS_ReqOpreatMergeList;
class GuildMSG_SC_AckOpreatMergeList;
class GuildMSG_CS_ReqClearMergeList;
class GuildMSG_SC_AckClearMergeList;
class GuildMSG_CS_ReqCancelMerge;
class GuildMSG_SC_AckCancelMerge;
class GuildMSG_CS_ReqShopInfo;
class GuildMSG_SC_AckShopInfo;
class GuildMSG_CS_ReqBuyShopItem;
class GuildMSG_SC_AckBuyShopItem;
class GuildMSG_CS_ReqChangeName;
class GuildMSG_SC_AckChangeName;
class GuildMSG_SC_NotifyUpdateGuildInfo;
class GuildMSG_CS_ReqEnterFort;
class GuildMSG_SC_AckEnterFort;
class GuildMSG_CS_EnterFortSuccess;
class GuildMSG_CS_ReqCancelJoin;
class GuildMSG_SC_AckCancelJoin;
class GuildMSG_CS_ReqEnterGuildIntruder;
class GuildMSG_CS_ReqEnterGuildIntruderOK;
class GuildMSG_CS_ReqLeaveGuildIntruder;
class GuildMSG_SC_AckEnterGuildIntruder;
class GuildMSG_SC_AckGuildIntruderEnd;
class GuildMSG_SC_AckGuildIntruderInit;
class GuildMSG_SC_AckGuildIntruderTime;
class GuildMSG_SC_GuildIntruderReward;
class GuildMSG_SC_NotifyStopImpeachment;
class GuildMSG_SC_NotifyContext;
class GuildMSG_CS_ReqSetBossOpen;
class GuildMSG_SC_AckBossInfo;
class GuildMSG_SC_NotifyBossDie;
class GuildMSG_CS_ReqInvitePlayer;
class GuildMSG_SC_AckInvitePlayer;
class GuildMSG_SC_NotifyInvitePlayer;
class GuildMSG_CS_ReqInviteJoin;
class GuildMSG_SC_AckInviteJoin;
class GuildMSG_CS_ReqGuildWarehouse;
class GuildMSG_SC_AckGuildWarehouse;
class GuildMSG_CS_ReqDonateEquip;
class GuildMSG_CS_ReqConversionEquip;
class GuildMSG_CS_ReqDelGuildEquip;
class GuildMSG_SC_AckGuildEquipRecord;

enum eOffice {
  eOffice_Chairman = 1,
  eOffice_ViceChairman = 2,
  eOffice_Elders = 3,
  eOffice_Elite = 4,
  eOffice_Baby = 5,
  eOffice_Ordinary = 6
};
bool eOffice_IsValid(int value);
const eOffice eOffice_MIN = eOffice_Chairman;
const eOffice eOffice_MAX = eOffice_Ordinary;
const int eOffice_ARRAYSIZE = eOffice_MAX + 1;

const ::google::protobuf::EnumDescriptor* eOffice_descriptor();
inline const ::std::string& eOffice_Name(eOffice value) {
  return ::google::protobuf::internal::NameOfEnum(
    eOffice_descriptor(), value);
}
inline bool eOffice_Parse(
    const ::std::string& name, eOffice* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eOffice>(
    eOffice_descriptor(), name, value);
}
enum ePurview {
  ePurview_Appointment = 1,
  ePurview_JoinSupervise = 2,
  ePurview_SetPlacard = 4,
  ePurview_UniteGuild = 8,
  ePurview_Upgrade = 16,
  ePurview_OpenActivity = 32,
  ePurview_OpenBattle = 64,
  ePurview_KickOut = 128
};
bool ePurview_IsValid(int value);
const ePurview ePurview_MIN = ePurview_Appointment;
const ePurview ePurview_MAX = ePurview_KickOut;
const int ePurview_ARRAYSIZE = ePurview_MAX + 1;

const ::google::protobuf::EnumDescriptor* ePurview_descriptor();
inline const ::std::string& ePurview_Name(ePurview value) {
  return ::google::protobuf::internal::NameOfEnum(
    ePurview_descriptor(), value);
}
inline bool ePurview_Parse(
    const ::std::string& name, ePurview* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ePurview>(
    ePurview_descriptor(), name, value);
}
enum eNotifyType {
  eNotifyType_JoinSuccess = 1,
  eNotifyType_ReqListUpdate = 2,
  eNotifyType_MergerListUpdate = 3,
  eNotifyType_Quit = 4,
  eNotifyType_UpdateMemData = 5,
  eNotifyType_UpdateGuildData = 6,
  eNotifyType_ReLoadGuildData = 7,
  eNotifyType_OtherCancelMerger = 8
};
bool eNotifyType_IsValid(int value);
const eNotifyType eNotifyType_MIN = eNotifyType_JoinSuccess;
const eNotifyType eNotifyType_MAX = eNotifyType_OtherCancelMerger;
const int eNotifyType_ARRAYSIZE = eNotifyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eNotifyType_descriptor();
inline const ::std::string& eNotifyType_Name(eNotifyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eNotifyType_descriptor(), value);
}
inline bool eNotifyType_Parse(
    const ::std::string& name, eNotifyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eNotifyType>(
    eNotifyType_descriptor(), name, value);
}
// ===================================================================

class KickoutInfo : public ::google::protobuf::Message {
 public:
  KickoutInfo();
  virtual ~KickoutInfo();

  KickoutInfo(const KickoutInfo& from);

  inline KickoutInfo& operator=(const KickoutInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickoutInfo& default_instance();

  void Swap(KickoutInfo* other);

  // implements Message ----------------------------------------------

  KickoutInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickoutInfo& from);
  void MergeFrom(const KickoutInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional uint64 outtimes = 2;
  inline bool has_outtimes() const;
  inline void clear_outtimes();
  static const int kOuttimesFieldNumber = 2;
  inline ::google::protobuf::uint64 outtimes() const;
  inline void set_outtimes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.KickoutInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_outtimes();
  inline void clear_has_outtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 outtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static KickoutInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildListInfo : public ::google::protobuf::Message {
 public:
  GuildListInfo();
  virtual ~GuildListInfo();

  GuildListInfo(const GuildListInfo& from);

  inline GuildListInfo& operator=(const GuildListInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildListInfo& default_instance();

  void Swap(GuildListInfo* other);

  // implements Message ----------------------------------------------

  GuildListInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildListInfo& from);
  void MergeFrom(const GuildListInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rangking = 1;
  inline bool has_rangking() const;
  inline void clear_rangking();
  static const int kRangkingFieldNumber = 1;
  inline ::google::protobuf::uint32 rangking() const;
  inline void set_rangking(::google::protobuf::uint32 value);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 3;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 3;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional uint32 guildlevel = 4;
  inline bool has_guildlevel() const;
  inline void clear_guildlevel();
  static const int kGuildlevelFieldNumber = 4;
  inline ::google::protobuf::uint32 guildlevel() const;
  inline void set_guildlevel(::google::protobuf::uint32 value);

  // optional uint32 guildmember = 5;
  inline bool has_guildmember() const;
  inline void clear_guildmember();
  static const int kGuildmemberFieldNumber = 5;
  inline ::google::protobuf::uint32 guildmember() const;
  inline void set_guildmember(::google::protobuf::uint32 value);

  // optional string guilddeclaration = 6;
  inline bool has_guilddeclaration() const;
  inline void clear_guilddeclaration();
  static const int kGuilddeclarationFieldNumber = 6;
  inline const ::std::string& guilddeclaration() const;
  inline void set_guilddeclaration(const ::std::string& value);
  inline void set_guilddeclaration(const char* value);
  inline void set_guilddeclaration(const char* value, size_t size);
  inline ::std::string* mutable_guilddeclaration();
  inline ::std::string* release_guilddeclaration();
  inline void set_allocated_guilddeclaration(::std::string* guilddeclaration);

  // optional string ownername = 7;
  inline bool has_ownername() const;
  inline void clear_ownername();
  static const int kOwnernameFieldNumber = 7;
  inline const ::std::string& ownername() const;
  inline void set_ownername(const ::std::string& value);
  inline void set_ownername(const char* value);
  inline void set_ownername(const char* value, size_t size);
  inline ::std::string* mutable_ownername();
  inline ::std::string* release_ownername();
  inline void set_allocated_ownername(::std::string* ownername);

  // optional uint64 guildthrive = 8;
  inline bool has_guildthrive() const;
  inline void clear_guildthrive();
  static const int kGuildthriveFieldNumber = 8;
  inline ::google::protobuf::uint64 guildthrive() const;
  inline void set_guildthrive(::google::protobuf::uint64 value);

  // optional uint32 joincombat = 9;
  inline bool has_joincombat() const;
  inline void clear_joincombat();
  static const int kJoincombatFieldNumber = 9;
  inline ::google::protobuf::uint32 joincombat() const;
  inline void set_joincombat(::google::protobuf::uint32 value);

  // optional bool canjoin = 10;
  inline bool has_canjoin() const;
  inline void clear_canjoin();
  static const int kCanjoinFieldNumber = 10;
  inline bool canjoin() const;
  inline void set_canjoin(bool value);

  // optional bool isreqjoin = 11;
  inline bool has_isreqjoin() const;
  inline void clear_isreqjoin();
  static const int kIsreqjoinFieldNumber = 11;
  inline bool isreqjoin() const;
  inline void set_isreqjoin(bool value);

  // optional bool isaudit = 12;
  inline bool has_isaudit() const;
  inline void clear_isaudit();
  static const int kIsauditFieldNumber = 12;
  inline bool isaudit() const;
  inline void set_isaudit(bool value);

  // repeated .proto.message.KickoutInfo kickinfolist = 13;
  inline int kickinfolist_size() const;
  inline void clear_kickinfolist();
  static const int kKickinfolistFieldNumber = 13;
  inline const ::proto::message::KickoutInfo& kickinfolist(int index) const;
  inline ::proto::message::KickoutInfo* mutable_kickinfolist(int index);
  inline ::proto::message::KickoutInfo* add_kickinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >&
      kickinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >*
      mutable_kickinfolist();

  // optional uint64 ownerid = 14;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 14;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildListInfo)
 private:
  inline void set_has_rangking();
  inline void clear_has_rangking();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_guildlevel();
  inline void clear_has_guildlevel();
  inline void set_has_guildmember();
  inline void clear_has_guildmember();
  inline void set_has_guilddeclaration();
  inline void clear_has_guilddeclaration();
  inline void set_has_ownername();
  inline void clear_has_ownername();
  inline void set_has_guildthrive();
  inline void clear_has_guildthrive();
  inline void set_has_joincombat();
  inline void clear_has_joincombat();
  inline void set_has_canjoin();
  inline void clear_has_canjoin();
  inline void set_has_isreqjoin();
  inline void clear_has_isreqjoin();
  inline void set_has_isaudit();
  inline void clear_has_isaudit();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 rangking_;
  ::google::protobuf::uint32 guildlevel_;
  ::std::string* guildname_;
  ::std::string* guilddeclaration_;
  ::std::string* ownername_;
  ::google::protobuf::uint32 guildmember_;
  ::google::protobuf::uint32 joincombat_;
  ::google::protobuf::uint64 guildthrive_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo > kickinfolist_;
  ::google::protobuf::uint64 ownerid_;
  bool canjoin_;
  bool isreqjoin_;
  bool isaudit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildListInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqInfo : public ::google::protobuf::Message {
 public:
  ReqInfo();
  virtual ~ReqInfo();

  ReqInfo(const ReqInfo& from);

  inline ReqInfo& operator=(const ReqInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInfo& default_instance();

  void Swap(ReqInfo* other);

  // implements Message ----------------------------------------------

  ReqInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInfo& from);
  void MergeFrom(const ReqInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strname = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrnameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 profession = 3;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 3;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint64 playerid = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 combatvalue = 5;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatvalueFieldNumber = 5;
  inline ::google::protobuf::uint32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::uint32 value);

  // optional uint32 dhlev = 6;
  inline bool has_dhlev() const;
  inline void clear_dhlev();
  static const int kDhlevFieldNumber = 6;
  inline ::google::protobuf::uint32 dhlev() const;
  inline void set_dhlev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ReqInfo)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_dhlev();
  inline void clear_has_dhlev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 combatvalue_;
  ::google::protobuf::uint32 dhlev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ReqInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildShopInfo : public ::google::protobuf::Message {
 public:
  GuildShopInfo();
  virtual ~GuildShopInfo();

  GuildShopInfo(const GuildShopInfo& from);

  inline GuildShopInfo& operator=(const GuildShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildShopInfo& default_instance();

  void Swap(GuildShopInfo* other);

  // implements Message ----------------------------------------------

  GuildShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildShopInfo& from);
  void MergeFrom(const GuildShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::uint32 counts() const;
  inline void set_counts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildShopInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class QuestHelpInfo : public ::google::protobuf::Message {
 public:
  QuestHelpInfo();
  virtual ~QuestHelpInfo();

  QuestHelpInfo(const QuestHelpInfo& from);

  inline QuestHelpInfo& operator=(const QuestHelpInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestHelpInfo& default_instance();

  void Swap(QuestHelpInfo* other);

  // implements Message ----------------------------------------------

  QuestHelpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestHelpInfo& from);
  void MergeFrom(const QuestHelpInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required int32 questid = 2;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 2;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 loopnum = 3;
  inline bool has_loopnum() const;
  inline void clear_loopnum();
  static const int kLoopnumFieldNumber = 3;
  inline ::google::protobuf::int32 loopnum() const;
  inline void set_loopnum(::google::protobuf::int32 value);

  // required int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint32 helperId = 5;
  inline bool has_helperid() const;
  inline void clear_helperid();
  static const int kHelperIdFieldNumber = 5;
  inline ::google::protobuf::uint32 helperid() const;
  inline void set_helperid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.QuestHelpInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_loopnum();
  inline void clear_has_loopnum();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_helperid();
  inline void clear_has_helperid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 loopnum_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 helperid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static QuestHelpInfo* default_instance_;
};
// -------------------------------------------------------------------

class ImpeachInfo : public ::google::protobuf::Message {
 public:
  ImpeachInfo();
  virtual ~ImpeachInfo();

  ImpeachInfo(const ImpeachInfo& from);

  inline ImpeachInfo& operator=(const ImpeachInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImpeachInfo& default_instance();

  void Swap(ImpeachInfo* other);

  // implements Message ----------------------------------------------

  ImpeachInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImpeachInfo& from);
  void MergeFrom(const ImpeachInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 impeachtime = 1;
  inline bool has_impeachtime() const;
  inline void clear_impeachtime();
  static const int kImpeachtimeFieldNumber = 1;
  inline ::google::protobuf::uint64 impeachtime() const;
  inline void set_impeachtime(::google::protobuf::uint64 value);

  // repeated uint64 impeachid = 2;
  inline int impeachid_size() const;
  inline void clear_impeachid();
  static const int kImpeachidFieldNumber = 2;
  inline ::google::protobuf::uint64 impeachid(int index) const;
  inline void set_impeachid(int index, ::google::protobuf::uint64 value);
  inline void add_impeachid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      impeachid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_impeachid();

  // repeated string impeachname = 3;
  inline int impeachname_size() const;
  inline void clear_impeachname();
  static const int kImpeachnameFieldNumber = 3;
  inline const ::std::string& impeachname(int index) const;
  inline ::std::string* mutable_impeachname(int index);
  inline void set_impeachname(int index, const ::std::string& value);
  inline void set_impeachname(int index, const char* value);
  inline void set_impeachname(int index, const char* value, size_t size);
  inline ::std::string* add_impeachname();
  inline void add_impeachname(const ::std::string& value);
  inline void add_impeachname(const char* value);
  inline void add_impeachname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& impeachname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_impeachname();

  // @@protoc_insertion_point(class_scope:proto.message.ImpeachInfo)
 private:
  inline void set_has_impeachtime();
  inline void clear_has_impeachtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 impeachtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > impeachid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> impeachname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ImpeachInfo* default_instance_;
};
// -------------------------------------------------------------------

class BossDamage : public ::google::protobuf::Message {
 public:
  BossDamage();
  virtual ~BossDamage();

  BossDamage(const BossDamage& from);

  inline BossDamage& operator=(const BossDamage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDamage& default_instance();

  void Swap(BossDamage* other);

  // implements Message ----------------------------------------------

  BossDamage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossDamage& from);
  void MergeFrom(const BossDamage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint32 job = 5;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 5;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.BossDamage)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* name_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 job_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static BossDamage* default_instance_;
};
// -------------------------------------------------------------------

class GuildBoss : public ::google::protobuf::Message {
 public:
  GuildBoss();
  virtual ~GuildBoss();

  GuildBoss(const GuildBoss& from);

  inline GuildBoss& operator=(const GuildBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBoss& default_instance();

  void Swap(GuildBoss* other);

  // implements Message ----------------------------------------------

  GuildBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBoss& from);
  void MergeFrom(const GuildBoss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bossid = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossidFieldNumber = 1;
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);

  // optional uint32 hppercent = 2;
  inline bool has_hppercent() const;
  inline void clear_hppercent();
  static const int kHppercentFieldNumber = 2;
  inline ::google::protobuf::uint32 hppercent() const;
  inline void set_hppercent(::google::protobuf::uint32 value);

  // optional uint64 starttimes = 3;
  inline bool has_starttimes() const;
  inline void clear_starttimes();
  static const int kStarttimesFieldNumber = 3;
  inline ::google::protobuf::uint64 starttimes() const;
  inline void set_starttimes(::google::protobuf::uint64 value);

  // optional uint64 resettime = 4;
  inline bool has_resettime() const;
  inline void clear_resettime();
  static const int kResettimeFieldNumber = 4;
  inline ::google::protobuf::uint64 resettime() const;
  inline void set_resettime(::google::protobuf::uint64 value);

  // repeated uint32 rewordlist = 5;
  inline int rewordlist_size() const;
  inline void clear_rewordlist();
  static const int kRewordlistFieldNumber = 5;
  inline ::google::protobuf::uint32 rewordlist(int index) const;
  inline void set_rewordlist(int index, ::google::protobuf::uint32 value);
  inline void add_rewordlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewordlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewordlist();

  // repeated .proto.message.BossDamage ranklist = 6;
  inline int ranklist_size() const;
  inline void clear_ranklist();
  static const int kRanklistFieldNumber = 6;
  inline const ::proto::message::BossDamage& ranklist(int index) const;
  inline ::proto::message::BossDamage* mutable_ranklist(int index);
  inline ::proto::message::BossDamage* add_ranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::BossDamage >&
      ranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::BossDamage >*
      mutable_ranklist();

  // optional uint32 guildlev = 7;
  inline bool has_guildlev() const;
  inline void clear_guildlev();
  static const int kGuildlevFieldNumber = 7;
  inline ::google::protobuf::uint32 guildlev() const;
  inline void set_guildlev(::google::protobuf::uint32 value);

  // optional uint64 guildid = 8;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 8;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 fightime = 9;
  inline bool has_fightime() const;
  inline void clear_fightime();
  static const int kFightimeFieldNumber = 9;
  inline ::google::protobuf::uint64 fightime() const;
  inline void set_fightime(::google::protobuf::uint64 value);

  // optional uint32 changecounts = 10;
  inline bool has_changecounts() const;
  inline void clear_changecounts();
  static const int kChangecountsFieldNumber = 10;
  inline ::google::protobuf::uint32 changecounts() const;
  inline void set_changecounts(::google::protobuf::uint32 value);

  // optional uint32 dfHour = 11;
  inline bool has_dfhour() const;
  inline void clear_dfhour();
  static const int kDfHourFieldNumber = 11;
  inline ::google::protobuf::uint32 dfhour() const;
  inline void set_dfhour(::google::protobuf::uint32 value);

  // optional uint32 dfMinu = 12;
  inline bool has_dfminu() const;
  inline void clear_dfminu();
  static const int kDfMinuFieldNumber = 12;
  inline ::google::protobuf::uint32 dfminu() const;
  inline void set_dfminu(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildBoss)
 private:
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_hppercent();
  inline void clear_has_hppercent();
  inline void set_has_starttimes();
  inline void clear_has_starttimes();
  inline void set_has_resettime();
  inline void clear_has_resettime();
  inline void set_has_guildlev();
  inline void clear_has_guildlev();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_fightime();
  inline void clear_has_fightime();
  inline void set_has_changecounts();
  inline void clear_has_changecounts();
  inline void set_has_dfhour();
  inline void clear_has_dfhour();
  inline void set_has_dfminu();
  inline void clear_has_dfminu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bossid_;
  ::google::protobuf::uint32 hppercent_;
  ::google::protobuf::uint64 starttimes_;
  ::google::protobuf::uint64 resettime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewordlist_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::BossDamage > ranklist_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 guildlev_;
  ::google::protobuf::uint32 changecounts_;
  ::google::protobuf::uint64 fightime_;
  ::google::protobuf::uint32 dfhour_;
  ::google::protobuf::uint32 dfminu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildBoss* default_instance_;
};
// -------------------------------------------------------------------

class RecordData : public ::google::protobuf::Message {
 public:
  RecordData();
  virtual ~RecordData();

  RecordData(const RecordData& from);

  inline RecordData& operator=(const RecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordData& default_instance();

  void Swap(RecordData* other);

  // implements Message ----------------------------------------------

  RecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecordData& from);
  void MergeFrom(const RecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // optional uint64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.RecordData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 equipid_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static RecordData* default_instance_;
};
// -------------------------------------------------------------------

class MixGuildData : public ::google::protobuf::Message {
 public:
  MixGuildData();
  virtual ~MixGuildData();

  MixGuildData(const MixGuildData& from);

  inline MixGuildData& operator=(const MixGuildData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MixGuildData& default_instance();

  void Swap(MixGuildData* other);

  // implements Message ----------------------------------------------

  MixGuildData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MixGuildData& from);
  void MergeFrom(const MixGuildData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 levuptime = 1;
  inline bool has_levuptime() const;
  inline void clear_levuptime();
  static const int kLevuptimeFieldNumber = 1;
  inline ::google::protobuf::uint64 levuptime() const;
  inline void set_levuptime(::google::protobuf::uint64 value);

  // optional uint64 ownerid = 2;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 2;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // optional string guildplacard = 3;
  inline bool has_guildplacard() const;
  inline void clear_guildplacard();
  static const int kGuildplacardFieldNumber = 3;
  inline const ::std::string& guildplacard() const;
  inline void set_guildplacard(const ::std::string& value);
  inline void set_guildplacard(const char* value);
  inline void set_guildplacard(const char* value, size_t size);
  inline ::std::string* mutable_guildplacard();
  inline ::std::string* release_guildplacard();
  inline void set_allocated_guildplacard(::std::string* guildplacard);

  // optional bool canjoin = 4;
  inline bool has_canjoin() const;
  inline void clear_canjoin();
  static const int kCanjoinFieldNumber = 4;
  inline bool canjoin() const;
  inline void set_canjoin(bool value);

  // optional uint32 joincombat = 5;
  inline bool has_joincombat() const;
  inline void clear_joincombat();
  static const int kJoincombatFieldNumber = 5;
  inline ::google::protobuf::uint32 joincombat() const;
  inline void set_joincombat(::google::protobuf::uint32 value);

  // optional uint64 resources = 6;
  inline bool has_resources() const;
  inline void clear_resources();
  static const int kResourcesFieldNumber = 6;
  inline ::google::protobuf::uint64 resources() const;
  inline void set_resources(::google::protobuf::uint64 value);

  // repeated uint32 buildlist = 7;
  inline int buildlist_size() const;
  inline void clear_buildlist();
  static const int kBuildlistFieldNumber = 7;
  inline ::google::protobuf::uint32 buildlist(int index) const;
  inline void set_buildlist(int index, ::google::protobuf::uint32 value);
  inline void add_buildlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buildlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buildlist();

  // repeated .proto.message.ReqInfo reqlist = 8;
  inline int reqlist_size() const;
  inline void clear_reqlist();
  static const int kReqlistFieldNumber = 8;
  inline const ::proto::message::ReqInfo& reqlist(int index) const;
  inline ::proto::message::ReqInfo* mutable_reqlist(int index);
  inline ::proto::message::ReqInfo* add_reqlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >&
      reqlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >*
      mutable_reqlist();

  // repeated .proto.message.GuildShopInfo shopinfo = 9;
  inline int shopinfo_size() const;
  inline void clear_shopinfo();
  static const int kShopinfoFieldNumber = 9;
  inline const ::proto::message::GuildShopInfo& shopinfo(int index) const;
  inline ::proto::message::GuildShopInfo* mutable_shopinfo(int index);
  inline ::proto::message::GuildShopInfo* add_shopinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >&
      shopinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >*
      mutable_shopinfo();

  // optional uint32 refrishmultiple = 10;
  inline bool has_refrishmultiple() const;
  inline void clear_refrishmultiple();
  static const int kRefrishmultipleFieldNumber = 10;
  inline ::google::protobuf::uint32 refrishmultiple() const;
  inline void set_refrishmultiple(::google::protobuf::uint32 value);

  // optional uint64 refrishtime = 11;
  inline bool has_refrishtime() const;
  inline void clear_refrishtime();
  static const int kRefrishtimeFieldNumber = 11;
  inline ::google::protobuf::uint64 refrishtime() const;
  inline void set_refrishtime(::google::protobuf::uint64 value);

  // repeated .proto.message.KickoutInfo kickinfolist = 12;
  inline int kickinfolist_size() const;
  inline void clear_kickinfolist();
  static const int kKickinfolistFieldNumber = 12;
  inline const ::proto::message::KickoutInfo& kickinfolist(int index) const;
  inline ::proto::message::KickoutInfo* mutable_kickinfolist(int index);
  inline ::proto::message::KickoutInfo* add_kickinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >&
      kickinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >*
      mutable_kickinfolist();

  // optional uint32 weekmissioncounts = 15;
  inline bool has_weekmissioncounts() const;
  inline void clear_weekmissioncounts();
  static const int kWeekmissioncountsFieldNumber = 15;
  inline ::google::protobuf::uint32 weekmissioncounts() const;
  inline void set_weekmissioncounts(::google::protobuf::uint32 value);

  // repeated uint64 onlinecounts = 16;
  inline int onlinecounts_size() const;
  inline void clear_onlinecounts();
  static const int kOnlinecountsFieldNumber = 16;
  inline ::google::protobuf::uint64 onlinecounts(int index) const;
  inline void set_onlinecounts(int index, ::google::protobuf::uint64 value);
  inline void add_onlinecounts(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      onlinecounts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_onlinecounts();

  // repeated .proto.message.QuestHelpInfo helpinfo = 19;
  inline int helpinfo_size() const;
  inline void clear_helpinfo();
  static const int kHelpinfoFieldNumber = 19;
  inline const ::proto::message::QuestHelpInfo& helpinfo(int index) const;
  inline ::proto::message::QuestHelpInfo* mutable_helpinfo(int index);
  inline ::proto::message::QuestHelpInfo* add_helpinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::QuestHelpInfo >&
      helpinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::QuestHelpInfo >*
      mutable_helpinfo();

  // optional bool isaudit = 20;
  inline bool has_isaudit() const;
  inline void clear_isaudit();
  static const int kIsauditFieldNumber = 20;
  inline bool isaudit() const;
  inline void set_isaudit(bool value);

  // optional .proto.message.ImpeachInfo impinfo = 21;
  inline bool has_impinfo() const;
  inline void clear_impinfo();
  static const int kImpinfoFieldNumber = 21;
  inline const ::proto::message::ImpeachInfo& impinfo() const;
  inline ::proto::message::ImpeachInfo* mutable_impinfo();
  inline ::proto::message::ImpeachInfo* release_impinfo();
  inline void set_allocated_impinfo(::proto::message::ImpeachInfo* impinfo);

  // optional string guilddeclaration = 22;
  inline bool has_guilddeclaration() const;
  inline void clear_guilddeclaration();
  static const int kGuilddeclarationFieldNumber = 22;
  inline const ::std::string& guilddeclaration() const;
  inline void set_guilddeclaration(const ::std::string& value);
  inline void set_guilddeclaration(const char* value);
  inline void set_guilddeclaration(const char* value, size_t size);
  inline ::std::string* mutable_guilddeclaration();
  inline ::std::string* release_guilddeclaration();
  inline void set_allocated_guilddeclaration(::std::string* guilddeclaration);

  // optional uint64 lastcosttime = 23;
  inline bool has_lastcosttime() const;
  inline void clear_lastcosttime();
  static const int kLastcosttimeFieldNumber = 23;
  inline ::google::protobuf::uint64 lastcosttime() const;
  inline void set_lastcosttime(::google::protobuf::uint64 value);

  // optional uint64 boomtime = 24;
  inline bool has_boomtime() const;
  inline void clear_boomtime();
  static const int kBoomtimeFieldNumber = 24;
  inline ::google::protobuf::uint64 boomtime() const;
  inline void set_boomtime(::google::protobuf::uint64 value);

  // optional uint64 settlementtime = 25;
  inline bool has_settlementtime() const;
  inline void clear_settlementtime();
  static const int kSettlementtimeFieldNumber = 25;
  inline ::google::protobuf::uint64 settlementtime() const;
  inline void set_settlementtime(::google::protobuf::uint64 value);

  // optional .proto.message.GuildBoss bossinfo = 26;
  inline bool has_bossinfo() const;
  inline void clear_bossinfo();
  static const int kBossinfoFieldNumber = 26;
  inline const ::proto::message::GuildBoss& bossinfo() const;
  inline ::proto::message::GuildBoss* mutable_bossinfo();
  inline ::proto::message::GuildBoss* release_bossinfo();
  inline void set_allocated_bossinfo(::proto::message::GuildBoss* bossinfo);

  // optional uint32 maxitem = 27;
  inline bool has_maxitem() const;
  inline void clear_maxitem();
  static const int kMaxitemFieldNumber = 27;
  inline ::google::protobuf::uint32 maxitem() const;
  inline void set_maxitem(::google::protobuf::uint32 value);

  // repeated .proto.message.Equip guildequip = 28;
  inline int guildequip_size() const;
  inline void clear_guildequip();
  static const int kGuildequipFieldNumber = 28;
  inline const ::proto::message::Equip& guildequip(int index) const;
  inline ::proto::message::Equip* mutable_guildequip(int index);
  inline ::proto::message::Equip* add_guildequip();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      guildequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_guildequip();

  // optional uint32 buygridcounts = 29;
  inline bool has_buygridcounts() const;
  inline void clear_buygridcounts();
  static const int kBuygridcountsFieldNumber = 29;
  inline ::google::protobuf::uint32 buygridcounts() const;
  inline void set_buygridcounts(::google::protobuf::uint32 value);

  // repeated .proto.message.RecordData depositlist = 30;
  inline int depositlist_size() const;
  inline void clear_depositlist();
  static const int kDepositlistFieldNumber = 30;
  inline const ::proto::message::RecordData& depositlist(int index) const;
  inline ::proto::message::RecordData* mutable_depositlist(int index);
  inline ::proto::message::RecordData* add_depositlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
      depositlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
      mutable_depositlist();

  // repeated .proto.message.RecordData fetchlist = 31;
  inline int fetchlist_size() const;
  inline void clear_fetchlist();
  static const int kFetchlistFieldNumber = 31;
  inline const ::proto::message::RecordData& fetchlist(int index) const;
  inline ::proto::message::RecordData* mutable_fetchlist(int index);
  inline ::proto::message::RecordData* add_fetchlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
      fetchlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
      mutable_fetchlist();

  // @@protoc_insertion_point(class_scope:proto.message.MixGuildData)
 private:
  inline void set_has_levuptime();
  inline void clear_has_levuptime();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_guildplacard();
  inline void clear_has_guildplacard();
  inline void set_has_canjoin();
  inline void clear_has_canjoin();
  inline void set_has_joincombat();
  inline void clear_has_joincombat();
  inline void set_has_resources();
  inline void clear_has_resources();
  inline void set_has_refrishmultiple();
  inline void clear_has_refrishmultiple();
  inline void set_has_refrishtime();
  inline void clear_has_refrishtime();
  inline void set_has_weekmissioncounts();
  inline void clear_has_weekmissioncounts();
  inline void set_has_isaudit();
  inline void clear_has_isaudit();
  inline void set_has_impinfo();
  inline void clear_has_impinfo();
  inline void set_has_guilddeclaration();
  inline void clear_has_guilddeclaration();
  inline void set_has_lastcosttime();
  inline void clear_has_lastcosttime();
  inline void set_has_boomtime();
  inline void clear_has_boomtime();
  inline void set_has_settlementtime();
  inline void clear_has_settlementtime();
  inline void set_has_bossinfo();
  inline void clear_has_bossinfo();
  inline void set_has_maxitem();
  inline void clear_has_maxitem();
  inline void set_has_buygridcounts();
  inline void clear_has_buygridcounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 levuptime_;
  ::google::protobuf::uint64 ownerid_;
  ::std::string* guildplacard_;
  ::google::protobuf::uint64 resources_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buildlist_;
  ::google::protobuf::uint32 joincombat_;
  ::google::protobuf::uint32 refrishmultiple_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo > reqlist_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo > shopinfo_;
  ::google::protobuf::uint64 refrishtime_;
  bool canjoin_;
  bool isaudit_;
  ::google::protobuf::uint32 weekmissioncounts_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo > kickinfolist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > onlinecounts_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::QuestHelpInfo > helpinfo_;
  ::proto::message::ImpeachInfo* impinfo_;
  ::std::string* guilddeclaration_;
  ::google::protobuf::uint64 lastcosttime_;
  ::google::protobuf::uint64 boomtime_;
  ::google::protobuf::uint64 settlementtime_;
  ::proto::message::GuildBoss* bossinfo_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > guildequip_;
  ::google::protobuf::uint32 maxitem_;
  ::google::protobuf::uint32 buygridcounts_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData > depositlist_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData > fetchlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static MixGuildData* default_instance_;
};
// -------------------------------------------------------------------

class GuildData : public ::google::protobuf::Message {
 public:
  GuildData();
  virtual ~GuildData();

  GuildData(const GuildData& from);

  inline GuildData& operator=(const GuildData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildData& default_instance();

  void Swap(GuildData* other);

  // implements Message ----------------------------------------------

  GuildData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildData& from);
  void MergeFrom(const GuildData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 2;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 2;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional uint32 guildlevel = 3;
  inline bool has_guildlevel() const;
  inline void clear_guildlevel();
  static const int kGuildlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 guildlevel() const;
  inline void set_guildlevel(::google::protobuf::uint32 value);

  // optional string ownername = 4;
  inline bool has_ownername() const;
  inline void clear_ownername();
  static const int kOwnernameFieldNumber = 4;
  inline const ::std::string& ownername() const;
  inline void set_ownername(const ::std::string& value);
  inline void set_ownername(const char* value);
  inline void set_ownername(const char* value, size_t size);
  inline ::std::string* mutable_ownername();
  inline ::std::string* release_ownername();
  inline void set_allocated_ownername(::std::string* ownername);

  // optional uint32 prosperity = 5;
  inline bool has_prosperity() const;
  inline void clear_prosperity();
  static const int kProsperityFieldNumber = 5;
  inline ::google::protobuf::uint32 prosperity() const;
  inline void set_prosperity(::google::protobuf::uint32 value);

  // optional .proto.message.MixGuildData mixinfo = 6;
  inline bool has_mixinfo() const;
  inline void clear_mixinfo();
  static const int kMixinfoFieldNumber = 6;
  inline const ::proto::message::MixGuildData& mixinfo() const;
  inline ::proto::message::MixGuildData* mutable_mixinfo();
  inline ::proto::message::MixGuildData* release_mixinfo();
  inline void set_allocated_mixinfo(::proto::message::MixGuildData* mixinfo);

  // @@protoc_insertion_point(class_scope:proto.message.GuildData)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_guildlevel();
  inline void clear_has_guildlevel();
  inline void set_has_ownername();
  inline void clear_has_ownername();
  inline void set_has_prosperity();
  inline void clear_has_prosperity();
  inline void set_has_mixinfo();
  inline void clear_has_mixinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::std::string* ownername_;
  ::google::protobuf::uint32 guildlevel_;
  ::google::protobuf::uint32 prosperity_;
  ::proto::message::MixGuildData* mixinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildData* default_instance_;
};
// -------------------------------------------------------------------

class MixMemberDate : public ::google::protobuf::Message {
 public:
  MixMemberDate();
  virtual ~MixMemberDate();

  MixMemberDate(const MixMemberDate& from);

  inline MixMemberDate& operator=(const MixMemberDate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MixMemberDate& default_instance();

  void Swap(MixMemberDate* other);

  // implements Message ----------------------------------------------

  MixMemberDate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MixMemberDate& from);
  void MergeFrom(const MixMemberDate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 getwagetime = 1;
  inline bool has_getwagetime() const;
  inline void clear_getwagetime();
  static const int kGetwagetimeFieldNumber = 1;
  inline ::google::protobuf::uint64 getwagetime() const;
  inline void set_getwagetime(::google::protobuf::uint64 value);

  // optional uint64 jointime = 2;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 2;
  inline ::google::protobuf::uint64 jointime() const;
  inline void set_jointime(::google::protobuf::uint64 value);

  // optional uint64 offlinetime = 3;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 3;
  inline ::google::protobuf::uint64 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint64 value);

  // optional uint64 buyitemtime = 4;
  inline bool has_buyitemtime() const;
  inline void clear_buyitemtime();
  static const int kBuyitemtimeFieldNumber = 4;
  inline ::google::protobuf::uint64 buyitemtime() const;
  inline void set_buyitemtime(::google::protobuf::uint64 value);

  // optional uint32 buyitemcounts = 5;
  inline bool has_buyitemcounts() const;
  inline void clear_buyitemcounts();
  static const int kBuyitemcountsFieldNumber = 5;
  inline ::google::protobuf::uint32 buyitemcounts() const;
  inline void set_buyitemcounts(::google::protobuf::uint32 value);

  // optional uint32 pendingwage = 6;
  inline bool has_pendingwage() const;
  inline void clear_pendingwage();
  static const int kPendingwageFieldNumber = 6;
  inline ::google::protobuf::uint32 pendingwage() const;
  inline void set_pendingwage(::google::protobuf::uint32 value);

  // optional uint32 currbasewage = 7;
  inline bool has_currbasewage() const;
  inline void clear_currbasewage();
  static const int kCurrbasewageFieldNumber = 7;
  inline ::google::protobuf::uint32 currbasewage() const;
  inline void set_currbasewage(::google::protobuf::uint32 value);

  // optional uint64 accumulated = 8;
  inline bool has_accumulated() const;
  inline void clear_accumulated();
  static const int kAccumulatedFieldNumber = 8;
  inline ::google::protobuf::uint64 accumulated() const;
  inline void set_accumulated(::google::protobuf::uint64 value);

  // optional uint32 weekcontribution = 9;
  inline bool has_weekcontribution() const;
  inline void clear_weekcontribution();
  static const int kWeekcontributionFieldNumber = 9;
  inline ::google::protobuf::uint32 weekcontribution() const;
  inline void set_weekcontribution(::google::protobuf::uint32 value);

  // optional uint32 landbattlecounts = 10;
  inline bool has_landbattlecounts() const;
  inline void clear_landbattlecounts();
  static const int kLandbattlecountsFieldNumber = 10;
  inline ::google::protobuf::uint32 landbattlecounts() const;
  inline void set_landbattlecounts(::google::protobuf::uint32 value);

  // optional uint32 navalbattlecounts = 11;
  inline bool has_navalbattlecounts() const;
  inline void clear_navalbattlecounts();
  static const int kNavalbattlecountsFieldNumber = 11;
  inline ::google::protobuf::uint32 navalbattlecounts() const;
  inline void set_navalbattlecounts(::google::protobuf::uint32 value);

  // optional uint64 impeachmenttime = 12;
  inline bool has_impeachmenttime() const;
  inline void clear_impeachmenttime();
  static const int kImpeachmenttimeFieldNumber = 12;
  inline ::google::protobuf::uint64 impeachmenttime() const;
  inline void set_impeachmenttime(::google::protobuf::uint64 value);

  // optional uint32 combatvalue = 13;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatvalueFieldNumber = 13;
  inline ::google::protobuf::uint32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::uint32 value);

  // optional uint32 alivevalue = 14;
  inline bool has_alivevalue() const;
  inline void clear_alivevalue();
  static const int kAlivevalueFieldNumber = 14;
  inline ::google::protobuf::uint32 alivevalue() const;
  inline void set_alivevalue(::google::protobuf::uint32 value);

  // optional uint32 donate = 15;
  inline bool has_donate() const;
  inline void clear_donate();
  static const int kDonateFieldNumber = 15;
  inline ::google::protobuf::uint32 donate() const;
  inline void set_donate(::google::protobuf::uint32 value);

  // repeated uint32 tbrewardlist = 16;
  inline int tbrewardlist_size() const;
  inline void clear_tbrewardlist();
  static const int kTbrewardlistFieldNumber = 16;
  inline ::google::protobuf::uint32 tbrewardlist(int index) const;
  inline void set_tbrewardlist(int index, ::google::protobuf::uint32 value);
  inline void add_tbrewardlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tbrewardlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tbrewardlist();

  // @@protoc_insertion_point(class_scope:proto.message.MixMemberDate)
 private:
  inline void set_has_getwagetime();
  inline void clear_has_getwagetime();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_buyitemtime();
  inline void clear_has_buyitemtime();
  inline void set_has_buyitemcounts();
  inline void clear_has_buyitemcounts();
  inline void set_has_pendingwage();
  inline void clear_has_pendingwage();
  inline void set_has_currbasewage();
  inline void clear_has_currbasewage();
  inline void set_has_accumulated();
  inline void clear_has_accumulated();
  inline void set_has_weekcontribution();
  inline void clear_has_weekcontribution();
  inline void set_has_landbattlecounts();
  inline void clear_has_landbattlecounts();
  inline void set_has_navalbattlecounts();
  inline void clear_has_navalbattlecounts();
  inline void set_has_impeachmenttime();
  inline void clear_has_impeachmenttime();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_alivevalue();
  inline void clear_has_alivevalue();
  inline void set_has_donate();
  inline void clear_has_donate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 getwagetime_;
  ::google::protobuf::uint64 jointime_;
  ::google::protobuf::uint64 offlinetime_;
  ::google::protobuf::uint64 buyitemtime_;
  ::google::protobuf::uint32 buyitemcounts_;
  ::google::protobuf::uint32 pendingwage_;
  ::google::protobuf::uint64 accumulated_;
  ::google::protobuf::uint32 currbasewage_;
  ::google::protobuf::uint32 weekcontribution_;
  ::google::protobuf::uint32 landbattlecounts_;
  ::google::protobuf::uint32 navalbattlecounts_;
  ::google::protobuf::uint64 impeachmenttime_;
  ::google::protobuf::uint32 combatvalue_;
  ::google::protobuf::uint32 alivevalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tbrewardlist_;
  ::google::protobuf::uint32 donate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static MixMemberDate* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberData : public ::google::protobuf::Message {
 public:
  GuildMemberData();
  virtual ~GuildMemberData();

  GuildMemberData(const GuildMemberData& from);

  inline GuildMemberData& operator=(const GuildMemberData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberData& default_instance();

  void Swap(GuildMemberData* other);

  // implements Message ----------------------------------------------

  GuildMemberData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberData& from);
  void MergeFrom(const GuildMemberData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string strname = 2;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrnameFieldNumber = 2;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 guildid = 4;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 guildoffice = 5;
  inline bool has_guildoffice() const;
  inline void clear_guildoffice();
  static const int kGuildofficeFieldNumber = 5;
  inline ::google::protobuf::uint32 guildoffice() const;
  inline void set_guildoffice(::google::protobuf::uint32 value);

  // optional uint32 guildmoney = 6;
  inline bool has_guildmoney() const;
  inline void clear_guildmoney();
  static const int kGuildmoneyFieldNumber = 6;
  inline ::google::protobuf::uint32 guildmoney() const;
  inline void set_guildmoney(::google::protobuf::uint32 value);

  // optional uint32 profession = 7;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 7;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional .proto.message.MixMemberDate mixinfo = 8;
  inline bool has_mixinfo() const;
  inline void clear_mixinfo();
  static const int kMixinfoFieldNumber = 8;
  inline const ::proto::message::MixMemberDate& mixinfo() const;
  inline ::proto::message::MixMemberDate* mutable_mixinfo();
  inline ::proto::message::MixMemberDate* release_mixinfo();
  inline void set_allocated_mixinfo(::proto::message::MixMemberDate* mixinfo);

  // optional uint32 dhlev = 9;
  inline bool has_dhlev() const;
  inline void clear_dhlev();
  static const int kDhlevFieldNumber = 9;
  inline ::google::protobuf::uint32 dhlev() const;
  inline void set_dhlev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMemberData)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildoffice();
  inline void clear_has_guildoffice();
  inline void set_has_guildmoney();
  inline void clear_has_guildmoney();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_mixinfo();
  inline void clear_has_mixinfo();
  inline void set_has_dhlev();
  inline void clear_has_dhlev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* strname_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 guildoffice_;
  ::google::protobuf::uint32 guildmoney_;
  ::google::protobuf::uint32 profession_;
  ::proto::message::MixMemberDate* mixinfo_;
  ::google::protobuf::uint32 dhlev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberData* default_instance_;
};
// -------------------------------------------------------------------

class MemberListInfo : public ::google::protobuf::Message {
 public:
  MemberListInfo();
  virtual ~MemberListInfo();

  MemberListInfo(const MemberListInfo& from);

  inline MemberListInfo& operator=(const MemberListInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberListInfo& default_instance();

  void Swap(MemberListInfo* other);

  // implements Message ----------------------------------------------

  MemberListInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberListInfo& from);
  void MergeFrom(const MemberListInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string strname = 2;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrnameFieldNumber = 2;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 profession = 4;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 4;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint32 guildoffice = 5;
  inline bool has_guildoffice() const;
  inline void clear_guildoffice();
  static const int kGuildofficeFieldNumber = 5;
  inline ::google::protobuf::uint32 guildoffice() const;
  inline void set_guildoffice(::google::protobuf::uint32 value);

  // optional uint64 jointime = 6;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 6;
  inline ::google::protobuf::uint64 jointime() const;
  inline void set_jointime(::google::protobuf::uint64 value);

  // optional uint64 offlinetime = 7;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 7;
  inline ::google::protobuf::uint64 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint64 value);

  // optional uint64 accumulated = 8;
  inline bool has_accumulated() const;
  inline void clear_accumulated();
  static const int kAccumulatedFieldNumber = 8;
  inline ::google::protobuf::uint64 accumulated() const;
  inline void set_accumulated(::google::protobuf::uint64 value);

  // optional uint32 weekcontribution = 9;
  inline bool has_weekcontribution() const;
  inline void clear_weekcontribution();
  static const int kWeekcontributionFieldNumber = 9;
  inline ::google::protobuf::uint32 weekcontribution() const;
  inline void set_weekcontribution(::google::protobuf::uint32 value);

  // optional uint32 landbattlecounts = 10;
  inline bool has_landbattlecounts() const;
  inline void clear_landbattlecounts();
  static const int kLandbattlecountsFieldNumber = 10;
  inline ::google::protobuf::uint32 landbattlecounts() const;
  inline void set_landbattlecounts(::google::protobuf::uint32 value);

  // optional uint32 navalbattlecounts = 11;
  inline bool has_navalbattlecounts() const;
  inline void clear_navalbattlecounts();
  static const int kNavalbattlecountsFieldNumber = 11;
  inline ::google::protobuf::uint32 navalbattlecounts() const;
  inline void set_navalbattlecounts(::google::protobuf::uint32 value);

  // optional bool isonline = 12;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 12;
  inline bool isonline() const;
  inline void set_isonline(bool value);

  // optional uint32 combatvalue = 13;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatvalueFieldNumber = 13;
  inline ::google::protobuf::uint32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::uint32 value);

  // optional uint32 dhlev = 14;
  inline bool has_dhlev() const;
  inline void clear_dhlev();
  static const int kDhlevFieldNumber = 14;
  inline ::google::protobuf::uint32 dhlev() const;
  inline void set_dhlev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.MemberListInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_guildoffice();
  inline void clear_has_guildoffice();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_accumulated();
  inline void clear_has_accumulated();
  inline void set_has_weekcontribution();
  inline void clear_has_weekcontribution();
  inline void set_has_landbattlecounts();
  inline void clear_has_landbattlecounts();
  inline void set_has_navalbattlecounts();
  inline void clear_has_navalbattlecounts();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_dhlev();
  inline void clear_has_dhlev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* strname_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint64 jointime_;
  ::google::protobuf::uint64 offlinetime_;
  ::google::protobuf::uint32 guildoffice_;
  ::google::protobuf::uint32 weekcontribution_;
  ::google::protobuf::uint64 accumulated_;
  ::google::protobuf::uint32 landbattlecounts_;
  ::google::protobuf::uint32 navalbattlecounts_;
  bool isonline_;
  ::google::protobuf::uint32 combatvalue_;
  ::google::protobuf::uint32 dhlev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static MemberListInfo* default_instance_;
};
// -------------------------------------------------------------------

class UniteGuildData : public ::google::protobuf::Message {
 public:
  UniteGuildData();
  virtual ~UniteGuildData();

  UniteGuildData(const UniteGuildData& from);

  inline UniteGuildData& operator=(const UniteGuildData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniteGuildData& default_instance();

  void Swap(UniteGuildData* other);

  // implements Message ----------------------------------------------

  UniteGuildData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniteGuildData& from);
  void MergeFrom(const UniteGuildData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ranking = 1;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 1;
  inline ::google::protobuf::uint32 ranking() const;
  inline void set_ranking(::google::protobuf::uint32 value);

  // optional string guildname = 2;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 2;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional uint64 reqplayerid = 3;
  inline bool has_reqplayerid() const;
  inline void clear_reqplayerid();
  static const int kReqplayeridFieldNumber = 3;
  inline ::google::protobuf::uint64 reqplayerid() const;
  inline void set_reqplayerid(::google::protobuf::uint64 value);

  // optional uint64 reqguildid = 4;
  inline bool has_reqguildid() const;
  inline void clear_reqguildid();
  static const int kReqguildidFieldNumber = 4;
  inline ::google::protobuf::uint64 reqguildid() const;
  inline void set_reqguildid(::google::protobuf::uint64 value);

  // optional uint32 guildlev = 5;
  inline bool has_guildlev() const;
  inline void clear_guildlev();
  static const int kGuildlevFieldNumber = 5;
  inline ::google::protobuf::uint32 guildlev() const;
  inline void set_guildlev(::google::protobuf::uint32 value);

  // optional uint32 membernum = 6;
  inline bool has_membernum() const;
  inline void clear_membernum();
  static const int kMembernumFieldNumber = 6;
  inline ::google::protobuf::uint32 membernum() const;
  inline void set_membernum(::google::protobuf::uint32 value);

  // optional string ackguildname = 7;
  inline bool has_ackguildname() const;
  inline void clear_ackguildname();
  static const int kAckguildnameFieldNumber = 7;
  inline const ::std::string& ackguildname() const;
  inline void set_ackguildname(const ::std::string& value);
  inline void set_ackguildname(const char* value);
  inline void set_ackguildname(const char* value, size_t size);
  inline ::std::string* mutable_ackguildname();
  inline ::std::string* release_ackguildname();
  inline void set_allocated_ackguildname(::std::string* ackguildname);

  // optional uint64 ackplayerid = 8;
  inline bool has_ackplayerid() const;
  inline void clear_ackplayerid();
  static const int kAckplayeridFieldNumber = 8;
  inline ::google::protobuf::uint64 ackplayerid() const;
  inline void set_ackplayerid(::google::protobuf::uint64 value);

  // optional uint64 ackguildid = 9;
  inline bool has_ackguildid() const;
  inline void clear_ackguildid();
  static const int kAckguildidFieldNumber = 9;
  inline ::google::protobuf::uint64 ackguildid() const;
  inline void set_ackguildid(::google::protobuf::uint64 value);

  // optional uint32 whomaster = 10;
  inline bool has_whomaster() const;
  inline void clear_whomaster();
  static const int kWhomasterFieldNumber = 10;
  inline ::google::protobuf::uint32 whomaster() const;
  inline void set_whomaster(::google::protobuf::uint32 value);

  // optional uint64 endtime = 11;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 11;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.UniteGuildData)
 private:
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_reqplayerid();
  inline void clear_has_reqplayerid();
  inline void set_has_reqguildid();
  inline void clear_has_reqguildid();
  inline void set_has_guildlev();
  inline void clear_has_guildlev();
  inline void set_has_membernum();
  inline void clear_has_membernum();
  inline void set_has_ackguildname();
  inline void clear_has_ackguildname();
  inline void set_has_ackplayerid();
  inline void clear_has_ackplayerid();
  inline void set_has_ackguildid();
  inline void clear_has_ackguildid();
  inline void set_has_whomaster();
  inline void clear_has_whomaster();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guildname_;
  ::google::protobuf::uint64 reqplayerid_;
  ::google::protobuf::uint32 ranking_;
  ::google::protobuf::uint32 guildlev_;
  ::google::protobuf::uint64 reqguildid_;
  ::std::string* ackguildname_;
  ::google::protobuf::uint64 ackplayerid_;
  ::google::protobuf::uint32 membernum_;
  ::google::protobuf::uint32 whomaster_;
  ::google::protobuf::uint64 ackguildid_;
  ::google::protobuf::uint64 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static UniteGuildData* default_instance_;
};
// -------------------------------------------------------------------

class GuildUsedName : public ::google::protobuf::Message {
 public:
  GuildUsedName();
  virtual ~GuildUsedName();

  GuildUsedName(const GuildUsedName& from);

  inline GuildUsedName& operator=(const GuildUsedName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildUsedName& default_instance();

  void Swap(GuildUsedName* other);

  // implements Message ----------------------------------------------

  GuildUsedName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildUsedName& from);
  void MergeFrom(const GuildUsedName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string guildusedname = 1;
  inline int guildusedname_size() const;
  inline void clear_guildusedname();
  static const int kGuildusednameFieldNumber = 1;
  inline const ::std::string& guildusedname(int index) const;
  inline ::std::string* mutable_guildusedname(int index);
  inline void set_guildusedname(int index, const ::std::string& value);
  inline void set_guildusedname(int index, const char* value);
  inline void set_guildusedname(int index, const char* value, size_t size);
  inline ::std::string* add_guildusedname();
  inline void add_guildusedname(const ::std::string& value);
  inline void add_guildusedname(const char* value);
  inline void add_guildusedname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& guildusedname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guildusedname();

  // @@protoc_insertion_point(class_scope:proto.message.GuildUsedName)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> guildusedname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildUsedName* default_instance_;
};
// -------------------------------------------------------------------

class GUsedName : public ::google::protobuf::Message {
 public:
  GUsedName();
  virtual ~GUsedName();

  GUsedName(const GUsedName& from);

  inline GUsedName& operator=(const GUsedName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GUsedName& default_instance();

  void Swap(GUsedName* other);

  // implements Message ----------------------------------------------

  GUsedName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GUsedName& from);
  void MergeFrom(const GUsedName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guildusedname = 1;
  inline bool has_guildusedname() const;
  inline void clear_guildusedname();
  static const int kGuildusednameFieldNumber = 1;
  inline const ::std::string& guildusedname() const;
  inline void set_guildusedname(const ::std::string& value);
  inline void set_guildusedname(const char* value);
  inline void set_guildusedname(const char* value, size_t size);
  inline ::std::string* mutable_guildusedname();
  inline ::std::string* release_guildusedname();
  inline void set_allocated_guildusedname(::std::string* guildusedname);

  // @@protoc_insertion_point(class_scope:proto.message.GUsedName)
 private:
  inline void set_has_guildusedname();
  inline void clear_has_guildusedname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guildusedname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GUsedName* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqGuildList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqGuildList();
  virtual ~GuildMSG_CS_ReqGuildList();

  GuildMSG_CS_ReqGuildList(const GuildMSG_CS_ReqGuildList& from);

  inline GuildMSG_CS_ReqGuildList& operator=(const GuildMSG_CS_ReqGuildList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqGuildList& default_instance();

  void Swap(GuildMSG_CS_ReqGuildList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqGuildList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqGuildList& from);
  void MergeFrom(const GuildMSG_CS_ReqGuildList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pagenum = 1;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPagenumFieldNumber = 1;
  inline ::google::protobuf::uint32 pagenum() const;
  inline void set_pagenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqGuildList)
 private:
  inline void set_has_pagenum();
  inline void clear_has_pagenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pagenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqGuildList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildList();
  virtual ~GuildMSG_SC_AckGuildList();

  GuildMSG_SC_AckGuildList(const GuildMSG_SC_AckGuildList& from);

  inline GuildMSG_SC_AckGuildList& operator=(const GuildMSG_SC_AckGuildList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildList& default_instance();

  void Swap(GuildMSG_SC_AckGuildList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildList& from);
  void MergeFrom(const GuildMSG_SC_AckGuildList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated .proto.message.GuildListInfo infolist = 2;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfolistFieldNumber = 2;
  inline const ::proto::message::GuildListInfo& infolist(int index) const;
  inline ::proto::message::GuildListInfo* mutable_infolist(int index);
  inline ::proto::message::GuildListInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo > infolist_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqCreate : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqCreate();
  virtual ~GuildMSG_CS_ReqCreate();

  GuildMSG_CS_ReqCreate(const GuildMSG_CS_ReqCreate& from);

  inline GuildMSG_CS_ReqCreate& operator=(const GuildMSG_CS_ReqCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqCreate& default_instance();

  void Swap(GuildMSG_CS_ReqCreate* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqCreate& from);
  void MergeFrom(const GuildMSG_CS_ReqCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guildname = 1;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 1;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string guilddeclaration = 2;
  inline bool has_guilddeclaration() const;
  inline void clear_guilddeclaration();
  static const int kGuilddeclarationFieldNumber = 2;
  inline const ::std::string& guilddeclaration() const;
  inline void set_guilddeclaration(const ::std::string& value);
  inline void set_guilddeclaration(const char* value);
  inline void set_guilddeclaration(const char* value, size_t size);
  inline ::std::string* mutable_guilddeclaration();
  inline ::std::string* release_guilddeclaration();
  inline void set_allocated_guilddeclaration(::std::string* guilddeclaration);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqCreate)
 private:
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_guilddeclaration();
  inline void clear_has_guilddeclaration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guildname_;
  ::std::string* guilddeclaration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqCreate* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckCreate : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckCreate();
  virtual ~GuildMSG_SC_AckCreate();

  GuildMSG_SC_AckCreate(const GuildMSG_SC_AckCreate& from);

  inline GuildMSG_SC_AckCreate& operator=(const GuildMSG_SC_AckCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckCreate& default_instance();

  void Swap(GuildMSG_SC_AckCreate* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckCreate& from);
  void MergeFrom(const GuildMSG_SC_AckCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reslut = 1;
  inline bool has_reslut() const;
  inline void clear_reslut();
  static const int kReslutFieldNumber = 1;
  inline ::google::protobuf::uint32 reslut() const;
  inline void set_reslut(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckCreate)
 private:
  inline void set_has_reslut();
  inline void clear_has_reslut();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reslut_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckCreate* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqJoin();
  virtual ~GuildMSG_CS_ReqJoin();

  GuildMSG_CS_ReqJoin(const GuildMSG_CS_ReqJoin& from);

  inline GuildMSG_CS_ReqJoin& operator=(const GuildMSG_CS_ReqJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqJoin& default_instance();

  void Swap(GuildMSG_CS_ReqJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqJoin& from);
  void MergeFrom(const GuildMSG_CS_ReqJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqJoin)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckJoin();
  virtual ~GuildMSG_SC_AckJoin();

  GuildMSG_SC_AckJoin(const GuildMSG_SC_AckJoin& from);

  inline GuildMSG_SC_AckJoin& operator=(const GuildMSG_SC_AckJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckJoin& default_instance();

  void Swap(GuildMSG_SC_AckJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckJoin& from);
  void MergeFrom(const GuildMSG_SC_AckJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reslut = 1;
  inline bool has_reslut() const;
  inline void clear_reslut();
  static const int kReslutFieldNumber = 1;
  inline ::google::protobuf::uint32 reslut() const;
  inline void set_reslut(::google::protobuf::uint32 value);

  // optional uint64 timesup = 2;
  inline bool has_timesup() const;
  inline void clear_timesup();
  static const int kTimesupFieldNumber = 2;
  inline ::google::protobuf::uint64 timesup() const;
  inline void set_timesup(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckJoin)
 private:
  inline void set_has_reslut();
  inline void clear_has_reslut();
  inline void set_has_timesup();
  inline void clear_has_timesup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 timesup_;
  ::google::protobuf::uint32 reslut_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqQuickJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqQuickJoin();
  virtual ~GuildMSG_CS_ReqQuickJoin();

  GuildMSG_CS_ReqQuickJoin(const GuildMSG_CS_ReqQuickJoin& from);

  inline GuildMSG_CS_ReqQuickJoin& operator=(const GuildMSG_CS_ReqQuickJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqQuickJoin& default_instance();

  void Swap(GuildMSG_CS_ReqQuickJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqQuickJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqQuickJoin& from);
  void MergeFrom(const GuildMSG_CS_ReqQuickJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqQuickJoin)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqQuickJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckQuickJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckQuickJoin();
  virtual ~GuildMSG_SC_AckQuickJoin();

  GuildMSG_SC_AckQuickJoin(const GuildMSG_SC_AckQuickJoin& from);

  inline GuildMSG_SC_AckQuickJoin& operator=(const GuildMSG_SC_AckQuickJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckQuickJoin& default_instance();

  void Swap(GuildMSG_SC_AckQuickJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckQuickJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckQuickJoin& from);
  void MergeFrom(const GuildMSG_SC_AckQuickJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reslut = 1;
  inline bool has_reslut() const;
  inline void clear_reslut();
  static const int kReslutFieldNumber = 1;
  inline ::google::protobuf::uint32 reslut() const;
  inline void set_reslut(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckQuickJoin)
 private:
  inline void set_has_reslut();
  inline void clear_has_reslut();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reslut_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckQuickJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqFind : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqFind();
  virtual ~GuildMSG_CS_ReqFind();

  GuildMSG_CS_ReqFind(const GuildMSG_CS_ReqFind& from);

  inline GuildMSG_CS_ReqFind& operator=(const GuildMSG_CS_ReqFind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqFind& default_instance();

  void Swap(GuildMSG_CS_ReqFind* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqFind* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqFind& from);
  void MergeFrom(const GuildMSG_CS_ReqFind& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guildname = 1;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 1;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqFind)
 private:
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guildname_;
  ::google::protobuf::uint64 guildid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqFind* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckFind : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckFind();
  virtual ~GuildMSG_SC_AckFind();

  GuildMSG_SC_AckFind(const GuildMSG_SC_AckFind& from);

  inline GuildMSG_SC_AckFind& operator=(const GuildMSG_SC_AckFind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckFind& default_instance();

  void Swap(GuildMSG_SC_AckFind* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckFind* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckFind& from);
  void MergeFrom(const GuildMSG_SC_AckFind& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 counts = 1;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 1;
  inline ::google::protobuf::uint32 counts() const;
  inline void set_counts(::google::protobuf::uint32 value);

  // repeated .proto.message.GuildListInfo infolist = 2;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfolistFieldNumber = 2;
  inline const ::proto::message::GuildListInfo& infolist(int index) const;
  inline ::proto::message::GuildListInfo* mutable_infolist(int index);
  inline ::proto::message::GuildListInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckFind)
 private:
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo > infolist_;
  ::google::protobuf::uint32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckFind* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqGuildInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqGuildInfo();
  virtual ~GuildMSG_CS_ReqGuildInfo();

  GuildMSG_CS_ReqGuildInfo(const GuildMSG_CS_ReqGuildInfo& from);

  inline GuildMSG_CS_ReqGuildInfo& operator=(const GuildMSG_CS_ReqGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqGuildInfo& default_instance();

  void Swap(GuildMSG_CS_ReqGuildInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqGuildInfo& from);
  void MergeFrom(const GuildMSG_CS_ReqGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqGuildInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildInfo();
  virtual ~GuildMSG_SC_AckGuildInfo();

  GuildMSG_SC_AckGuildInfo(const GuildMSG_SC_AckGuildInfo& from);

  inline GuildMSG_SC_AckGuildInfo& operator=(const GuildMSG_SC_AckGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildInfo& default_instance();

  void Swap(GuildMSG_SC_AckGuildInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildInfo& from);
  void MergeFrom(const GuildMSG_SC_AckGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 membercounts = 2;
  inline bool has_membercounts() const;
  inline void clear_membercounts();
  static const int kMembercountsFieldNumber = 2;
  inline ::google::protobuf::uint32 membercounts() const;
  inline void set_membercounts(::google::protobuf::uint32 value);

  // optional uint32 rangking = 3;
  inline bool has_rangking() const;
  inline void clear_rangking();
  static const int kRangkingFieldNumber = 3;
  inline ::google::protobuf::uint32 rangking() const;
  inline void set_rangking(::google::protobuf::uint32 value);

  // optional .proto.message.GuildData guildinfo = 6;
  inline bool has_guildinfo() const;
  inline void clear_guildinfo();
  static const int kGuildinfoFieldNumber = 6;
  inline const ::proto::message::GuildData& guildinfo() const;
  inline ::proto::message::GuildData* mutable_guildinfo();
  inline ::proto::message::GuildData* release_guildinfo();
  inline void set_allocated_guildinfo(::proto::message::GuildData* guildinfo);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_membercounts();
  inline void clear_has_membercounts();
  inline void set_has_rangking();
  inline void clear_has_rangking();
  inline void set_has_guildinfo();
  inline void clear_has_guildinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 membercounts_;
  ::proto::message::GuildData* guildinfo_;
  ::google::protobuf::uint32 rangking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqMemberInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqMemberInfo();
  virtual ~GuildMSG_CS_ReqMemberInfo();

  GuildMSG_CS_ReqMemberInfo(const GuildMSG_CS_ReqMemberInfo& from);

  inline GuildMSG_CS_ReqMemberInfo& operator=(const GuildMSG_CS_ReqMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqMemberInfo& default_instance();

  void Swap(GuildMSG_CS_ReqMemberInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqMemberInfo& from);
  void MergeFrom(const GuildMSG_CS_ReqMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqMemberInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckMemberInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckMemberInfo();
  virtual ~GuildMSG_SC_AckMemberInfo();

  GuildMSG_SC_AckMemberInfo(const GuildMSG_SC_AckMemberInfo& from);

  inline GuildMSG_SC_AckMemberInfo& operator=(const GuildMSG_SC_AckMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckMemberInfo& default_instance();

  void Swap(GuildMSG_SC_AckMemberInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckMemberInfo& from);
  void MergeFrom(const GuildMSG_SC_AckMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .proto.message.GuildMemberData memberinfo = 2;
  inline bool has_memberinfo() const;
  inline void clear_memberinfo();
  static const int kMemberinfoFieldNumber = 2;
  inline const ::proto::message::GuildMemberData& memberinfo() const;
  inline ::proto::message::GuildMemberData* mutable_memberinfo();
  inline ::proto::message::GuildMemberData* release_memberinfo();
  inline void set_allocated_memberinfo(::proto::message::GuildMemberData* memberinfo);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckMemberInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_memberinfo();
  inline void clear_has_memberinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::GuildMemberData* memberinfo_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqMemberList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqMemberList();
  virtual ~GuildMSG_CS_ReqMemberList();

  GuildMSG_CS_ReqMemberList(const GuildMSG_CS_ReqMemberList& from);

  inline GuildMSG_CS_ReqMemberList& operator=(const GuildMSG_CS_ReqMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqMemberList& default_instance();

  void Swap(GuildMSG_CS_ReqMemberList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqMemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqMemberList& from);
  void MergeFrom(const GuildMSG_CS_ReqMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pagenum = 1;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPagenumFieldNumber = 1;
  inline ::google::protobuf::uint32 pagenum() const;
  inline void set_pagenum(::google::protobuf::uint32 value);

  // optional int32 isInTeam = 2;
  inline bool has_isinteam() const;
  inline void clear_isinteam();
  static const int kIsInTeamFieldNumber = 2;
  inline ::google::protobuf::int32 isinteam() const;
  inline void set_isinteam(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqMemberList)
 private:
  inline void set_has_pagenum();
  inline void clear_has_pagenum();
  inline void set_has_isinteam();
  inline void clear_has_isinteam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pagenum_;
  ::google::protobuf::int32 isinteam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqMemberList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckMemberList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckMemberList();
  virtual ~GuildMSG_SC_AckMemberList();

  GuildMSG_SC_AckMemberList(const GuildMSG_SC_AckMemberList& from);

  inline GuildMSG_SC_AckMemberList& operator=(const GuildMSG_SC_AckMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckMemberList& default_instance();

  void Swap(GuildMSG_SC_AckMemberList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckMemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckMemberList& from);
  void MergeFrom(const GuildMSG_SC_AckMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pagenum = 1;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPagenumFieldNumber = 1;
  inline ::google::protobuf::uint32 pagenum() const;
  inline void set_pagenum(::google::protobuf::uint32 value);

  // repeated .proto.message.MemberListInfo memberinfo = 2;
  inline int memberinfo_size() const;
  inline void clear_memberinfo();
  static const int kMemberinfoFieldNumber = 2;
  inline const ::proto::message::MemberListInfo& memberinfo(int index) const;
  inline ::proto::message::MemberListInfo* mutable_memberinfo(int index);
  inline ::proto::message::MemberListInfo* add_memberinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MemberListInfo >&
      memberinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::MemberListInfo >*
      mutable_memberinfo();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckMemberList)
 private:
  inline void set_has_pagenum();
  inline void clear_has_pagenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::MemberListInfo > memberinfo_;
  ::google::protobuf::uint32 pagenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckMemberList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqQuit : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqQuit();
  virtual ~GuildMSG_CS_ReqQuit();

  GuildMSG_CS_ReqQuit(const GuildMSG_CS_ReqQuit& from);

  inline GuildMSG_CS_ReqQuit& operator=(const GuildMSG_CS_ReqQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqQuit& default_instance();

  void Swap(GuildMSG_CS_ReqQuit* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqQuit& from);
  void MergeFrom(const GuildMSG_CS_ReqQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqQuit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqQuit* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckQuit : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckQuit();
  virtual ~GuildMSG_SC_AckQuit();

  GuildMSG_SC_AckQuit(const GuildMSG_SC_AckQuit& from);

  inline GuildMSG_SC_AckQuit& operator=(const GuildMSG_SC_AckQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckQuit& default_instance();

  void Swap(GuildMSG_SC_AckQuit* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckQuit& from);
  void MergeFrom(const GuildMSG_SC_AckQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckQuit)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckQuit* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqSetJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqSetJoin();
  virtual ~GuildMSG_CS_ReqSetJoin();

  GuildMSG_CS_ReqSetJoin(const GuildMSG_CS_ReqSetJoin& from);

  inline GuildMSG_CS_ReqSetJoin& operator=(const GuildMSG_CS_ReqSetJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqSetJoin& default_instance();

  void Swap(GuildMSG_CS_ReqSetJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqSetJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqSetJoin& from);
  void MergeFrom(const GuildMSG_CS_ReqSetJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // optional uint32 joincombatser = 2;
  inline bool has_joincombatser() const;
  inline void clear_joincombatser();
  static const int kJoincombatserFieldNumber = 2;
  inline ::google::protobuf::uint32 joincombatser() const;
  inline void set_joincombatser(::google::protobuf::uint32 value);

  // optional bool isaudit = 3;
  inline bool has_isaudit() const;
  inline void clear_isaudit();
  static const int kIsauditFieldNumber = 3;
  inline bool isaudit() const;
  inline void set_isaudit(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqSetJoin)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_joincombatser();
  inline void clear_has_joincombatser();
  inline void set_has_isaudit();
  inline void clear_has_isaudit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 joincombatser_;
  bool isopen_;
  bool isaudit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqSetJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckSetJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckSetJoin();
  virtual ~GuildMSG_SC_AckSetJoin();

  GuildMSG_SC_AckSetJoin(const GuildMSG_SC_AckSetJoin& from);

  inline GuildMSG_SC_AckSetJoin& operator=(const GuildMSG_SC_AckSetJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckSetJoin& default_instance();

  void Swap(GuildMSG_SC_AckSetJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckSetJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckSetJoin& from);
  void MergeFrom(const GuildMSG_SC_AckSetJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckSetJoin)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckSetJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqJoinList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqJoinList();
  virtual ~GuildMSG_CS_ReqJoinList();

  GuildMSG_CS_ReqJoinList(const GuildMSG_CS_ReqJoinList& from);

  inline GuildMSG_CS_ReqJoinList& operator=(const GuildMSG_CS_ReqJoinList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqJoinList& default_instance();

  void Swap(GuildMSG_CS_ReqJoinList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqJoinList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqJoinList& from);
  void MergeFrom(const GuildMSG_CS_ReqJoinList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pagenum = 1;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPagenumFieldNumber = 1;
  inline ::google::protobuf::uint32 pagenum() const;
  inline void set_pagenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqJoinList)
 private:
  inline void set_has_pagenum();
  inline void clear_has_pagenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pagenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqJoinList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckJoinList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckJoinList();
  virtual ~GuildMSG_SC_AckJoinList();

  GuildMSG_SC_AckJoinList(const GuildMSG_SC_AckJoinList& from);

  inline GuildMSG_SC_AckJoinList& operator=(const GuildMSG_SC_AckJoinList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckJoinList& default_instance();

  void Swap(GuildMSG_SC_AckJoinList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckJoinList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckJoinList& from);
  void MergeFrom(const GuildMSG_SC_AckJoinList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated .proto.message.ReqInfo infolist = 2;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfolistFieldNumber = 2;
  inline const ::proto::message::ReqInfo& infolist(int index) const;
  inline ::proto::message::ReqInfo* mutable_infolist(int index);
  inline ::proto::message::ReqInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckJoinList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo > infolist_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckJoinList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqOpreatJoiniList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqOpreatJoiniList();
  virtual ~GuildMSG_CS_ReqOpreatJoiniList();

  GuildMSG_CS_ReqOpreatJoiniList(const GuildMSG_CS_ReqOpreatJoiniList& from);

  inline GuildMSG_CS_ReqOpreatJoiniList& operator=(const GuildMSG_CS_ReqOpreatJoiniList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqOpreatJoiniList& default_instance();

  void Swap(GuildMSG_CS_ReqOpreatJoiniList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqOpreatJoiniList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqOpreatJoiniList& from);
  void MergeFrom(const GuildMSG_CS_ReqOpreatJoiniList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isdel = 1;
  inline bool has_isdel() const;
  inline void clear_isdel();
  static const int kIsdelFieldNumber = 1;
  inline bool isdel() const;
  inline void set_isdel(bool value);

  // optional uint32 allopreate = 2;
  inline bool has_allopreate() const;
  inline void clear_allopreate();
  static const int kAllopreateFieldNumber = 2;
  inline ::google::protobuf::uint32 allopreate() const;
  inline void set_allopreate(::google::protobuf::uint32 value);

  // repeated uint64 playeridlist = 3;
  inline int playeridlist_size() const;
  inline void clear_playeridlist();
  static const int kPlayeridlistFieldNumber = 3;
  inline ::google::protobuf::uint64 playeridlist(int index) const;
  inline void set_playeridlist(int index, ::google::protobuf::uint64 value);
  inline void add_playeridlist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      playeridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_playeridlist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqOpreatJoiniList)
 private:
  inline void set_has_isdel();
  inline void clear_has_isdel();
  inline void set_has_allopreate();
  inline void clear_has_allopreate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isdel_;
  ::google::protobuf::uint32 allopreate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > playeridlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqOpreatJoiniList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckOpreatJoiniList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckOpreatJoiniList();
  virtual ~GuildMSG_SC_AckOpreatJoiniList();

  GuildMSG_SC_AckOpreatJoiniList(const GuildMSG_SC_AckOpreatJoiniList& from);

  inline GuildMSG_SC_AckOpreatJoiniList& operator=(const GuildMSG_SC_AckOpreatJoiniList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckOpreatJoiniList& default_instance();

  void Swap(GuildMSG_SC_AckOpreatJoiniList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckOpreatJoiniList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckOpreatJoiniList& from);
  void MergeFrom(const GuildMSG_SC_AckOpreatJoiniList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckOpreatJoiniList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckOpreatJoiniList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqKickOut : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqKickOut();
  virtual ~GuildMSG_CS_ReqKickOut();

  GuildMSG_CS_ReqKickOut(const GuildMSG_CS_ReqKickOut& from);

  inline GuildMSG_CS_ReqKickOut& operator=(const GuildMSG_CS_ReqKickOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqKickOut& default_instance();

  void Swap(GuildMSG_CS_ReqKickOut* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqKickOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqKickOut& from);
  void MergeFrom(const GuildMSG_CS_ReqKickOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqKickOut)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqKickOut* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckKickOut : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckKickOut();
  virtual ~GuildMSG_SC_AckKickOut();

  GuildMSG_SC_AckKickOut(const GuildMSG_SC_AckKickOut& from);

  inline GuildMSG_SC_AckKickOut& operator=(const GuildMSG_SC_AckKickOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckKickOut& default_instance();

  void Swap(GuildMSG_SC_AckKickOut* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckKickOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckKickOut& from);
  void MergeFrom(const GuildMSG_SC_AckKickOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckKickOut)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckKickOut* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqAppointment : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqAppointment();
  virtual ~GuildMSG_CS_ReqAppointment();

  GuildMSG_CS_ReqAppointment(const GuildMSG_CS_ReqAppointment& from);

  inline GuildMSG_CS_ReqAppointment& operator=(const GuildMSG_CS_ReqAppointment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqAppointment& default_instance();

  void Swap(GuildMSG_CS_ReqAppointment* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqAppointment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqAppointment& from);
  void MergeFrom(const GuildMSG_CS_ReqAppointment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 office = 2;
  inline bool has_office() const;
  inline void clear_office();
  static const int kOfficeFieldNumber = 2;
  inline ::google::protobuf::uint32 office() const;
  inline void set_office(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqAppointment)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_office();
  inline void clear_has_office();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 office_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqAppointment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckAppointment : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckAppointment();
  virtual ~GuildMSG_SC_AckAppointment();

  GuildMSG_SC_AckAppointment(const GuildMSG_SC_AckAppointment& from);

  inline GuildMSG_SC_AckAppointment& operator=(const GuildMSG_SC_AckAppointment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckAppointment& default_instance();

  void Swap(GuildMSG_SC_AckAppointment* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckAppointment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckAppointment& from);
  void MergeFrom(const GuildMSG_SC_AckAppointment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckAppointment)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckAppointment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqSetGuildPlacard : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqSetGuildPlacard();
  virtual ~GuildMSG_CS_ReqSetGuildPlacard();

  GuildMSG_CS_ReqSetGuildPlacard(const GuildMSG_CS_ReqSetGuildPlacard& from);

  inline GuildMSG_CS_ReqSetGuildPlacard& operator=(const GuildMSG_CS_ReqSetGuildPlacard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqSetGuildPlacard& default_instance();

  void Swap(GuildMSG_CS_ReqSetGuildPlacard* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqSetGuildPlacard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqSetGuildPlacard& from);
  void MergeFrom(const GuildMSG_CS_ReqSetGuildPlacard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string context = 2;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 2;
  inline const ::std::string& context() const;
  inline void set_context(const ::std::string& value);
  inline void set_context(const char* value);
  inline void set_context(const char* value, size_t size);
  inline ::std::string* mutable_context();
  inline ::std::string* release_context();
  inline void set_allocated_context(::std::string* context);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqSetGuildPlacard)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_context();
  inline void clear_has_context();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* context_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqSetGuildPlacard* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckSetGuildPlacard : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckSetGuildPlacard();
  virtual ~GuildMSG_SC_AckSetGuildPlacard();

  GuildMSG_SC_AckSetGuildPlacard(const GuildMSG_SC_AckSetGuildPlacard& from);

  inline GuildMSG_SC_AckSetGuildPlacard& operator=(const GuildMSG_SC_AckSetGuildPlacard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckSetGuildPlacard& default_instance();

  void Swap(GuildMSG_SC_AckSetGuildPlacard* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckSetGuildPlacard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckSetGuildPlacard& from);
  void MergeFrom(const GuildMSG_SC_AckSetGuildPlacard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckSetGuildPlacard)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckSetGuildPlacard* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqSetRefrishMultiple : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqSetRefrishMultiple();
  virtual ~GuildMSG_CS_ReqSetRefrishMultiple();

  GuildMSG_CS_ReqSetRefrishMultiple(const GuildMSG_CS_ReqSetRefrishMultiple& from);

  inline GuildMSG_CS_ReqSetRefrishMultiple& operator=(const GuildMSG_CS_ReqSetRefrishMultiple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqSetRefrishMultiple& default_instance();

  void Swap(GuildMSG_CS_ReqSetRefrishMultiple* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqSetRefrishMultiple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqSetRefrishMultiple& from);
  void MergeFrom(const GuildMSG_CS_ReqSetRefrishMultiple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 multiple = 1;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 1;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqSetRefrishMultiple)
 private:
  inline void set_has_multiple();
  inline void clear_has_multiple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 multiple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqSetRefrishMultiple* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckSetRefrishMultiple : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckSetRefrishMultiple();
  virtual ~GuildMSG_SC_AckSetRefrishMultiple();

  GuildMSG_SC_AckSetRefrishMultiple(const GuildMSG_SC_AckSetRefrishMultiple& from);

  inline GuildMSG_SC_AckSetRefrishMultiple& operator=(const GuildMSG_SC_AckSetRefrishMultiple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckSetRefrishMultiple& default_instance();

  void Swap(GuildMSG_SC_AckSetRefrishMultiple* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckSetRefrishMultiple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckSetRefrishMultiple& from);
  void MergeFrom(const GuildMSG_SC_AckSetRefrishMultiple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckSetRefrishMultiple)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckSetRefrishMultiple* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqIncreaseBuilding : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqIncreaseBuilding();
  virtual ~GuildMSG_CS_ReqIncreaseBuilding();

  GuildMSG_CS_ReqIncreaseBuilding(const GuildMSG_CS_ReqIncreaseBuilding& from);

  inline GuildMSG_CS_ReqIncreaseBuilding& operator=(const GuildMSG_CS_ReqIncreaseBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqIncreaseBuilding& default_instance();

  void Swap(GuildMSG_CS_ReqIncreaseBuilding* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqIncreaseBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqIncreaseBuilding& from);
  void MergeFrom(const GuildMSG_CS_ReqIncreaseBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 buildingtype = 1;
  inline bool has_buildingtype() const;
  inline void clear_buildingtype();
  static const int kBuildingtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 buildingtype() const;
  inline void set_buildingtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqIncreaseBuilding)
 private:
  inline void set_has_buildingtype();
  inline void clear_has_buildingtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 buildingtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqIncreaseBuilding* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckIncreaseBuilding : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckIncreaseBuilding();
  virtual ~GuildMSG_SC_AckIncreaseBuilding();

  GuildMSG_SC_AckIncreaseBuilding(const GuildMSG_SC_AckIncreaseBuilding& from);

  inline GuildMSG_SC_AckIncreaseBuilding& operator=(const GuildMSG_SC_AckIncreaseBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckIncreaseBuilding& default_instance();

  void Swap(GuildMSG_SC_AckIncreaseBuilding* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckIncreaseBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckIncreaseBuilding& from);
  void MergeFrom(const GuildMSG_SC_AckIncreaseBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckIncreaseBuilding)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckIncreaseBuilding* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqDonate : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqDonate();
  virtual ~GuildMSG_CS_ReqDonate();

  GuildMSG_CS_ReqDonate(const GuildMSG_CS_ReqDonate& from);

  inline GuildMSG_CS_ReqDonate& operator=(const GuildMSG_CS_ReqDonate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqDonate& default_instance();

  void Swap(GuildMSG_CS_ReqDonate* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqDonate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqDonate& from);
  void MergeFrom(const GuildMSG_CS_ReqDonate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::uint32 counts() const;
  inline void set_counts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqDonate)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqDonate* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckDonate : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckDonate();
  virtual ~GuildMSG_SC_AckDonate();

  GuildMSG_SC_AckDonate(const GuildMSG_SC_AckDonate& from);

  inline GuildMSG_SC_AckDonate& operator=(const GuildMSG_SC_AckDonate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckDonate& default_instance();

  void Swap(GuildMSG_SC_AckDonate* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckDonate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckDonate& from);
  void MergeFrom(const GuildMSG_SC_AckDonate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckDonate)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckDonate* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqGetWages : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqGetWages();
  virtual ~GuildMSG_CS_ReqGetWages();

  GuildMSG_CS_ReqGetWages(const GuildMSG_CS_ReqGetWages& from);

  inline GuildMSG_CS_ReqGetWages& operator=(const GuildMSG_CS_ReqGetWages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqGetWages& default_instance();

  void Swap(GuildMSG_CS_ReqGetWages* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqGetWages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqGetWages& from);
  void MergeFrom(const GuildMSG_CS_ReqGetWages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqGetWages)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqGetWages* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGetWages : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGetWages();
  virtual ~GuildMSG_SC_AckGetWages();

  GuildMSG_SC_AckGetWages(const GuildMSG_SC_AckGetWages& from);

  inline GuildMSG_SC_AckGetWages& operator=(const GuildMSG_SC_AckGetWages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGetWages& default_instance();

  void Swap(GuildMSG_SC_AckGetWages* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGetWages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGetWages& from);
  void MergeFrom(const GuildMSG_SC_AckGetWages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGetWages)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGetWages* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqImpeachInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqImpeachInfo();
  virtual ~GuildMSG_CS_ReqImpeachInfo();

  GuildMSG_CS_ReqImpeachInfo(const GuildMSG_CS_ReqImpeachInfo& from);

  inline GuildMSG_CS_ReqImpeachInfo& operator=(const GuildMSG_CS_ReqImpeachInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqImpeachInfo& default_instance();

  void Swap(GuildMSG_CS_ReqImpeachInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqImpeachInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqImpeachInfo& from);
  void MergeFrom(const GuildMSG_CS_ReqImpeachInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqImpeachInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqImpeachInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckImpeachInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckImpeachInfo();
  virtual ~GuildMSG_SC_AckImpeachInfo();

  GuildMSG_SC_AckImpeachInfo(const GuildMSG_SC_AckImpeachInfo& from);

  inline GuildMSG_SC_AckImpeachInfo& operator=(const GuildMSG_SC_AckImpeachInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckImpeachInfo& default_instance();

  void Swap(GuildMSG_SC_AckImpeachInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckImpeachInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckImpeachInfo& from);
  void MergeFrom(const GuildMSG_SC_AckImpeachInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .proto.message.ImpeachInfo impdata = 2;
  inline bool has_impdata() const;
  inline void clear_impdata();
  static const int kImpdataFieldNumber = 2;
  inline const ::proto::message::ImpeachInfo& impdata() const;
  inline ::proto::message::ImpeachInfo* mutable_impdata();
  inline ::proto::message::ImpeachInfo* release_impdata();
  inline void set_allocated_impdata(::proto::message::ImpeachInfo* impdata);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckImpeachInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_impdata();
  inline void clear_has_impdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ImpeachInfo* impdata_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckImpeachInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqImpeachment : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqImpeachment();
  virtual ~GuildMSG_CS_ReqImpeachment();

  GuildMSG_CS_ReqImpeachment(const GuildMSG_CS_ReqImpeachment& from);

  inline GuildMSG_CS_ReqImpeachment& operator=(const GuildMSG_CS_ReqImpeachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqImpeachment& default_instance();

  void Swap(GuildMSG_CS_ReqImpeachment* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqImpeachment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqImpeachment& from);
  void MergeFrom(const GuildMSG_CS_ReqImpeachment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqImpeachment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqImpeachment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckImpeachment : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckImpeachment();
  virtual ~GuildMSG_SC_AckImpeachment();

  GuildMSG_SC_AckImpeachment(const GuildMSG_SC_AckImpeachment& from);

  inline GuildMSG_SC_AckImpeachment& operator=(const GuildMSG_SC_AckImpeachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckImpeachment& default_instance();

  void Swap(GuildMSG_SC_AckImpeachment* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckImpeachment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckImpeachment& from);
  void MergeFrom(const GuildMSG_SC_AckImpeachment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .proto.message.ImpeachInfo impdata = 2;
  inline bool has_impdata() const;
  inline void clear_impdata();
  static const int kImpdataFieldNumber = 2;
  inline const ::proto::message::ImpeachInfo& impdata() const;
  inline ::proto::message::ImpeachInfo* mutable_impdata();
  inline ::proto::message::ImpeachInfo* release_impdata();
  inline void set_allocated_impdata(::proto::message::ImpeachInfo* impdata);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckImpeachment)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_impdata();
  inline void clear_has_impdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ImpeachInfo* impdata_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckImpeachment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqCancelImpeachment : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqCancelImpeachment();
  virtual ~GuildMSG_CS_ReqCancelImpeachment();

  GuildMSG_CS_ReqCancelImpeachment(const GuildMSG_CS_ReqCancelImpeachment& from);

  inline GuildMSG_CS_ReqCancelImpeachment& operator=(const GuildMSG_CS_ReqCancelImpeachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqCancelImpeachment& default_instance();

  void Swap(GuildMSG_CS_ReqCancelImpeachment* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqCancelImpeachment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqCancelImpeachment& from);
  void MergeFrom(const GuildMSG_CS_ReqCancelImpeachment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqCancelImpeachment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqCancelImpeachment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckCancelImpeachment : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckCancelImpeachment();
  virtual ~GuildMSG_SC_AckCancelImpeachment();

  GuildMSG_SC_AckCancelImpeachment(const GuildMSG_SC_AckCancelImpeachment& from);

  inline GuildMSG_SC_AckCancelImpeachment& operator=(const GuildMSG_SC_AckCancelImpeachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckCancelImpeachment& default_instance();

  void Swap(GuildMSG_SC_AckCancelImpeachment* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckCancelImpeachment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckCancelImpeachment& from);
  void MergeFrom(const GuildMSG_SC_AckCancelImpeachment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckCancelImpeachment)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckCancelImpeachment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqResponse : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqResponse();
  virtual ~GuildMSG_CS_ReqResponse();

  GuildMSG_CS_ReqResponse(const GuildMSG_CS_ReqResponse& from);

  inline GuildMSG_CS_ReqResponse& operator=(const GuildMSG_CS_ReqResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqResponse& default_instance();

  void Swap(GuildMSG_CS_ReqResponse* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqResponse& from);
  void MergeFrom(const GuildMSG_CS_ReqResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqResponse* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckResponse : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckResponse();
  virtual ~GuildMSG_SC_AckResponse();

  GuildMSG_SC_AckResponse(const GuildMSG_SC_AckResponse& from);

  inline GuildMSG_SC_AckResponse& operator=(const GuildMSG_SC_AckResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckResponse& default_instance();

  void Swap(GuildMSG_SC_AckResponse* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckResponse& from);
  void MergeFrom(const GuildMSG_SC_AckResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckResponse* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqMergeInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqMergeInfo();
  virtual ~GuildMSG_CS_ReqMergeInfo();

  GuildMSG_CS_ReqMergeInfo(const GuildMSG_CS_ReqMergeInfo& from);

  inline GuildMSG_CS_ReqMergeInfo& operator=(const GuildMSG_CS_ReqMergeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqMergeInfo& default_instance();

  void Swap(GuildMSG_CS_ReqMergeInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqMergeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqMergeInfo& from);
  void MergeFrom(const GuildMSG_CS_ReqMergeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqMergeInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqMergeInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckMergeInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckMergeInfo();
  virtual ~GuildMSG_SC_AckMergeInfo();

  GuildMSG_SC_AckMergeInfo(const GuildMSG_SC_AckMergeInfo& from);

  inline GuildMSG_SC_AckMergeInfo& operator=(const GuildMSG_SC_AckMergeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckMergeInfo& default_instance();

  void Swap(GuildMSG_SC_AckMergeInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckMergeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckMergeInfo& from);
  void MergeFrom(const GuildMSG_SC_AckMergeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .proto.message.UniteGuildData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto::message::UniteGuildData& data() const;
  inline ::proto::message::UniteGuildData* mutable_data();
  inline ::proto::message::UniteGuildData* release_data();
  inline void set_allocated_data(::proto::message::UniteGuildData* data);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckMergeInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::UniteGuildData* data_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckMergeInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqMergeGuild : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqMergeGuild();
  virtual ~GuildMSG_CS_ReqMergeGuild();

  GuildMSG_CS_ReqMergeGuild(const GuildMSG_CS_ReqMergeGuild& from);

  inline GuildMSG_CS_ReqMergeGuild& operator=(const GuildMSG_CS_ReqMergeGuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqMergeGuild& default_instance();

  void Swap(GuildMSG_CS_ReqMergeGuild* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqMergeGuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqMergeGuild& from);
  void MergeFrom(const GuildMSG_CS_ReqMergeGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvguildid = 1;
  inline bool has_recvguildid() const;
  inline void clear_recvguildid();
  static const int kRecvguildidFieldNumber = 1;
  inline ::google::protobuf::uint64 recvguildid() const;
  inline void set_recvguildid(::google::protobuf::uint64 value);

  // optional uint64 masterid = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 2;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqMergeGuild)
 private:
  inline void set_has_recvguildid();
  inline void clear_has_recvguildid();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 recvguildid_;
  ::google::protobuf::uint64 masterid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqMergeGuild* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckMergeGuild : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckMergeGuild();
  virtual ~GuildMSG_SC_AckMergeGuild();

  GuildMSG_SC_AckMergeGuild(const GuildMSG_SC_AckMergeGuild& from);

  inline GuildMSG_SC_AckMergeGuild& operator=(const GuildMSG_SC_AckMergeGuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckMergeGuild& default_instance();

  void Swap(GuildMSG_SC_AckMergeGuild* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckMergeGuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckMergeGuild& from);
  void MergeFrom(const GuildMSG_SC_AckMergeGuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckMergeGuild)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckMergeGuild* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqMergeGuildList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqMergeGuildList();
  virtual ~GuildMSG_CS_ReqMergeGuildList();

  GuildMSG_CS_ReqMergeGuildList(const GuildMSG_CS_ReqMergeGuildList& from);

  inline GuildMSG_CS_ReqMergeGuildList& operator=(const GuildMSG_CS_ReqMergeGuildList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqMergeGuildList& default_instance();

  void Swap(GuildMSG_CS_ReqMergeGuildList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqMergeGuildList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqMergeGuildList& from);
  void MergeFrom(const GuildMSG_CS_ReqMergeGuildList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqMergeGuildList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqMergeGuildList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckMergeGuildList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckMergeGuildList();
  virtual ~GuildMSG_SC_AckMergeGuildList();

  GuildMSG_SC_AckMergeGuildList(const GuildMSG_SC_AckMergeGuildList& from);

  inline GuildMSG_SC_AckMergeGuildList& operator=(const GuildMSG_SC_AckMergeGuildList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckMergeGuildList& default_instance();

  void Swap(GuildMSG_SC_AckMergeGuildList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckMergeGuildList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckMergeGuildList& from);
  void MergeFrom(const GuildMSG_SC_AckMergeGuildList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.UniteGuildData datalist = 1;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDatalistFieldNumber = 1;
  inline const ::proto::message::UniteGuildData& datalist(int index) const;
  inline ::proto::message::UniteGuildData* mutable_datalist(int index);
  inline ::proto::message::UniteGuildData* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::UniteGuildData >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::UniteGuildData >*
      mutable_datalist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckMergeGuildList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::UniteGuildData > datalist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckMergeGuildList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqOpreatMergeList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqOpreatMergeList();
  virtual ~GuildMSG_CS_ReqOpreatMergeList();

  GuildMSG_CS_ReqOpreatMergeList(const GuildMSG_CS_ReqOpreatMergeList& from);

  inline GuildMSG_CS_ReqOpreatMergeList& operator=(const GuildMSG_CS_ReqOpreatMergeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqOpreatMergeList& default_instance();

  void Swap(GuildMSG_CS_ReqOpreatMergeList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqOpreatMergeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqOpreatMergeList& from);
  void MergeFrom(const GuildMSG_CS_ReqOpreatMergeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uniteguild = 1;
  inline bool has_uniteguild() const;
  inline void clear_uniteguild();
  static const int kUniteguildFieldNumber = 1;
  inline ::google::protobuf::uint64 uniteguild() const;
  inline void set_uniteguild(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqOpreatMergeList)
 private:
  inline void set_has_uniteguild();
  inline void clear_has_uniteguild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uniteguild_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqOpreatMergeList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckOpreatMergeList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckOpreatMergeList();
  virtual ~GuildMSG_SC_AckOpreatMergeList();

  GuildMSG_SC_AckOpreatMergeList(const GuildMSG_SC_AckOpreatMergeList& from);

  inline GuildMSG_SC_AckOpreatMergeList& operator=(const GuildMSG_SC_AckOpreatMergeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckOpreatMergeList& default_instance();

  void Swap(GuildMSG_SC_AckOpreatMergeList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckOpreatMergeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckOpreatMergeList& from);
  void MergeFrom(const GuildMSG_SC_AckOpreatMergeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckOpreatMergeList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckOpreatMergeList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqClearMergeList : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqClearMergeList();
  virtual ~GuildMSG_CS_ReqClearMergeList();

  GuildMSG_CS_ReqClearMergeList(const GuildMSG_CS_ReqClearMergeList& from);

  inline GuildMSG_CS_ReqClearMergeList& operator=(const GuildMSG_CS_ReqClearMergeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqClearMergeList& default_instance();

  void Swap(GuildMSG_CS_ReqClearMergeList* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqClearMergeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqClearMergeList& from);
  void MergeFrom(const GuildMSG_CS_ReqClearMergeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqClearMergeList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqClearMergeList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckClearMergeList : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckClearMergeList();
  virtual ~GuildMSG_SC_AckClearMergeList();

  GuildMSG_SC_AckClearMergeList(const GuildMSG_SC_AckClearMergeList& from);

  inline GuildMSG_SC_AckClearMergeList& operator=(const GuildMSG_SC_AckClearMergeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckClearMergeList& default_instance();

  void Swap(GuildMSG_SC_AckClearMergeList* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckClearMergeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckClearMergeList& from);
  void MergeFrom(const GuildMSG_SC_AckClearMergeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckClearMergeList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckClearMergeList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqCancelMerge : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqCancelMerge();
  virtual ~GuildMSG_CS_ReqCancelMerge();

  GuildMSG_CS_ReqCancelMerge(const GuildMSG_CS_ReqCancelMerge& from);

  inline GuildMSG_CS_ReqCancelMerge& operator=(const GuildMSG_CS_ReqCancelMerge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqCancelMerge& default_instance();

  void Swap(GuildMSG_CS_ReqCancelMerge* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqCancelMerge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqCancelMerge& from);
  void MergeFrom(const GuildMSG_CS_ReqCancelMerge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqCancelMerge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqCancelMerge* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckCancelMerge : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckCancelMerge();
  virtual ~GuildMSG_SC_AckCancelMerge();

  GuildMSG_SC_AckCancelMerge(const GuildMSG_SC_AckCancelMerge& from);

  inline GuildMSG_SC_AckCancelMerge& operator=(const GuildMSG_SC_AckCancelMerge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckCancelMerge& default_instance();

  void Swap(GuildMSG_SC_AckCancelMerge* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckCancelMerge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckCancelMerge& from);
  void MergeFrom(const GuildMSG_SC_AckCancelMerge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckCancelMerge)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckCancelMerge* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqShopInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqShopInfo();
  virtual ~GuildMSG_CS_ReqShopInfo();

  GuildMSG_CS_ReqShopInfo(const GuildMSG_CS_ReqShopInfo& from);

  inline GuildMSG_CS_ReqShopInfo& operator=(const GuildMSG_CS_ReqShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqShopInfo& default_instance();

  void Swap(GuildMSG_CS_ReqShopInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqShopInfo& from);
  void MergeFrom(const GuildMSG_CS_ReqShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqShopInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckShopInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckShopInfo();
  virtual ~GuildMSG_SC_AckShopInfo();

  GuildMSG_SC_AckShopInfo(const GuildMSG_SC_AckShopInfo& from);

  inline GuildMSG_SC_AckShopInfo& operator=(const GuildMSG_SC_AckShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckShopInfo& default_instance();

  void Swap(GuildMSG_SC_AckShopInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckShopInfo& from);
  void MergeFrom(const GuildMSG_SC_AckShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated .proto.message.GuildShopInfo shopinfo = 2;
  inline int shopinfo_size() const;
  inline void clear_shopinfo();
  static const int kShopinfoFieldNumber = 2;
  inline const ::proto::message::GuildShopInfo& shopinfo(int index) const;
  inline ::proto::message::GuildShopInfo* mutable_shopinfo(int index);
  inline ::proto::message::GuildShopInfo* add_shopinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >&
      shopinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >*
      mutable_shopinfo();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckShopInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo > shopinfo_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqBuyShopItem : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqBuyShopItem();
  virtual ~GuildMSG_CS_ReqBuyShopItem();

  GuildMSG_CS_ReqBuyShopItem(const GuildMSG_CS_ReqBuyShopItem& from);

  inline GuildMSG_CS_ReqBuyShopItem& operator=(const GuildMSG_CS_ReqBuyShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqBuyShopItem& default_instance();

  void Swap(GuildMSG_CS_ReqBuyShopItem* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqBuyShopItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqBuyShopItem& from);
  void MergeFrom(const GuildMSG_CS_ReqBuyShopItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::uint32 counts() const;
  inline void set_counts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqBuyShopItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqBuyShopItem* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckBuyShopItem : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckBuyShopItem();
  virtual ~GuildMSG_SC_AckBuyShopItem();

  GuildMSG_SC_AckBuyShopItem(const GuildMSG_SC_AckBuyShopItem& from);

  inline GuildMSG_SC_AckBuyShopItem& operator=(const GuildMSG_SC_AckBuyShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckBuyShopItem& default_instance();

  void Swap(GuildMSG_SC_AckBuyShopItem* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckBuyShopItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckBuyShopItem& from);
  void MergeFrom(const GuildMSG_SC_AckBuyShopItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckBuyShopItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckBuyShopItem* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqChangeName : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqChangeName();
  virtual ~GuildMSG_CS_ReqChangeName();

  GuildMSG_CS_ReqChangeName(const GuildMSG_CS_ReqChangeName& from);

  inline GuildMSG_CS_ReqChangeName& operator=(const GuildMSG_CS_ReqChangeName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqChangeName& default_instance();

  void Swap(GuildMSG_CS_ReqChangeName* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqChangeName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqChangeName& from);
  void MergeFrom(const GuildMSG_CS_ReqChangeName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string newname = 1;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 1;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqChangeName)
 private:
  inline void set_has_newname();
  inline void clear_has_newname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* newname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqChangeName* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckChangeName : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckChangeName();
  virtual ~GuildMSG_SC_AckChangeName();

  GuildMSG_SC_AckChangeName(const GuildMSG_SC_AckChangeName& from);

  inline GuildMSG_SC_AckChangeName& operator=(const GuildMSG_SC_AckChangeName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckChangeName& default_instance();

  void Swap(GuildMSG_SC_AckChangeName* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckChangeName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckChangeName& from);
  void MergeFrom(const GuildMSG_SC_AckChangeName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckChangeName)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckChangeName* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_NotifyUpdateGuildInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_NotifyUpdateGuildInfo();
  virtual ~GuildMSG_SC_NotifyUpdateGuildInfo();

  GuildMSG_SC_NotifyUpdateGuildInfo(const GuildMSG_SC_NotifyUpdateGuildInfo& from);

  inline GuildMSG_SC_NotifyUpdateGuildInfo& operator=(const GuildMSG_SC_NotifyUpdateGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_NotifyUpdateGuildInfo& default_instance();

  void Swap(GuildMSG_SC_NotifyUpdateGuildInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_NotifyUpdateGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_NotifyUpdateGuildInfo& from);
  void MergeFrom(const GuildMSG_SC_NotifyUpdateGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string strValue = 2;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 2;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  inline void set_allocated_strvalue(::std::string* strvalue);

  // optional uint64 uValue = 3;
  inline bool has_uvalue() const;
  inline void clear_uvalue();
  static const int kUValueFieldNumber = 3;
  inline ::google::protobuf::uint64 uvalue() const;
  inline void set_uvalue(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_NotifyUpdateGuildInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_strvalue();
  inline void clear_has_strvalue();
  inline void set_has_uvalue();
  inline void clear_has_uvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strvalue_;
  ::google::protobuf::uint64 uvalue_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_NotifyUpdateGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqEnterFort : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqEnterFort();
  virtual ~GuildMSG_CS_ReqEnterFort();

  GuildMSG_CS_ReqEnterFort(const GuildMSG_CS_ReqEnterFort& from);

  inline GuildMSG_CS_ReqEnterFort& operator=(const GuildMSG_CS_ReqEnterFort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqEnterFort& default_instance();

  void Swap(GuildMSG_CS_ReqEnterFort* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqEnterFort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqEnterFort& from);
  void MergeFrom(const GuildMSG_CS_ReqEnterFort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqEnterFort)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqEnterFort* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckEnterFort : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckEnterFort();
  virtual ~GuildMSG_SC_AckEnterFort();

  GuildMSG_SC_AckEnterFort(const GuildMSG_SC_AckEnterFort& from);

  inline GuildMSG_SC_AckEnterFort& operator=(const GuildMSG_SC_AckEnterFort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckEnterFort& default_instance();

  void Swap(GuildMSG_SC_AckEnterFort* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckEnterFort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckEnterFort& from);
  void MergeFrom(const GuildMSG_SC_AckEnterFort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 layer = 5;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 5;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckEnterFort)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 mapid_;
  ::proto::message::Point3D* pt_;
  float dir_;
  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckEnterFort* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_EnterFortSuccess : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_EnterFortSuccess();
  virtual ~GuildMSG_CS_EnterFortSuccess();

  GuildMSG_CS_EnterFortSuccess(const GuildMSG_CS_EnterFortSuccess& from);

  inline GuildMSG_CS_EnterFortSuccess& operator=(const GuildMSG_CS_EnterFortSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_EnterFortSuccess& default_instance();

  void Swap(GuildMSG_CS_EnterFortSuccess* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_EnterFortSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_EnterFortSuccess& from);
  void MergeFrom(const GuildMSG_CS_EnterFortSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_EnterFortSuccess)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_EnterFortSuccess* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqCancelJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqCancelJoin();
  virtual ~GuildMSG_CS_ReqCancelJoin();

  GuildMSG_CS_ReqCancelJoin(const GuildMSG_CS_ReqCancelJoin& from);

  inline GuildMSG_CS_ReqCancelJoin& operator=(const GuildMSG_CS_ReqCancelJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqCancelJoin& default_instance();

  void Swap(GuildMSG_CS_ReqCancelJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqCancelJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqCancelJoin& from);
  void MergeFrom(const GuildMSG_CS_ReqCancelJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqCancelJoin)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqCancelJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckCancelJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckCancelJoin();
  virtual ~GuildMSG_SC_AckCancelJoin();

  GuildMSG_SC_AckCancelJoin(const GuildMSG_SC_AckCancelJoin& from);

  inline GuildMSG_SC_AckCancelJoin& operator=(const GuildMSG_SC_AckCancelJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckCancelJoin& default_instance();

  void Swap(GuildMSG_SC_AckCancelJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckCancelJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckCancelJoin& from);
  void MergeFrom(const GuildMSG_SC_AckCancelJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckCancelJoin)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckCancelJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqEnterGuildIntruder : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqEnterGuildIntruder();
  virtual ~GuildMSG_CS_ReqEnterGuildIntruder();

  GuildMSG_CS_ReqEnterGuildIntruder(const GuildMSG_CS_ReqEnterGuildIntruder& from);

  inline GuildMSG_CS_ReqEnterGuildIntruder& operator=(const GuildMSG_CS_ReqEnterGuildIntruder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqEnterGuildIntruder& default_instance();

  void Swap(GuildMSG_CS_ReqEnterGuildIntruder* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqEnterGuildIntruder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqEnterGuildIntruder& from);
  void MergeFrom(const GuildMSG_CS_ReqEnterGuildIntruder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqEnterGuildIntruder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqEnterGuildIntruder* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqEnterGuildIntruderOK : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqEnterGuildIntruderOK();
  virtual ~GuildMSG_CS_ReqEnterGuildIntruderOK();

  GuildMSG_CS_ReqEnterGuildIntruderOK(const GuildMSG_CS_ReqEnterGuildIntruderOK& from);

  inline GuildMSG_CS_ReqEnterGuildIntruderOK& operator=(const GuildMSG_CS_ReqEnterGuildIntruderOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqEnterGuildIntruderOK& default_instance();

  void Swap(GuildMSG_CS_ReqEnterGuildIntruderOK* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqEnterGuildIntruderOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqEnterGuildIntruderOK& from);
  void MergeFrom(const GuildMSG_CS_ReqEnterGuildIntruderOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqEnterGuildIntruderOK)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqEnterGuildIntruderOK* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqLeaveGuildIntruder : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqLeaveGuildIntruder();
  virtual ~GuildMSG_CS_ReqLeaveGuildIntruder();

  GuildMSG_CS_ReqLeaveGuildIntruder(const GuildMSG_CS_ReqLeaveGuildIntruder& from);

  inline GuildMSG_CS_ReqLeaveGuildIntruder& operator=(const GuildMSG_CS_ReqLeaveGuildIntruder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqLeaveGuildIntruder& default_instance();

  void Swap(GuildMSG_CS_ReqLeaveGuildIntruder* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqLeaveGuildIntruder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqLeaveGuildIntruder& from);
  void MergeFrom(const GuildMSG_CS_ReqLeaveGuildIntruder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqLeaveGuildIntruder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqLeaveGuildIntruder* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckEnterGuildIntruder : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckEnterGuildIntruder();
  virtual ~GuildMSG_SC_AckEnterGuildIntruder();

  GuildMSG_SC_AckEnterGuildIntruder(const GuildMSG_SC_AckEnterGuildIntruder& from);

  inline GuildMSG_SC_AckEnterGuildIntruder& operator=(const GuildMSG_SC_AckEnterGuildIntruder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckEnterGuildIntruder& default_instance();

  void Swap(GuildMSG_SC_AckEnterGuildIntruder* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckEnterGuildIntruder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckEnterGuildIntruder& from);
  void MergeFrom(const GuildMSG_SC_AckEnterGuildIntruder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckEnterGuildIntruder)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 mapid_;
  float dir_;
  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckEnterGuildIntruder* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildIntruderEnd : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildIntruderEnd();
  virtual ~GuildMSG_SC_AckGuildIntruderEnd();

  GuildMSG_SC_AckGuildIntruderEnd(const GuildMSG_SC_AckGuildIntruderEnd& from);

  inline GuildMSG_SC_AckGuildIntruderEnd& operator=(const GuildMSG_SC_AckGuildIntruderEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildIntruderEnd& default_instance();

  void Swap(GuildMSG_SC_AckGuildIntruderEnd* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildIntruderEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildIntruderEnd& from);
  void MergeFrom(const GuildMSG_SC_AckGuildIntruderEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildIntruderEnd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildIntruderEnd* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildIntruderInit : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildIntruderInit();
  virtual ~GuildMSG_SC_AckGuildIntruderInit();

  GuildMSG_SC_AckGuildIntruderInit(const GuildMSG_SC_AckGuildIntruderInit& from);

  inline GuildMSG_SC_AckGuildIntruderInit& operator=(const GuildMSG_SC_AckGuildIntruderInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildIntruderInit& default_instance();

  void Swap(GuildMSG_SC_AckGuildIntruderInit* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildIntruderInit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildIntruderInit& from);
  void MergeFrom(const GuildMSG_SC_AckGuildIntruderInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 surplustime = 1;
  inline bool has_surplustime() const;
  inline void clear_surplustime();
  static const int kSurplustimeFieldNumber = 1;
  inline ::google::protobuf::int32 surplustime() const;
  inline void set_surplustime(::google::protobuf::int32 value);

  // optional int32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // optional int32 reward_percent = 3;
  inline bool has_reward_percent() const;
  inline void clear_reward_percent();
  static const int kRewardPercentFieldNumber = 3;
  inline ::google::protobuf::int32 reward_percent() const;
  inline void set_reward_percent(::google::protobuf::int32 value);

  // repeated .proto.message.IDTimes chest_list = 4;
  inline int chest_list_size() const;
  inline void clear_chest_list();
  static const int kChestListFieldNumber = 4;
  inline const ::proto::message::IDTimes& chest_list(int index) const;
  inline ::proto::message::IDTimes* mutable_chest_list(int index);
  inline ::proto::message::IDTimes* add_chest_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDTimes >&
      chest_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDTimes >*
      mutable_chest_list();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildIntruderInit)
 private:
  inline void set_has_surplustime();
  inline void clear_has_surplustime();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_reward_percent();
  inline void clear_has_reward_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 surplustime_;
  ::google::protobuf::int32 times_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::IDTimes > chest_list_;
  ::google::protobuf::int32 reward_percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildIntruderInit* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildIntruderTime : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildIntruderTime();
  virtual ~GuildMSG_SC_AckGuildIntruderTime();

  GuildMSG_SC_AckGuildIntruderTime(const GuildMSG_SC_AckGuildIntruderTime& from);

  inline GuildMSG_SC_AckGuildIntruderTime& operator=(const GuildMSG_SC_AckGuildIntruderTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildIntruderTime& default_instance();

  void Swap(GuildMSG_SC_AckGuildIntruderTime* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildIntruderTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildIntruderTime& from);
  void MergeFrom(const GuildMSG_SC_AckGuildIntruderTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 times = 1;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 1;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildIntruderTime)
 private:
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildIntruderTime* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_GuildIntruderReward : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_GuildIntruderReward();
  virtual ~GuildMSG_SC_GuildIntruderReward();

  GuildMSG_SC_GuildIntruderReward(const GuildMSG_SC_GuildIntruderReward& from);

  inline GuildMSG_SC_GuildIntruderReward& operator=(const GuildMSG_SC_GuildIntruderReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_GuildIntruderReward& default_instance();

  void Swap(GuildMSG_SC_GuildIntruderReward* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_GuildIntruderReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_GuildIntruderReward& from);
  void MergeFrom(const GuildMSG_SC_GuildIntruderReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reward_percent = 1;
  inline bool has_reward_percent() const;
  inline void clear_reward_percent();
  static const int kRewardPercentFieldNumber = 1;
  inline ::google::protobuf::int32 reward_percent() const;
  inline void set_reward_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_GuildIntruderReward)
 private:
  inline void set_has_reward_percent();
  inline void clear_has_reward_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reward_percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_GuildIntruderReward* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_NotifyStopImpeachment : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_NotifyStopImpeachment();
  virtual ~GuildMSG_SC_NotifyStopImpeachment();

  GuildMSG_SC_NotifyStopImpeachment(const GuildMSG_SC_NotifyStopImpeachment& from);

  inline GuildMSG_SC_NotifyStopImpeachment& operator=(const GuildMSG_SC_NotifyStopImpeachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_NotifyStopImpeachment& default_instance();

  void Swap(GuildMSG_SC_NotifyStopImpeachment* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_NotifyStopImpeachment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_NotifyStopImpeachment& from);
  void MergeFrom(const GuildMSG_SC_NotifyStopImpeachment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string ownnername = 2;
  inline bool has_ownnername() const;
  inline void clear_ownnername();
  static const int kOwnnernameFieldNumber = 2;
  inline const ::std::string& ownnername() const;
  inline void set_ownnername(const ::std::string& value);
  inline void set_ownnername(const char* value);
  inline void set_ownnername(const char* value, size_t size);
  inline ::std::string* mutable_ownnername();
  inline ::std::string* release_ownnername();
  inline void set_allocated_ownnername(::std::string* ownnername);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_NotifyStopImpeachment)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_ownnername();
  inline void clear_has_ownnername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ownnername_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_NotifyStopImpeachment* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_NotifyContext : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_NotifyContext();
  virtual ~GuildMSG_SC_NotifyContext();

  GuildMSG_SC_NotifyContext(const GuildMSG_SC_NotifyContext& from);

  inline GuildMSG_SC_NotifyContext& operator=(const GuildMSG_SC_NotifyContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_NotifyContext& default_instance();

  void Swap(GuildMSG_SC_NotifyContext* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_NotifyContext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_NotifyContext& from);
  void MergeFrom(const GuildMSG_SC_NotifyContext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 contextid = 1;
  inline bool has_contextid() const;
  inline void clear_contextid();
  static const int kContextidFieldNumber = 1;
  inline ::google::protobuf::uint32 contextid() const;
  inline void set_contextid(::google::protobuf::uint32 value);

  // optional string contextpar = 2;
  inline bool has_contextpar() const;
  inline void clear_contextpar();
  static const int kContextparFieldNumber = 2;
  inline const ::std::string& contextpar() const;
  inline void set_contextpar(const ::std::string& value);
  inline void set_contextpar(const char* value);
  inline void set_contextpar(const char* value, size_t size);
  inline ::std::string* mutable_contextpar();
  inline ::std::string* release_contextpar();
  inline void set_allocated_contextpar(::std::string* contextpar);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_NotifyContext)
 private:
  inline void set_has_contextid();
  inline void clear_has_contextid();
  inline void set_has_contextpar();
  inline void clear_has_contextpar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* contextpar_;
  ::google::protobuf::uint32 contextid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_NotifyContext* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqSetBossOpen : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqSetBossOpen();
  virtual ~GuildMSG_CS_ReqSetBossOpen();

  GuildMSG_CS_ReqSetBossOpen(const GuildMSG_CS_ReqSetBossOpen& from);

  inline GuildMSG_CS_ReqSetBossOpen& operator=(const GuildMSG_CS_ReqSetBossOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqSetBossOpen& default_instance();

  void Swap(GuildMSG_CS_ReqSetBossOpen* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqSetBossOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqSetBossOpen& from);
  void MergeFrom(const GuildMSG_CS_ReqSetBossOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 isToday = 1;
  inline bool has_istoday() const;
  inline void clear_istoday();
  static const int kIsTodayFieldNumber = 1;
  inline ::google::protobuf::uint32 istoday() const;
  inline void set_istoday(::google::protobuf::uint32 value);

  // optional uint32 hour = 2;
  inline bool has_hour() const;
  inline void clear_hour();
  static const int kHourFieldNumber = 2;
  inline ::google::protobuf::uint32 hour() const;
  inline void set_hour(::google::protobuf::uint32 value);

  // optional uint32 minu = 3;
  inline bool has_minu() const;
  inline void clear_minu();
  static const int kMinuFieldNumber = 3;
  inline ::google::protobuf::uint32 minu() const;
  inline void set_minu(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqSetBossOpen)
 private:
  inline void set_has_istoday();
  inline void clear_has_istoday();
  inline void set_has_hour();
  inline void clear_has_hour();
  inline void set_has_minu();
  inline void clear_has_minu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 istoday_;
  ::google::protobuf::uint32 hour_;
  ::google::protobuf::uint32 minu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqSetBossOpen* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckBossInfo : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckBossInfo();
  virtual ~GuildMSG_SC_AckBossInfo();

  GuildMSG_SC_AckBossInfo(const GuildMSG_SC_AckBossInfo& from);

  inline GuildMSG_SC_AckBossInfo& operator=(const GuildMSG_SC_AckBossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckBossInfo& default_instance();

  void Swap(GuildMSG_SC_AckBossInfo* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckBossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckBossInfo& from);
  void MergeFrom(const GuildMSG_SC_AckBossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .proto.message.GuildBoss info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto::message::GuildBoss& info() const;
  inline ::proto::message::GuildBoss* mutable_info();
  inline ::proto::message::GuildBoss* release_info();
  inline void set_allocated_info(::proto::message::GuildBoss* info);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckBossInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::GuildBoss* info_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckBossInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_NotifyBossDie : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_NotifyBossDie();
  virtual ~GuildMSG_SC_NotifyBossDie();

  GuildMSG_SC_NotifyBossDie(const GuildMSG_SC_NotifyBossDie& from);

  inline GuildMSG_SC_NotifyBossDie& operator=(const GuildMSG_SC_NotifyBossDie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_NotifyBossDie& default_instance();

  void Swap(GuildMSG_SC_NotifyBossDie* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_NotifyBossDie* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_NotifyBossDie& from);
  void MergeFrom(const GuildMSG_SC_NotifyBossDie& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_NotifyBossDie)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_NotifyBossDie* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqInvitePlayer : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqInvitePlayer();
  virtual ~GuildMSG_CS_ReqInvitePlayer();

  GuildMSG_CS_ReqInvitePlayer(const GuildMSG_CS_ReqInvitePlayer& from);

  inline GuildMSG_CS_ReqInvitePlayer& operator=(const GuildMSG_CS_ReqInvitePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqInvitePlayer& default_instance();

  void Swap(GuildMSG_CS_ReqInvitePlayer* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqInvitePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqInvitePlayer& from);
  void MergeFrom(const GuildMSG_CS_ReqInvitePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqInvitePlayer)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqInvitePlayer* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckInvitePlayer : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckInvitePlayer();
  virtual ~GuildMSG_SC_AckInvitePlayer();

  GuildMSG_SC_AckInvitePlayer(const GuildMSG_SC_AckInvitePlayer& from);

  inline GuildMSG_SC_AckInvitePlayer& operator=(const GuildMSG_SC_AckInvitePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckInvitePlayer& default_instance();

  void Swap(GuildMSG_SC_AckInvitePlayer* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckInvitePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckInvitePlayer& from);
  void MergeFrom(const GuildMSG_SC_AckInvitePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckInvitePlayer)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckInvitePlayer* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_NotifyInvitePlayer : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_NotifyInvitePlayer();
  virtual ~GuildMSG_SC_NotifyInvitePlayer();

  GuildMSG_SC_NotifyInvitePlayer(const GuildMSG_SC_NotifyInvitePlayer& from);

  inline GuildMSG_SC_NotifyInvitePlayer& operator=(const GuildMSG_SC_NotifyInvitePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_NotifyInvitePlayer& default_instance();

  void Swap(GuildMSG_SC_NotifyInvitePlayer* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_NotifyInvitePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_NotifyInvitePlayer& from);
  void MergeFrom(const GuildMSG_SC_NotifyInvitePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string inviter = 1;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 1;
  inline const ::std::string& inviter() const;
  inline void set_inviter(const ::std::string& value);
  inline void set_inviter(const char* value);
  inline void set_inviter(const char* value, size_t size);
  inline ::std::string* mutable_inviter();
  inline ::std::string* release_inviter();
  inline void set_allocated_inviter(::std::string* inviter);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 3;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 3;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_NotifyInvitePlayer)
 private:
  inline void set_has_inviter();
  inline void clear_has_inviter();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* inviter_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_NotifyInvitePlayer* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqInviteJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqInviteJoin();
  virtual ~GuildMSG_CS_ReqInviteJoin();

  GuildMSG_CS_ReqInviteJoin(const GuildMSG_CS_ReqInviteJoin& from);

  inline GuildMSG_CS_ReqInviteJoin& operator=(const GuildMSG_CS_ReqInviteJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqInviteJoin& default_instance();

  void Swap(GuildMSG_CS_ReqInviteJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqInviteJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqInviteJoin& from);
  void MergeFrom(const GuildMSG_CS_ReqInviteJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 isJoin = 1;
  inline bool has_isjoin() const;
  inline void clear_isjoin();
  static const int kIsJoinFieldNumber = 1;
  inline ::google::protobuf::uint32 isjoin() const;
  inline void set_isjoin(::google::protobuf::uint32 value);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqInviteJoin)
 private:
  inline void set_has_isjoin();
  inline void clear_has_isjoin();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 isjoin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqInviteJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckInviteJoin : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckInviteJoin();
  virtual ~GuildMSG_SC_AckInviteJoin();

  GuildMSG_SC_AckInviteJoin(const GuildMSG_SC_AckInviteJoin& from);

  inline GuildMSG_SC_AckInviteJoin& operator=(const GuildMSG_SC_AckInviteJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckInviteJoin& default_instance();

  void Swap(GuildMSG_SC_AckInviteJoin* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckInviteJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckInviteJoin& from);
  void MergeFrom(const GuildMSG_SC_AckInviteJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckInviteJoin)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckInviteJoin* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqGuildWarehouse : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqGuildWarehouse();
  virtual ~GuildMSG_CS_ReqGuildWarehouse();

  GuildMSG_CS_ReqGuildWarehouse(const GuildMSG_CS_ReqGuildWarehouse& from);

  inline GuildMSG_CS_ReqGuildWarehouse& operator=(const GuildMSG_CS_ReqGuildWarehouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqGuildWarehouse& default_instance();

  void Swap(GuildMSG_CS_ReqGuildWarehouse* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqGuildWarehouse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqGuildWarehouse& from);
  void MergeFrom(const GuildMSG_CS_ReqGuildWarehouse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqGuildWarehouse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqGuildWarehouse* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildWarehouse : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildWarehouse();
  virtual ~GuildMSG_SC_AckGuildWarehouse();

  GuildMSG_SC_AckGuildWarehouse(const GuildMSG_SC_AckGuildWarehouse& from);

  inline GuildMSG_SC_AckGuildWarehouse& operator=(const GuildMSG_SC_AckGuildWarehouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildWarehouse& default_instance();

  void Swap(GuildMSG_SC_AckGuildWarehouse* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildWarehouse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildWarehouse& from);
  void MergeFrom(const GuildMSG_SC_AckGuildWarehouse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.Equip guildequip = 1;
  inline int guildequip_size() const;
  inline void clear_guildequip();
  static const int kGuildequipFieldNumber = 1;
  inline const ::proto::message::Equip& guildequip(int index) const;
  inline ::proto::message::Equip* mutable_guildequip(int index);
  inline ::proto::message::Equip* add_guildequip();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      guildequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_guildequip();

  // optional uint32 gridnum = 2;
  inline bool has_gridnum() const;
  inline void clear_gridnum();
  static const int kGridnumFieldNumber = 2;
  inline ::google::protobuf::uint32 gridnum() const;
  inline void set_gridnum(::google::protobuf::uint32 value);

  // optional uint32 buynum = 3;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuynumFieldNumber = 3;
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildWarehouse)
 private:
  inline void set_has_gridnum();
  inline void clear_has_gridnum();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > guildequip_;
  ::google::protobuf::uint32 gridnum_;
  ::google::protobuf::uint32 buynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildWarehouse* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqDonateEquip : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqDonateEquip();
  virtual ~GuildMSG_CS_ReqDonateEquip();

  GuildMSG_CS_ReqDonateEquip(const GuildMSG_CS_ReqDonateEquip& from);

  inline GuildMSG_CS_ReqDonateEquip& operator=(const GuildMSG_CS_ReqDonateEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqDonateEquip& default_instance();

  void Swap(GuildMSG_CS_ReqDonateEquip* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqDonateEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqDonateEquip& from);
  void MergeFrom(const GuildMSG_CS_ReqDonateEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 equipuuid = 1;
  inline bool has_equipuuid() const;
  inline void clear_equipuuid();
  static const int kEquipuuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equipuuid() const;
  inline void set_equipuuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqDonateEquip)
 private:
  inline void set_has_equipuuid();
  inline void clear_has_equipuuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equipuuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqDonateEquip* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqConversionEquip : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqConversionEquip();
  virtual ~GuildMSG_CS_ReqConversionEquip();

  GuildMSG_CS_ReqConversionEquip(const GuildMSG_CS_ReqConversionEquip& from);

  inline GuildMSG_CS_ReqConversionEquip& operator=(const GuildMSG_CS_ReqConversionEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqConversionEquip& default_instance();

  void Swap(GuildMSG_CS_ReqConversionEquip* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqConversionEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqConversionEquip& from);
  void MergeFrom(const GuildMSG_CS_ReqConversionEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 equipuuid = 1;
  inline bool has_equipuuid() const;
  inline void clear_equipuuid();
  static const int kEquipuuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equipuuid() const;
  inline void set_equipuuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqConversionEquip)
 private:
  inline void set_has_equipuuid();
  inline void clear_has_equipuuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equipuuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqConversionEquip* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_CS_ReqDelGuildEquip : public ::google::protobuf::Message {
 public:
  GuildMSG_CS_ReqDelGuildEquip();
  virtual ~GuildMSG_CS_ReqDelGuildEquip();

  GuildMSG_CS_ReqDelGuildEquip(const GuildMSG_CS_ReqDelGuildEquip& from);

  inline GuildMSG_CS_ReqDelGuildEquip& operator=(const GuildMSG_CS_ReqDelGuildEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_CS_ReqDelGuildEquip& default_instance();

  void Swap(GuildMSG_CS_ReqDelGuildEquip* other);

  // implements Message ----------------------------------------------

  GuildMSG_CS_ReqDelGuildEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_CS_ReqDelGuildEquip& from);
  void MergeFrom(const GuildMSG_CS_ReqDelGuildEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 equiplist = 1;
  inline int equiplist_size() const;
  inline void clear_equiplist();
  static const int kEquiplistFieldNumber = 1;
  inline ::google::protobuf::uint64 equiplist(int index) const;
  inline void set_equiplist(int index, ::google::protobuf::uint64 value);
  inline void add_equiplist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equiplist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equiplist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_CS_ReqDelGuildEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equiplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_CS_ReqDelGuildEquip* default_instance_;
};
// -------------------------------------------------------------------

class GuildMSG_SC_AckGuildEquipRecord : public ::google::protobuf::Message {
 public:
  GuildMSG_SC_AckGuildEquipRecord();
  virtual ~GuildMSG_SC_AckGuildEquipRecord();

  GuildMSG_SC_AckGuildEquipRecord(const GuildMSG_SC_AckGuildEquipRecord& from);

  inline GuildMSG_SC_AckGuildEquipRecord& operator=(const GuildMSG_SC_AckGuildEquipRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMSG_SC_AckGuildEquipRecord& default_instance();

  void Swap(GuildMSG_SC_AckGuildEquipRecord* other);

  // implements Message ----------------------------------------------

  GuildMSG_SC_AckGuildEquipRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMSG_SC_AckGuildEquipRecord& from);
  void MergeFrom(const GuildMSG_SC_AckGuildEquipRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.RecordData depositlist = 1;
  inline int depositlist_size() const;
  inline void clear_depositlist();
  static const int kDepositlistFieldNumber = 1;
  inline const ::proto::message::RecordData& depositlist(int index) const;
  inline ::proto::message::RecordData* mutable_depositlist(int index);
  inline ::proto::message::RecordData* add_depositlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
      depositlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
      mutable_depositlist();

  // repeated .proto.message.RecordData fetchlist = 2;
  inline int fetchlist_size() const;
  inline void clear_fetchlist();
  static const int kFetchlistFieldNumber = 2;
  inline const ::proto::message::RecordData& fetchlist(int index) const;
  inline ::proto::message::RecordData* mutable_fetchlist(int index);
  inline ::proto::message::RecordData* add_fetchlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
      fetchlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
      mutable_fetchlist();

  // @@protoc_insertion_point(class_scope:proto.message.GuildMSG_SC_AckGuildEquipRecord)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData > depositlist_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData > fetchlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMSG_SC_AckGuildEquipRecord* default_instance_;
};
// ===================================================================


// ===================================================================

// KickoutInfo

// optional uint64 playerid = 1;
inline bool KickoutInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickoutInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickoutInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickoutInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 KickoutInfo::playerid() const {
  return playerid_;
}
inline void KickoutInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 outtimes = 2;
inline bool KickoutInfo::has_outtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickoutInfo::set_has_outtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickoutInfo::clear_has_outtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickoutInfo::clear_outtimes() {
  outtimes_ = GOOGLE_ULONGLONG(0);
  clear_has_outtimes();
}
inline ::google::protobuf::uint64 KickoutInfo::outtimes() const {
  return outtimes_;
}
inline void KickoutInfo::set_outtimes(::google::protobuf::uint64 value) {
  set_has_outtimes();
  outtimes_ = value;
}

// -------------------------------------------------------------------

// GuildListInfo

// optional uint32 rangking = 1;
inline bool GuildListInfo::has_rangking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildListInfo::set_has_rangking() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildListInfo::clear_has_rangking() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildListInfo::clear_rangking() {
  rangking_ = 0u;
  clear_has_rangking();
}
inline ::google::protobuf::uint32 GuildListInfo::rangking() const {
  return rangking_;
}
inline void GuildListInfo::set_rangking(::google::protobuf::uint32 value) {
  set_has_rangking();
  rangking_ = value;
}

// optional uint64 guildid = 2;
inline bool GuildListInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildListInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildListInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildListInfo::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildListInfo::guildid() const {
  return guildid_;
}
inline void GuildListInfo::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// optional string guildname = 3;
inline bool GuildListInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildListInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildListInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildListInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildListInfo::guildname() const {
  return *guildname_;
}
inline void GuildListInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildListInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildListInfo::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildListInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* GuildListInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildListInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 guildlevel = 4;
inline bool GuildListInfo::has_guildlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildListInfo::set_has_guildlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildListInfo::clear_has_guildlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildListInfo::clear_guildlevel() {
  guildlevel_ = 0u;
  clear_has_guildlevel();
}
inline ::google::protobuf::uint32 GuildListInfo::guildlevel() const {
  return guildlevel_;
}
inline void GuildListInfo::set_guildlevel(::google::protobuf::uint32 value) {
  set_has_guildlevel();
  guildlevel_ = value;
}

// optional uint32 guildmember = 5;
inline bool GuildListInfo::has_guildmember() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildListInfo::set_has_guildmember() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildListInfo::clear_has_guildmember() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildListInfo::clear_guildmember() {
  guildmember_ = 0u;
  clear_has_guildmember();
}
inline ::google::protobuf::uint32 GuildListInfo::guildmember() const {
  return guildmember_;
}
inline void GuildListInfo::set_guildmember(::google::protobuf::uint32 value) {
  set_has_guildmember();
  guildmember_ = value;
}

// optional string guilddeclaration = 6;
inline bool GuildListInfo::has_guilddeclaration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildListInfo::set_has_guilddeclaration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildListInfo::clear_has_guilddeclaration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildListInfo::clear_guilddeclaration() {
  if (guilddeclaration_ != &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_->clear();
  }
  clear_has_guilddeclaration();
}
inline const ::std::string& GuildListInfo::guilddeclaration() const {
  return *guilddeclaration_;
}
inline void GuildListInfo::set_guilddeclaration(const ::std::string& value) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(value);
}
inline void GuildListInfo::set_guilddeclaration(const char* value) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(value);
}
inline void GuildListInfo::set_guilddeclaration(const char* value, size_t size) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildListInfo::mutable_guilddeclaration() {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  return guilddeclaration_;
}
inline ::std::string* GuildListInfo::release_guilddeclaration() {
  clear_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guilddeclaration_;
    guilddeclaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildListInfo::set_allocated_guilddeclaration(::std::string* guilddeclaration) {
  if (guilddeclaration_ != &::google::protobuf::internal::kEmptyString) {
    delete guilddeclaration_;
  }
  if (guilddeclaration) {
    set_has_guilddeclaration();
    guilddeclaration_ = guilddeclaration;
  } else {
    clear_has_guilddeclaration();
    guilddeclaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string ownername = 7;
inline bool GuildListInfo::has_ownername() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildListInfo::set_has_ownername() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildListInfo::clear_has_ownername() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildListInfo::clear_ownername() {
  if (ownername_ != &::google::protobuf::internal::kEmptyString) {
    ownername_->clear();
  }
  clear_has_ownername();
}
inline const ::std::string& GuildListInfo::ownername() const {
  return *ownername_;
}
inline void GuildListInfo::set_ownername(const ::std::string& value) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(value);
}
inline void GuildListInfo::set_ownername(const char* value) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(value);
}
inline void GuildListInfo::set_ownername(const char* value, size_t size) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildListInfo::mutable_ownername() {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  return ownername_;
}
inline ::std::string* GuildListInfo::release_ownername() {
  clear_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ownername_;
    ownername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildListInfo::set_allocated_ownername(::std::string* ownername) {
  if (ownername_ != &::google::protobuf::internal::kEmptyString) {
    delete ownername_;
  }
  if (ownername) {
    set_has_ownername();
    ownername_ = ownername;
  } else {
    clear_has_ownername();
    ownername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 guildthrive = 8;
inline bool GuildListInfo::has_guildthrive() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildListInfo::set_has_guildthrive() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildListInfo::clear_has_guildthrive() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildListInfo::clear_guildthrive() {
  guildthrive_ = GOOGLE_ULONGLONG(0);
  clear_has_guildthrive();
}
inline ::google::protobuf::uint64 GuildListInfo::guildthrive() const {
  return guildthrive_;
}
inline void GuildListInfo::set_guildthrive(::google::protobuf::uint64 value) {
  set_has_guildthrive();
  guildthrive_ = value;
}

// optional uint32 joincombat = 9;
inline bool GuildListInfo::has_joincombat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildListInfo::set_has_joincombat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildListInfo::clear_has_joincombat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildListInfo::clear_joincombat() {
  joincombat_ = 0u;
  clear_has_joincombat();
}
inline ::google::protobuf::uint32 GuildListInfo::joincombat() const {
  return joincombat_;
}
inline void GuildListInfo::set_joincombat(::google::protobuf::uint32 value) {
  set_has_joincombat();
  joincombat_ = value;
}

// optional bool canjoin = 10;
inline bool GuildListInfo::has_canjoin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildListInfo::set_has_canjoin() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildListInfo::clear_has_canjoin() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildListInfo::clear_canjoin() {
  canjoin_ = false;
  clear_has_canjoin();
}
inline bool GuildListInfo::canjoin() const {
  return canjoin_;
}
inline void GuildListInfo::set_canjoin(bool value) {
  set_has_canjoin();
  canjoin_ = value;
}

// optional bool isreqjoin = 11;
inline bool GuildListInfo::has_isreqjoin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildListInfo::set_has_isreqjoin() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildListInfo::clear_has_isreqjoin() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildListInfo::clear_isreqjoin() {
  isreqjoin_ = false;
  clear_has_isreqjoin();
}
inline bool GuildListInfo::isreqjoin() const {
  return isreqjoin_;
}
inline void GuildListInfo::set_isreqjoin(bool value) {
  set_has_isreqjoin();
  isreqjoin_ = value;
}

// optional bool isaudit = 12;
inline bool GuildListInfo::has_isaudit() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildListInfo::set_has_isaudit() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildListInfo::clear_has_isaudit() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildListInfo::clear_isaudit() {
  isaudit_ = false;
  clear_has_isaudit();
}
inline bool GuildListInfo::isaudit() const {
  return isaudit_;
}
inline void GuildListInfo::set_isaudit(bool value) {
  set_has_isaudit();
  isaudit_ = value;
}

// repeated .proto.message.KickoutInfo kickinfolist = 13;
inline int GuildListInfo::kickinfolist_size() const {
  return kickinfolist_.size();
}
inline void GuildListInfo::clear_kickinfolist() {
  kickinfolist_.Clear();
}
inline const ::proto::message::KickoutInfo& GuildListInfo::kickinfolist(int index) const {
  return kickinfolist_.Get(index);
}
inline ::proto::message::KickoutInfo* GuildListInfo::mutable_kickinfolist(int index) {
  return kickinfolist_.Mutable(index);
}
inline ::proto::message::KickoutInfo* GuildListInfo::add_kickinfolist() {
  return kickinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >&
GuildListInfo::kickinfolist() const {
  return kickinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >*
GuildListInfo::mutable_kickinfolist() {
  return &kickinfolist_;
}

// optional uint64 ownerid = 14;
inline bool GuildListInfo::has_ownerid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildListInfo::set_has_ownerid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildListInfo::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildListInfo::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 GuildListInfo::ownerid() const {
  return ownerid_;
}
inline void GuildListInfo::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
}

// -------------------------------------------------------------------

// ReqInfo

// optional string strname = 1;
inline bool ReqInfo::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInfo::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInfo::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInfo::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& ReqInfo::strname() const {
  return *strname_;
}
inline void ReqInfo::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ReqInfo::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ReqInfo::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqInfo::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* ReqInfo::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ReqInfo::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 2;
inline bool ReqInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ReqInfo::level() const {
  return level_;
}
inline void ReqInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 profession = 3;
inline bool ReqInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqInfo::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 ReqInfo::profession() const {
  return profession_;
}
inline void ReqInfo::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
}

// optional uint64 playerid = 4;
inline bool ReqInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 ReqInfo::playerid() const {
  return playerid_;
}
inline void ReqInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 combatvalue = 5;
inline bool ReqInfo::has_combatvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqInfo::set_has_combatvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqInfo::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqInfo::clear_combatvalue() {
  combatvalue_ = 0u;
  clear_has_combatvalue();
}
inline ::google::protobuf::uint32 ReqInfo::combatvalue() const {
  return combatvalue_;
}
inline void ReqInfo::set_combatvalue(::google::protobuf::uint32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
}

// optional uint32 dhlev = 6;
inline bool ReqInfo::has_dhlev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqInfo::set_has_dhlev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqInfo::clear_has_dhlev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqInfo::clear_dhlev() {
  dhlev_ = 0u;
  clear_has_dhlev();
}
inline ::google::protobuf::uint32 ReqInfo::dhlev() const {
  return dhlev_;
}
inline void ReqInfo::set_dhlev(::google::protobuf::uint32 value) {
  set_has_dhlev();
  dhlev_ = value;
}

// -------------------------------------------------------------------

// GuildShopInfo

// optional uint32 itemid = 1;
inline bool GuildShopInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildShopInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildShopInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildShopInfo::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GuildShopInfo::itemid() const {
  return itemid_;
}
inline void GuildShopInfo::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 counts = 2;
inline bool GuildShopInfo::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildShopInfo::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildShopInfo::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildShopInfo::clear_counts() {
  counts_ = 0u;
  clear_has_counts();
}
inline ::google::protobuf::uint32 GuildShopInfo::counts() const {
  return counts_;
}
inline void GuildShopInfo::set_counts(::google::protobuf::uint32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// QuestHelpInfo

// required uint32 playerid = 1;
inline bool QuestHelpInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestHelpInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestHelpInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestHelpInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 QuestHelpInfo::playerid() const {
  return playerid_;
}
inline void QuestHelpInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required int32 questid = 2;
inline bool QuestHelpInfo::has_questid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestHelpInfo::set_has_questid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestHelpInfo::clear_has_questid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestHelpInfo::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 QuestHelpInfo::questid() const {
  return questid_;
}
inline void QuestHelpInfo::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 loopnum = 3;
inline bool QuestHelpInfo::has_loopnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestHelpInfo::set_has_loopnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestHelpInfo::clear_has_loopnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestHelpInfo::clear_loopnum() {
  loopnum_ = 0;
  clear_has_loopnum();
}
inline ::google::protobuf::int32 QuestHelpInfo::loopnum() const {
  return loopnum_;
}
inline void QuestHelpInfo::set_loopnum(::google::protobuf::int32 value) {
  set_has_loopnum();
  loopnum_ = value;
}

// required int32 status = 4;
inline bool QuestHelpInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestHelpInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestHelpInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestHelpInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 QuestHelpInfo::status() const {
  return status_;
}
inline void QuestHelpInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 helperId = 5;
inline bool QuestHelpInfo::has_helperid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuestHelpInfo::set_has_helperid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuestHelpInfo::clear_has_helperid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuestHelpInfo::clear_helperid() {
  helperid_ = 0u;
  clear_has_helperid();
}
inline ::google::protobuf::uint32 QuestHelpInfo::helperid() const {
  return helperid_;
}
inline void QuestHelpInfo::set_helperid(::google::protobuf::uint32 value) {
  set_has_helperid();
  helperid_ = value;
}

// -------------------------------------------------------------------

// ImpeachInfo

// optional uint64 impeachtime = 1;
inline bool ImpeachInfo::has_impeachtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImpeachInfo::set_has_impeachtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImpeachInfo::clear_has_impeachtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImpeachInfo::clear_impeachtime() {
  impeachtime_ = GOOGLE_ULONGLONG(0);
  clear_has_impeachtime();
}
inline ::google::protobuf::uint64 ImpeachInfo::impeachtime() const {
  return impeachtime_;
}
inline void ImpeachInfo::set_impeachtime(::google::protobuf::uint64 value) {
  set_has_impeachtime();
  impeachtime_ = value;
}

// repeated uint64 impeachid = 2;
inline int ImpeachInfo::impeachid_size() const {
  return impeachid_.size();
}
inline void ImpeachInfo::clear_impeachid() {
  impeachid_.Clear();
}
inline ::google::protobuf::uint64 ImpeachInfo::impeachid(int index) const {
  return impeachid_.Get(index);
}
inline void ImpeachInfo::set_impeachid(int index, ::google::protobuf::uint64 value) {
  impeachid_.Set(index, value);
}
inline void ImpeachInfo::add_impeachid(::google::protobuf::uint64 value) {
  impeachid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ImpeachInfo::impeachid() const {
  return impeachid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ImpeachInfo::mutable_impeachid() {
  return &impeachid_;
}

// repeated string impeachname = 3;
inline int ImpeachInfo::impeachname_size() const {
  return impeachname_.size();
}
inline void ImpeachInfo::clear_impeachname() {
  impeachname_.Clear();
}
inline const ::std::string& ImpeachInfo::impeachname(int index) const {
  return impeachname_.Get(index);
}
inline ::std::string* ImpeachInfo::mutable_impeachname(int index) {
  return impeachname_.Mutable(index);
}
inline void ImpeachInfo::set_impeachname(int index, const ::std::string& value) {
  impeachname_.Mutable(index)->assign(value);
}
inline void ImpeachInfo::set_impeachname(int index, const char* value) {
  impeachname_.Mutable(index)->assign(value);
}
inline void ImpeachInfo::set_impeachname(int index, const char* value, size_t size) {
  impeachname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ImpeachInfo::add_impeachname() {
  return impeachname_.Add();
}
inline void ImpeachInfo::add_impeachname(const ::std::string& value) {
  impeachname_.Add()->assign(value);
}
inline void ImpeachInfo::add_impeachname(const char* value) {
  impeachname_.Add()->assign(value);
}
inline void ImpeachInfo::add_impeachname(const char* value, size_t size) {
  impeachname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImpeachInfo::impeachname() const {
  return impeachname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImpeachInfo::mutable_impeachname() {
  return &impeachname_;
}

// -------------------------------------------------------------------

// BossDamage

// optional uint64 playerid = 1;
inline bool BossDamage::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossDamage::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossDamage::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossDamage::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 BossDamage::playerid() const {
  return playerid_;
}
inline void BossDamage::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string name = 2;
inline bool BossDamage::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossDamage::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossDamage::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossDamage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BossDamage::name() const {
  return *name_;
}
inline void BossDamage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BossDamage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BossDamage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BossDamage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BossDamage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BossDamage::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 value = 3;
inline bool BossDamage::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossDamage::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossDamage::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossDamage::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 BossDamage::value() const {
  return value_;
}
inline void BossDamage::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint64 time = 4;
inline bool BossDamage::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossDamage::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossDamage::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossDamage::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 BossDamage::time() const {
  return time_;
}
inline void BossDamage::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 job = 5;
inline bool BossDamage::has_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BossDamage::set_has_job() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BossDamage::clear_has_job() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BossDamage::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 BossDamage::job() const {
  return job_;
}
inline void BossDamage::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// -------------------------------------------------------------------

// GuildBoss

// optional uint32 bossid = 1;
inline bool GuildBoss::has_bossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBoss::set_has_bossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBoss::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBoss::clear_bossid() {
  bossid_ = 0u;
  clear_has_bossid();
}
inline ::google::protobuf::uint32 GuildBoss::bossid() const {
  return bossid_;
}
inline void GuildBoss::set_bossid(::google::protobuf::uint32 value) {
  set_has_bossid();
  bossid_ = value;
}

// optional uint32 hppercent = 2;
inline bool GuildBoss::has_hppercent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBoss::set_has_hppercent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBoss::clear_has_hppercent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBoss::clear_hppercent() {
  hppercent_ = 0u;
  clear_has_hppercent();
}
inline ::google::protobuf::uint32 GuildBoss::hppercent() const {
  return hppercent_;
}
inline void GuildBoss::set_hppercent(::google::protobuf::uint32 value) {
  set_has_hppercent();
  hppercent_ = value;
}

// optional uint64 starttimes = 3;
inline bool GuildBoss::has_starttimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBoss::set_has_starttimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBoss::clear_has_starttimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBoss::clear_starttimes() {
  starttimes_ = GOOGLE_ULONGLONG(0);
  clear_has_starttimes();
}
inline ::google::protobuf::uint64 GuildBoss::starttimes() const {
  return starttimes_;
}
inline void GuildBoss::set_starttimes(::google::protobuf::uint64 value) {
  set_has_starttimes();
  starttimes_ = value;
}

// optional uint64 resettime = 4;
inline bool GuildBoss::has_resettime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBoss::set_has_resettime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBoss::clear_has_resettime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBoss::clear_resettime() {
  resettime_ = GOOGLE_ULONGLONG(0);
  clear_has_resettime();
}
inline ::google::protobuf::uint64 GuildBoss::resettime() const {
  return resettime_;
}
inline void GuildBoss::set_resettime(::google::protobuf::uint64 value) {
  set_has_resettime();
  resettime_ = value;
}

// repeated uint32 rewordlist = 5;
inline int GuildBoss::rewordlist_size() const {
  return rewordlist_.size();
}
inline void GuildBoss::clear_rewordlist() {
  rewordlist_.Clear();
}
inline ::google::protobuf::uint32 GuildBoss::rewordlist(int index) const {
  return rewordlist_.Get(index);
}
inline void GuildBoss::set_rewordlist(int index, ::google::protobuf::uint32 value) {
  rewordlist_.Set(index, value);
}
inline void GuildBoss::add_rewordlist(::google::protobuf::uint32 value) {
  rewordlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GuildBoss::rewordlist() const {
  return rewordlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GuildBoss::mutable_rewordlist() {
  return &rewordlist_;
}

// repeated .proto.message.BossDamage ranklist = 6;
inline int GuildBoss::ranklist_size() const {
  return ranklist_.size();
}
inline void GuildBoss::clear_ranklist() {
  ranklist_.Clear();
}
inline const ::proto::message::BossDamage& GuildBoss::ranklist(int index) const {
  return ranklist_.Get(index);
}
inline ::proto::message::BossDamage* GuildBoss::mutable_ranklist(int index) {
  return ranklist_.Mutable(index);
}
inline ::proto::message::BossDamage* GuildBoss::add_ranklist() {
  return ranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::BossDamage >&
GuildBoss::ranklist() const {
  return ranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::BossDamage >*
GuildBoss::mutable_ranklist() {
  return &ranklist_;
}

// optional uint32 guildlev = 7;
inline bool GuildBoss::has_guildlev() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildBoss::set_has_guildlev() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildBoss::clear_has_guildlev() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildBoss::clear_guildlev() {
  guildlev_ = 0u;
  clear_has_guildlev();
}
inline ::google::protobuf::uint32 GuildBoss::guildlev() const {
  return guildlev_;
}
inline void GuildBoss::set_guildlev(::google::protobuf::uint32 value) {
  set_has_guildlev();
  guildlev_ = value;
}

// optional uint64 guildid = 8;
inline bool GuildBoss::has_guildid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildBoss::set_has_guildid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildBoss::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildBoss::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildBoss::guildid() const {
  return guildid_;
}
inline void GuildBoss::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// optional uint64 fightime = 9;
inline bool GuildBoss::has_fightime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildBoss::set_has_fightime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildBoss::clear_has_fightime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildBoss::clear_fightime() {
  fightime_ = GOOGLE_ULONGLONG(0);
  clear_has_fightime();
}
inline ::google::protobuf::uint64 GuildBoss::fightime() const {
  return fightime_;
}
inline void GuildBoss::set_fightime(::google::protobuf::uint64 value) {
  set_has_fightime();
  fightime_ = value;
}

// optional uint32 changecounts = 10;
inline bool GuildBoss::has_changecounts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildBoss::set_has_changecounts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildBoss::clear_has_changecounts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildBoss::clear_changecounts() {
  changecounts_ = 0u;
  clear_has_changecounts();
}
inline ::google::protobuf::uint32 GuildBoss::changecounts() const {
  return changecounts_;
}
inline void GuildBoss::set_changecounts(::google::protobuf::uint32 value) {
  set_has_changecounts();
  changecounts_ = value;
}

// optional uint32 dfHour = 11;
inline bool GuildBoss::has_dfhour() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildBoss::set_has_dfhour() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildBoss::clear_has_dfhour() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildBoss::clear_dfhour() {
  dfhour_ = 0u;
  clear_has_dfhour();
}
inline ::google::protobuf::uint32 GuildBoss::dfhour() const {
  return dfhour_;
}
inline void GuildBoss::set_dfhour(::google::protobuf::uint32 value) {
  set_has_dfhour();
  dfhour_ = value;
}

// optional uint32 dfMinu = 12;
inline bool GuildBoss::has_dfminu() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildBoss::set_has_dfminu() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildBoss::clear_has_dfminu() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildBoss::clear_dfminu() {
  dfminu_ = 0u;
  clear_has_dfminu();
}
inline ::google::protobuf::uint32 GuildBoss::dfminu() const {
  return dfminu_;
}
inline void GuildBoss::set_dfminu(::google::protobuf::uint32 value) {
  set_has_dfminu();
  dfminu_ = value;
}

// -------------------------------------------------------------------

// RecordData

// optional uint32 type = 1;
inline bool RecordData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecordData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecordData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecordData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RecordData::type() const {
  return type_;
}
inline void RecordData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional string name = 2;
inline bool RecordData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecordData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecordData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecordData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RecordData::name() const {
  return *name_;
}
inline void RecordData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RecordData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RecordData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RecordData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RecordData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RecordData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 equipid = 3;
inline bool RecordData::has_equipid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecordData::set_has_equipid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecordData::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecordData::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 RecordData::equipid() const {
  return equipid_;
}
inline void RecordData::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
}

// optional uint64 time = 4;
inline bool RecordData::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RecordData::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RecordData::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RecordData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RecordData::time() const {
  return time_;
}
inline void RecordData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// MixGuildData

// optional uint64 levuptime = 1;
inline bool MixGuildData::has_levuptime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MixGuildData::set_has_levuptime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MixGuildData::clear_has_levuptime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MixGuildData::clear_levuptime() {
  levuptime_ = GOOGLE_ULONGLONG(0);
  clear_has_levuptime();
}
inline ::google::protobuf::uint64 MixGuildData::levuptime() const {
  return levuptime_;
}
inline void MixGuildData::set_levuptime(::google::protobuf::uint64 value) {
  set_has_levuptime();
  levuptime_ = value;
}

// optional uint64 ownerid = 2;
inline bool MixGuildData::has_ownerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MixGuildData::set_has_ownerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MixGuildData::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MixGuildData::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 MixGuildData::ownerid() const {
  return ownerid_;
}
inline void MixGuildData::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
}

// optional string guildplacard = 3;
inline bool MixGuildData::has_guildplacard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MixGuildData::set_has_guildplacard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MixGuildData::clear_has_guildplacard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MixGuildData::clear_guildplacard() {
  if (guildplacard_ != &::google::protobuf::internal::kEmptyString) {
    guildplacard_->clear();
  }
  clear_has_guildplacard();
}
inline const ::std::string& MixGuildData::guildplacard() const {
  return *guildplacard_;
}
inline void MixGuildData::set_guildplacard(const ::std::string& value) {
  set_has_guildplacard();
  if (guildplacard_ == &::google::protobuf::internal::kEmptyString) {
    guildplacard_ = new ::std::string;
  }
  guildplacard_->assign(value);
}
inline void MixGuildData::set_guildplacard(const char* value) {
  set_has_guildplacard();
  if (guildplacard_ == &::google::protobuf::internal::kEmptyString) {
    guildplacard_ = new ::std::string;
  }
  guildplacard_->assign(value);
}
inline void MixGuildData::set_guildplacard(const char* value, size_t size) {
  set_has_guildplacard();
  if (guildplacard_ == &::google::protobuf::internal::kEmptyString) {
    guildplacard_ = new ::std::string;
  }
  guildplacard_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MixGuildData::mutable_guildplacard() {
  set_has_guildplacard();
  if (guildplacard_ == &::google::protobuf::internal::kEmptyString) {
    guildplacard_ = new ::std::string;
  }
  return guildplacard_;
}
inline ::std::string* MixGuildData::release_guildplacard() {
  clear_has_guildplacard();
  if (guildplacard_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildplacard_;
    guildplacard_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MixGuildData::set_allocated_guildplacard(::std::string* guildplacard) {
  if (guildplacard_ != &::google::protobuf::internal::kEmptyString) {
    delete guildplacard_;
  }
  if (guildplacard) {
    set_has_guildplacard();
    guildplacard_ = guildplacard;
  } else {
    clear_has_guildplacard();
    guildplacard_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool canjoin = 4;
inline bool MixGuildData::has_canjoin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MixGuildData::set_has_canjoin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MixGuildData::clear_has_canjoin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MixGuildData::clear_canjoin() {
  canjoin_ = false;
  clear_has_canjoin();
}
inline bool MixGuildData::canjoin() const {
  return canjoin_;
}
inline void MixGuildData::set_canjoin(bool value) {
  set_has_canjoin();
  canjoin_ = value;
}

// optional uint32 joincombat = 5;
inline bool MixGuildData::has_joincombat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MixGuildData::set_has_joincombat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MixGuildData::clear_has_joincombat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MixGuildData::clear_joincombat() {
  joincombat_ = 0u;
  clear_has_joincombat();
}
inline ::google::protobuf::uint32 MixGuildData::joincombat() const {
  return joincombat_;
}
inline void MixGuildData::set_joincombat(::google::protobuf::uint32 value) {
  set_has_joincombat();
  joincombat_ = value;
}

// optional uint64 resources = 6;
inline bool MixGuildData::has_resources() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MixGuildData::set_has_resources() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MixGuildData::clear_has_resources() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MixGuildData::clear_resources() {
  resources_ = GOOGLE_ULONGLONG(0);
  clear_has_resources();
}
inline ::google::protobuf::uint64 MixGuildData::resources() const {
  return resources_;
}
inline void MixGuildData::set_resources(::google::protobuf::uint64 value) {
  set_has_resources();
  resources_ = value;
}

// repeated uint32 buildlist = 7;
inline int MixGuildData::buildlist_size() const {
  return buildlist_.size();
}
inline void MixGuildData::clear_buildlist() {
  buildlist_.Clear();
}
inline ::google::protobuf::uint32 MixGuildData::buildlist(int index) const {
  return buildlist_.Get(index);
}
inline void MixGuildData::set_buildlist(int index, ::google::protobuf::uint32 value) {
  buildlist_.Set(index, value);
}
inline void MixGuildData::add_buildlist(::google::protobuf::uint32 value) {
  buildlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MixGuildData::buildlist() const {
  return buildlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MixGuildData::mutable_buildlist() {
  return &buildlist_;
}

// repeated .proto.message.ReqInfo reqlist = 8;
inline int MixGuildData::reqlist_size() const {
  return reqlist_.size();
}
inline void MixGuildData::clear_reqlist() {
  reqlist_.Clear();
}
inline const ::proto::message::ReqInfo& MixGuildData::reqlist(int index) const {
  return reqlist_.Get(index);
}
inline ::proto::message::ReqInfo* MixGuildData::mutable_reqlist(int index) {
  return reqlist_.Mutable(index);
}
inline ::proto::message::ReqInfo* MixGuildData::add_reqlist() {
  return reqlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >&
MixGuildData::reqlist() const {
  return reqlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >*
MixGuildData::mutable_reqlist() {
  return &reqlist_;
}

// repeated .proto.message.GuildShopInfo shopinfo = 9;
inline int MixGuildData::shopinfo_size() const {
  return shopinfo_.size();
}
inline void MixGuildData::clear_shopinfo() {
  shopinfo_.Clear();
}
inline const ::proto::message::GuildShopInfo& MixGuildData::shopinfo(int index) const {
  return shopinfo_.Get(index);
}
inline ::proto::message::GuildShopInfo* MixGuildData::mutable_shopinfo(int index) {
  return shopinfo_.Mutable(index);
}
inline ::proto::message::GuildShopInfo* MixGuildData::add_shopinfo() {
  return shopinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >&
MixGuildData::shopinfo() const {
  return shopinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >*
MixGuildData::mutable_shopinfo() {
  return &shopinfo_;
}

// optional uint32 refrishmultiple = 10;
inline bool MixGuildData::has_refrishmultiple() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MixGuildData::set_has_refrishmultiple() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MixGuildData::clear_has_refrishmultiple() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MixGuildData::clear_refrishmultiple() {
  refrishmultiple_ = 0u;
  clear_has_refrishmultiple();
}
inline ::google::protobuf::uint32 MixGuildData::refrishmultiple() const {
  return refrishmultiple_;
}
inline void MixGuildData::set_refrishmultiple(::google::protobuf::uint32 value) {
  set_has_refrishmultiple();
  refrishmultiple_ = value;
}

// optional uint64 refrishtime = 11;
inline bool MixGuildData::has_refrishtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MixGuildData::set_has_refrishtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MixGuildData::clear_has_refrishtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MixGuildData::clear_refrishtime() {
  refrishtime_ = GOOGLE_ULONGLONG(0);
  clear_has_refrishtime();
}
inline ::google::protobuf::uint64 MixGuildData::refrishtime() const {
  return refrishtime_;
}
inline void MixGuildData::set_refrishtime(::google::protobuf::uint64 value) {
  set_has_refrishtime();
  refrishtime_ = value;
}

// repeated .proto.message.KickoutInfo kickinfolist = 12;
inline int MixGuildData::kickinfolist_size() const {
  return kickinfolist_.size();
}
inline void MixGuildData::clear_kickinfolist() {
  kickinfolist_.Clear();
}
inline const ::proto::message::KickoutInfo& MixGuildData::kickinfolist(int index) const {
  return kickinfolist_.Get(index);
}
inline ::proto::message::KickoutInfo* MixGuildData::mutable_kickinfolist(int index) {
  return kickinfolist_.Mutable(index);
}
inline ::proto::message::KickoutInfo* MixGuildData::add_kickinfolist() {
  return kickinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >&
MixGuildData::kickinfolist() const {
  return kickinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::KickoutInfo >*
MixGuildData::mutable_kickinfolist() {
  return &kickinfolist_;
}

// optional uint32 weekmissioncounts = 15;
inline bool MixGuildData::has_weekmissioncounts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MixGuildData::set_has_weekmissioncounts() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MixGuildData::clear_has_weekmissioncounts() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MixGuildData::clear_weekmissioncounts() {
  weekmissioncounts_ = 0u;
  clear_has_weekmissioncounts();
}
inline ::google::protobuf::uint32 MixGuildData::weekmissioncounts() const {
  return weekmissioncounts_;
}
inline void MixGuildData::set_weekmissioncounts(::google::protobuf::uint32 value) {
  set_has_weekmissioncounts();
  weekmissioncounts_ = value;
}

// repeated uint64 onlinecounts = 16;
inline int MixGuildData::onlinecounts_size() const {
  return onlinecounts_.size();
}
inline void MixGuildData::clear_onlinecounts() {
  onlinecounts_.Clear();
}
inline ::google::protobuf::uint64 MixGuildData::onlinecounts(int index) const {
  return onlinecounts_.Get(index);
}
inline void MixGuildData::set_onlinecounts(int index, ::google::protobuf::uint64 value) {
  onlinecounts_.Set(index, value);
}
inline void MixGuildData::add_onlinecounts(::google::protobuf::uint64 value) {
  onlinecounts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MixGuildData::onlinecounts() const {
  return onlinecounts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MixGuildData::mutable_onlinecounts() {
  return &onlinecounts_;
}

// repeated .proto.message.QuestHelpInfo helpinfo = 19;
inline int MixGuildData::helpinfo_size() const {
  return helpinfo_.size();
}
inline void MixGuildData::clear_helpinfo() {
  helpinfo_.Clear();
}
inline const ::proto::message::QuestHelpInfo& MixGuildData::helpinfo(int index) const {
  return helpinfo_.Get(index);
}
inline ::proto::message::QuestHelpInfo* MixGuildData::mutable_helpinfo(int index) {
  return helpinfo_.Mutable(index);
}
inline ::proto::message::QuestHelpInfo* MixGuildData::add_helpinfo() {
  return helpinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::QuestHelpInfo >&
MixGuildData::helpinfo() const {
  return helpinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::QuestHelpInfo >*
MixGuildData::mutable_helpinfo() {
  return &helpinfo_;
}

// optional bool isaudit = 20;
inline bool MixGuildData::has_isaudit() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MixGuildData::set_has_isaudit() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MixGuildData::clear_has_isaudit() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MixGuildData::clear_isaudit() {
  isaudit_ = false;
  clear_has_isaudit();
}
inline bool MixGuildData::isaudit() const {
  return isaudit_;
}
inline void MixGuildData::set_isaudit(bool value) {
  set_has_isaudit();
  isaudit_ = value;
}

// optional .proto.message.ImpeachInfo impinfo = 21;
inline bool MixGuildData::has_impinfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MixGuildData::set_has_impinfo() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MixGuildData::clear_has_impinfo() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MixGuildData::clear_impinfo() {
  if (impinfo_ != NULL) impinfo_->::proto::message::ImpeachInfo::Clear();
  clear_has_impinfo();
}
inline const ::proto::message::ImpeachInfo& MixGuildData::impinfo() const {
  return impinfo_ != NULL ? *impinfo_ : *default_instance_->impinfo_;
}
inline ::proto::message::ImpeachInfo* MixGuildData::mutable_impinfo() {
  set_has_impinfo();
  if (impinfo_ == NULL) impinfo_ = new ::proto::message::ImpeachInfo;
  return impinfo_;
}
inline ::proto::message::ImpeachInfo* MixGuildData::release_impinfo() {
  clear_has_impinfo();
  ::proto::message::ImpeachInfo* temp = impinfo_;
  impinfo_ = NULL;
  return temp;
}
inline void MixGuildData::set_allocated_impinfo(::proto::message::ImpeachInfo* impinfo) {
  delete impinfo_;
  impinfo_ = impinfo;
  if (impinfo) {
    set_has_impinfo();
  } else {
    clear_has_impinfo();
  }
}

// optional string guilddeclaration = 22;
inline bool MixGuildData::has_guilddeclaration() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MixGuildData::set_has_guilddeclaration() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MixGuildData::clear_has_guilddeclaration() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MixGuildData::clear_guilddeclaration() {
  if (guilddeclaration_ != &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_->clear();
  }
  clear_has_guilddeclaration();
}
inline const ::std::string& MixGuildData::guilddeclaration() const {
  return *guilddeclaration_;
}
inline void MixGuildData::set_guilddeclaration(const ::std::string& value) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(value);
}
inline void MixGuildData::set_guilddeclaration(const char* value) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(value);
}
inline void MixGuildData::set_guilddeclaration(const char* value, size_t size) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MixGuildData::mutable_guilddeclaration() {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  return guilddeclaration_;
}
inline ::std::string* MixGuildData::release_guilddeclaration() {
  clear_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guilddeclaration_;
    guilddeclaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MixGuildData::set_allocated_guilddeclaration(::std::string* guilddeclaration) {
  if (guilddeclaration_ != &::google::protobuf::internal::kEmptyString) {
    delete guilddeclaration_;
  }
  if (guilddeclaration) {
    set_has_guilddeclaration();
    guilddeclaration_ = guilddeclaration;
  } else {
    clear_has_guilddeclaration();
    guilddeclaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 lastcosttime = 23;
inline bool MixGuildData::has_lastcosttime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MixGuildData::set_has_lastcosttime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MixGuildData::clear_has_lastcosttime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MixGuildData::clear_lastcosttime() {
  lastcosttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastcosttime();
}
inline ::google::protobuf::uint64 MixGuildData::lastcosttime() const {
  return lastcosttime_;
}
inline void MixGuildData::set_lastcosttime(::google::protobuf::uint64 value) {
  set_has_lastcosttime();
  lastcosttime_ = value;
}

// optional uint64 boomtime = 24;
inline bool MixGuildData::has_boomtime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MixGuildData::set_has_boomtime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MixGuildData::clear_has_boomtime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MixGuildData::clear_boomtime() {
  boomtime_ = GOOGLE_ULONGLONG(0);
  clear_has_boomtime();
}
inline ::google::protobuf::uint64 MixGuildData::boomtime() const {
  return boomtime_;
}
inline void MixGuildData::set_boomtime(::google::protobuf::uint64 value) {
  set_has_boomtime();
  boomtime_ = value;
}

// optional uint64 settlementtime = 25;
inline bool MixGuildData::has_settlementtime() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MixGuildData::set_has_settlementtime() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MixGuildData::clear_has_settlementtime() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MixGuildData::clear_settlementtime() {
  settlementtime_ = GOOGLE_ULONGLONG(0);
  clear_has_settlementtime();
}
inline ::google::protobuf::uint64 MixGuildData::settlementtime() const {
  return settlementtime_;
}
inline void MixGuildData::set_settlementtime(::google::protobuf::uint64 value) {
  set_has_settlementtime();
  settlementtime_ = value;
}

// optional .proto.message.GuildBoss bossinfo = 26;
inline bool MixGuildData::has_bossinfo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MixGuildData::set_has_bossinfo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MixGuildData::clear_has_bossinfo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MixGuildData::clear_bossinfo() {
  if (bossinfo_ != NULL) bossinfo_->::proto::message::GuildBoss::Clear();
  clear_has_bossinfo();
}
inline const ::proto::message::GuildBoss& MixGuildData::bossinfo() const {
  return bossinfo_ != NULL ? *bossinfo_ : *default_instance_->bossinfo_;
}
inline ::proto::message::GuildBoss* MixGuildData::mutable_bossinfo() {
  set_has_bossinfo();
  if (bossinfo_ == NULL) bossinfo_ = new ::proto::message::GuildBoss;
  return bossinfo_;
}
inline ::proto::message::GuildBoss* MixGuildData::release_bossinfo() {
  clear_has_bossinfo();
  ::proto::message::GuildBoss* temp = bossinfo_;
  bossinfo_ = NULL;
  return temp;
}
inline void MixGuildData::set_allocated_bossinfo(::proto::message::GuildBoss* bossinfo) {
  delete bossinfo_;
  bossinfo_ = bossinfo;
  if (bossinfo) {
    set_has_bossinfo();
  } else {
    clear_has_bossinfo();
  }
}

// optional uint32 maxitem = 27;
inline bool MixGuildData::has_maxitem() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MixGuildData::set_has_maxitem() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MixGuildData::clear_has_maxitem() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MixGuildData::clear_maxitem() {
  maxitem_ = 0u;
  clear_has_maxitem();
}
inline ::google::protobuf::uint32 MixGuildData::maxitem() const {
  return maxitem_;
}
inline void MixGuildData::set_maxitem(::google::protobuf::uint32 value) {
  set_has_maxitem();
  maxitem_ = value;
}

// repeated .proto.message.Equip guildequip = 28;
inline int MixGuildData::guildequip_size() const {
  return guildequip_.size();
}
inline void MixGuildData::clear_guildequip() {
  guildequip_.Clear();
}
inline const ::proto::message::Equip& MixGuildData::guildequip(int index) const {
  return guildequip_.Get(index);
}
inline ::proto::message::Equip* MixGuildData::mutable_guildequip(int index) {
  return guildequip_.Mutable(index);
}
inline ::proto::message::Equip* MixGuildData::add_guildequip() {
  return guildequip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
MixGuildData::guildequip() const {
  return guildequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
MixGuildData::mutable_guildequip() {
  return &guildequip_;
}

// optional uint32 buygridcounts = 29;
inline bool MixGuildData::has_buygridcounts() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void MixGuildData::set_has_buygridcounts() {
  _has_bits_[0] |= 0x01000000u;
}
inline void MixGuildData::clear_has_buygridcounts() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void MixGuildData::clear_buygridcounts() {
  buygridcounts_ = 0u;
  clear_has_buygridcounts();
}
inline ::google::protobuf::uint32 MixGuildData::buygridcounts() const {
  return buygridcounts_;
}
inline void MixGuildData::set_buygridcounts(::google::protobuf::uint32 value) {
  set_has_buygridcounts();
  buygridcounts_ = value;
}

// repeated .proto.message.RecordData depositlist = 30;
inline int MixGuildData::depositlist_size() const {
  return depositlist_.size();
}
inline void MixGuildData::clear_depositlist() {
  depositlist_.Clear();
}
inline const ::proto::message::RecordData& MixGuildData::depositlist(int index) const {
  return depositlist_.Get(index);
}
inline ::proto::message::RecordData* MixGuildData::mutable_depositlist(int index) {
  return depositlist_.Mutable(index);
}
inline ::proto::message::RecordData* MixGuildData::add_depositlist() {
  return depositlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
MixGuildData::depositlist() const {
  return depositlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
MixGuildData::mutable_depositlist() {
  return &depositlist_;
}

// repeated .proto.message.RecordData fetchlist = 31;
inline int MixGuildData::fetchlist_size() const {
  return fetchlist_.size();
}
inline void MixGuildData::clear_fetchlist() {
  fetchlist_.Clear();
}
inline const ::proto::message::RecordData& MixGuildData::fetchlist(int index) const {
  return fetchlist_.Get(index);
}
inline ::proto::message::RecordData* MixGuildData::mutable_fetchlist(int index) {
  return fetchlist_.Mutable(index);
}
inline ::proto::message::RecordData* MixGuildData::add_fetchlist() {
  return fetchlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
MixGuildData::fetchlist() const {
  return fetchlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
MixGuildData::mutable_fetchlist() {
  return &fetchlist_;
}

// -------------------------------------------------------------------

// GuildData

// optional uint64 guildid = 1;
inline bool GuildData::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildData::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildData::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildData::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildData::guildid() const {
  return guildid_;
}
inline void GuildData::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// optional string guildname = 2;
inline bool GuildData::has_guildname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildData::set_has_guildname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildData::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildData::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildData::guildname() const {
  return *guildname_;
}
inline void GuildData::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildData::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildData::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildData::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* GuildData::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildData::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 guildlevel = 3;
inline bool GuildData::has_guildlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildData::set_has_guildlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildData::clear_has_guildlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildData::clear_guildlevel() {
  guildlevel_ = 0u;
  clear_has_guildlevel();
}
inline ::google::protobuf::uint32 GuildData::guildlevel() const {
  return guildlevel_;
}
inline void GuildData::set_guildlevel(::google::protobuf::uint32 value) {
  set_has_guildlevel();
  guildlevel_ = value;
}

// optional string ownername = 4;
inline bool GuildData::has_ownername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildData::set_has_ownername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildData::clear_has_ownername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildData::clear_ownername() {
  if (ownername_ != &::google::protobuf::internal::kEmptyString) {
    ownername_->clear();
  }
  clear_has_ownername();
}
inline const ::std::string& GuildData::ownername() const {
  return *ownername_;
}
inline void GuildData::set_ownername(const ::std::string& value) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(value);
}
inline void GuildData::set_ownername(const char* value) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(value);
}
inline void GuildData::set_ownername(const char* value, size_t size) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildData::mutable_ownername() {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    ownername_ = new ::std::string;
  }
  return ownername_;
}
inline ::std::string* GuildData::release_ownername() {
  clear_has_ownername();
  if (ownername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ownername_;
    ownername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildData::set_allocated_ownername(::std::string* ownername) {
  if (ownername_ != &::google::protobuf::internal::kEmptyString) {
    delete ownername_;
  }
  if (ownername) {
    set_has_ownername();
    ownername_ = ownername;
  } else {
    clear_has_ownername();
    ownername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prosperity = 5;
inline bool GuildData::has_prosperity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildData::set_has_prosperity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildData::clear_has_prosperity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildData::clear_prosperity() {
  prosperity_ = 0u;
  clear_has_prosperity();
}
inline ::google::protobuf::uint32 GuildData::prosperity() const {
  return prosperity_;
}
inline void GuildData::set_prosperity(::google::protobuf::uint32 value) {
  set_has_prosperity();
  prosperity_ = value;
}

// optional .proto.message.MixGuildData mixinfo = 6;
inline bool GuildData::has_mixinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildData::set_has_mixinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildData::clear_has_mixinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildData::clear_mixinfo() {
  if (mixinfo_ != NULL) mixinfo_->::proto::message::MixGuildData::Clear();
  clear_has_mixinfo();
}
inline const ::proto::message::MixGuildData& GuildData::mixinfo() const {
  return mixinfo_ != NULL ? *mixinfo_ : *default_instance_->mixinfo_;
}
inline ::proto::message::MixGuildData* GuildData::mutable_mixinfo() {
  set_has_mixinfo();
  if (mixinfo_ == NULL) mixinfo_ = new ::proto::message::MixGuildData;
  return mixinfo_;
}
inline ::proto::message::MixGuildData* GuildData::release_mixinfo() {
  clear_has_mixinfo();
  ::proto::message::MixGuildData* temp = mixinfo_;
  mixinfo_ = NULL;
  return temp;
}
inline void GuildData::set_allocated_mixinfo(::proto::message::MixGuildData* mixinfo) {
  delete mixinfo_;
  mixinfo_ = mixinfo;
  if (mixinfo) {
    set_has_mixinfo();
  } else {
    clear_has_mixinfo();
  }
}

// -------------------------------------------------------------------

// MixMemberDate

// optional uint64 getwagetime = 1;
inline bool MixMemberDate::has_getwagetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MixMemberDate::set_has_getwagetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MixMemberDate::clear_has_getwagetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MixMemberDate::clear_getwagetime() {
  getwagetime_ = GOOGLE_ULONGLONG(0);
  clear_has_getwagetime();
}
inline ::google::protobuf::uint64 MixMemberDate::getwagetime() const {
  return getwagetime_;
}
inline void MixMemberDate::set_getwagetime(::google::protobuf::uint64 value) {
  set_has_getwagetime();
  getwagetime_ = value;
}

// optional uint64 jointime = 2;
inline bool MixMemberDate::has_jointime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MixMemberDate::set_has_jointime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MixMemberDate::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MixMemberDate::clear_jointime() {
  jointime_ = GOOGLE_ULONGLONG(0);
  clear_has_jointime();
}
inline ::google::protobuf::uint64 MixMemberDate::jointime() const {
  return jointime_;
}
inline void MixMemberDate::set_jointime(::google::protobuf::uint64 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional uint64 offlinetime = 3;
inline bool MixMemberDate::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MixMemberDate::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MixMemberDate::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MixMemberDate::clear_offlinetime() {
  offlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_offlinetime();
}
inline ::google::protobuf::uint64 MixMemberDate::offlinetime() const {
  return offlinetime_;
}
inline void MixMemberDate::set_offlinetime(::google::protobuf::uint64 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// optional uint64 buyitemtime = 4;
inline bool MixMemberDate::has_buyitemtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MixMemberDate::set_has_buyitemtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MixMemberDate::clear_has_buyitemtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MixMemberDate::clear_buyitemtime() {
  buyitemtime_ = GOOGLE_ULONGLONG(0);
  clear_has_buyitemtime();
}
inline ::google::protobuf::uint64 MixMemberDate::buyitemtime() const {
  return buyitemtime_;
}
inline void MixMemberDate::set_buyitemtime(::google::protobuf::uint64 value) {
  set_has_buyitemtime();
  buyitemtime_ = value;
}

// optional uint32 buyitemcounts = 5;
inline bool MixMemberDate::has_buyitemcounts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MixMemberDate::set_has_buyitemcounts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MixMemberDate::clear_has_buyitemcounts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MixMemberDate::clear_buyitemcounts() {
  buyitemcounts_ = 0u;
  clear_has_buyitemcounts();
}
inline ::google::protobuf::uint32 MixMemberDate::buyitemcounts() const {
  return buyitemcounts_;
}
inline void MixMemberDate::set_buyitemcounts(::google::protobuf::uint32 value) {
  set_has_buyitemcounts();
  buyitemcounts_ = value;
}

// optional uint32 pendingwage = 6;
inline bool MixMemberDate::has_pendingwage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MixMemberDate::set_has_pendingwage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MixMemberDate::clear_has_pendingwage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MixMemberDate::clear_pendingwage() {
  pendingwage_ = 0u;
  clear_has_pendingwage();
}
inline ::google::protobuf::uint32 MixMemberDate::pendingwage() const {
  return pendingwage_;
}
inline void MixMemberDate::set_pendingwage(::google::protobuf::uint32 value) {
  set_has_pendingwage();
  pendingwage_ = value;
}

// optional uint32 currbasewage = 7;
inline bool MixMemberDate::has_currbasewage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MixMemberDate::set_has_currbasewage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MixMemberDate::clear_has_currbasewage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MixMemberDate::clear_currbasewage() {
  currbasewage_ = 0u;
  clear_has_currbasewage();
}
inline ::google::protobuf::uint32 MixMemberDate::currbasewage() const {
  return currbasewage_;
}
inline void MixMemberDate::set_currbasewage(::google::protobuf::uint32 value) {
  set_has_currbasewage();
  currbasewage_ = value;
}

// optional uint64 accumulated = 8;
inline bool MixMemberDate::has_accumulated() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MixMemberDate::set_has_accumulated() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MixMemberDate::clear_has_accumulated() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MixMemberDate::clear_accumulated() {
  accumulated_ = GOOGLE_ULONGLONG(0);
  clear_has_accumulated();
}
inline ::google::protobuf::uint64 MixMemberDate::accumulated() const {
  return accumulated_;
}
inline void MixMemberDate::set_accumulated(::google::protobuf::uint64 value) {
  set_has_accumulated();
  accumulated_ = value;
}

// optional uint32 weekcontribution = 9;
inline bool MixMemberDate::has_weekcontribution() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MixMemberDate::set_has_weekcontribution() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MixMemberDate::clear_has_weekcontribution() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MixMemberDate::clear_weekcontribution() {
  weekcontribution_ = 0u;
  clear_has_weekcontribution();
}
inline ::google::protobuf::uint32 MixMemberDate::weekcontribution() const {
  return weekcontribution_;
}
inline void MixMemberDate::set_weekcontribution(::google::protobuf::uint32 value) {
  set_has_weekcontribution();
  weekcontribution_ = value;
}

// optional uint32 landbattlecounts = 10;
inline bool MixMemberDate::has_landbattlecounts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MixMemberDate::set_has_landbattlecounts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MixMemberDate::clear_has_landbattlecounts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MixMemberDate::clear_landbattlecounts() {
  landbattlecounts_ = 0u;
  clear_has_landbattlecounts();
}
inline ::google::protobuf::uint32 MixMemberDate::landbattlecounts() const {
  return landbattlecounts_;
}
inline void MixMemberDate::set_landbattlecounts(::google::protobuf::uint32 value) {
  set_has_landbattlecounts();
  landbattlecounts_ = value;
}

// optional uint32 navalbattlecounts = 11;
inline bool MixMemberDate::has_navalbattlecounts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MixMemberDate::set_has_navalbattlecounts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MixMemberDate::clear_has_navalbattlecounts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MixMemberDate::clear_navalbattlecounts() {
  navalbattlecounts_ = 0u;
  clear_has_navalbattlecounts();
}
inline ::google::protobuf::uint32 MixMemberDate::navalbattlecounts() const {
  return navalbattlecounts_;
}
inline void MixMemberDate::set_navalbattlecounts(::google::protobuf::uint32 value) {
  set_has_navalbattlecounts();
  navalbattlecounts_ = value;
}

// optional uint64 impeachmenttime = 12;
inline bool MixMemberDate::has_impeachmenttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MixMemberDate::set_has_impeachmenttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MixMemberDate::clear_has_impeachmenttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MixMemberDate::clear_impeachmenttime() {
  impeachmenttime_ = GOOGLE_ULONGLONG(0);
  clear_has_impeachmenttime();
}
inline ::google::protobuf::uint64 MixMemberDate::impeachmenttime() const {
  return impeachmenttime_;
}
inline void MixMemberDate::set_impeachmenttime(::google::protobuf::uint64 value) {
  set_has_impeachmenttime();
  impeachmenttime_ = value;
}

// optional uint32 combatvalue = 13;
inline bool MixMemberDate::has_combatvalue() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MixMemberDate::set_has_combatvalue() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MixMemberDate::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MixMemberDate::clear_combatvalue() {
  combatvalue_ = 0u;
  clear_has_combatvalue();
}
inline ::google::protobuf::uint32 MixMemberDate::combatvalue() const {
  return combatvalue_;
}
inline void MixMemberDate::set_combatvalue(::google::protobuf::uint32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
}

// optional uint32 alivevalue = 14;
inline bool MixMemberDate::has_alivevalue() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MixMemberDate::set_has_alivevalue() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MixMemberDate::clear_has_alivevalue() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MixMemberDate::clear_alivevalue() {
  alivevalue_ = 0u;
  clear_has_alivevalue();
}
inline ::google::protobuf::uint32 MixMemberDate::alivevalue() const {
  return alivevalue_;
}
inline void MixMemberDate::set_alivevalue(::google::protobuf::uint32 value) {
  set_has_alivevalue();
  alivevalue_ = value;
}

// optional uint32 donate = 15;
inline bool MixMemberDate::has_donate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MixMemberDate::set_has_donate() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MixMemberDate::clear_has_donate() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MixMemberDate::clear_donate() {
  donate_ = 0u;
  clear_has_donate();
}
inline ::google::protobuf::uint32 MixMemberDate::donate() const {
  return donate_;
}
inline void MixMemberDate::set_donate(::google::protobuf::uint32 value) {
  set_has_donate();
  donate_ = value;
}

// repeated uint32 tbrewardlist = 16;
inline int MixMemberDate::tbrewardlist_size() const {
  return tbrewardlist_.size();
}
inline void MixMemberDate::clear_tbrewardlist() {
  tbrewardlist_.Clear();
}
inline ::google::protobuf::uint32 MixMemberDate::tbrewardlist(int index) const {
  return tbrewardlist_.Get(index);
}
inline void MixMemberDate::set_tbrewardlist(int index, ::google::protobuf::uint32 value) {
  tbrewardlist_.Set(index, value);
}
inline void MixMemberDate::add_tbrewardlist(::google::protobuf::uint32 value) {
  tbrewardlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MixMemberDate::tbrewardlist() const {
  return tbrewardlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MixMemberDate::mutable_tbrewardlist() {
  return &tbrewardlist_;
}

// -------------------------------------------------------------------

// GuildMemberData

// optional uint64 playerid = 1;
inline bool GuildMemberData::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberData::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 GuildMemberData::playerid() const {
  return playerid_;
}
inline void GuildMemberData::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string strname = 2;
inline bool GuildMemberData::has_strname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberData::set_has_strname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberData::clear_has_strname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberData::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& GuildMemberData::strname() const {
  return *strname_;
}
inline void GuildMemberData::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void GuildMemberData::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void GuildMemberData::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberData::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* GuildMemberData::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMemberData::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 3;
inline bool GuildMemberData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildMemberData::level() const {
  return level_;
}
inline void GuildMemberData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 guildid = 4;
inline bool GuildMemberData::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberData::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberData::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberData::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMemberData::guildid() const {
  return guildid_;
}
inline void GuildMemberData::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// optional uint32 guildoffice = 5;
inline bool GuildMemberData::has_guildoffice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMemberData::set_has_guildoffice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMemberData::clear_has_guildoffice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMemberData::clear_guildoffice() {
  guildoffice_ = 0u;
  clear_has_guildoffice();
}
inline ::google::protobuf::uint32 GuildMemberData::guildoffice() const {
  return guildoffice_;
}
inline void GuildMemberData::set_guildoffice(::google::protobuf::uint32 value) {
  set_has_guildoffice();
  guildoffice_ = value;
}

// optional uint32 guildmoney = 6;
inline bool GuildMemberData::has_guildmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMemberData::set_has_guildmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMemberData::clear_has_guildmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMemberData::clear_guildmoney() {
  guildmoney_ = 0u;
  clear_has_guildmoney();
}
inline ::google::protobuf::uint32 GuildMemberData::guildmoney() const {
  return guildmoney_;
}
inline void GuildMemberData::set_guildmoney(::google::protobuf::uint32 value) {
  set_has_guildmoney();
  guildmoney_ = value;
}

// optional uint32 profession = 7;
inline bool GuildMemberData::has_profession() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMemberData::set_has_profession() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMemberData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMemberData::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 GuildMemberData::profession() const {
  return profession_;
}
inline void GuildMemberData::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
}

// optional .proto.message.MixMemberDate mixinfo = 8;
inline bool GuildMemberData::has_mixinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMemberData::set_has_mixinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMemberData::clear_has_mixinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMemberData::clear_mixinfo() {
  if (mixinfo_ != NULL) mixinfo_->::proto::message::MixMemberDate::Clear();
  clear_has_mixinfo();
}
inline const ::proto::message::MixMemberDate& GuildMemberData::mixinfo() const {
  return mixinfo_ != NULL ? *mixinfo_ : *default_instance_->mixinfo_;
}
inline ::proto::message::MixMemberDate* GuildMemberData::mutable_mixinfo() {
  set_has_mixinfo();
  if (mixinfo_ == NULL) mixinfo_ = new ::proto::message::MixMemberDate;
  return mixinfo_;
}
inline ::proto::message::MixMemberDate* GuildMemberData::release_mixinfo() {
  clear_has_mixinfo();
  ::proto::message::MixMemberDate* temp = mixinfo_;
  mixinfo_ = NULL;
  return temp;
}
inline void GuildMemberData::set_allocated_mixinfo(::proto::message::MixMemberDate* mixinfo) {
  delete mixinfo_;
  mixinfo_ = mixinfo;
  if (mixinfo) {
    set_has_mixinfo();
  } else {
    clear_has_mixinfo();
  }
}

// optional uint32 dhlev = 9;
inline bool GuildMemberData::has_dhlev() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMemberData::set_has_dhlev() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMemberData::clear_has_dhlev() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMemberData::clear_dhlev() {
  dhlev_ = 0u;
  clear_has_dhlev();
}
inline ::google::protobuf::uint32 GuildMemberData::dhlev() const {
  return dhlev_;
}
inline void GuildMemberData::set_dhlev(::google::protobuf::uint32 value) {
  set_has_dhlev();
  dhlev_ = value;
}

// -------------------------------------------------------------------

// MemberListInfo

// optional uint64 playerid = 1;
inline bool MemberListInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberListInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberListInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberListInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 MemberListInfo::playerid() const {
  return playerid_;
}
inline void MemberListInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string strname = 2;
inline bool MemberListInfo::has_strname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberListInfo::set_has_strname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberListInfo::clear_has_strname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberListInfo::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& MemberListInfo::strname() const {
  return *strname_;
}
inline void MemberListInfo::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void MemberListInfo::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void MemberListInfo::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MemberListInfo::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* MemberListInfo::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MemberListInfo::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 3;
inline bool MemberListInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberListInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberListInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberListInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MemberListInfo::level() const {
  return level_;
}
inline void MemberListInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 profession = 4;
inline bool MemberListInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemberListInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemberListInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemberListInfo::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 MemberListInfo::profession() const {
  return profession_;
}
inline void MemberListInfo::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
}

// optional uint32 guildoffice = 5;
inline bool MemberListInfo::has_guildoffice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MemberListInfo::set_has_guildoffice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MemberListInfo::clear_has_guildoffice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MemberListInfo::clear_guildoffice() {
  guildoffice_ = 0u;
  clear_has_guildoffice();
}
inline ::google::protobuf::uint32 MemberListInfo::guildoffice() const {
  return guildoffice_;
}
inline void MemberListInfo::set_guildoffice(::google::protobuf::uint32 value) {
  set_has_guildoffice();
  guildoffice_ = value;
}

// optional uint64 jointime = 6;
inline bool MemberListInfo::has_jointime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MemberListInfo::set_has_jointime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MemberListInfo::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MemberListInfo::clear_jointime() {
  jointime_ = GOOGLE_ULONGLONG(0);
  clear_has_jointime();
}
inline ::google::protobuf::uint64 MemberListInfo::jointime() const {
  return jointime_;
}
inline void MemberListInfo::set_jointime(::google::protobuf::uint64 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional uint64 offlinetime = 7;
inline bool MemberListInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MemberListInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MemberListInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MemberListInfo::clear_offlinetime() {
  offlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_offlinetime();
}
inline ::google::protobuf::uint64 MemberListInfo::offlinetime() const {
  return offlinetime_;
}
inline void MemberListInfo::set_offlinetime(::google::protobuf::uint64 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// optional uint64 accumulated = 8;
inline bool MemberListInfo::has_accumulated() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MemberListInfo::set_has_accumulated() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MemberListInfo::clear_has_accumulated() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MemberListInfo::clear_accumulated() {
  accumulated_ = GOOGLE_ULONGLONG(0);
  clear_has_accumulated();
}
inline ::google::protobuf::uint64 MemberListInfo::accumulated() const {
  return accumulated_;
}
inline void MemberListInfo::set_accumulated(::google::protobuf::uint64 value) {
  set_has_accumulated();
  accumulated_ = value;
}

// optional uint32 weekcontribution = 9;
inline bool MemberListInfo::has_weekcontribution() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MemberListInfo::set_has_weekcontribution() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MemberListInfo::clear_has_weekcontribution() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MemberListInfo::clear_weekcontribution() {
  weekcontribution_ = 0u;
  clear_has_weekcontribution();
}
inline ::google::protobuf::uint32 MemberListInfo::weekcontribution() const {
  return weekcontribution_;
}
inline void MemberListInfo::set_weekcontribution(::google::protobuf::uint32 value) {
  set_has_weekcontribution();
  weekcontribution_ = value;
}

// optional uint32 landbattlecounts = 10;
inline bool MemberListInfo::has_landbattlecounts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MemberListInfo::set_has_landbattlecounts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MemberListInfo::clear_has_landbattlecounts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MemberListInfo::clear_landbattlecounts() {
  landbattlecounts_ = 0u;
  clear_has_landbattlecounts();
}
inline ::google::protobuf::uint32 MemberListInfo::landbattlecounts() const {
  return landbattlecounts_;
}
inline void MemberListInfo::set_landbattlecounts(::google::protobuf::uint32 value) {
  set_has_landbattlecounts();
  landbattlecounts_ = value;
}

// optional uint32 navalbattlecounts = 11;
inline bool MemberListInfo::has_navalbattlecounts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MemberListInfo::set_has_navalbattlecounts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MemberListInfo::clear_has_navalbattlecounts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MemberListInfo::clear_navalbattlecounts() {
  navalbattlecounts_ = 0u;
  clear_has_navalbattlecounts();
}
inline ::google::protobuf::uint32 MemberListInfo::navalbattlecounts() const {
  return navalbattlecounts_;
}
inline void MemberListInfo::set_navalbattlecounts(::google::protobuf::uint32 value) {
  set_has_navalbattlecounts();
  navalbattlecounts_ = value;
}

// optional bool isonline = 12;
inline bool MemberListInfo::has_isonline() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MemberListInfo::set_has_isonline() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MemberListInfo::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MemberListInfo::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool MemberListInfo::isonline() const {
  return isonline_;
}
inline void MemberListInfo::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
}

// optional uint32 combatvalue = 13;
inline bool MemberListInfo::has_combatvalue() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MemberListInfo::set_has_combatvalue() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MemberListInfo::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MemberListInfo::clear_combatvalue() {
  combatvalue_ = 0u;
  clear_has_combatvalue();
}
inline ::google::protobuf::uint32 MemberListInfo::combatvalue() const {
  return combatvalue_;
}
inline void MemberListInfo::set_combatvalue(::google::protobuf::uint32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
}

// optional uint32 dhlev = 14;
inline bool MemberListInfo::has_dhlev() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MemberListInfo::set_has_dhlev() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MemberListInfo::clear_has_dhlev() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MemberListInfo::clear_dhlev() {
  dhlev_ = 0u;
  clear_has_dhlev();
}
inline ::google::protobuf::uint32 MemberListInfo::dhlev() const {
  return dhlev_;
}
inline void MemberListInfo::set_dhlev(::google::protobuf::uint32 value) {
  set_has_dhlev();
  dhlev_ = value;
}

// -------------------------------------------------------------------

// UniteGuildData

// optional uint32 ranking = 1;
inline bool UniteGuildData::has_ranking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniteGuildData::set_has_ranking() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UniteGuildData::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UniteGuildData::clear_ranking() {
  ranking_ = 0u;
  clear_has_ranking();
}
inline ::google::protobuf::uint32 UniteGuildData::ranking() const {
  return ranking_;
}
inline void UniteGuildData::set_ranking(::google::protobuf::uint32 value) {
  set_has_ranking();
  ranking_ = value;
}

// optional string guildname = 2;
inline bool UniteGuildData::has_guildname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UniteGuildData::set_has_guildname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UniteGuildData::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UniteGuildData::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& UniteGuildData::guildname() const {
  return *guildname_;
}
inline void UniteGuildData::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void UniteGuildData::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void UniteGuildData::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UniteGuildData::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* UniteGuildData::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UniteGuildData::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 reqplayerid = 3;
inline bool UniteGuildData::has_reqplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UniteGuildData::set_has_reqplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UniteGuildData::clear_has_reqplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UniteGuildData::clear_reqplayerid() {
  reqplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqplayerid();
}
inline ::google::protobuf::uint64 UniteGuildData::reqplayerid() const {
  return reqplayerid_;
}
inline void UniteGuildData::set_reqplayerid(::google::protobuf::uint64 value) {
  set_has_reqplayerid();
  reqplayerid_ = value;
}

// optional uint64 reqguildid = 4;
inline bool UniteGuildData::has_reqguildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UniteGuildData::set_has_reqguildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UniteGuildData::clear_has_reqguildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UniteGuildData::clear_reqguildid() {
  reqguildid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqguildid();
}
inline ::google::protobuf::uint64 UniteGuildData::reqguildid() const {
  return reqguildid_;
}
inline void UniteGuildData::set_reqguildid(::google::protobuf::uint64 value) {
  set_has_reqguildid();
  reqguildid_ = value;
}

// optional uint32 guildlev = 5;
inline bool UniteGuildData::has_guildlev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UniteGuildData::set_has_guildlev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UniteGuildData::clear_has_guildlev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UniteGuildData::clear_guildlev() {
  guildlev_ = 0u;
  clear_has_guildlev();
}
inline ::google::protobuf::uint32 UniteGuildData::guildlev() const {
  return guildlev_;
}
inline void UniteGuildData::set_guildlev(::google::protobuf::uint32 value) {
  set_has_guildlev();
  guildlev_ = value;
}

// optional uint32 membernum = 6;
inline bool UniteGuildData::has_membernum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UniteGuildData::set_has_membernum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UniteGuildData::clear_has_membernum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UniteGuildData::clear_membernum() {
  membernum_ = 0u;
  clear_has_membernum();
}
inline ::google::protobuf::uint32 UniteGuildData::membernum() const {
  return membernum_;
}
inline void UniteGuildData::set_membernum(::google::protobuf::uint32 value) {
  set_has_membernum();
  membernum_ = value;
}

// optional string ackguildname = 7;
inline bool UniteGuildData::has_ackguildname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UniteGuildData::set_has_ackguildname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UniteGuildData::clear_has_ackguildname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UniteGuildData::clear_ackguildname() {
  if (ackguildname_ != &::google::protobuf::internal::kEmptyString) {
    ackguildname_->clear();
  }
  clear_has_ackguildname();
}
inline const ::std::string& UniteGuildData::ackguildname() const {
  return *ackguildname_;
}
inline void UniteGuildData::set_ackguildname(const ::std::string& value) {
  set_has_ackguildname();
  if (ackguildname_ == &::google::protobuf::internal::kEmptyString) {
    ackguildname_ = new ::std::string;
  }
  ackguildname_->assign(value);
}
inline void UniteGuildData::set_ackguildname(const char* value) {
  set_has_ackguildname();
  if (ackguildname_ == &::google::protobuf::internal::kEmptyString) {
    ackguildname_ = new ::std::string;
  }
  ackguildname_->assign(value);
}
inline void UniteGuildData::set_ackguildname(const char* value, size_t size) {
  set_has_ackguildname();
  if (ackguildname_ == &::google::protobuf::internal::kEmptyString) {
    ackguildname_ = new ::std::string;
  }
  ackguildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UniteGuildData::mutable_ackguildname() {
  set_has_ackguildname();
  if (ackguildname_ == &::google::protobuf::internal::kEmptyString) {
    ackguildname_ = new ::std::string;
  }
  return ackguildname_;
}
inline ::std::string* UniteGuildData::release_ackguildname() {
  clear_has_ackguildname();
  if (ackguildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ackguildname_;
    ackguildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UniteGuildData::set_allocated_ackguildname(::std::string* ackguildname) {
  if (ackguildname_ != &::google::protobuf::internal::kEmptyString) {
    delete ackguildname_;
  }
  if (ackguildname) {
    set_has_ackguildname();
    ackguildname_ = ackguildname;
  } else {
    clear_has_ackguildname();
    ackguildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 ackplayerid = 8;
inline bool UniteGuildData::has_ackplayerid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UniteGuildData::set_has_ackplayerid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UniteGuildData::clear_has_ackplayerid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UniteGuildData::clear_ackplayerid() {
  ackplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ackplayerid();
}
inline ::google::protobuf::uint64 UniteGuildData::ackplayerid() const {
  return ackplayerid_;
}
inline void UniteGuildData::set_ackplayerid(::google::protobuf::uint64 value) {
  set_has_ackplayerid();
  ackplayerid_ = value;
}

// optional uint64 ackguildid = 9;
inline bool UniteGuildData::has_ackguildid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UniteGuildData::set_has_ackguildid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UniteGuildData::clear_has_ackguildid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UniteGuildData::clear_ackguildid() {
  ackguildid_ = GOOGLE_ULONGLONG(0);
  clear_has_ackguildid();
}
inline ::google::protobuf::uint64 UniteGuildData::ackguildid() const {
  return ackguildid_;
}
inline void UniteGuildData::set_ackguildid(::google::protobuf::uint64 value) {
  set_has_ackguildid();
  ackguildid_ = value;
}

// optional uint32 whomaster = 10;
inline bool UniteGuildData::has_whomaster() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UniteGuildData::set_has_whomaster() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UniteGuildData::clear_has_whomaster() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UniteGuildData::clear_whomaster() {
  whomaster_ = 0u;
  clear_has_whomaster();
}
inline ::google::protobuf::uint32 UniteGuildData::whomaster() const {
  return whomaster_;
}
inline void UniteGuildData::set_whomaster(::google::protobuf::uint32 value) {
  set_has_whomaster();
  whomaster_ = value;
}

// optional uint64 endtime = 11;
inline bool UniteGuildData::has_endtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UniteGuildData::set_has_endtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UniteGuildData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UniteGuildData::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 UniteGuildData::endtime() const {
  return endtime_;
}
inline void UniteGuildData::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// GuildUsedName

// repeated string guildusedname = 1;
inline int GuildUsedName::guildusedname_size() const {
  return guildusedname_.size();
}
inline void GuildUsedName::clear_guildusedname() {
  guildusedname_.Clear();
}
inline const ::std::string& GuildUsedName::guildusedname(int index) const {
  return guildusedname_.Get(index);
}
inline ::std::string* GuildUsedName::mutable_guildusedname(int index) {
  return guildusedname_.Mutable(index);
}
inline void GuildUsedName::set_guildusedname(int index, const ::std::string& value) {
  guildusedname_.Mutable(index)->assign(value);
}
inline void GuildUsedName::set_guildusedname(int index, const char* value) {
  guildusedname_.Mutable(index)->assign(value);
}
inline void GuildUsedName::set_guildusedname(int index, const char* value, size_t size) {
  guildusedname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildUsedName::add_guildusedname() {
  return guildusedname_.Add();
}
inline void GuildUsedName::add_guildusedname(const ::std::string& value) {
  guildusedname_.Add()->assign(value);
}
inline void GuildUsedName::add_guildusedname(const char* value) {
  guildusedname_.Add()->assign(value);
}
inline void GuildUsedName::add_guildusedname(const char* value, size_t size) {
  guildusedname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildUsedName::guildusedname() const {
  return guildusedname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildUsedName::mutable_guildusedname() {
  return &guildusedname_;
}

// -------------------------------------------------------------------

// GUsedName

// optional string guildusedname = 1;
inline bool GUsedName::has_guildusedname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GUsedName::set_has_guildusedname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GUsedName::clear_has_guildusedname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GUsedName::clear_guildusedname() {
  if (guildusedname_ != &::google::protobuf::internal::kEmptyString) {
    guildusedname_->clear();
  }
  clear_has_guildusedname();
}
inline const ::std::string& GUsedName::guildusedname() const {
  return *guildusedname_;
}
inline void GUsedName::set_guildusedname(const ::std::string& value) {
  set_has_guildusedname();
  if (guildusedname_ == &::google::protobuf::internal::kEmptyString) {
    guildusedname_ = new ::std::string;
  }
  guildusedname_->assign(value);
}
inline void GUsedName::set_guildusedname(const char* value) {
  set_has_guildusedname();
  if (guildusedname_ == &::google::protobuf::internal::kEmptyString) {
    guildusedname_ = new ::std::string;
  }
  guildusedname_->assign(value);
}
inline void GUsedName::set_guildusedname(const char* value, size_t size) {
  set_has_guildusedname();
  if (guildusedname_ == &::google::protobuf::internal::kEmptyString) {
    guildusedname_ = new ::std::string;
  }
  guildusedname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GUsedName::mutable_guildusedname() {
  set_has_guildusedname();
  if (guildusedname_ == &::google::protobuf::internal::kEmptyString) {
    guildusedname_ = new ::std::string;
  }
  return guildusedname_;
}
inline ::std::string* GUsedName::release_guildusedname() {
  clear_has_guildusedname();
  if (guildusedname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildusedname_;
    guildusedname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GUsedName::set_allocated_guildusedname(::std::string* guildusedname) {
  if (guildusedname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildusedname_;
  }
  if (guildusedname) {
    set_has_guildusedname();
    guildusedname_ = guildusedname;
  } else {
    clear_has_guildusedname();
    guildusedname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqGuildList

// optional uint32 pagenum = 1;
inline bool GuildMSG_CS_ReqGuildList::has_pagenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqGuildList::set_has_pagenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqGuildList::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqGuildList::clear_pagenum() {
  pagenum_ = 0u;
  clear_has_pagenum();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqGuildList::pagenum() const {
  return pagenum_;
}
inline void GuildMSG_CS_ReqGuildList::set_pagenum(::google::protobuf::uint32 value) {
  set_has_pagenum();
  pagenum_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildList

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckGuildList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckGuildList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckGuildList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckGuildList::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGuildList::result() const {
  return result_;
}
inline void GuildMSG_SC_AckGuildList::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.GuildListInfo infolist = 2;
inline int GuildMSG_SC_AckGuildList::infolist_size() const {
  return infolist_.size();
}
inline void GuildMSG_SC_AckGuildList::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::GuildListInfo& GuildMSG_SC_AckGuildList::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::GuildListInfo* GuildMSG_SC_AckGuildList::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::GuildListInfo* GuildMSG_SC_AckGuildList::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >&
GuildMSG_SC_AckGuildList::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >*
GuildMSG_SC_AckGuildList::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqCreate

// optional string guildname = 1;
inline bool GuildMSG_CS_ReqCreate::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqCreate::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqCreate::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqCreate::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildMSG_CS_ReqCreate::guildname() const {
  return *guildname_;
}
inline void GuildMSG_CS_ReqCreate::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildMSG_CS_ReqCreate::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildMSG_CS_ReqCreate::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_CS_ReqCreate::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* GuildMSG_CS_ReqCreate::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_CS_ReqCreate::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string guilddeclaration = 2;
inline bool GuildMSG_CS_ReqCreate::has_guilddeclaration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqCreate::set_has_guilddeclaration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqCreate::clear_has_guilddeclaration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqCreate::clear_guilddeclaration() {
  if (guilddeclaration_ != &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_->clear();
  }
  clear_has_guilddeclaration();
}
inline const ::std::string& GuildMSG_CS_ReqCreate::guilddeclaration() const {
  return *guilddeclaration_;
}
inline void GuildMSG_CS_ReqCreate::set_guilddeclaration(const ::std::string& value) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(value);
}
inline void GuildMSG_CS_ReqCreate::set_guilddeclaration(const char* value) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(value);
}
inline void GuildMSG_CS_ReqCreate::set_guilddeclaration(const char* value, size_t size) {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  guilddeclaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_CS_ReqCreate::mutable_guilddeclaration() {
  set_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    guilddeclaration_ = new ::std::string;
  }
  return guilddeclaration_;
}
inline ::std::string* GuildMSG_CS_ReqCreate::release_guilddeclaration() {
  clear_has_guilddeclaration();
  if (guilddeclaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guilddeclaration_;
    guilddeclaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_CS_ReqCreate::set_allocated_guilddeclaration(::std::string* guilddeclaration) {
  if (guilddeclaration_ != &::google::protobuf::internal::kEmptyString) {
    delete guilddeclaration_;
  }
  if (guilddeclaration) {
    set_has_guilddeclaration();
    guilddeclaration_ = guilddeclaration;
  } else {
    clear_has_guilddeclaration();
    guilddeclaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckCreate

// optional uint32 reslut = 1;
inline bool GuildMSG_SC_AckCreate::has_reslut() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckCreate::set_has_reslut() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckCreate::clear_has_reslut() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckCreate::clear_reslut() {
  reslut_ = 0u;
  clear_has_reslut();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckCreate::reslut() const {
  return reslut_;
}
inline void GuildMSG_SC_AckCreate::set_reslut(::google::protobuf::uint32 value) {
  set_has_reslut();
  reslut_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqJoin

// optional uint64 guildid = 1;
inline bool GuildMSG_CS_ReqJoin::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqJoin::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqJoin::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqJoin::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqJoin::guildid() const {
  return guildid_;
}
inline void GuildMSG_CS_ReqJoin::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckJoin

// optional uint32 reslut = 1;
inline bool GuildMSG_SC_AckJoin::has_reslut() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckJoin::set_has_reslut() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckJoin::clear_has_reslut() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckJoin::clear_reslut() {
  reslut_ = 0u;
  clear_has_reslut();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckJoin::reslut() const {
  return reslut_;
}
inline void GuildMSG_SC_AckJoin::set_reslut(::google::protobuf::uint32 value) {
  set_has_reslut();
  reslut_ = value;
}

// optional uint64 timesup = 2;
inline bool GuildMSG_SC_AckJoin::has_timesup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckJoin::set_has_timesup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckJoin::clear_has_timesup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckJoin::clear_timesup() {
  timesup_ = GOOGLE_ULONGLONG(0);
  clear_has_timesup();
}
inline ::google::protobuf::uint64 GuildMSG_SC_AckJoin::timesup() const {
  return timesup_;
}
inline void GuildMSG_SC_AckJoin::set_timesup(::google::protobuf::uint64 value) {
  set_has_timesup();
  timesup_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqQuickJoin

// -------------------------------------------------------------------

// GuildMSG_SC_AckQuickJoin

// optional uint32 reslut = 1;
inline bool GuildMSG_SC_AckQuickJoin::has_reslut() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckQuickJoin::set_has_reslut() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckQuickJoin::clear_has_reslut() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckQuickJoin::clear_reslut() {
  reslut_ = 0u;
  clear_has_reslut();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckQuickJoin::reslut() const {
  return reslut_;
}
inline void GuildMSG_SC_AckQuickJoin::set_reslut(::google::protobuf::uint32 value) {
  set_has_reslut();
  reslut_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqFind

// optional string guildname = 1;
inline bool GuildMSG_CS_ReqFind::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqFind::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqFind::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqFind::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildMSG_CS_ReqFind::guildname() const {
  return *guildname_;
}
inline void GuildMSG_CS_ReqFind::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildMSG_CS_ReqFind::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildMSG_CS_ReqFind::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_CS_ReqFind::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* GuildMSG_CS_ReqFind::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_CS_ReqFind::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 guildid = 2;
inline bool GuildMSG_CS_ReqFind::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqFind::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqFind::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqFind::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqFind::guildid() const {
  return guildid_;
}
inline void GuildMSG_CS_ReqFind::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckFind

// optional uint32 counts = 1;
inline bool GuildMSG_SC_AckFind::has_counts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckFind::set_has_counts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckFind::clear_has_counts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckFind::clear_counts() {
  counts_ = 0u;
  clear_has_counts();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckFind::counts() const {
  return counts_;
}
inline void GuildMSG_SC_AckFind::set_counts(::google::protobuf::uint32 value) {
  set_has_counts();
  counts_ = value;
}

// repeated .proto.message.GuildListInfo infolist = 2;
inline int GuildMSG_SC_AckFind::infolist_size() const {
  return infolist_.size();
}
inline void GuildMSG_SC_AckFind::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::GuildListInfo& GuildMSG_SC_AckFind::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::GuildListInfo* GuildMSG_SC_AckFind::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::GuildListInfo* GuildMSG_SC_AckFind::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >&
GuildMSG_SC_AckFind::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildListInfo >*
GuildMSG_SC_AckFind::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqGuildInfo

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckGuildInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckGuildInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGuildInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_AckGuildInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 membercounts = 2;
inline bool GuildMSG_SC_AckGuildInfo::has_membercounts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckGuildInfo::set_has_membercounts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_has_membercounts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_membercounts() {
  membercounts_ = 0u;
  clear_has_membercounts();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGuildInfo::membercounts() const {
  return membercounts_;
}
inline void GuildMSG_SC_AckGuildInfo::set_membercounts(::google::protobuf::uint32 value) {
  set_has_membercounts();
  membercounts_ = value;
}

// optional uint32 rangking = 3;
inline bool GuildMSG_SC_AckGuildInfo::has_rangking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_AckGuildInfo::set_has_rangking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_has_rangking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_rangking() {
  rangking_ = 0u;
  clear_has_rangking();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGuildInfo::rangking() const {
  return rangking_;
}
inline void GuildMSG_SC_AckGuildInfo::set_rangking(::google::protobuf::uint32 value) {
  set_has_rangking();
  rangking_ = value;
}

// optional .proto.message.GuildData guildinfo = 6;
inline bool GuildMSG_SC_AckGuildInfo::has_guildinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMSG_SC_AckGuildInfo::set_has_guildinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_has_guildinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMSG_SC_AckGuildInfo::clear_guildinfo() {
  if (guildinfo_ != NULL) guildinfo_->::proto::message::GuildData::Clear();
  clear_has_guildinfo();
}
inline const ::proto::message::GuildData& GuildMSG_SC_AckGuildInfo::guildinfo() const {
  return guildinfo_ != NULL ? *guildinfo_ : *default_instance_->guildinfo_;
}
inline ::proto::message::GuildData* GuildMSG_SC_AckGuildInfo::mutable_guildinfo() {
  set_has_guildinfo();
  if (guildinfo_ == NULL) guildinfo_ = new ::proto::message::GuildData;
  return guildinfo_;
}
inline ::proto::message::GuildData* GuildMSG_SC_AckGuildInfo::release_guildinfo() {
  clear_has_guildinfo();
  ::proto::message::GuildData* temp = guildinfo_;
  guildinfo_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckGuildInfo::set_allocated_guildinfo(::proto::message::GuildData* guildinfo) {
  delete guildinfo_;
  guildinfo_ = guildinfo;
  if (guildinfo) {
    set_has_guildinfo();
  } else {
    clear_has_guildinfo();
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqMemberInfo

// optional int64 playerID = 1;
inline bool GuildMSG_CS_ReqMemberInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqMemberInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqMemberInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqMemberInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 GuildMSG_CS_ReqMemberInfo::playerid() const {
  return playerid_;
}
inline void GuildMSG_CS_ReqMemberInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckMemberInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckMemberInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckMemberInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckMemberInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckMemberInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckMemberInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_AckMemberInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.GuildMemberData memberinfo = 2;
inline bool GuildMSG_SC_AckMemberInfo::has_memberinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckMemberInfo::set_has_memberinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckMemberInfo::clear_has_memberinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckMemberInfo::clear_memberinfo() {
  if (memberinfo_ != NULL) memberinfo_->::proto::message::GuildMemberData::Clear();
  clear_has_memberinfo();
}
inline const ::proto::message::GuildMemberData& GuildMSG_SC_AckMemberInfo::memberinfo() const {
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance_->memberinfo_;
}
inline ::proto::message::GuildMemberData* GuildMSG_SC_AckMemberInfo::mutable_memberinfo() {
  set_has_memberinfo();
  if (memberinfo_ == NULL) memberinfo_ = new ::proto::message::GuildMemberData;
  return memberinfo_;
}
inline ::proto::message::GuildMemberData* GuildMSG_SC_AckMemberInfo::release_memberinfo() {
  clear_has_memberinfo();
  ::proto::message::GuildMemberData* temp = memberinfo_;
  memberinfo_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckMemberInfo::set_allocated_memberinfo(::proto::message::GuildMemberData* memberinfo) {
  delete memberinfo_;
  memberinfo_ = memberinfo;
  if (memberinfo) {
    set_has_memberinfo();
  } else {
    clear_has_memberinfo();
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqMemberList

// optional uint32 pagenum = 1;
inline bool GuildMSG_CS_ReqMemberList::has_pagenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqMemberList::set_has_pagenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqMemberList::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqMemberList::clear_pagenum() {
  pagenum_ = 0u;
  clear_has_pagenum();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqMemberList::pagenum() const {
  return pagenum_;
}
inline void GuildMSG_CS_ReqMemberList::set_pagenum(::google::protobuf::uint32 value) {
  set_has_pagenum();
  pagenum_ = value;
}

// optional int32 isInTeam = 2;
inline bool GuildMSG_CS_ReqMemberList::has_isinteam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqMemberList::set_has_isinteam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqMemberList::clear_has_isinteam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqMemberList::clear_isinteam() {
  isinteam_ = 0;
  clear_has_isinteam();
}
inline ::google::protobuf::int32 GuildMSG_CS_ReqMemberList::isinteam() const {
  return isinteam_;
}
inline void GuildMSG_CS_ReqMemberList::set_isinteam(::google::protobuf::int32 value) {
  set_has_isinteam();
  isinteam_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckMemberList

// optional uint32 pagenum = 1;
inline bool GuildMSG_SC_AckMemberList::has_pagenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckMemberList::set_has_pagenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckMemberList::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckMemberList::clear_pagenum() {
  pagenum_ = 0u;
  clear_has_pagenum();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckMemberList::pagenum() const {
  return pagenum_;
}
inline void GuildMSG_SC_AckMemberList::set_pagenum(::google::protobuf::uint32 value) {
  set_has_pagenum();
  pagenum_ = value;
}

// repeated .proto.message.MemberListInfo memberinfo = 2;
inline int GuildMSG_SC_AckMemberList::memberinfo_size() const {
  return memberinfo_.size();
}
inline void GuildMSG_SC_AckMemberList::clear_memberinfo() {
  memberinfo_.Clear();
}
inline const ::proto::message::MemberListInfo& GuildMSG_SC_AckMemberList::memberinfo(int index) const {
  return memberinfo_.Get(index);
}
inline ::proto::message::MemberListInfo* GuildMSG_SC_AckMemberList::mutable_memberinfo(int index) {
  return memberinfo_.Mutable(index);
}
inline ::proto::message::MemberListInfo* GuildMSG_SC_AckMemberList::add_memberinfo() {
  return memberinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MemberListInfo >&
GuildMSG_SC_AckMemberList::memberinfo() const {
  return memberinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::MemberListInfo >*
GuildMSG_SC_AckMemberList::mutable_memberinfo() {
  return &memberinfo_;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqQuit

// -------------------------------------------------------------------

// GuildMSG_SC_AckQuit

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckQuit::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckQuit::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckQuit::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckQuit::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckQuit::result() const {
  return result_;
}
inline void GuildMSG_SC_AckQuit::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqSetJoin

// optional bool isopen = 1;
inline bool GuildMSG_CS_ReqSetJoin::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqSetJoin::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqSetJoin::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqSetJoin::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool GuildMSG_CS_ReqSetJoin::isopen() const {
  return isopen_;
}
inline void GuildMSG_CS_ReqSetJoin::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional uint32 joincombatser = 2;
inline bool GuildMSG_CS_ReqSetJoin::has_joincombatser() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqSetJoin::set_has_joincombatser() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqSetJoin::clear_has_joincombatser() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqSetJoin::clear_joincombatser() {
  joincombatser_ = 0u;
  clear_has_joincombatser();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqSetJoin::joincombatser() const {
  return joincombatser_;
}
inline void GuildMSG_CS_ReqSetJoin::set_joincombatser(::google::protobuf::uint32 value) {
  set_has_joincombatser();
  joincombatser_ = value;
}

// optional bool isaudit = 3;
inline bool GuildMSG_CS_ReqSetJoin::has_isaudit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_CS_ReqSetJoin::set_has_isaudit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_CS_ReqSetJoin::clear_has_isaudit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_CS_ReqSetJoin::clear_isaudit() {
  isaudit_ = false;
  clear_has_isaudit();
}
inline bool GuildMSG_CS_ReqSetJoin::isaudit() const {
  return isaudit_;
}
inline void GuildMSG_CS_ReqSetJoin::set_isaudit(bool value) {
  set_has_isaudit();
  isaudit_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckSetJoin

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckSetJoin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckSetJoin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckSetJoin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckSetJoin::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckSetJoin::result() const {
  return result_;
}
inline void GuildMSG_SC_AckSetJoin::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqJoinList

// optional uint32 pagenum = 1;
inline bool GuildMSG_CS_ReqJoinList::has_pagenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqJoinList::set_has_pagenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqJoinList::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqJoinList::clear_pagenum() {
  pagenum_ = 0u;
  clear_has_pagenum();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqJoinList::pagenum() const {
  return pagenum_;
}
inline void GuildMSG_CS_ReqJoinList::set_pagenum(::google::protobuf::uint32 value) {
  set_has_pagenum();
  pagenum_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckJoinList

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckJoinList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckJoinList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckJoinList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckJoinList::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckJoinList::result() const {
  return result_;
}
inline void GuildMSG_SC_AckJoinList::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.ReqInfo infolist = 2;
inline int GuildMSG_SC_AckJoinList::infolist_size() const {
  return infolist_.size();
}
inline void GuildMSG_SC_AckJoinList::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::ReqInfo& GuildMSG_SC_AckJoinList::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::ReqInfo* GuildMSG_SC_AckJoinList::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::ReqInfo* GuildMSG_SC_AckJoinList::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >&
GuildMSG_SC_AckJoinList::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ReqInfo >*
GuildMSG_SC_AckJoinList::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqOpreatJoiniList

// optional bool isdel = 1;
inline bool GuildMSG_CS_ReqOpreatJoiniList::has_isdel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::set_has_isdel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::clear_has_isdel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::clear_isdel() {
  isdel_ = false;
  clear_has_isdel();
}
inline bool GuildMSG_CS_ReqOpreatJoiniList::isdel() const {
  return isdel_;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::set_isdel(bool value) {
  set_has_isdel();
  isdel_ = value;
}

// optional uint32 allopreate = 2;
inline bool GuildMSG_CS_ReqOpreatJoiniList::has_allopreate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::set_has_allopreate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::clear_has_allopreate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::clear_allopreate() {
  allopreate_ = 0u;
  clear_has_allopreate();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqOpreatJoiniList::allopreate() const {
  return allopreate_;
}
inline void GuildMSG_CS_ReqOpreatJoiniList::set_allopreate(::google::protobuf::uint32 value) {
  set_has_allopreate();
  allopreate_ = value;
}

// repeated uint64 playeridlist = 3;
inline int GuildMSG_CS_ReqOpreatJoiniList::playeridlist_size() const {
  return playeridlist_.size();
}
inline void GuildMSG_CS_ReqOpreatJoiniList::clear_playeridlist() {
  playeridlist_.Clear();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqOpreatJoiniList::playeridlist(int index) const {
  return playeridlist_.Get(index);
}
inline void GuildMSG_CS_ReqOpreatJoiniList::set_playeridlist(int index, ::google::protobuf::uint64 value) {
  playeridlist_.Set(index, value);
}
inline void GuildMSG_CS_ReqOpreatJoiniList::add_playeridlist(::google::protobuf::uint64 value) {
  playeridlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildMSG_CS_ReqOpreatJoiniList::playeridlist() const {
  return playeridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildMSG_CS_ReqOpreatJoiniList::mutable_playeridlist() {
  return &playeridlist_;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckOpreatJoiniList

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckOpreatJoiniList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckOpreatJoiniList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckOpreatJoiniList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckOpreatJoiniList::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckOpreatJoiniList::result() const {
  return result_;
}
inline void GuildMSG_SC_AckOpreatJoiniList::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqKickOut

// optional uint64 playerid = 1;
inline bool GuildMSG_CS_ReqKickOut::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqKickOut::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqKickOut::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqKickOut::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqKickOut::playerid() const {
  return playerid_;
}
inline void GuildMSG_CS_ReqKickOut::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckKickOut

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckKickOut::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckKickOut::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckKickOut::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckKickOut::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckKickOut::result() const {
  return result_;
}
inline void GuildMSG_SC_AckKickOut::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqAppointment

// optional uint64 playerid = 1;
inline bool GuildMSG_CS_ReqAppointment::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqAppointment::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqAppointment::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqAppointment::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqAppointment::playerid() const {
  return playerid_;
}
inline void GuildMSG_CS_ReqAppointment::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 office = 2;
inline bool GuildMSG_CS_ReqAppointment::has_office() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqAppointment::set_has_office() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqAppointment::clear_has_office() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqAppointment::clear_office() {
  office_ = 0u;
  clear_has_office();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqAppointment::office() const {
  return office_;
}
inline void GuildMSG_CS_ReqAppointment::set_office(::google::protobuf::uint32 value) {
  set_has_office();
  office_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckAppointment

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckAppointment::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckAppointment::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckAppointment::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckAppointment::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckAppointment::result() const {
  return result_;
}
inline void GuildMSG_SC_AckAppointment::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqSetGuildPlacard

// optional uint32 type = 1;
inline bool GuildMSG_CS_ReqSetGuildPlacard::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqSetGuildPlacard::type() const {
  return type_;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional string context = 2;
inline bool GuildMSG_CS_ReqSetGuildPlacard::has_context() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_has_context() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::clear_has_context() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::clear_context() {
  if (context_ != &::google::protobuf::internal::kEmptyString) {
    context_->clear();
  }
  clear_has_context();
}
inline const ::std::string& GuildMSG_CS_ReqSetGuildPlacard::context() const {
  return *context_;
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_context(const ::std::string& value) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::kEmptyString) {
    context_ = new ::std::string;
  }
  context_->assign(value);
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_context(const char* value) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::kEmptyString) {
    context_ = new ::std::string;
  }
  context_->assign(value);
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_context(const char* value, size_t size) {
  set_has_context();
  if (context_ == &::google::protobuf::internal::kEmptyString) {
    context_ = new ::std::string;
  }
  context_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_CS_ReqSetGuildPlacard::mutable_context() {
  set_has_context();
  if (context_ == &::google::protobuf::internal::kEmptyString) {
    context_ = new ::std::string;
  }
  return context_;
}
inline ::std::string* GuildMSG_CS_ReqSetGuildPlacard::release_context() {
  clear_has_context();
  if (context_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = context_;
    context_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_CS_ReqSetGuildPlacard::set_allocated_context(::std::string* context) {
  if (context_ != &::google::protobuf::internal::kEmptyString) {
    delete context_;
  }
  if (context) {
    set_has_context();
    context_ = context;
  } else {
    clear_has_context();
    context_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckSetGuildPlacard

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckSetGuildPlacard::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckSetGuildPlacard::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckSetGuildPlacard::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckSetGuildPlacard::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckSetGuildPlacard::result() const {
  return result_;
}
inline void GuildMSG_SC_AckSetGuildPlacard::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqSetRefrishMultiple

// optional uint32 multiple = 1;
inline bool GuildMSG_CS_ReqSetRefrishMultiple::has_multiple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqSetRefrishMultiple::set_has_multiple() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqSetRefrishMultiple::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqSetRefrishMultiple::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqSetRefrishMultiple::multiple() const {
  return multiple_;
}
inline void GuildMSG_CS_ReqSetRefrishMultiple::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckSetRefrishMultiple

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckSetRefrishMultiple::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckSetRefrishMultiple::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckSetRefrishMultiple::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckSetRefrishMultiple::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckSetRefrishMultiple::result() const {
  return result_;
}
inline void GuildMSG_SC_AckSetRefrishMultiple::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqIncreaseBuilding

// optional uint32 buildingtype = 1;
inline bool GuildMSG_CS_ReqIncreaseBuilding::has_buildingtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqIncreaseBuilding::set_has_buildingtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqIncreaseBuilding::clear_has_buildingtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqIncreaseBuilding::clear_buildingtype() {
  buildingtype_ = 0u;
  clear_has_buildingtype();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqIncreaseBuilding::buildingtype() const {
  return buildingtype_;
}
inline void GuildMSG_CS_ReqIncreaseBuilding::set_buildingtype(::google::protobuf::uint32 value) {
  set_has_buildingtype();
  buildingtype_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckIncreaseBuilding

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckIncreaseBuilding::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckIncreaseBuilding::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckIncreaseBuilding::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckIncreaseBuilding::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckIncreaseBuilding::result() const {
  return result_;
}
inline void GuildMSG_SC_AckIncreaseBuilding::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqDonate

// optional uint32 itemid = 1;
inline bool GuildMSG_CS_ReqDonate::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqDonate::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqDonate::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqDonate::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqDonate::itemid() const {
  return itemid_;
}
inline void GuildMSG_CS_ReqDonate::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 counts = 2;
inline bool GuildMSG_CS_ReqDonate::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqDonate::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqDonate::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqDonate::clear_counts() {
  counts_ = 0u;
  clear_has_counts();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqDonate::counts() const {
  return counts_;
}
inline void GuildMSG_CS_ReqDonate::set_counts(::google::protobuf::uint32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckDonate

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckDonate::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckDonate::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckDonate::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckDonate::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckDonate::result() const {
  return result_;
}
inline void GuildMSG_SC_AckDonate::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqGetWages

// -------------------------------------------------------------------

// GuildMSG_SC_AckGetWages

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckGetWages::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckGetWages::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckGetWages::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckGetWages::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGetWages::result() const {
  return result_;
}
inline void GuildMSG_SC_AckGetWages::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqImpeachInfo

// -------------------------------------------------------------------

// GuildMSG_SC_AckImpeachInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckImpeachInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckImpeachInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckImpeachInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckImpeachInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckImpeachInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_AckImpeachInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.ImpeachInfo impdata = 2;
inline bool GuildMSG_SC_AckImpeachInfo::has_impdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckImpeachInfo::set_has_impdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckImpeachInfo::clear_has_impdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckImpeachInfo::clear_impdata() {
  if (impdata_ != NULL) impdata_->::proto::message::ImpeachInfo::Clear();
  clear_has_impdata();
}
inline const ::proto::message::ImpeachInfo& GuildMSG_SC_AckImpeachInfo::impdata() const {
  return impdata_ != NULL ? *impdata_ : *default_instance_->impdata_;
}
inline ::proto::message::ImpeachInfo* GuildMSG_SC_AckImpeachInfo::mutable_impdata() {
  set_has_impdata();
  if (impdata_ == NULL) impdata_ = new ::proto::message::ImpeachInfo;
  return impdata_;
}
inline ::proto::message::ImpeachInfo* GuildMSG_SC_AckImpeachInfo::release_impdata() {
  clear_has_impdata();
  ::proto::message::ImpeachInfo* temp = impdata_;
  impdata_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckImpeachInfo::set_allocated_impdata(::proto::message::ImpeachInfo* impdata) {
  delete impdata_;
  impdata_ = impdata;
  if (impdata) {
    set_has_impdata();
  } else {
    clear_has_impdata();
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqImpeachment

// -------------------------------------------------------------------

// GuildMSG_SC_AckImpeachment

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckImpeachment::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckImpeachment::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckImpeachment::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckImpeachment::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckImpeachment::result() const {
  return result_;
}
inline void GuildMSG_SC_AckImpeachment::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.ImpeachInfo impdata = 2;
inline bool GuildMSG_SC_AckImpeachment::has_impdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckImpeachment::set_has_impdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckImpeachment::clear_has_impdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckImpeachment::clear_impdata() {
  if (impdata_ != NULL) impdata_->::proto::message::ImpeachInfo::Clear();
  clear_has_impdata();
}
inline const ::proto::message::ImpeachInfo& GuildMSG_SC_AckImpeachment::impdata() const {
  return impdata_ != NULL ? *impdata_ : *default_instance_->impdata_;
}
inline ::proto::message::ImpeachInfo* GuildMSG_SC_AckImpeachment::mutable_impdata() {
  set_has_impdata();
  if (impdata_ == NULL) impdata_ = new ::proto::message::ImpeachInfo;
  return impdata_;
}
inline ::proto::message::ImpeachInfo* GuildMSG_SC_AckImpeachment::release_impdata() {
  clear_has_impdata();
  ::proto::message::ImpeachInfo* temp = impdata_;
  impdata_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckImpeachment::set_allocated_impdata(::proto::message::ImpeachInfo* impdata) {
  delete impdata_;
  impdata_ = impdata;
  if (impdata) {
    set_has_impdata();
  } else {
    clear_has_impdata();
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqCancelImpeachment

// -------------------------------------------------------------------

// GuildMSG_SC_AckCancelImpeachment

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckCancelImpeachment::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckCancelImpeachment::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckCancelImpeachment::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckCancelImpeachment::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckCancelImpeachment::result() const {
  return result_;
}
inline void GuildMSG_SC_AckCancelImpeachment::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqResponse

// -------------------------------------------------------------------

// GuildMSG_SC_AckResponse

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckResponse::result() const {
  return result_;
}
inline void GuildMSG_SC_AckResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqMergeInfo

// -------------------------------------------------------------------

// GuildMSG_SC_AckMergeInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckMergeInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckMergeInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckMergeInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckMergeInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckMergeInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_AckMergeInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.UniteGuildData data = 2;
inline bool GuildMSG_SC_AckMergeInfo::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckMergeInfo::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckMergeInfo::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckMergeInfo::clear_data() {
  if (data_ != NULL) data_->::proto::message::UniteGuildData::Clear();
  clear_has_data();
}
inline const ::proto::message::UniteGuildData& GuildMSG_SC_AckMergeInfo::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto::message::UniteGuildData* GuildMSG_SC_AckMergeInfo::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto::message::UniteGuildData;
  return data_;
}
inline ::proto::message::UniteGuildData* GuildMSG_SC_AckMergeInfo::release_data() {
  clear_has_data();
  ::proto::message::UniteGuildData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckMergeInfo::set_allocated_data(::proto::message::UniteGuildData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqMergeGuild

// optional uint64 recvguildid = 1;
inline bool GuildMSG_CS_ReqMergeGuild::has_recvguildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqMergeGuild::set_has_recvguildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqMergeGuild::clear_has_recvguildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqMergeGuild::clear_recvguildid() {
  recvguildid_ = GOOGLE_ULONGLONG(0);
  clear_has_recvguildid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqMergeGuild::recvguildid() const {
  return recvguildid_;
}
inline void GuildMSG_CS_ReqMergeGuild::set_recvguildid(::google::protobuf::uint64 value) {
  set_has_recvguildid();
  recvguildid_ = value;
}

// optional uint64 masterid = 2;
inline bool GuildMSG_CS_ReqMergeGuild::has_masterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqMergeGuild::set_has_masterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqMergeGuild::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqMergeGuild::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqMergeGuild::masterid() const {
  return masterid_;
}
inline void GuildMSG_CS_ReqMergeGuild::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckMergeGuild

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckMergeGuild::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckMergeGuild::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckMergeGuild::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckMergeGuild::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckMergeGuild::result() const {
  return result_;
}
inline void GuildMSG_SC_AckMergeGuild::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqMergeGuildList

// -------------------------------------------------------------------

// GuildMSG_SC_AckMergeGuildList

// repeated .proto.message.UniteGuildData datalist = 1;
inline int GuildMSG_SC_AckMergeGuildList::datalist_size() const {
  return datalist_.size();
}
inline void GuildMSG_SC_AckMergeGuildList::clear_datalist() {
  datalist_.Clear();
}
inline const ::proto::message::UniteGuildData& GuildMSG_SC_AckMergeGuildList::datalist(int index) const {
  return datalist_.Get(index);
}
inline ::proto::message::UniteGuildData* GuildMSG_SC_AckMergeGuildList::mutable_datalist(int index) {
  return datalist_.Mutable(index);
}
inline ::proto::message::UniteGuildData* GuildMSG_SC_AckMergeGuildList::add_datalist() {
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::UniteGuildData >&
GuildMSG_SC_AckMergeGuildList::datalist() const {
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::UniteGuildData >*
GuildMSG_SC_AckMergeGuildList::mutable_datalist() {
  return &datalist_;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqOpreatMergeList

// optional uint64 uniteguild = 1;
inline bool GuildMSG_CS_ReqOpreatMergeList::has_uniteguild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqOpreatMergeList::set_has_uniteguild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqOpreatMergeList::clear_has_uniteguild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqOpreatMergeList::clear_uniteguild() {
  uniteguild_ = GOOGLE_ULONGLONG(0);
  clear_has_uniteguild();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqOpreatMergeList::uniteguild() const {
  return uniteguild_;
}
inline void GuildMSG_CS_ReqOpreatMergeList::set_uniteguild(::google::protobuf::uint64 value) {
  set_has_uniteguild();
  uniteguild_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckOpreatMergeList

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckOpreatMergeList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckOpreatMergeList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckOpreatMergeList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckOpreatMergeList::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckOpreatMergeList::result() const {
  return result_;
}
inline void GuildMSG_SC_AckOpreatMergeList::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqClearMergeList

// -------------------------------------------------------------------

// GuildMSG_SC_AckClearMergeList

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckClearMergeList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckClearMergeList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckClearMergeList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckClearMergeList::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckClearMergeList::result() const {
  return result_;
}
inline void GuildMSG_SC_AckClearMergeList::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqCancelMerge

// -------------------------------------------------------------------

// GuildMSG_SC_AckCancelMerge

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckCancelMerge::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckCancelMerge::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckCancelMerge::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckCancelMerge::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckCancelMerge::result() const {
  return result_;
}
inline void GuildMSG_SC_AckCancelMerge::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqShopInfo

// -------------------------------------------------------------------

// GuildMSG_SC_AckShopInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckShopInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckShopInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckShopInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckShopInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckShopInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_AckShopInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.GuildShopInfo shopinfo = 2;
inline int GuildMSG_SC_AckShopInfo::shopinfo_size() const {
  return shopinfo_.size();
}
inline void GuildMSG_SC_AckShopInfo::clear_shopinfo() {
  shopinfo_.Clear();
}
inline const ::proto::message::GuildShopInfo& GuildMSG_SC_AckShopInfo::shopinfo(int index) const {
  return shopinfo_.Get(index);
}
inline ::proto::message::GuildShopInfo* GuildMSG_SC_AckShopInfo::mutable_shopinfo(int index) {
  return shopinfo_.Mutable(index);
}
inline ::proto::message::GuildShopInfo* GuildMSG_SC_AckShopInfo::add_shopinfo() {
  return shopinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >&
GuildMSG_SC_AckShopInfo::shopinfo() const {
  return shopinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::GuildShopInfo >*
GuildMSG_SC_AckShopInfo::mutable_shopinfo() {
  return &shopinfo_;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqBuyShopItem

// optional uint32 itemid = 1;
inline bool GuildMSG_CS_ReqBuyShopItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqBuyShopItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqBuyShopItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqBuyShopItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqBuyShopItem::itemid() const {
  return itemid_;
}
inline void GuildMSG_CS_ReqBuyShopItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 counts = 2;
inline bool GuildMSG_CS_ReqBuyShopItem::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqBuyShopItem::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqBuyShopItem::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqBuyShopItem::clear_counts() {
  counts_ = 0u;
  clear_has_counts();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqBuyShopItem::counts() const {
  return counts_;
}
inline void GuildMSG_CS_ReqBuyShopItem::set_counts(::google::protobuf::uint32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckBuyShopItem

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckBuyShopItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckBuyShopItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckBuyShopItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckBuyShopItem::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckBuyShopItem::result() const {
  return result_;
}
inline void GuildMSG_SC_AckBuyShopItem::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqChangeName

// optional string newname = 1;
inline bool GuildMSG_CS_ReqChangeName::has_newname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqChangeName::set_has_newname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqChangeName::clear_has_newname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqChangeName::clear_newname() {
  if (newname_ != &::google::protobuf::internal::kEmptyString) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& GuildMSG_CS_ReqChangeName::newname() const {
  return *newname_;
}
inline void GuildMSG_CS_ReqChangeName::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
}
inline void GuildMSG_CS_ReqChangeName::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
}
inline void GuildMSG_CS_ReqChangeName::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_CS_ReqChangeName::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  return newname_;
}
inline ::std::string* GuildMSG_CS_ReqChangeName::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_CS_ReqChangeName::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::kEmptyString) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckChangeName

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckChangeName::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckChangeName::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckChangeName::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckChangeName::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckChangeName::result() const {
  return result_;
}
inline void GuildMSG_SC_AckChangeName::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_NotifyUpdateGuildInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_NotifyUpdateGuildInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_NotifyUpdateGuildInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional string strValue = 2;
inline bool GuildMSG_SC_NotifyUpdateGuildInfo::has_strvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_has_strvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& GuildMSG_SC_NotifyUpdateGuildInfo::strvalue() const {
  return *strvalue_;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_SC_NotifyUpdateGuildInfo::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  return strvalue_;
}
inline ::std::string* GuildMSG_SC_NotifyUpdateGuildInfo::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete strvalue_;
  }
  if (strvalue) {
    set_has_strvalue();
    strvalue_ = strvalue;
  } else {
    clear_has_strvalue();
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 uValue = 3;
inline bool GuildMSG_SC_NotifyUpdateGuildInfo::has_uvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_has_uvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::clear_has_uvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::clear_uvalue() {
  uvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_uvalue();
}
inline ::google::protobuf::uint64 GuildMSG_SC_NotifyUpdateGuildInfo::uvalue() const {
  return uvalue_;
}
inline void GuildMSG_SC_NotifyUpdateGuildInfo::set_uvalue(::google::protobuf::uint64 value) {
  set_has_uvalue();
  uvalue_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqEnterFort

// -------------------------------------------------------------------

// GuildMSG_SC_AckEnterFort

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckEnterFort::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckEnterFort::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckEnterFort::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckEnterFort::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckEnterFort::result() const {
  return result_;
}
inline void GuildMSG_SC_AckEnterFort::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint32 mapid = 2;
inline bool GuildMSG_SC_AckEnterFort::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckEnterFort::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckEnterFort::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckEnterFort::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckEnterFort::mapid() const {
  return mapid_;
}
inline void GuildMSG_SC_AckEnterFort::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto.message.Point3D pt = 3;
inline bool GuildMSG_SC_AckEnterFort::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_AckEnterFort::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_AckEnterFort::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_AckEnterFort::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& GuildMSG_SC_AckEnterFort::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* GuildMSG_SC_AckEnterFort::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* GuildMSG_SC_AckEnterFort::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckEnterFort::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float dir = 4;
inline bool GuildMSG_SC_AckEnterFort::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMSG_SC_AckEnterFort::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMSG_SC_AckEnterFort::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMSG_SC_AckEnterFort::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float GuildMSG_SC_AckEnterFort::dir() const {
  return dir_;
}
inline void GuildMSG_SC_AckEnterFort::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 layer = 5;
inline bool GuildMSG_SC_AckEnterFort::has_layer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMSG_SC_AckEnterFort::set_has_layer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMSG_SC_AckEnterFort::clear_has_layer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMSG_SC_AckEnterFort::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 GuildMSG_SC_AckEnterFort::layer() const {
  return layer_;
}
inline void GuildMSG_SC_AckEnterFort::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_EnterFortSuccess

// -------------------------------------------------------------------

// GuildMSG_CS_ReqCancelJoin

// optional uint64 guildid = 1;
inline bool GuildMSG_CS_ReqCancelJoin::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqCancelJoin::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqCancelJoin::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqCancelJoin::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqCancelJoin::guildid() const {
  return guildid_;
}
inline void GuildMSG_CS_ReqCancelJoin::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckCancelJoin

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckCancelJoin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckCancelJoin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckCancelJoin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckCancelJoin::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckCancelJoin::result() const {
  return result_;
}
inline void GuildMSG_SC_AckCancelJoin::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqEnterGuildIntruder

// -------------------------------------------------------------------

// GuildMSG_CS_ReqEnterGuildIntruderOK

// -------------------------------------------------------------------

// GuildMSG_CS_ReqLeaveGuildIntruder

// -------------------------------------------------------------------

// GuildMSG_SC_AckEnterGuildIntruder

// required uint32 mapid = 1;
inline bool GuildMSG_SC_AckEnterGuildIntruder::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckEnterGuildIntruder::mapid() const {
  return mapid_;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto.message.Point3D pt = 2;
inline bool GuildMSG_SC_AckEnterGuildIntruder::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& GuildMSG_SC_AckEnterGuildIntruder::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* GuildMSG_SC_AckEnterGuildIntruder::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* GuildMSG_SC_AckEnterGuildIntruder::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float dir = 3;
inline bool GuildMSG_SC_AckEnterGuildIntruder::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float GuildMSG_SC_AckEnterGuildIntruder::dir() const {
  return dir_;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 layer = 4;
inline bool GuildMSG_SC_AckEnterGuildIntruder::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 GuildMSG_SC_AckEnterGuildIntruder::layer() const {
  return layer_;
}
inline void GuildMSG_SC_AckEnterGuildIntruder::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildIntruderEnd

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildIntruderInit

// required int32 surplustime = 1;
inline bool GuildMSG_SC_AckGuildIntruderInit::has_surplustime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckGuildIntruderInit::set_has_surplustime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_has_surplustime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_surplustime() {
  surplustime_ = 0;
  clear_has_surplustime();
}
inline ::google::protobuf::int32 GuildMSG_SC_AckGuildIntruderInit::surplustime() const {
  return surplustime_;
}
inline void GuildMSG_SC_AckGuildIntruderInit::set_surplustime(::google::protobuf::int32 value) {
  set_has_surplustime();
  surplustime_ = value;
}

// optional int32 times = 2;
inline bool GuildMSG_SC_AckGuildIntruderInit::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckGuildIntruderInit::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 GuildMSG_SC_AckGuildIntruderInit::times() const {
  return times_;
}
inline void GuildMSG_SC_AckGuildIntruderInit::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// optional int32 reward_percent = 3;
inline bool GuildMSG_SC_AckGuildIntruderInit::has_reward_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_AckGuildIntruderInit::set_has_reward_percent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_has_reward_percent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_reward_percent() {
  reward_percent_ = 0;
  clear_has_reward_percent();
}
inline ::google::protobuf::int32 GuildMSG_SC_AckGuildIntruderInit::reward_percent() const {
  return reward_percent_;
}
inline void GuildMSG_SC_AckGuildIntruderInit::set_reward_percent(::google::protobuf::int32 value) {
  set_has_reward_percent();
  reward_percent_ = value;
}

// repeated .proto.message.IDTimes chest_list = 4;
inline int GuildMSG_SC_AckGuildIntruderInit::chest_list_size() const {
  return chest_list_.size();
}
inline void GuildMSG_SC_AckGuildIntruderInit::clear_chest_list() {
  chest_list_.Clear();
}
inline const ::proto::message::IDTimes& GuildMSG_SC_AckGuildIntruderInit::chest_list(int index) const {
  return chest_list_.Get(index);
}
inline ::proto::message::IDTimes* GuildMSG_SC_AckGuildIntruderInit::mutable_chest_list(int index) {
  return chest_list_.Mutable(index);
}
inline ::proto::message::IDTimes* GuildMSG_SC_AckGuildIntruderInit::add_chest_list() {
  return chest_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDTimes >&
GuildMSG_SC_AckGuildIntruderInit::chest_list() const {
  return chest_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDTimes >*
GuildMSG_SC_AckGuildIntruderInit::mutable_chest_list() {
  return &chest_list_;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildIntruderTime

// optional int32 times = 1;
inline bool GuildMSG_SC_AckGuildIntruderTime::has_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckGuildIntruderTime::set_has_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckGuildIntruderTime::clear_has_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckGuildIntruderTime::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 GuildMSG_SC_AckGuildIntruderTime::times() const {
  return times_;
}
inline void GuildMSG_SC_AckGuildIntruderTime::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_GuildIntruderReward

// optional int32 reward_percent = 1;
inline bool GuildMSG_SC_GuildIntruderReward::has_reward_percent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_GuildIntruderReward::set_has_reward_percent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_GuildIntruderReward::clear_has_reward_percent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_GuildIntruderReward::clear_reward_percent() {
  reward_percent_ = 0;
  clear_has_reward_percent();
}
inline ::google::protobuf::int32 GuildMSG_SC_GuildIntruderReward::reward_percent() const {
  return reward_percent_;
}
inline void GuildMSG_SC_GuildIntruderReward::set_reward_percent(::google::protobuf::int32 value) {
  set_has_reward_percent();
  reward_percent_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_NotifyStopImpeachment

// optional uint32 result = 1;
inline bool GuildMSG_SC_NotifyStopImpeachment::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_NotifyStopImpeachment::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_NotifyStopImpeachment::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_NotifyStopImpeachment::result() const {
  return result_;
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional string ownnername = 2;
inline bool GuildMSG_SC_NotifyStopImpeachment::has_ownnername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_has_ownnername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_NotifyStopImpeachment::clear_has_ownnername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_NotifyStopImpeachment::clear_ownnername() {
  if (ownnername_ != &::google::protobuf::internal::kEmptyString) {
    ownnername_->clear();
  }
  clear_has_ownnername();
}
inline const ::std::string& GuildMSG_SC_NotifyStopImpeachment::ownnername() const {
  return *ownnername_;
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_ownnername(const ::std::string& value) {
  set_has_ownnername();
  if (ownnername_ == &::google::protobuf::internal::kEmptyString) {
    ownnername_ = new ::std::string;
  }
  ownnername_->assign(value);
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_ownnername(const char* value) {
  set_has_ownnername();
  if (ownnername_ == &::google::protobuf::internal::kEmptyString) {
    ownnername_ = new ::std::string;
  }
  ownnername_->assign(value);
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_ownnername(const char* value, size_t size) {
  set_has_ownnername();
  if (ownnername_ == &::google::protobuf::internal::kEmptyString) {
    ownnername_ = new ::std::string;
  }
  ownnername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_SC_NotifyStopImpeachment::mutable_ownnername() {
  set_has_ownnername();
  if (ownnername_ == &::google::protobuf::internal::kEmptyString) {
    ownnername_ = new ::std::string;
  }
  return ownnername_;
}
inline ::std::string* GuildMSG_SC_NotifyStopImpeachment::release_ownnername() {
  clear_has_ownnername();
  if (ownnername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ownnername_;
    ownnername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_SC_NotifyStopImpeachment::set_allocated_ownnername(::std::string* ownnername) {
  if (ownnername_ != &::google::protobuf::internal::kEmptyString) {
    delete ownnername_;
  }
  if (ownnername) {
    set_has_ownnername();
    ownnername_ = ownnername;
  } else {
    clear_has_ownnername();
    ownnername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_SC_NotifyContext

// optional uint32 contextid = 1;
inline bool GuildMSG_SC_NotifyContext::has_contextid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_NotifyContext::set_has_contextid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_NotifyContext::clear_has_contextid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_NotifyContext::clear_contextid() {
  contextid_ = 0u;
  clear_has_contextid();
}
inline ::google::protobuf::uint32 GuildMSG_SC_NotifyContext::contextid() const {
  return contextid_;
}
inline void GuildMSG_SC_NotifyContext::set_contextid(::google::protobuf::uint32 value) {
  set_has_contextid();
  contextid_ = value;
}

// optional string contextpar = 2;
inline bool GuildMSG_SC_NotifyContext::has_contextpar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_NotifyContext::set_has_contextpar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_NotifyContext::clear_has_contextpar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_NotifyContext::clear_contextpar() {
  if (contextpar_ != &::google::protobuf::internal::kEmptyString) {
    contextpar_->clear();
  }
  clear_has_contextpar();
}
inline const ::std::string& GuildMSG_SC_NotifyContext::contextpar() const {
  return *contextpar_;
}
inline void GuildMSG_SC_NotifyContext::set_contextpar(const ::std::string& value) {
  set_has_contextpar();
  if (contextpar_ == &::google::protobuf::internal::kEmptyString) {
    contextpar_ = new ::std::string;
  }
  contextpar_->assign(value);
}
inline void GuildMSG_SC_NotifyContext::set_contextpar(const char* value) {
  set_has_contextpar();
  if (contextpar_ == &::google::protobuf::internal::kEmptyString) {
    contextpar_ = new ::std::string;
  }
  contextpar_->assign(value);
}
inline void GuildMSG_SC_NotifyContext::set_contextpar(const char* value, size_t size) {
  set_has_contextpar();
  if (contextpar_ == &::google::protobuf::internal::kEmptyString) {
    contextpar_ = new ::std::string;
  }
  contextpar_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_SC_NotifyContext::mutable_contextpar() {
  set_has_contextpar();
  if (contextpar_ == &::google::protobuf::internal::kEmptyString) {
    contextpar_ = new ::std::string;
  }
  return contextpar_;
}
inline ::std::string* GuildMSG_SC_NotifyContext::release_contextpar() {
  clear_has_contextpar();
  if (contextpar_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = contextpar_;
    contextpar_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_SC_NotifyContext::set_allocated_contextpar(::std::string* contextpar) {
  if (contextpar_ != &::google::protobuf::internal::kEmptyString) {
    delete contextpar_;
  }
  if (contextpar) {
    set_has_contextpar();
    contextpar_ = contextpar;
  } else {
    clear_has_contextpar();
    contextpar_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqSetBossOpen

// optional uint32 isToday = 1;
inline bool GuildMSG_CS_ReqSetBossOpen::has_istoday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqSetBossOpen::set_has_istoday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqSetBossOpen::clear_has_istoday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqSetBossOpen::clear_istoday() {
  istoday_ = 0u;
  clear_has_istoday();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqSetBossOpen::istoday() const {
  return istoday_;
}
inline void GuildMSG_CS_ReqSetBossOpen::set_istoday(::google::protobuf::uint32 value) {
  set_has_istoday();
  istoday_ = value;
}

// optional uint32 hour = 2;
inline bool GuildMSG_CS_ReqSetBossOpen::has_hour() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqSetBossOpen::set_has_hour() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqSetBossOpen::clear_has_hour() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqSetBossOpen::clear_hour() {
  hour_ = 0u;
  clear_has_hour();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqSetBossOpen::hour() const {
  return hour_;
}
inline void GuildMSG_CS_ReqSetBossOpen::set_hour(::google::protobuf::uint32 value) {
  set_has_hour();
  hour_ = value;
}

// optional uint32 minu = 3;
inline bool GuildMSG_CS_ReqSetBossOpen::has_minu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_CS_ReqSetBossOpen::set_has_minu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_CS_ReqSetBossOpen::clear_has_minu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_CS_ReqSetBossOpen::clear_minu() {
  minu_ = 0u;
  clear_has_minu();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqSetBossOpen::minu() const {
  return minu_;
}
inline void GuildMSG_CS_ReqSetBossOpen::set_minu(::google::protobuf::uint32 value) {
  set_has_minu();
  minu_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckBossInfo

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckBossInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckBossInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckBossInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckBossInfo::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckBossInfo::result() const {
  return result_;
}
inline void GuildMSG_SC_AckBossInfo::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.GuildBoss info = 2;
inline bool GuildMSG_SC_AckBossInfo::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckBossInfo::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckBossInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckBossInfo::clear_info() {
  if (info_ != NULL) info_->::proto::message::GuildBoss::Clear();
  clear_has_info();
}
inline const ::proto::message::GuildBoss& GuildMSG_SC_AckBossInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto::message::GuildBoss* GuildMSG_SC_AckBossInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto::message::GuildBoss;
  return info_;
}
inline ::proto::message::GuildBoss* GuildMSG_SC_AckBossInfo::release_info() {
  clear_has_info();
  ::proto::message::GuildBoss* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GuildMSG_SC_AckBossInfo::set_allocated_info(::proto::message::GuildBoss* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GuildMSG_SC_NotifyBossDie

// optional uint32 status = 1;
inline bool GuildMSG_SC_NotifyBossDie::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_NotifyBossDie::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_NotifyBossDie::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_NotifyBossDie::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 GuildMSG_SC_NotifyBossDie::status() const {
  return status_;
}
inline void GuildMSG_SC_NotifyBossDie::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqInvitePlayer

// optional uint64 playerid = 1;
inline bool GuildMSG_CS_ReqInvitePlayer::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqInvitePlayer::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqInvitePlayer::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqInvitePlayer::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqInvitePlayer::playerid() const {
  return playerid_;
}
inline void GuildMSG_CS_ReqInvitePlayer::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckInvitePlayer

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckInvitePlayer::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckInvitePlayer::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckInvitePlayer::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckInvitePlayer::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckInvitePlayer::result() const {
  return result_;
}
inline void GuildMSG_SC_AckInvitePlayer::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_NotifyInvitePlayer

// optional string inviter = 1;
inline bool GuildMSG_SC_NotifyInvitePlayer::has_inviter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_has_inviter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_NotifyInvitePlayer::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_NotifyInvitePlayer::clear_inviter() {
  if (inviter_ != &::google::protobuf::internal::kEmptyString) {
    inviter_->clear();
  }
  clear_has_inviter();
}
inline const ::std::string& GuildMSG_SC_NotifyInvitePlayer::inviter() const {
  return *inviter_;
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_inviter(const ::std::string& value) {
  set_has_inviter();
  if (inviter_ == &::google::protobuf::internal::kEmptyString) {
    inviter_ = new ::std::string;
  }
  inviter_->assign(value);
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_inviter(const char* value) {
  set_has_inviter();
  if (inviter_ == &::google::protobuf::internal::kEmptyString) {
    inviter_ = new ::std::string;
  }
  inviter_->assign(value);
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_inviter(const char* value, size_t size) {
  set_has_inviter();
  if (inviter_ == &::google::protobuf::internal::kEmptyString) {
    inviter_ = new ::std::string;
  }
  inviter_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_SC_NotifyInvitePlayer::mutable_inviter() {
  set_has_inviter();
  if (inviter_ == &::google::protobuf::internal::kEmptyString) {
    inviter_ = new ::std::string;
  }
  return inviter_;
}
inline ::std::string* GuildMSG_SC_NotifyInvitePlayer::release_inviter() {
  clear_has_inviter();
  if (inviter_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = inviter_;
    inviter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_allocated_inviter(::std::string* inviter) {
  if (inviter_ != &::google::protobuf::internal::kEmptyString) {
    delete inviter_;
  }
  if (inviter) {
    set_has_inviter();
    inviter_ = inviter;
  } else {
    clear_has_inviter();
    inviter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 guildid = 2;
inline bool GuildMSG_SC_NotifyInvitePlayer::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_NotifyInvitePlayer::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_NotifyInvitePlayer::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMSG_SC_NotifyInvitePlayer::guildid() const {
  return guildid_;
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// optional string guildname = 3;
inline bool GuildMSG_SC_NotifyInvitePlayer::has_guildname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_has_guildname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_NotifyInvitePlayer::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_NotifyInvitePlayer::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildMSG_SC_NotifyInvitePlayer::guildname() const {
  return *guildname_;
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMSG_SC_NotifyInvitePlayer::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* GuildMSG_SC_NotifyInvitePlayer::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMSG_SC_NotifyInvitePlayer::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqInviteJoin

// optional uint32 isJoin = 1;
inline bool GuildMSG_CS_ReqInviteJoin::has_isjoin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqInviteJoin::set_has_isjoin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqInviteJoin::clear_has_isjoin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqInviteJoin::clear_isjoin() {
  isjoin_ = 0u;
  clear_has_isjoin();
}
inline ::google::protobuf::uint32 GuildMSG_CS_ReqInviteJoin::isjoin() const {
  return isjoin_;
}
inline void GuildMSG_CS_ReqInviteJoin::set_isjoin(::google::protobuf::uint32 value) {
  set_has_isjoin();
  isjoin_ = value;
}

// optional uint64 guildid = 2;
inline bool GuildMSG_CS_ReqInviteJoin::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_CS_ReqInviteJoin::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_CS_ReqInviteJoin::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_CS_ReqInviteJoin::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqInviteJoin::guildid() const {
  return guildid_;
}
inline void GuildMSG_CS_ReqInviteJoin::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckInviteJoin

// optional uint32 result = 1;
inline bool GuildMSG_SC_AckInviteJoin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_SC_AckInviteJoin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_SC_AckInviteJoin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_SC_AckInviteJoin::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckInviteJoin::result() const {
  return result_;
}
inline void GuildMSG_SC_AckInviteJoin::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqGuildWarehouse

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildWarehouse

// repeated .proto.message.Equip guildequip = 1;
inline int GuildMSG_SC_AckGuildWarehouse::guildequip_size() const {
  return guildequip_.size();
}
inline void GuildMSG_SC_AckGuildWarehouse::clear_guildequip() {
  guildequip_.Clear();
}
inline const ::proto::message::Equip& GuildMSG_SC_AckGuildWarehouse::guildequip(int index) const {
  return guildequip_.Get(index);
}
inline ::proto::message::Equip* GuildMSG_SC_AckGuildWarehouse::mutable_guildequip(int index) {
  return guildequip_.Mutable(index);
}
inline ::proto::message::Equip* GuildMSG_SC_AckGuildWarehouse::add_guildequip() {
  return guildequip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
GuildMSG_SC_AckGuildWarehouse::guildequip() const {
  return guildequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
GuildMSG_SC_AckGuildWarehouse::mutable_guildequip() {
  return &guildequip_;
}

// optional uint32 gridnum = 2;
inline bool GuildMSG_SC_AckGuildWarehouse::has_gridnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMSG_SC_AckGuildWarehouse::set_has_gridnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMSG_SC_AckGuildWarehouse::clear_has_gridnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMSG_SC_AckGuildWarehouse::clear_gridnum() {
  gridnum_ = 0u;
  clear_has_gridnum();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGuildWarehouse::gridnum() const {
  return gridnum_;
}
inline void GuildMSG_SC_AckGuildWarehouse::set_gridnum(::google::protobuf::uint32 value) {
  set_has_gridnum();
  gridnum_ = value;
}

// optional uint32 buynum = 3;
inline bool GuildMSG_SC_AckGuildWarehouse::has_buynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMSG_SC_AckGuildWarehouse::set_has_buynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMSG_SC_AckGuildWarehouse::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMSG_SC_AckGuildWarehouse::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 GuildMSG_SC_AckGuildWarehouse::buynum() const {
  return buynum_;
}
inline void GuildMSG_SC_AckGuildWarehouse::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqDonateEquip

// optional uint64 equipuuid = 1;
inline bool GuildMSG_CS_ReqDonateEquip::has_equipuuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqDonateEquip::set_has_equipuuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqDonateEquip::clear_has_equipuuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqDonateEquip::clear_equipuuid() {
  equipuuid_ = GOOGLE_ULONGLONG(0);
  clear_has_equipuuid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqDonateEquip::equipuuid() const {
  return equipuuid_;
}
inline void GuildMSG_CS_ReqDonateEquip::set_equipuuid(::google::protobuf::uint64 value) {
  set_has_equipuuid();
  equipuuid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqConversionEquip

// optional uint64 equipuuid = 1;
inline bool GuildMSG_CS_ReqConversionEquip::has_equipuuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMSG_CS_ReqConversionEquip::set_has_equipuuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMSG_CS_ReqConversionEquip::clear_has_equipuuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMSG_CS_ReqConversionEquip::clear_equipuuid() {
  equipuuid_ = GOOGLE_ULONGLONG(0);
  clear_has_equipuuid();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqConversionEquip::equipuuid() const {
  return equipuuid_;
}
inline void GuildMSG_CS_ReqConversionEquip::set_equipuuid(::google::protobuf::uint64 value) {
  set_has_equipuuid();
  equipuuid_ = value;
}

// -------------------------------------------------------------------

// GuildMSG_CS_ReqDelGuildEquip

// repeated uint64 equiplist = 1;
inline int GuildMSG_CS_ReqDelGuildEquip::equiplist_size() const {
  return equiplist_.size();
}
inline void GuildMSG_CS_ReqDelGuildEquip::clear_equiplist() {
  equiplist_.Clear();
}
inline ::google::protobuf::uint64 GuildMSG_CS_ReqDelGuildEquip::equiplist(int index) const {
  return equiplist_.Get(index);
}
inline void GuildMSG_CS_ReqDelGuildEquip::set_equiplist(int index, ::google::protobuf::uint64 value) {
  equiplist_.Set(index, value);
}
inline void GuildMSG_CS_ReqDelGuildEquip::add_equiplist(::google::protobuf::uint64 value) {
  equiplist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildMSG_CS_ReqDelGuildEquip::equiplist() const {
  return equiplist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildMSG_CS_ReqDelGuildEquip::mutable_equiplist() {
  return &equiplist_;
}

// -------------------------------------------------------------------

// GuildMSG_SC_AckGuildEquipRecord

// repeated .proto.message.RecordData depositlist = 1;
inline int GuildMSG_SC_AckGuildEquipRecord::depositlist_size() const {
  return depositlist_.size();
}
inline void GuildMSG_SC_AckGuildEquipRecord::clear_depositlist() {
  depositlist_.Clear();
}
inline const ::proto::message::RecordData& GuildMSG_SC_AckGuildEquipRecord::depositlist(int index) const {
  return depositlist_.Get(index);
}
inline ::proto::message::RecordData* GuildMSG_SC_AckGuildEquipRecord::mutable_depositlist(int index) {
  return depositlist_.Mutable(index);
}
inline ::proto::message::RecordData* GuildMSG_SC_AckGuildEquipRecord::add_depositlist() {
  return depositlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
GuildMSG_SC_AckGuildEquipRecord::depositlist() const {
  return depositlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
GuildMSG_SC_AckGuildEquipRecord::mutable_depositlist() {
  return &depositlist_;
}

// repeated .proto.message.RecordData fetchlist = 2;
inline int GuildMSG_SC_AckGuildEquipRecord::fetchlist_size() const {
  return fetchlist_.size();
}
inline void GuildMSG_SC_AckGuildEquipRecord::clear_fetchlist() {
  fetchlist_.Clear();
}
inline const ::proto::message::RecordData& GuildMSG_SC_AckGuildEquipRecord::fetchlist(int index) const {
  return fetchlist_.Get(index);
}
inline ::proto::message::RecordData* GuildMSG_SC_AckGuildEquipRecord::mutable_fetchlist(int index) {
  return fetchlist_.Mutable(index);
}
inline ::proto::message::RecordData* GuildMSG_SC_AckGuildEquipRecord::add_fetchlist() {
  return fetchlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >&
GuildMSG_SC_AckGuildEquipRecord::fetchlist() const {
  return fetchlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::RecordData >*
GuildMSG_SC_AckGuildEquipRecord::mutable_fetchlist() {
  return &fetchlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::eOffice>() {
  return ::proto::message::eOffice_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::ePurview>() {
  return ::proto::message::ePurview_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::message::eNotifyType>() {
  return ::proto::message::eNotifyType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_guild_2eproto__INCLUDED
