// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_friend.proto

#ifndef PROTOBUF_db_5ffriend_2eproto__INCLUDED
#define PROTOBUF_db_5ffriend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_db_5ffriend_2eproto();
void protobuf_AssignDesc_db_5ffriend_2eproto();
void protobuf_ShutdownFile_db_5ffriend_2eproto();

class ProtoDbFriendDayShip;
class ProtoDbFriendShip;
class ProtoAllFriendInfo;

// ===================================================================

class ProtoDbFriendDayShip : public ::google::protobuf::Message {
 public:
  ProtoDbFriendDayShip();
  virtual ~ProtoDbFriendDayShip();

  ProtoDbFriendDayShip(const ProtoDbFriendDayShip& from);

  inline ProtoDbFriendDayShip& operator=(const ProtoDbFriendDayShip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoDbFriendDayShip& default_instance();

  void Swap(ProtoDbFriendDayShip* other);

  // implements Message ----------------------------------------------

  ProtoDbFriendDayShip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoDbFriendDayShip& from);
  void MergeFrom(const ProtoDbFriendDayShip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoDbFriendDayShip)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_db_5ffriend_2eproto();
  friend void protobuf_AssignDesc_db_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_db_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static ProtoDbFriendDayShip* default_instance_;
};
// -------------------------------------------------------------------

class ProtoDbFriendShip : public ::google::protobuf::Message {
 public:
  ProtoDbFriendShip();
  virtual ~ProtoDbFriendShip();

  ProtoDbFriendShip(const ProtoDbFriendShip& from);

  inline ProtoDbFriendShip& operator=(const ProtoDbFriendShip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoDbFriendShip& default_instance();

  void Swap(ProtoDbFriendShip* other);

  // implements Message ----------------------------------------------

  ProtoDbFriendShip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoDbFriendShip& from);
  void MergeFrom(const ProtoDbFriendShip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 friendShip = 2;
  inline bool has_friendship() const;
  inline void clear_friendship();
  static const int kFriendShipFieldNumber = 2;
  inline ::google::protobuf::int32 friendship() const;
  inline void set_friendship(::google::protobuf::int32 value);

  // optional int32 delTime = 3;
  inline bool has_deltime() const;
  inline void clear_deltime();
  static const int kDelTimeFieldNumber = 3;
  inline ::google::protobuf::int32 deltime() const;
  inline void set_deltime(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoDbFriendDayShip dayShip = 4;
  inline int dayship_size() const;
  inline void clear_dayship();
  static const int kDayShipFieldNumber = 4;
  inline const ::proto::message::ProtoDbFriendDayShip& dayship(int index) const;
  inline ::proto::message::ProtoDbFriendDayShip* mutable_dayship(int index);
  inline ::proto::message::ProtoDbFriendDayShip* add_dayship();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendDayShip >&
      dayship() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendDayShip >*
      mutable_dayship();

  // optional int32 friendlev = 5;
  inline bool has_friendlev() const;
  inline void clear_friendlev();
  static const int kFriendlevFieldNumber = 5;
  inline ::google::protobuf::int32 friendlev() const;
  inline void set_friendlev(::google::protobuf::int32 value);

  // optional int32 friendpro = 6;
  inline bool has_friendpro() const;
  inline void clear_friendpro();
  static const int kFriendproFieldNumber = 6;
  inline ::google::protobuf::int32 friendpro() const;
  inline void set_friendpro(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoDbFriendShip)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_friendship();
  inline void clear_has_friendship();
  inline void set_has_deltime();
  inline void clear_has_deltime();
  inline void set_has_friendlev();
  inline void clear_has_friendlev();
  inline void set_has_friendpro();
  inline void clear_has_friendpro();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 friendship_;
  ::google::protobuf::int32 deltime_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendDayShip > dayship_;
  ::google::protobuf::int32 friendlev_;
  ::google::protobuf::int32 friendpro_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_db_5ffriend_2eproto();
  friend void protobuf_AssignDesc_db_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_db_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static ProtoDbFriendShip* default_instance_;
};
// -------------------------------------------------------------------

class ProtoAllFriendInfo : public ::google::protobuf::Message {
 public:
  ProtoAllFriendInfo();
  virtual ~ProtoAllFriendInfo();

  ProtoAllFriendInfo(const ProtoAllFriendInfo& from);

  inline ProtoAllFriendInfo& operator=(const ProtoAllFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAllFriendInfo& default_instance();

  void Swap(ProtoAllFriendInfo* other);

  // implements Message ----------------------------------------------

  ProtoAllFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoAllFriendInfo& from);
  void MergeFrom(const ProtoAllFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 friendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline ::google::protobuf::uint64 friendlist(int index) const;
  inline void set_friendlist(int index, ::google::protobuf::uint64 value);
  inline void add_friendlist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friendlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friendlist();

  // repeated uint64 blackList = 2;
  inline int blacklist_size() const;
  inline void clear_blacklist();
  static const int kBlackListFieldNumber = 2;
  inline ::google::protobuf::uint64 blacklist(int index) const;
  inline void set_blacklist(int index, ::google::protobuf::uint64 value);
  inline void add_blacklist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      blacklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_blacklist();

  // repeated .proto.message.ProtoDbFriendShip friendShipList = 3;
  inline int friendshiplist_size() const;
  inline void clear_friendshiplist();
  static const int kFriendShipListFieldNumber = 3;
  inline const ::proto::message::ProtoDbFriendShip& friendshiplist(int index) const;
  inline ::proto::message::ProtoDbFriendShip* mutable_friendshiplist(int index);
  inline ::proto::message::ProtoDbFriendShip* add_friendshiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendShip >&
      friendshiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendShip >*
      mutable_friendshiplist();

  // optional int32 cleanTime = 4;
  inline bool has_cleantime() const;
  inline void clear_cleantime();
  static const int kCleanTimeFieldNumber = 4;
  inline ::google::protobuf::int32 cleantime() const;
  inline void set_cleantime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoAllFriendInfo)
 private:
  inline void set_has_cleantime();
  inline void clear_has_cleantime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friendlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendShip > friendshiplist_;
  ::google::protobuf::int32 cleantime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_db_5ffriend_2eproto();
  friend void protobuf_AssignDesc_db_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_db_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static ProtoAllFriendInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoDbFriendDayShip

// optional int32 type = 1;
inline bool ProtoDbFriendDayShip::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoDbFriendDayShip::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoDbFriendDayShip::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoDbFriendDayShip::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProtoDbFriendDayShip::type() const {
  return type_;
}
inline void ProtoDbFriendDayShip::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 count = 2;
inline bool ProtoDbFriendDayShip::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoDbFriendDayShip::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoDbFriendDayShip::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoDbFriendDayShip::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ProtoDbFriendDayShip::count() const {
  return count_;
}
inline void ProtoDbFriendDayShip::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// ProtoDbFriendShip

// optional uint64 charId = 1;
inline bool ProtoDbFriendShip::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoDbFriendShip::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoDbFriendShip::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoDbFriendShip::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ProtoDbFriendShip::charid() const {
  return charid_;
}
inline void ProtoDbFriendShip::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 friendShip = 2;
inline bool ProtoDbFriendShip::has_friendship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoDbFriendShip::set_has_friendship() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoDbFriendShip::clear_has_friendship() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoDbFriendShip::clear_friendship() {
  friendship_ = 0;
  clear_has_friendship();
}
inline ::google::protobuf::int32 ProtoDbFriendShip::friendship() const {
  return friendship_;
}
inline void ProtoDbFriendShip::set_friendship(::google::protobuf::int32 value) {
  set_has_friendship();
  friendship_ = value;
}

// optional int32 delTime = 3;
inline bool ProtoDbFriendShip::has_deltime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoDbFriendShip::set_has_deltime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoDbFriendShip::clear_has_deltime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoDbFriendShip::clear_deltime() {
  deltime_ = 0;
  clear_has_deltime();
}
inline ::google::protobuf::int32 ProtoDbFriendShip::deltime() const {
  return deltime_;
}
inline void ProtoDbFriendShip::set_deltime(::google::protobuf::int32 value) {
  set_has_deltime();
  deltime_ = value;
}

// repeated .proto.message.ProtoDbFriendDayShip dayShip = 4;
inline int ProtoDbFriendShip::dayship_size() const {
  return dayship_.size();
}
inline void ProtoDbFriendShip::clear_dayship() {
  dayship_.Clear();
}
inline const ::proto::message::ProtoDbFriendDayShip& ProtoDbFriendShip::dayship(int index) const {
  return dayship_.Get(index);
}
inline ::proto::message::ProtoDbFriendDayShip* ProtoDbFriendShip::mutable_dayship(int index) {
  return dayship_.Mutable(index);
}
inline ::proto::message::ProtoDbFriendDayShip* ProtoDbFriendShip::add_dayship() {
  return dayship_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendDayShip >&
ProtoDbFriendShip::dayship() const {
  return dayship_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendDayShip >*
ProtoDbFriendShip::mutable_dayship() {
  return &dayship_;
}

// optional int32 friendlev = 5;
inline bool ProtoDbFriendShip::has_friendlev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoDbFriendShip::set_has_friendlev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoDbFriendShip::clear_has_friendlev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoDbFriendShip::clear_friendlev() {
  friendlev_ = 0;
  clear_has_friendlev();
}
inline ::google::protobuf::int32 ProtoDbFriendShip::friendlev() const {
  return friendlev_;
}
inline void ProtoDbFriendShip::set_friendlev(::google::protobuf::int32 value) {
  set_has_friendlev();
  friendlev_ = value;
}

// optional int32 friendpro = 6;
inline bool ProtoDbFriendShip::has_friendpro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoDbFriendShip::set_has_friendpro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoDbFriendShip::clear_has_friendpro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoDbFriendShip::clear_friendpro() {
  friendpro_ = 0;
  clear_has_friendpro();
}
inline ::google::protobuf::int32 ProtoDbFriendShip::friendpro() const {
  return friendpro_;
}
inline void ProtoDbFriendShip::set_friendpro(::google::protobuf::int32 value) {
  set_has_friendpro();
  friendpro_ = value;
}

// -------------------------------------------------------------------

// ProtoAllFriendInfo

// repeated uint64 friendList = 1;
inline int ProtoAllFriendInfo::friendlist_size() const {
  return friendlist_.size();
}
inline void ProtoAllFriendInfo::clear_friendlist() {
  friendlist_.Clear();
}
inline ::google::protobuf::uint64 ProtoAllFriendInfo::friendlist(int index) const {
  return friendlist_.Get(index);
}
inline void ProtoAllFriendInfo::set_friendlist(int index, ::google::protobuf::uint64 value) {
  friendlist_.Set(index, value);
}
inline void ProtoAllFriendInfo::add_friendlist(::google::protobuf::uint64 value) {
  friendlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProtoAllFriendInfo::friendlist() const {
  return friendlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProtoAllFriendInfo::mutable_friendlist() {
  return &friendlist_;
}

// repeated uint64 blackList = 2;
inline int ProtoAllFriendInfo::blacklist_size() const {
  return blacklist_.size();
}
inline void ProtoAllFriendInfo::clear_blacklist() {
  blacklist_.Clear();
}
inline ::google::protobuf::uint64 ProtoAllFriendInfo::blacklist(int index) const {
  return blacklist_.Get(index);
}
inline void ProtoAllFriendInfo::set_blacklist(int index, ::google::protobuf::uint64 value) {
  blacklist_.Set(index, value);
}
inline void ProtoAllFriendInfo::add_blacklist(::google::protobuf::uint64 value) {
  blacklist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProtoAllFriendInfo::blacklist() const {
  return blacklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProtoAllFriendInfo::mutable_blacklist() {
  return &blacklist_;
}

// repeated .proto.message.ProtoDbFriendShip friendShipList = 3;
inline int ProtoAllFriendInfo::friendshiplist_size() const {
  return friendshiplist_.size();
}
inline void ProtoAllFriendInfo::clear_friendshiplist() {
  friendshiplist_.Clear();
}
inline const ::proto::message::ProtoDbFriendShip& ProtoAllFriendInfo::friendshiplist(int index) const {
  return friendshiplist_.Get(index);
}
inline ::proto::message::ProtoDbFriendShip* ProtoAllFriendInfo::mutable_friendshiplist(int index) {
  return friendshiplist_.Mutable(index);
}
inline ::proto::message::ProtoDbFriendShip* ProtoAllFriendInfo::add_friendshiplist() {
  return friendshiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendShip >&
ProtoAllFriendInfo::friendshiplist() const {
  return friendshiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoDbFriendShip >*
ProtoAllFriendInfo::mutable_friendshiplist() {
  return &friendshiplist_;
}

// optional int32 cleanTime = 4;
inline bool ProtoAllFriendInfo::has_cleantime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoAllFriendInfo::set_has_cleantime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoAllFriendInfo::clear_has_cleantime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoAllFriendInfo::clear_cleantime() {
  cleantime_ = 0;
  clear_has_cleantime();
}
inline ::google::protobuf::int32 ProtoAllFriendInfo::cleantime() const {
  return cleantime_;
}
inline void ProtoAllFriendInfo::set_cleantime(::google::protobuf::int32 value) {
  set_has_cleantime();
  cleantime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_5ffriend_2eproto__INCLUDED
