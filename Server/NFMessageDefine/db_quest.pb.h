// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_quest.proto

#ifndef PROTOBUF_db_5fquest_2eproto__INCLUDED
#define PROTOBUF_db_5fquest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "quest.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_db_5fquest_2eproto();
void protobuf_AssignDesc_db_5fquest_2eproto();
void protobuf_ShutdownFile_db_5fquest_2eproto();

class ProtoItemAndNum;
class ProtoSingleQuestReward;
class ProtoAllQuestInfo;

// ===================================================================

class ProtoItemAndNum : public ::google::protobuf::Message {
 public:
  ProtoItemAndNum();
  virtual ~ProtoItemAndNum();

  ProtoItemAndNum(const ProtoItemAndNum& from);

  inline ProtoItemAndNum& operator=(const ProtoItemAndNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoItemAndNum& default_instance();

  void Swap(ProtoItemAndNum* other);

  // implements Message ----------------------------------------------

  ProtoItemAndNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoItemAndNum& from);
  void MergeFrom(const ProtoItemAndNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nid = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNidFieldNumber = 1;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);

  // optional uint64 nNum = 2;
  inline bool has_nnum() const;
  inline void clear_nnum();
  static const int kNNumFieldNumber = 2;
  inline ::google::protobuf::uint64 nnum() const;
  inline void set_nnum(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoItemAndNum)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_nnum();
  inline void clear_has_nnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nnum_;
  ::google::protobuf::int32 nid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_db_5fquest_2eproto();
  friend void protobuf_AssignDesc_db_5fquest_2eproto();
  friend void protobuf_ShutdownFile_db_5fquest_2eproto();

  void InitAsDefaultInstance();
  static ProtoItemAndNum* default_instance_;
};
// -------------------------------------------------------------------

class ProtoSingleQuestReward : public ::google::protobuf::Message {
 public:
  ProtoSingleQuestReward();
  virtual ~ProtoSingleQuestReward();

  ProtoSingleQuestReward(const ProtoSingleQuestReward& from);

  inline ProtoSingleQuestReward& operator=(const ProtoSingleQuestReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoSingleQuestReward& default_instance();

  void Swap(ProtoSingleQuestReward* other);

  // implements Message ----------------------------------------------

  ProtoSingleQuestReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoSingleQuestReward& from);
  void MergeFrom(const ProtoSingleQuestReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nkind = 1;
  inline bool has_nkind() const;
  inline void clear_nkind();
  static const int kNkindFieldNumber = 1;
  inline ::google::protobuf::int32 nkind() const;
  inline void set_nkind(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoItemAndNum item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::proto::message::ProtoItemAndNum& item(int index) const;
  inline ::proto::message::ProtoItemAndNum* mutable_item(int index);
  inline ::proto::message::ProtoItemAndNum* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoItemAndNum >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoItemAndNum >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoSingleQuestReward)
 private:
  inline void set_has_nkind();
  inline void clear_has_nkind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoItemAndNum > item_;
  ::google::protobuf::int32 nkind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_db_5fquest_2eproto();
  friend void protobuf_AssignDesc_db_5fquest_2eproto();
  friend void protobuf_ShutdownFile_db_5fquest_2eproto();

  void InitAsDefaultInstance();
  static ProtoSingleQuestReward* default_instance_;
};
// -------------------------------------------------------------------

class ProtoAllQuestInfo : public ::google::protobuf::Message {
 public:
  ProtoAllQuestInfo();
  virtual ~ProtoAllQuestInfo();

  ProtoAllQuestInfo(const ProtoAllQuestInfo& from);

  inline ProtoAllQuestInfo& operator=(const ProtoAllQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAllQuestInfo& default_instance();

  void Swap(ProtoAllQuestInfo* other);

  // implements Message ----------------------------------------------

  ProtoAllQuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoAllQuestInfo& from);
  void MergeFrom(const ProtoAllQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoQuestMain questMain = 1;
  inline bool has_questmain() const;
  inline void clear_questmain();
  static const int kQuestMainFieldNumber = 1;
  inline const ::proto::message::ProtoQuestMain& questmain() const;
  inline ::proto::message::ProtoQuestMain* mutable_questmain();
  inline ::proto::message::ProtoQuestMain* release_questmain();
  inline void set_allocated_questmain(::proto::message::ProtoQuestMain* questmain);

  // optional .proto.message.ProtoQuestActive questActive = 2;
  inline bool has_questactive() const;
  inline void clear_questactive();
  static const int kQuestActiveFieldNumber = 2;
  inline const ::proto::message::ProtoQuestActive& questactive() const;
  inline ::proto::message::ProtoQuestActive* mutable_questactive();
  inline ::proto::message::ProtoQuestActive* release_questactive();
  inline void set_allocated_questactive(::proto::message::ProtoQuestActive* questactive);

  // optional .proto.message.ProtoQuestFuben questFuben = 3;
  inline bool has_questfuben() const;
  inline void clear_questfuben();
  static const int kQuestFubenFieldNumber = 3;
  inline const ::proto::message::ProtoQuestFuben& questfuben() const;
  inline ::proto::message::ProtoQuestFuben* mutable_questfuben();
  inline ::proto::message::ProtoQuestFuben* release_questfuben();
  inline void set_allocated_questfuben(::proto::message::ProtoQuestFuben* questfuben);

  // optional .proto.message.ProtoQuestDailyKillMonster questDailyKillMonster = 4;
  inline bool has_questdailykillmonster() const;
  inline void clear_questdailykillmonster();
  static const int kQuestDailyKillMonsterFieldNumber = 4;
  inline const ::proto::message::ProtoQuestDailyKillMonster& questdailykillmonster() const;
  inline ::proto::message::ProtoQuestDailyKillMonster* mutable_questdailykillmonster();
  inline ::proto::message::ProtoQuestDailyKillMonster* release_questdailykillmonster();
  inline void set_allocated_questdailykillmonster(::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster);

  // optional .proto.message.ProtoQuestBranch questBranch = 5;
  inline bool has_questbranch() const;
  inline void clear_questbranch();
  static const int kQuestBranchFieldNumber = 5;
  inline const ::proto::message::ProtoQuestBranch& questbranch() const;
  inline ::proto::message::ProtoQuestBranch* mutable_questbranch();
  inline ::proto::message::ProtoQuestBranch* release_questbranch();
  inline void set_allocated_questbranch(::proto::message::ProtoQuestBranch* questbranch);

  // repeated .proto.message.ProtoQuestCycle questCycle = 6;
  inline int questcycle_size() const;
  inline void clear_questcycle();
  static const int kQuestCycleFieldNumber = 6;
  inline const ::proto::message::ProtoQuestCycle& questcycle(int index) const;
  inline ::proto::message::ProtoQuestCycle* mutable_questcycle(int index);
  inline ::proto::message::ProtoQuestCycle* add_questcycle();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >&
      questcycle() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >*
      mutable_questcycle();

  // repeated int32 completeList = 7;
  inline int completelist_size() const;
  inline void clear_completelist();
  static const int kCompleteListFieldNumber = 7;
  inline ::google::protobuf::int32 completelist(int index) const;
  inline void set_completelist(int index, ::google::protobuf::int32 value);
  inline void add_completelist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      completelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_completelist();

  // repeated .proto.message.ProtoQuestData questData = 8;
  inline int questdata_size() const;
  inline void clear_questdata();
  static const int kQuestDataFieldNumber = 8;
  inline const ::proto::message::ProtoQuestData& questdata(int index) const;
  inline ::proto::message::ProtoQuestData* mutable_questdata(int index);
  inline ::proto::message::ProtoQuestData* add_questdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >&
      questdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >*
      mutable_questdata();

  // optional int32 killmontertodropitemquestid = 9;
  inline bool has_killmontertodropitemquestid() const;
  inline void clear_killmontertodropitemquestid();
  static const int kKillmontertodropitemquestidFieldNumber = 9;
  inline ::google::protobuf::int32 killmontertodropitemquestid() const;
  inline void set_killmontertodropitemquestid(::google::protobuf::int32 value);

  // optional uint32 killmontertodropitemquesttime = 10;
  inline bool has_killmontertodropitemquesttime() const;
  inline void clear_killmontertodropitemquesttime();
  static const int kKillmontertodropitemquesttimeFieldNumber = 10;
  inline ::google::protobuf::uint32 killmontertodropitemquesttime() const;
  inline void set_killmontertodropitemquesttime(::google::protobuf::uint32 value);

  // repeated .proto.message.ProtoSingleQuestReward rewards = 11;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 11;
  inline const ::proto::message::ProtoSingleQuestReward& rewards(int index) const;
  inline ::proto::message::ProtoSingleQuestReward* mutable_rewards(int index);
  inline ::proto::message::ProtoSingleQuestReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleQuestReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleQuestReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoAllQuestInfo)
 private:
  inline void set_has_questmain();
  inline void clear_has_questmain();
  inline void set_has_questactive();
  inline void clear_has_questactive();
  inline void set_has_questfuben();
  inline void clear_has_questfuben();
  inline void set_has_questdailykillmonster();
  inline void clear_has_questdailykillmonster();
  inline void set_has_questbranch();
  inline void clear_has_questbranch();
  inline void set_has_killmontertodropitemquestid();
  inline void clear_has_killmontertodropitemquestid();
  inline void set_has_killmontertodropitemquesttime();
  inline void clear_has_killmontertodropitemquesttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoQuestMain* questmain_;
  ::proto::message::ProtoQuestActive* questactive_;
  ::proto::message::ProtoQuestFuben* questfuben_;
  ::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster_;
  ::proto::message::ProtoQuestBranch* questbranch_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle > questcycle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > completelist_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData > questdata_;
  ::google::protobuf::int32 killmontertodropitemquestid_;
  ::google::protobuf::uint32 killmontertodropitemquesttime_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleQuestReward > rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_db_5fquest_2eproto();
  friend void protobuf_AssignDesc_db_5fquest_2eproto();
  friend void protobuf_ShutdownFile_db_5fquest_2eproto();

  void InitAsDefaultInstance();
  static ProtoAllQuestInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoItemAndNum

// optional int32 nid = 1;
inline bool ProtoItemAndNum::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoItemAndNum::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoItemAndNum::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoItemAndNum::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 ProtoItemAndNum::nid() const {
  return nid_;
}
inline void ProtoItemAndNum::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
}

// optional uint64 nNum = 2;
inline bool ProtoItemAndNum::has_nnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoItemAndNum::set_has_nnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoItemAndNum::clear_has_nnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoItemAndNum::clear_nnum() {
  nnum_ = GOOGLE_ULONGLONG(0);
  clear_has_nnum();
}
inline ::google::protobuf::uint64 ProtoItemAndNum::nnum() const {
  return nnum_;
}
inline void ProtoItemAndNum::set_nnum(::google::protobuf::uint64 value) {
  set_has_nnum();
  nnum_ = value;
}

// -------------------------------------------------------------------

// ProtoSingleQuestReward

// optional int32 nkind = 1;
inline bool ProtoSingleQuestReward::has_nkind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoSingleQuestReward::set_has_nkind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoSingleQuestReward::clear_has_nkind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoSingleQuestReward::clear_nkind() {
  nkind_ = 0;
  clear_has_nkind();
}
inline ::google::protobuf::int32 ProtoSingleQuestReward::nkind() const {
  return nkind_;
}
inline void ProtoSingleQuestReward::set_nkind(::google::protobuf::int32 value) {
  set_has_nkind();
  nkind_ = value;
}

// repeated .proto.message.ProtoItemAndNum item = 2;
inline int ProtoSingleQuestReward::item_size() const {
  return item_.size();
}
inline void ProtoSingleQuestReward::clear_item() {
  item_.Clear();
}
inline const ::proto::message::ProtoItemAndNum& ProtoSingleQuestReward::item(int index) const {
  return item_.Get(index);
}
inline ::proto::message::ProtoItemAndNum* ProtoSingleQuestReward::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::proto::message::ProtoItemAndNum* ProtoSingleQuestReward::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoItemAndNum >&
ProtoSingleQuestReward::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoItemAndNum >*
ProtoSingleQuestReward::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// ProtoAllQuestInfo

// optional .proto.message.ProtoQuestMain questMain = 1;
inline bool ProtoAllQuestInfo::has_questmain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoAllQuestInfo::set_has_questmain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoAllQuestInfo::clear_has_questmain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoAllQuestInfo::clear_questmain() {
  if (questmain_ != NULL) questmain_->::proto::message::ProtoQuestMain::Clear();
  clear_has_questmain();
}
inline const ::proto::message::ProtoQuestMain& ProtoAllQuestInfo::questmain() const {
  return questmain_ != NULL ? *questmain_ : *default_instance_->questmain_;
}
inline ::proto::message::ProtoQuestMain* ProtoAllQuestInfo::mutable_questmain() {
  set_has_questmain();
  if (questmain_ == NULL) questmain_ = new ::proto::message::ProtoQuestMain;
  return questmain_;
}
inline ::proto::message::ProtoQuestMain* ProtoAllQuestInfo::release_questmain() {
  clear_has_questmain();
  ::proto::message::ProtoQuestMain* temp = questmain_;
  questmain_ = NULL;
  return temp;
}
inline void ProtoAllQuestInfo::set_allocated_questmain(::proto::message::ProtoQuestMain* questmain) {
  delete questmain_;
  questmain_ = questmain;
  if (questmain) {
    set_has_questmain();
  } else {
    clear_has_questmain();
  }
}

// optional .proto.message.ProtoQuestActive questActive = 2;
inline bool ProtoAllQuestInfo::has_questactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoAllQuestInfo::set_has_questactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoAllQuestInfo::clear_has_questactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoAllQuestInfo::clear_questactive() {
  if (questactive_ != NULL) questactive_->::proto::message::ProtoQuestActive::Clear();
  clear_has_questactive();
}
inline const ::proto::message::ProtoQuestActive& ProtoAllQuestInfo::questactive() const {
  return questactive_ != NULL ? *questactive_ : *default_instance_->questactive_;
}
inline ::proto::message::ProtoQuestActive* ProtoAllQuestInfo::mutable_questactive() {
  set_has_questactive();
  if (questactive_ == NULL) questactive_ = new ::proto::message::ProtoQuestActive;
  return questactive_;
}
inline ::proto::message::ProtoQuestActive* ProtoAllQuestInfo::release_questactive() {
  clear_has_questactive();
  ::proto::message::ProtoQuestActive* temp = questactive_;
  questactive_ = NULL;
  return temp;
}
inline void ProtoAllQuestInfo::set_allocated_questactive(::proto::message::ProtoQuestActive* questactive) {
  delete questactive_;
  questactive_ = questactive;
  if (questactive) {
    set_has_questactive();
  } else {
    clear_has_questactive();
  }
}

// optional .proto.message.ProtoQuestFuben questFuben = 3;
inline bool ProtoAllQuestInfo::has_questfuben() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoAllQuestInfo::set_has_questfuben() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoAllQuestInfo::clear_has_questfuben() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoAllQuestInfo::clear_questfuben() {
  if (questfuben_ != NULL) questfuben_->::proto::message::ProtoQuestFuben::Clear();
  clear_has_questfuben();
}
inline const ::proto::message::ProtoQuestFuben& ProtoAllQuestInfo::questfuben() const {
  return questfuben_ != NULL ? *questfuben_ : *default_instance_->questfuben_;
}
inline ::proto::message::ProtoQuestFuben* ProtoAllQuestInfo::mutable_questfuben() {
  set_has_questfuben();
  if (questfuben_ == NULL) questfuben_ = new ::proto::message::ProtoQuestFuben;
  return questfuben_;
}
inline ::proto::message::ProtoQuestFuben* ProtoAllQuestInfo::release_questfuben() {
  clear_has_questfuben();
  ::proto::message::ProtoQuestFuben* temp = questfuben_;
  questfuben_ = NULL;
  return temp;
}
inline void ProtoAllQuestInfo::set_allocated_questfuben(::proto::message::ProtoQuestFuben* questfuben) {
  delete questfuben_;
  questfuben_ = questfuben;
  if (questfuben) {
    set_has_questfuben();
  } else {
    clear_has_questfuben();
  }
}

// optional .proto.message.ProtoQuestDailyKillMonster questDailyKillMonster = 4;
inline bool ProtoAllQuestInfo::has_questdailykillmonster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoAllQuestInfo::set_has_questdailykillmonster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoAllQuestInfo::clear_has_questdailykillmonster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoAllQuestInfo::clear_questdailykillmonster() {
  if (questdailykillmonster_ != NULL) questdailykillmonster_->::proto::message::ProtoQuestDailyKillMonster::Clear();
  clear_has_questdailykillmonster();
}
inline const ::proto::message::ProtoQuestDailyKillMonster& ProtoAllQuestInfo::questdailykillmonster() const {
  return questdailykillmonster_ != NULL ? *questdailykillmonster_ : *default_instance_->questdailykillmonster_;
}
inline ::proto::message::ProtoQuestDailyKillMonster* ProtoAllQuestInfo::mutable_questdailykillmonster() {
  set_has_questdailykillmonster();
  if (questdailykillmonster_ == NULL) questdailykillmonster_ = new ::proto::message::ProtoQuestDailyKillMonster;
  return questdailykillmonster_;
}
inline ::proto::message::ProtoQuestDailyKillMonster* ProtoAllQuestInfo::release_questdailykillmonster() {
  clear_has_questdailykillmonster();
  ::proto::message::ProtoQuestDailyKillMonster* temp = questdailykillmonster_;
  questdailykillmonster_ = NULL;
  return temp;
}
inline void ProtoAllQuestInfo::set_allocated_questdailykillmonster(::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster) {
  delete questdailykillmonster_;
  questdailykillmonster_ = questdailykillmonster;
  if (questdailykillmonster) {
    set_has_questdailykillmonster();
  } else {
    clear_has_questdailykillmonster();
  }
}

// optional .proto.message.ProtoQuestBranch questBranch = 5;
inline bool ProtoAllQuestInfo::has_questbranch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoAllQuestInfo::set_has_questbranch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoAllQuestInfo::clear_has_questbranch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoAllQuestInfo::clear_questbranch() {
  if (questbranch_ != NULL) questbranch_->::proto::message::ProtoQuestBranch::Clear();
  clear_has_questbranch();
}
inline const ::proto::message::ProtoQuestBranch& ProtoAllQuestInfo::questbranch() const {
  return questbranch_ != NULL ? *questbranch_ : *default_instance_->questbranch_;
}
inline ::proto::message::ProtoQuestBranch* ProtoAllQuestInfo::mutable_questbranch() {
  set_has_questbranch();
  if (questbranch_ == NULL) questbranch_ = new ::proto::message::ProtoQuestBranch;
  return questbranch_;
}
inline ::proto::message::ProtoQuestBranch* ProtoAllQuestInfo::release_questbranch() {
  clear_has_questbranch();
  ::proto::message::ProtoQuestBranch* temp = questbranch_;
  questbranch_ = NULL;
  return temp;
}
inline void ProtoAllQuestInfo::set_allocated_questbranch(::proto::message::ProtoQuestBranch* questbranch) {
  delete questbranch_;
  questbranch_ = questbranch;
  if (questbranch) {
    set_has_questbranch();
  } else {
    clear_has_questbranch();
  }
}

// repeated .proto.message.ProtoQuestCycle questCycle = 6;
inline int ProtoAllQuestInfo::questcycle_size() const {
  return questcycle_.size();
}
inline void ProtoAllQuestInfo::clear_questcycle() {
  questcycle_.Clear();
}
inline const ::proto::message::ProtoQuestCycle& ProtoAllQuestInfo::questcycle(int index) const {
  return questcycle_.Get(index);
}
inline ::proto::message::ProtoQuestCycle* ProtoAllQuestInfo::mutable_questcycle(int index) {
  return questcycle_.Mutable(index);
}
inline ::proto::message::ProtoQuestCycle* ProtoAllQuestInfo::add_questcycle() {
  return questcycle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >&
ProtoAllQuestInfo::questcycle() const {
  return questcycle_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >*
ProtoAllQuestInfo::mutable_questcycle() {
  return &questcycle_;
}

// repeated int32 completeList = 7;
inline int ProtoAllQuestInfo::completelist_size() const {
  return completelist_.size();
}
inline void ProtoAllQuestInfo::clear_completelist() {
  completelist_.Clear();
}
inline ::google::protobuf::int32 ProtoAllQuestInfo::completelist(int index) const {
  return completelist_.Get(index);
}
inline void ProtoAllQuestInfo::set_completelist(int index, ::google::protobuf::int32 value) {
  completelist_.Set(index, value);
}
inline void ProtoAllQuestInfo::add_completelist(::google::protobuf::int32 value) {
  completelist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoAllQuestInfo::completelist() const {
  return completelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoAllQuestInfo::mutable_completelist() {
  return &completelist_;
}

// repeated .proto.message.ProtoQuestData questData = 8;
inline int ProtoAllQuestInfo::questdata_size() const {
  return questdata_.size();
}
inline void ProtoAllQuestInfo::clear_questdata() {
  questdata_.Clear();
}
inline const ::proto::message::ProtoQuestData& ProtoAllQuestInfo::questdata(int index) const {
  return questdata_.Get(index);
}
inline ::proto::message::ProtoQuestData* ProtoAllQuestInfo::mutable_questdata(int index) {
  return questdata_.Mutable(index);
}
inline ::proto::message::ProtoQuestData* ProtoAllQuestInfo::add_questdata() {
  return questdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >&
ProtoAllQuestInfo::questdata() const {
  return questdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >*
ProtoAllQuestInfo::mutable_questdata() {
  return &questdata_;
}

// optional int32 killmontertodropitemquestid = 9;
inline bool ProtoAllQuestInfo::has_killmontertodropitemquestid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoAllQuestInfo::set_has_killmontertodropitemquestid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoAllQuestInfo::clear_has_killmontertodropitemquestid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoAllQuestInfo::clear_killmontertodropitemquestid() {
  killmontertodropitemquestid_ = 0;
  clear_has_killmontertodropitemquestid();
}
inline ::google::protobuf::int32 ProtoAllQuestInfo::killmontertodropitemquestid() const {
  return killmontertodropitemquestid_;
}
inline void ProtoAllQuestInfo::set_killmontertodropitemquestid(::google::protobuf::int32 value) {
  set_has_killmontertodropitemquestid();
  killmontertodropitemquestid_ = value;
}

// optional uint32 killmontertodropitemquesttime = 10;
inline bool ProtoAllQuestInfo::has_killmontertodropitemquesttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoAllQuestInfo::set_has_killmontertodropitemquesttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoAllQuestInfo::clear_has_killmontertodropitemquesttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoAllQuestInfo::clear_killmontertodropitemquesttime() {
  killmontertodropitemquesttime_ = 0u;
  clear_has_killmontertodropitemquesttime();
}
inline ::google::protobuf::uint32 ProtoAllQuestInfo::killmontertodropitemquesttime() const {
  return killmontertodropitemquesttime_;
}
inline void ProtoAllQuestInfo::set_killmontertodropitemquesttime(::google::protobuf::uint32 value) {
  set_has_killmontertodropitemquesttime();
  killmontertodropitemquesttime_ = value;
}

// repeated .proto.message.ProtoSingleQuestReward rewards = 11;
inline int ProtoAllQuestInfo::rewards_size() const {
  return rewards_.size();
}
inline void ProtoAllQuestInfo::clear_rewards() {
  rewards_.Clear();
}
inline const ::proto::message::ProtoSingleQuestReward& ProtoAllQuestInfo::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::proto::message::ProtoSingleQuestReward* ProtoAllQuestInfo::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::proto::message::ProtoSingleQuestReward* ProtoAllQuestInfo::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleQuestReward >&
ProtoAllQuestInfo::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleQuestReward >*
ProtoAllQuestInfo::mutable_rewards() {
  return &rewards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_5fquest_2eproto__INCLUDED
