// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serverdata.proto

#ifndef PROTOBUF_serverdata_2eproto__INCLUDED
#define PROTOBUF_serverdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "offpvp.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_serverdata_2eproto();
void protobuf_AssignDesc_serverdata_2eproto();
void protobuf_ShutdownFile_serverdata_2eproto();

class ServerDataContent;
class ServerCommonData;
class OffrankDataList;
class OffPVPRankingData;
class NoticeData;
class ServerNotice;
class TBDataList;
class TBData;
class ServerConfigData;

// ===================================================================

class ServerDataContent : public ::google::protobuf::Message {
 public:
  ServerDataContent();
  virtual ~ServerDataContent();

  ServerDataContent(const ServerDataContent& from);

  inline ServerDataContent& operator=(const ServerDataContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerDataContent& default_instance();

  void Swap(ServerDataContent* other);

  // implements Message ----------------------------------------------

  ServerDataContent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerDataContent& from);
  void MergeFrom(const ServerDataContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 numData = 1;
  inline int numdata_size() const;
  inline void clear_numdata();
  static const int kNumDataFieldNumber = 1;
  inline ::google::protobuf::uint64 numdata(int index) const;
  inline void set_numdata(int index, ::google::protobuf::uint64 value);
  inline void add_numdata(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      numdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_numdata();

  // repeated string strData = 2;
  inline int strdata_size() const;
  inline void clear_strdata();
  static const int kStrDataFieldNumber = 2;
  inline const ::std::string& strdata(int index) const;
  inline ::std::string* mutable_strdata(int index);
  inline void set_strdata(int index, const ::std::string& value);
  inline void set_strdata(int index, const char* value);
  inline void set_strdata(int index, const char* value, size_t size);
  inline ::std::string* add_strdata();
  inline void add_strdata(const ::std::string& value);
  inline void add_strdata(const char* value);
  inline void add_strdata(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strdata();

  // @@protoc_insertion_point(class_scope:proto.message.ServerDataContent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > numdata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static ServerDataContent* default_instance_;
};
// -------------------------------------------------------------------

class ServerCommonData : public ::google::protobuf::Message {
 public:
  ServerCommonData();
  virtual ~ServerCommonData();

  ServerCommonData(const ServerCommonData& from);

  inline ServerCommonData& operator=(const ServerCommonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCommonData& default_instance();

  void Swap(ServerCommonData* other);

  // implements Message ----------------------------------------------

  ServerCommonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCommonData& from);
  void MergeFrom(const ServerCommonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .proto.message.ServerDataContent content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::proto::message::ServerDataContent& content() const;
  inline ::proto::message::ServerDataContent* mutable_content();
  inline ::proto::message::ServerDataContent* release_content();
  inline void set_allocated_content(::proto::message::ServerDataContent* content);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // repeated .proto.message.WolrdBossSaledItem saleditem = 4;
  inline int saleditem_size() const;
  inline void clear_saleditem();
  static const int kSaleditemFieldNumber = 4;
  inline const ::proto::message::WolrdBossSaledItem& saleditem(int index) const;
  inline ::proto::message::WolrdBossSaledItem* mutable_saleditem(int index);
  inline ::proto::message::WolrdBossSaledItem* add_saleditem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::WolrdBossSaledItem >&
      saleditem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::WolrdBossSaledItem >*
      mutable_saleditem();

  // @@protoc_insertion_point(class_scope:proto.message.ServerCommonData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ServerDataContent* content_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::WolrdBossSaledItem > saleditem_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static ServerCommonData* default_instance_;
};
// -------------------------------------------------------------------

class OffrankDataList : public ::google::protobuf::Message {
 public:
  OffrankDataList();
  virtual ~OffrankDataList();

  OffrankDataList(const OffrankDataList& from);

  inline OffrankDataList& operator=(const OffrankDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OffrankDataList& default_instance();

  void Swap(OffrankDataList* other);

  // implements Message ----------------------------------------------

  OffrankDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OffrankDataList& from);
  void MergeFrom(const OffrankDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.FighterInfo datalist = 1;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDatalistFieldNumber = 1;
  inline const ::proto::message::FighterInfo& datalist(int index) const;
  inline ::proto::message::FighterInfo* mutable_datalist(int index);
  inline ::proto::message::FighterInfo* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::FighterInfo >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::FighterInfo >*
      mutable_datalist();

  // @@protoc_insertion_point(class_scope:proto.message.OffrankDataList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::FighterInfo > datalist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static OffrankDataList* default_instance_;
};
// -------------------------------------------------------------------

class OffPVPRankingData : public ::google::protobuf::Message {
 public:
  OffPVPRankingData();
  virtual ~OffPVPRankingData();

  OffPVPRankingData(const OffPVPRankingData& from);

  inline OffPVPRankingData& operator=(const OffPVPRankingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OffPVPRankingData& default_instance();

  void Swap(OffPVPRankingData* other);

  // implements Message ----------------------------------------------

  OffPVPRankingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OffPVPRankingData& from);
  void MergeFrom(const OffPVPRankingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.OffrankDataList content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::proto::message::OffrankDataList& content() const;
  inline ::proto::message::OffrankDataList* mutable_content();
  inline ::proto::message::OffrankDataList* release_content();
  inline void set_allocated_content(::proto::message::OffrankDataList* content);

  // @@protoc_insertion_point(class_scope:proto.message.OffPVPRankingData)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::OffrankDataList* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static OffPVPRankingData* default_instance_;
};
// -------------------------------------------------------------------

class NoticeData : public ::google::protobuf::Message {
 public:
  NoticeData();
  virtual ~NoticeData();

  NoticeData(const NoticeData& from);

  inline NoticeData& operator=(const NoticeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoticeData& default_instance();

  void Swap(NoticeData* other);

  // implements Message ----------------------------------------------

  NoticeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoticeData& from);
  void MergeFrom(const NoticeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 noticeid = 1;
  inline int noticeid_size() const;
  inline void clear_noticeid();
  static const int kNoticeidFieldNumber = 1;
  inline ::google::protobuf::uint64 noticeid(int index) const;
  inline void set_noticeid(int index, ::google::protobuf::uint64 value);
  inline void add_noticeid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      noticeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_noticeid();

  // repeated string notecontext = 2;
  inline int notecontext_size() const;
  inline void clear_notecontext();
  static const int kNotecontextFieldNumber = 2;
  inline const ::std::string& notecontext(int index) const;
  inline ::std::string* mutable_notecontext(int index);
  inline void set_notecontext(int index, const ::std::string& value);
  inline void set_notecontext(int index, const char* value);
  inline void set_notecontext(int index, const char* value, size_t size);
  inline ::std::string* add_notecontext();
  inline void add_notecontext(const ::std::string& value);
  inline void add_notecontext(const char* value);
  inline void add_notecontext(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& notecontext() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_notecontext();

  // repeated uint64 starttime = 3;
  inline int starttime_size() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 3;
  inline ::google::protobuf::uint64 starttime(int index) const;
  inline void set_starttime(int index, ::google::protobuf::uint64 value);
  inline void add_starttime(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      starttime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_starttime();

  // repeated uint64 endtime = 4;
  inline int endtime_size() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::uint64 endtime(int index) const;
  inline void set_endtime(int index, ::google::protobuf::uint64 value);
  inline void add_endtime(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      endtime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_endtime();

  // repeated uint32 interval = 5;
  inline int interval_size() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 5;
  inline ::google::protobuf::uint32 interval(int index) const;
  inline void set_interval(int index, ::google::protobuf::uint32 value);
  inline void add_interval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      interval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_interval();

  // repeated uint32 tableid = 6;
  inline int tableid_size() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 6;
  inline ::google::protobuf::uint32 tableid(int index) const;
  inline void set_tableid(int index, ::google::protobuf::uint32 value);
  inline void add_tableid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tableid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tableid();

  // @@protoc_insertion_point(class_scope:proto.message.NoticeData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > noticeid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> notecontext_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > starttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > endtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > interval_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tableid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static NoticeData* default_instance_;
};
// -------------------------------------------------------------------

class ServerNotice : public ::google::protobuf::Message {
 public:
  ServerNotice();
  virtual ~ServerNotice();

  ServerNotice(const ServerNotice& from);

  inline ServerNotice& operator=(const ServerNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerNotice& default_instance();

  void Swap(ServerNotice* other);

  // implements Message ----------------------------------------------

  ServerNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerNotice& from);
  void MergeFrom(const ServerNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.NoticeData content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::proto::message::NoticeData& content() const;
  inline ::proto::message::NoticeData* mutable_content();
  inline ::proto::message::NoticeData* release_content();
  inline void set_allocated_content(::proto::message::NoticeData* content);

  // @@protoc_insertion_point(class_scope:proto.message.ServerNotice)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::NoticeData* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static ServerNotice* default_instance_;
};
// -------------------------------------------------------------------

class TBDataList : public ::google::protobuf::Message {
 public:
  TBDataList();
  virtual ~TBDataList();

  TBDataList(const TBDataList& from);

  inline TBDataList& operator=(const TBDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBDataList& default_instance();

  void Swap(TBDataList* other);

  // implements Message ----------------------------------------------

  TBDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBDataList& from);
  void MergeFrom(const TBDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.TBFieldInfo infolist = 1;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfolistFieldNumber = 1;
  inline const ::proto::message::TBFieldInfo& infolist(int index) const;
  inline ::proto::message::TBFieldInfo* mutable_infolist(int index);
  inline ::proto::message::TBFieldInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:proto.message.TBDataList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo > infolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static TBDataList* default_instance_;
};
// -------------------------------------------------------------------

class TBData : public ::google::protobuf::Message {
 public:
  TBData();
  virtual ~TBData();

  TBData(const TBData& from);

  inline TBData& operator=(const TBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBData& default_instance();

  void Swap(TBData* other);

  // implements Message ----------------------------------------------

  TBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBData& from);
  void MergeFrom(const TBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.TBDataList content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::proto::message::TBDataList& content() const;
  inline ::proto::message::TBDataList* mutable_content();
  inline ::proto::message::TBDataList* release_content();
  inline void set_allocated_content(::proto::message::TBDataList* content);

  // @@protoc_insertion_point(class_scope:proto.message.TBData)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::TBDataList* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static TBData* default_instance_;
};
// -------------------------------------------------------------------

class ServerConfigData : public ::google::protobuf::Message {
 public:
  ServerConfigData();
  virtual ~ServerConfigData();

  ServerConfigData(const ServerConfigData& from);

  inline ServerConfigData& operator=(const ServerConfigData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerConfigData& default_instance();

  void Swap(ServerConfigData* other);

  // implements Message ----------------------------------------------

  ServerConfigData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerConfigData& from);
  void MergeFrom(const ServerConfigData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string opentime = 1;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpentimeFieldNumber = 1;
  inline const ::std::string& opentime() const;
  inline void set_opentime(const ::std::string& value);
  inline void set_opentime(const char* value);
  inline void set_opentime(const char* value, size_t size);
  inline ::std::string* mutable_opentime();
  inline ::std::string* release_opentime();
  inline void set_allocated_opentime(::std::string* opentime);

  // optional int32 opengm = 2;
  inline bool has_opengm() const;
  inline void clear_opengm();
  static const int kOpengmFieldNumber = 2;
  inline ::google::protobuf::int32 opengm() const;
  inline void set_opengm(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ServerConfigData)
 private:
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_opengm();
  inline void clear_has_opengm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* opentime_;
  ::google::protobuf::int32 opengm_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_serverdata_2eproto();
  friend void protobuf_AssignDesc_serverdata_2eproto();
  friend void protobuf_ShutdownFile_serverdata_2eproto();

  void InitAsDefaultInstance();
  static ServerConfigData* default_instance_;
};
// ===================================================================


// ===================================================================

// ServerDataContent

// repeated uint64 numData = 1;
inline int ServerDataContent::numdata_size() const {
  return numdata_.size();
}
inline void ServerDataContent::clear_numdata() {
  numdata_.Clear();
}
inline ::google::protobuf::uint64 ServerDataContent::numdata(int index) const {
  return numdata_.Get(index);
}
inline void ServerDataContent::set_numdata(int index, ::google::protobuf::uint64 value) {
  numdata_.Set(index, value);
}
inline void ServerDataContent::add_numdata(::google::protobuf::uint64 value) {
  numdata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerDataContent::numdata() const {
  return numdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerDataContent::mutable_numdata() {
  return &numdata_;
}

// repeated string strData = 2;
inline int ServerDataContent::strdata_size() const {
  return strdata_.size();
}
inline void ServerDataContent::clear_strdata() {
  strdata_.Clear();
}
inline const ::std::string& ServerDataContent::strdata(int index) const {
  return strdata_.Get(index);
}
inline ::std::string* ServerDataContent::mutable_strdata(int index) {
  return strdata_.Mutable(index);
}
inline void ServerDataContent::set_strdata(int index, const ::std::string& value) {
  strdata_.Mutable(index)->assign(value);
}
inline void ServerDataContent::set_strdata(int index, const char* value) {
  strdata_.Mutable(index)->assign(value);
}
inline void ServerDataContent::set_strdata(int index, const char* value, size_t size) {
  strdata_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerDataContent::add_strdata() {
  return strdata_.Add();
}
inline void ServerDataContent::add_strdata(const ::std::string& value) {
  strdata_.Add()->assign(value);
}
inline void ServerDataContent::add_strdata(const char* value) {
  strdata_.Add()->assign(value);
}
inline void ServerDataContent::add_strdata(const char* value, size_t size) {
  strdata_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ServerDataContent::strdata() const {
  return strdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ServerDataContent::mutable_strdata() {
  return &strdata_;
}

// -------------------------------------------------------------------

// ServerCommonData

// optional uint32 id = 1;
inline bool ServerCommonData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerCommonData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerCommonData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerCommonData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ServerCommonData::id() const {
  return id_;
}
inline void ServerCommonData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .proto.message.ServerDataContent content = 2;
inline bool ServerCommonData::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerCommonData::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerCommonData::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerCommonData::clear_content() {
  if (content_ != NULL) content_->::proto::message::ServerDataContent::Clear();
  clear_has_content();
}
inline const ::proto::message::ServerDataContent& ServerCommonData::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto::message::ServerDataContent* ServerCommonData::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto::message::ServerDataContent;
  return content_;
}
inline ::proto::message::ServerDataContent* ServerCommonData::release_content() {
  clear_has_content();
  ::proto::message::ServerDataContent* temp = content_;
  content_ = NULL;
  return temp;
}
inline void ServerCommonData::set_allocated_content(::proto::message::ServerDataContent* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// optional uint64 time = 3;
inline bool ServerCommonData::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerCommonData::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerCommonData::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerCommonData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 ServerCommonData::time() const {
  return time_;
}
inline void ServerCommonData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// repeated .proto.message.WolrdBossSaledItem saleditem = 4;
inline int ServerCommonData::saleditem_size() const {
  return saleditem_.size();
}
inline void ServerCommonData::clear_saleditem() {
  saleditem_.Clear();
}
inline const ::proto::message::WolrdBossSaledItem& ServerCommonData::saleditem(int index) const {
  return saleditem_.Get(index);
}
inline ::proto::message::WolrdBossSaledItem* ServerCommonData::mutable_saleditem(int index) {
  return saleditem_.Mutable(index);
}
inline ::proto::message::WolrdBossSaledItem* ServerCommonData::add_saleditem() {
  return saleditem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::WolrdBossSaledItem >&
ServerCommonData::saleditem() const {
  return saleditem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::WolrdBossSaledItem >*
ServerCommonData::mutable_saleditem() {
  return &saleditem_;
}

// -------------------------------------------------------------------

// OffrankDataList

// repeated .proto.message.FighterInfo datalist = 1;
inline int OffrankDataList::datalist_size() const {
  return datalist_.size();
}
inline void OffrankDataList::clear_datalist() {
  datalist_.Clear();
}
inline const ::proto::message::FighterInfo& OffrankDataList::datalist(int index) const {
  return datalist_.Get(index);
}
inline ::proto::message::FighterInfo* OffrankDataList::mutable_datalist(int index) {
  return datalist_.Mutable(index);
}
inline ::proto::message::FighterInfo* OffrankDataList::add_datalist() {
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::FighterInfo >&
OffrankDataList::datalist() const {
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::FighterInfo >*
OffrankDataList::mutable_datalist() {
  return &datalist_;
}

// -------------------------------------------------------------------

// OffPVPRankingData

// optional .proto.message.OffrankDataList content = 1;
inline bool OffPVPRankingData::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OffPVPRankingData::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OffPVPRankingData::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OffPVPRankingData::clear_content() {
  if (content_ != NULL) content_->::proto::message::OffrankDataList::Clear();
  clear_has_content();
}
inline const ::proto::message::OffrankDataList& OffPVPRankingData::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto::message::OffrankDataList* OffPVPRankingData::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto::message::OffrankDataList;
  return content_;
}
inline ::proto::message::OffrankDataList* OffPVPRankingData::release_content() {
  clear_has_content();
  ::proto::message::OffrankDataList* temp = content_;
  content_ = NULL;
  return temp;
}
inline void OffPVPRankingData::set_allocated_content(::proto::message::OffrankDataList* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// -------------------------------------------------------------------

// NoticeData

// repeated uint64 noticeid = 1;
inline int NoticeData::noticeid_size() const {
  return noticeid_.size();
}
inline void NoticeData::clear_noticeid() {
  noticeid_.Clear();
}
inline ::google::protobuf::uint64 NoticeData::noticeid(int index) const {
  return noticeid_.Get(index);
}
inline void NoticeData::set_noticeid(int index, ::google::protobuf::uint64 value) {
  noticeid_.Set(index, value);
}
inline void NoticeData::add_noticeid(::google::protobuf::uint64 value) {
  noticeid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NoticeData::noticeid() const {
  return noticeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NoticeData::mutable_noticeid() {
  return &noticeid_;
}

// repeated string notecontext = 2;
inline int NoticeData::notecontext_size() const {
  return notecontext_.size();
}
inline void NoticeData::clear_notecontext() {
  notecontext_.Clear();
}
inline const ::std::string& NoticeData::notecontext(int index) const {
  return notecontext_.Get(index);
}
inline ::std::string* NoticeData::mutable_notecontext(int index) {
  return notecontext_.Mutable(index);
}
inline void NoticeData::set_notecontext(int index, const ::std::string& value) {
  notecontext_.Mutable(index)->assign(value);
}
inline void NoticeData::set_notecontext(int index, const char* value) {
  notecontext_.Mutable(index)->assign(value);
}
inline void NoticeData::set_notecontext(int index, const char* value, size_t size) {
  notecontext_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NoticeData::add_notecontext() {
  return notecontext_.Add();
}
inline void NoticeData::add_notecontext(const ::std::string& value) {
  notecontext_.Add()->assign(value);
}
inline void NoticeData::add_notecontext(const char* value) {
  notecontext_.Add()->assign(value);
}
inline void NoticeData::add_notecontext(const char* value, size_t size) {
  notecontext_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NoticeData::notecontext() const {
  return notecontext_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NoticeData::mutable_notecontext() {
  return &notecontext_;
}

// repeated uint64 starttime = 3;
inline int NoticeData::starttime_size() const {
  return starttime_.size();
}
inline void NoticeData::clear_starttime() {
  starttime_.Clear();
}
inline ::google::protobuf::uint64 NoticeData::starttime(int index) const {
  return starttime_.Get(index);
}
inline void NoticeData::set_starttime(int index, ::google::protobuf::uint64 value) {
  starttime_.Set(index, value);
}
inline void NoticeData::add_starttime(::google::protobuf::uint64 value) {
  starttime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NoticeData::starttime() const {
  return starttime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NoticeData::mutable_starttime() {
  return &starttime_;
}

// repeated uint64 endtime = 4;
inline int NoticeData::endtime_size() const {
  return endtime_.size();
}
inline void NoticeData::clear_endtime() {
  endtime_.Clear();
}
inline ::google::protobuf::uint64 NoticeData::endtime(int index) const {
  return endtime_.Get(index);
}
inline void NoticeData::set_endtime(int index, ::google::protobuf::uint64 value) {
  endtime_.Set(index, value);
}
inline void NoticeData::add_endtime(::google::protobuf::uint64 value) {
  endtime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NoticeData::endtime() const {
  return endtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NoticeData::mutable_endtime() {
  return &endtime_;
}

// repeated uint32 interval = 5;
inline int NoticeData::interval_size() const {
  return interval_.size();
}
inline void NoticeData::clear_interval() {
  interval_.Clear();
}
inline ::google::protobuf::uint32 NoticeData::interval(int index) const {
  return interval_.Get(index);
}
inline void NoticeData::set_interval(int index, ::google::protobuf::uint32 value) {
  interval_.Set(index, value);
}
inline void NoticeData::add_interval(::google::protobuf::uint32 value) {
  interval_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NoticeData::interval() const {
  return interval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NoticeData::mutable_interval() {
  return &interval_;
}

// repeated uint32 tableid = 6;
inline int NoticeData::tableid_size() const {
  return tableid_.size();
}
inline void NoticeData::clear_tableid() {
  tableid_.Clear();
}
inline ::google::protobuf::uint32 NoticeData::tableid(int index) const {
  return tableid_.Get(index);
}
inline void NoticeData::set_tableid(int index, ::google::protobuf::uint32 value) {
  tableid_.Set(index, value);
}
inline void NoticeData::add_tableid(::google::protobuf::uint32 value) {
  tableid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NoticeData::tableid() const {
  return tableid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NoticeData::mutable_tableid() {
  return &tableid_;
}

// -------------------------------------------------------------------

// ServerNotice

// optional .proto.message.NoticeData content = 1;
inline bool ServerNotice::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerNotice::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerNotice::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerNotice::clear_content() {
  if (content_ != NULL) content_->::proto::message::NoticeData::Clear();
  clear_has_content();
}
inline const ::proto::message::NoticeData& ServerNotice::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto::message::NoticeData* ServerNotice::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto::message::NoticeData;
  return content_;
}
inline ::proto::message::NoticeData* ServerNotice::release_content() {
  clear_has_content();
  ::proto::message::NoticeData* temp = content_;
  content_ = NULL;
  return temp;
}
inline void ServerNotice::set_allocated_content(::proto::message::NoticeData* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// -------------------------------------------------------------------

// TBDataList

// repeated .proto.message.TBFieldInfo infolist = 1;
inline int TBDataList::infolist_size() const {
  return infolist_.size();
}
inline void TBDataList::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::TBFieldInfo& TBDataList::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::TBFieldInfo* TBDataList::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::TBFieldInfo* TBDataList::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >&
TBDataList::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >*
TBDataList::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// TBData

// optional .proto.message.TBDataList content = 1;
inline bool TBData::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBData::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBData::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBData::clear_content() {
  if (content_ != NULL) content_->::proto::message::TBDataList::Clear();
  clear_has_content();
}
inline const ::proto::message::TBDataList& TBData::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::proto::message::TBDataList* TBData::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::proto::message::TBDataList;
  return content_;
}
inline ::proto::message::TBDataList* TBData::release_content() {
  clear_has_content();
  ::proto::message::TBDataList* temp = content_;
  content_ = NULL;
  return temp;
}
inline void TBData::set_allocated_content(::proto::message::TBDataList* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// -------------------------------------------------------------------

// ServerConfigData

// optional string opentime = 1;
inline bool ServerConfigData::has_opentime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerConfigData::set_has_opentime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerConfigData::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerConfigData::clear_opentime() {
  if (opentime_ != &::google::protobuf::internal::kEmptyString) {
    opentime_->clear();
  }
  clear_has_opentime();
}
inline const ::std::string& ServerConfigData::opentime() const {
  return *opentime_;
}
inline void ServerConfigData::set_opentime(const ::std::string& value) {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  opentime_->assign(value);
}
inline void ServerConfigData::set_opentime(const char* value) {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  opentime_->assign(value);
}
inline void ServerConfigData::set_opentime(const char* value, size_t size) {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  opentime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerConfigData::mutable_opentime() {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  return opentime_;
}
inline ::std::string* ServerConfigData::release_opentime() {
  clear_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opentime_;
    opentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServerConfigData::set_allocated_opentime(::std::string* opentime) {
  if (opentime_ != &::google::protobuf::internal::kEmptyString) {
    delete opentime_;
  }
  if (opentime) {
    set_has_opentime();
    opentime_ = opentime;
  } else {
    clear_has_opentime();
    opentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 opengm = 2;
inline bool ServerConfigData::has_opengm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerConfigData::set_has_opengm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerConfigData::clear_has_opengm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerConfigData::clear_opengm() {
  opengm_ = 0;
  clear_has_opengm();
}
inline ::google::protobuf::int32 ServerConfigData::opengm() const {
  return opengm_;
}
inline void ServerConfigData::set_opengm(::google::protobuf::int32 value) {
  set_has_opengm();
  opengm_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serverdata_2eproto__INCLUDED
