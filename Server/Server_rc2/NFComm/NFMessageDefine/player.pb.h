// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#ifndef PROTOBUF_player_2eproto__INCLUDED
#define PROTOBUF_player_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "item.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_player_2eproto();
void protobuf_AssignDesc_player_2eproto();
void protobuf_ShutdownFile_player_2eproto();

class ProtoAttrData;
class Player_SC_PlayerAttrData;
class Player_SC_PlayerAttrData_Exp;
class MultiProgressCon;
class ProtoProgressConData;
class Player_SC_PlayerProgressConData;
class Player_CS_OpenSystem;
class Player_SC_UpdateOpenButton;
class Player_CS_QueryPlayerData;
class Player_SC_QueryPlayerData;
class Player_CS_ChangeCharname;
class Player_SC_ChangeCharname;
class SingleExpRio;
class Player_SC_UpdatePlayerExpRio;
class Player_CS_UpdateGuide;
class Player_SC_UpdateGuide;
class ProtoSingleCon;
class ProtoProgressConInfo;
class ProtoAllProgressConInfo;
class Player_SC_OffRewordInfo;
class Player_CS_GetOffReword;
class Player_SC_GetDreadDungeonInfo;
class Player_CS_GetAssignPlayerInfo;
class Player_SC_GetAssignPlayerInfo;
class Player_SC_GetTerritoryBattleInfo;
class Player_CS_GetTerBatReward;
class Player_CS_JoinTerritoryBattle;
class Player_CS_TBCaptureFlag;
class Player_SC_TerritoryBattleResult;
class Player_CS_QueryPlayerSimpleData;
class PlayerSimpleData;
class Player_SC_QueryPlayerSimpleData;

// ===================================================================

class ProtoAttrData : public ::google::protobuf::Message {
 public:
  ProtoAttrData();
  virtual ~ProtoAttrData();

  ProtoAttrData(const ProtoAttrData& from);

  inline ProtoAttrData& operator=(const ProtoAttrData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAttrData& default_instance();

  void Swap(ProtoAttrData* other);

  // implements Message ----------------------------------------------

  ProtoAttrData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoAttrData& from);
  void MergeFrom(const ProtoAttrData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional uint32 percent = 3;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 3;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoAttrData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_percent();
  inline void clear_has_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::uint32 percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ProtoAttrData* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_PlayerAttrData : public ::google::protobuf::Message {
 public:
  Player_SC_PlayerAttrData();
  virtual ~Player_SC_PlayerAttrData();

  Player_SC_PlayerAttrData(const Player_SC_PlayerAttrData& from);

  inline Player_SC_PlayerAttrData& operator=(const Player_SC_PlayerAttrData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_PlayerAttrData& default_instance();

  void Swap(Player_SC_PlayerAttrData* other);

  // implements Message ----------------------------------------------

  Player_SC_PlayerAttrData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_PlayerAttrData& from);
  void MergeFrom(const Player_SC_PlayerAttrData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoAttrData attrData = 1;
  inline int attrdata_size() const;
  inline void clear_attrdata();
  static const int kAttrDataFieldNumber = 1;
  inline const ::proto::message::ProtoAttrData& attrdata(int index) const;
  inline ::proto::message::ProtoAttrData* mutable_attrdata(int index);
  inline ::proto::message::ProtoAttrData* add_attrdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoAttrData >&
      attrdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoAttrData >*
      mutable_attrdata();

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_PlayerAttrData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoAttrData > attrdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_PlayerAttrData* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_PlayerAttrData_Exp : public ::google::protobuf::Message {
 public:
  Player_SC_PlayerAttrData_Exp();
  virtual ~Player_SC_PlayerAttrData_Exp();

  Player_SC_PlayerAttrData_Exp(const Player_SC_PlayerAttrData_Exp& from);

  inline Player_SC_PlayerAttrData_Exp& operator=(const Player_SC_PlayerAttrData_Exp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_PlayerAttrData_Exp& default_instance();

  void Swap(Player_SC_PlayerAttrData_Exp* other);

  // implements Message ----------------------------------------------

  Player_SC_PlayerAttrData_Exp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_PlayerAttrData_Exp& from);
  void MergeFrom(const Player_SC_PlayerAttrData_Exp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_PlayerAttrData_Exp)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_PlayerAttrData_Exp* default_instance_;
};
// -------------------------------------------------------------------

class MultiProgressCon : public ::google::protobuf::Message {
 public:
  MultiProgressCon();
  virtual ~MultiProgressCon();

  MultiProgressCon(const MultiProgressCon& from);

  inline MultiProgressCon& operator=(const MultiProgressCon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiProgressCon& default_instance();

  void Swap(MultiProgressCon* other);

  // implements Message ----------------------------------------------

  MultiProgressCon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MultiProgressCon& from);
  void MergeFrom(const MultiProgressCon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional int64 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int64 val() const;
  inline void set_val(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.MultiProgressCon)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 val_;
  ::google::protobuf::int32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static MultiProgressCon* default_instance_;
};
// -------------------------------------------------------------------

class ProtoProgressConData : public ::google::protobuf::Message {
 public:
  ProtoProgressConData();
  virtual ~ProtoProgressConData();

  ProtoProgressConData(const ProtoProgressConData& from);

  inline ProtoProgressConData& operator=(const ProtoProgressConData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoProgressConData& default_instance();

  void Swap(ProtoProgressConData* other);

  // implements Message ----------------------------------------------

  ProtoProgressConData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoProgressConData& from);
  void MergeFrom(const ProtoProgressConData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // repeated .proto.message.MultiProgressCon multivalue = 3;
  inline int multivalue_size() const;
  inline void clear_multivalue();
  static const int kMultivalueFieldNumber = 3;
  inline const ::proto::message::MultiProgressCon& multivalue(int index) const;
  inline ::proto::message::MultiProgressCon* mutable_multivalue(int index);
  inline ::proto::message::MultiProgressCon* add_multivalue();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MultiProgressCon >&
      multivalue() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::MultiProgressCon >*
      mutable_multivalue();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoProgressConData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::MultiProgressCon > multivalue_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ProtoProgressConData* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_PlayerProgressConData : public ::google::protobuf::Message {
 public:
  Player_SC_PlayerProgressConData();
  virtual ~Player_SC_PlayerProgressConData();

  Player_SC_PlayerProgressConData(const Player_SC_PlayerProgressConData& from);

  inline Player_SC_PlayerProgressConData& operator=(const Player_SC_PlayerProgressConData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_PlayerProgressConData& default_instance();

  void Swap(Player_SC_PlayerProgressConData* other);

  // implements Message ----------------------------------------------

  Player_SC_PlayerProgressConData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_PlayerProgressConData& from);
  void MergeFrom(const Player_SC_PlayerProgressConData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoProgressConData condata = 1;
  inline int condata_size() const;
  inline void clear_condata();
  static const int kCondataFieldNumber = 1;
  inline const ::proto::message::ProtoProgressConData& condata(int index) const;
  inline ::proto::message::ProtoProgressConData* mutable_condata(int index);
  inline ::proto::message::ProtoProgressConData* add_condata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConData >&
      condata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConData >*
      mutable_condata();

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_PlayerProgressConData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConData > condata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_PlayerProgressConData* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_OpenSystem : public ::google::protobuf::Message {
 public:
  Player_CS_OpenSystem();
  virtual ~Player_CS_OpenSystem();

  Player_CS_OpenSystem(const Player_CS_OpenSystem& from);

  inline Player_CS_OpenSystem& operator=(const Player_CS_OpenSystem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_OpenSystem& default_instance();

  void Swap(Player_CS_OpenSystem* other);

  // implements Message ----------------------------------------------

  Player_CS_OpenSystem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_OpenSystem& from);
  void MergeFrom(const Player_CS_OpenSystem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 open_id = 1;
  inline bool has_open_id() const;
  inline void clear_open_id();
  static const int kOpenIdFieldNumber = 1;
  inline ::google::protobuf::uint32 open_id() const;
  inline void set_open_id(::google::protobuf::uint32 value);

  // optional uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_OpenSystem)
 private:
  inline void set_has_open_id();
  inline void clear_has_open_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 open_id_;
  ::google::protobuf::uint32 item_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_OpenSystem* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_UpdateOpenButton : public ::google::protobuf::Message {
 public:
  Player_SC_UpdateOpenButton();
  virtual ~Player_SC_UpdateOpenButton();

  Player_SC_UpdateOpenButton(const Player_SC_UpdateOpenButton& from);

  inline Player_SC_UpdateOpenButton& operator=(const Player_SC_UpdateOpenButton& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_UpdateOpenButton& default_instance();

  void Swap(Player_SC_UpdateOpenButton* other);

  // implements Message ----------------------------------------------

  Player_SC_UpdateOpenButton* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_UpdateOpenButton& from);
  void MergeFrom(const Player_SC_UpdateOpenButton& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.IDNum button_id_list = 1;
  inline int button_id_list_size() const;
  inline void clear_button_id_list();
  static const int kButtonIdListFieldNumber = 1;
  inline const ::proto::message::IDNum& button_id_list(int index) const;
  inline ::proto::message::IDNum* mutable_button_id_list(int index);
  inline ::proto::message::IDNum* add_button_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      button_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_button_id_list();

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_UpdateOpenButton)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > button_id_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_UpdateOpenButton* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_QueryPlayerData : public ::google::protobuf::Message {
 public:
  Player_CS_QueryPlayerData();
  virtual ~Player_CS_QueryPlayerData();

  Player_CS_QueryPlayerData(const Player_CS_QueryPlayerData& from);

  inline Player_CS_QueryPlayerData& operator=(const Player_CS_QueryPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_QueryPlayerData& default_instance();

  void Swap(Player_CS_QueryPlayerData* other);

  // implements Message ----------------------------------------------

  Player_CS_QueryPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_QueryPlayerData& from);
  void MergeFrom(const Player_CS_QueryPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_QueryPlayerData)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_QueryPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_QueryPlayerData : public ::google::protobuf::Message {
 public:
  Player_SC_QueryPlayerData();
  virtual ~Player_SC_QueryPlayerData();

  Player_SC_QueryPlayerData(const Player_SC_QueryPlayerData& from);

  inline Player_SC_QueryPlayerData& operator=(const Player_SC_QueryPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_QueryPlayerData& default_instance();

  void Swap(Player_SC_QueryPlayerData* other);

  // implements Message ----------------------------------------------

  Player_SC_QueryPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_QueryPlayerData& from);
  void MergeFrom(const Player_SC_QueryPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 career = 3;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 3;
  inline ::google::protobuf::int32 career() const;
  inline void set_career(::google::protobuf::int32 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .proto.message.Equip equip_list = 6;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 6;
  inline const ::proto::message::Equip& equip_list(int index) const;
  inline ::proto::message::Equip* mutable_equip_list(int index);
  inline ::proto::message::Equip* add_equip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      equip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_equip_list();

  // optional .proto.message.PlayerEffect player_attr = 7;
  inline bool has_player_attr() const;
  inline void clear_player_attr();
  static const int kPlayerAttrFieldNumber = 7;
  inline const ::proto::message::PlayerEffect& player_attr() const;
  inline ::proto::message::PlayerEffect* mutable_player_attr();
  inline ::proto::message::PlayerEffect* release_player_attr();
  inline void set_allocated_player_attr(::proto::message::PlayerEffect* player_attr);

  // optional int32 titleID = 8;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 8;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // optional int32 isHideTitle = 9;
  inline bool has_ishidetitle() const;
  inline void clear_ishidetitle();
  static const int kIsHideTitleFieldNumber = 9;
  inline ::google::protobuf::int32 ishidetitle() const;
  inline void set_ishidetitle(::google::protobuf::int32 value);

  // optional string titleName = 10;
  inline bool has_titlename() const;
  inline void clear_titlename();
  static const int kTitleNameFieldNumber = 10;
  inline const ::std::string& titlename() const;
  inline void set_titlename(const ::std::string& value);
  inline void set_titlename(const char* value);
  inline void set_titlename(const char* value, size_t size);
  inline ::std::string* mutable_titlename();
  inline ::std::string* release_titlename();
  inline void set_allocated_titlename(::std::string* titlename);

  // optional int32 player_combat = 11;
  inline bool has_player_combat() const;
  inline void clear_player_combat();
  static const int kPlayerCombatFieldNumber = 11;
  inline ::google::protobuf::int32 player_combat() const;
  inline void set_player_combat(::google::protobuf::int32 value);

  // optional string guild_name = 12;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 12;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional string boat_name = 20;
  inline bool has_boat_name() const;
  inline void clear_boat_name();
  static const int kBoatNameFieldNumber = 20;
  inline const ::std::string& boat_name() const;
  inline void set_boat_name(const ::std::string& value);
  inline void set_boat_name(const char* value);
  inline void set_boat_name(const char* value, size_t size);
  inline ::std::string* mutable_boat_name();
  inline ::std::string* release_boat_name();
  inline void set_allocated_boat_name(::std::string* boat_name);

  // optional int32 boat_level = 21;
  inline bool has_boat_level() const;
  inline void clear_boat_level();
  static const int kBoatLevelFieldNumber = 21;
  inline ::google::protobuf::int32 boat_level() const;
  inline void set_boat_level(::google::protobuf::int32 value);

  // optional int32 fa_id = 22;
  inline bool has_fa_id() const;
  inline void clear_fa_id();
  static const int kFaIdFieldNumber = 22;
  inline ::google::protobuf::int32 fa_id() const;
  inline void set_fa_id(::google::protobuf::int32 value);

  // optional int32 stage_id = 23;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 23;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // repeated int32 part_list = 24;
  inline int part_list_size() const;
  inline void clear_part_list();
  static const int kPartListFieldNumber = 24;
  inline ::google::protobuf::int32 part_list(int index) const;
  inline void set_part_list(int index, ::google::protobuf::int32 value);
  inline void add_part_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      part_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_part_list();

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_QueryPlayerData)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_player_attr();
  inline void clear_has_player_attr();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_ishidetitle();
  inline void clear_has_ishidetitle();
  inline void set_has_titlename();
  inline void clear_has_titlename();
  inline void set_has_player_combat();
  inline void clear_has_player_combat();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_boat_name();
  inline void clear_has_boat_name();
  inline void set_has_boat_level();
  inline void clear_has_boat_level();
  inline void set_has_fa_id();
  inline void clear_has_fa_id();
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 career_;
  ::std::string* charname_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > equip_list_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 titleid_;
  ::proto::message::PlayerEffect* player_attr_;
  ::std::string* titlename_;
  ::google::protobuf::int32 ishidetitle_;
  ::google::protobuf::int32 player_combat_;
  ::std::string* guild_name_;
  ::std::string* boat_name_;
  ::google::protobuf::int32 boat_level_;
  ::google::protobuf::int32 fa_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > part_list_;
  ::google::protobuf::int32 stage_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_QueryPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_ChangeCharname : public ::google::protobuf::Message {
 public:
  Player_CS_ChangeCharname();
  virtual ~Player_CS_ChangeCharname();

  Player_CS_ChangeCharname(const Player_CS_ChangeCharname& from);

  inline Player_CS_ChangeCharname& operator=(const Player_CS_ChangeCharname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_ChangeCharname& default_instance();

  void Swap(Player_CS_ChangeCharname* other);

  // implements Message ----------------------------------------------

  Player_CS_ChangeCharname* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_ChangeCharname& from);
  void MergeFrom(const Player_CS_ChangeCharname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string charname = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_ChangeCharname)
 private:
  inline void set_has_charname();
  inline void clear_has_charname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* charname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_ChangeCharname* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_ChangeCharname : public ::google::protobuf::Message {
 public:
  Player_SC_ChangeCharname();
  virtual ~Player_SC_ChangeCharname();

  Player_SC_ChangeCharname(const Player_SC_ChangeCharname& from);

  inline Player_SC_ChangeCharname& operator=(const Player_SC_ChangeCharname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_ChangeCharname& default_instance();

  void Swap(Player_SC_ChangeCharname* other);

  // implements Message ----------------------------------------------

  Player_SC_ChangeCharname* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_ChangeCharname& from);
  void MergeFrom(const Player_SC_ChangeCharname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_ChangeCharname)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_charname();
  inline void clear_has_charname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* charname_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_ChangeCharname* default_instance_;
};
// -------------------------------------------------------------------

class SingleExpRio : public ::google::protobuf::Message {
 public:
  SingleExpRio();
  virtual ~SingleExpRio();

  SingleExpRio(const SingleExpRio& from);

  inline SingleExpRio& operator=(const SingleExpRio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleExpRio& default_instance();

  void Swap(SingleExpRio* other);

  // implements Message ----------------------------------------------

  SingleExpRio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleExpRio& from);
  void MergeFrom(const SingleExpRio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nID = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIDFieldNumber = 1;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);

  // optional int32 rio = 2;
  inline bool has_rio() const;
  inline void clear_rio();
  static const int kRioFieldNumber = 2;
  inline ::google::protobuf::int32 rio() const;
  inline void set_rio(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.SingleExpRio)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_rio();
  inline void clear_has_rio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nid_;
  ::google::protobuf::int32 rio_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SingleExpRio* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_UpdatePlayerExpRio : public ::google::protobuf::Message {
 public:
  Player_SC_UpdatePlayerExpRio();
  virtual ~Player_SC_UpdatePlayerExpRio();

  Player_SC_UpdatePlayerExpRio(const Player_SC_UpdatePlayerExpRio& from);

  inline Player_SC_UpdatePlayerExpRio& operator=(const Player_SC_UpdatePlayerExpRio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_UpdatePlayerExpRio& default_instance();

  void Swap(Player_SC_UpdatePlayerExpRio* other);

  // implements Message ----------------------------------------------

  Player_SC_UpdatePlayerExpRio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_UpdatePlayerExpRio& from);
  void MergeFrom(const Player_SC_UpdatePlayerExpRio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.SingleExpRio all_info = 1;
  inline int all_info_size() const;
  inline void clear_all_info();
  static const int kAllInfoFieldNumber = 1;
  inline const ::proto::message::SingleExpRio& all_info(int index) const;
  inline ::proto::message::SingleExpRio* mutable_all_info(int index);
  inline ::proto::message::SingleExpRio* add_all_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SingleExpRio >&
      all_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SingleExpRio >*
      mutable_all_info();

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_UpdatePlayerExpRio)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::SingleExpRio > all_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_UpdatePlayerExpRio* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_UpdateGuide : public ::google::protobuf::Message {
 public:
  Player_CS_UpdateGuide();
  virtual ~Player_CS_UpdateGuide();

  Player_CS_UpdateGuide(const Player_CS_UpdateGuide& from);

  inline Player_CS_UpdateGuide& operator=(const Player_CS_UpdateGuide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_UpdateGuide& default_instance();

  void Swap(Player_CS_UpdateGuide* other);

  // implements Message ----------------------------------------------

  Player_CS_UpdateGuide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_UpdateGuide& from);
  void MergeFrom(const Player_CS_UpdateGuide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string finishkey = 1;
  inline bool has_finishkey() const;
  inline void clear_finishkey();
  static const int kFinishkeyFieldNumber = 1;
  inline const ::std::string& finishkey() const;
  inline void set_finishkey(const ::std::string& value);
  inline void set_finishkey(const char* value);
  inline void set_finishkey(const char* value, size_t size);
  inline ::std::string* mutable_finishkey();
  inline ::std::string* release_finishkey();
  inline void set_allocated_finishkey(::std::string* finishkey);

  // optional uint32 guidepart = 2;
  inline bool has_guidepart() const;
  inline void clear_guidepart();
  static const int kGuidepartFieldNumber = 2;
  inline ::google::protobuf::uint32 guidepart() const;
  inline void set_guidepart(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_UpdateGuide)
 private:
  inline void set_has_finishkey();
  inline void clear_has_finishkey();
  inline void set_has_guidepart();
  inline void clear_has_guidepart();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* finishkey_;
  ::google::protobuf::uint32 guidepart_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_UpdateGuide* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_UpdateGuide : public ::google::protobuf::Message {
 public:
  Player_SC_UpdateGuide();
  virtual ~Player_SC_UpdateGuide();

  Player_SC_UpdateGuide(const Player_SC_UpdateGuide& from);

  inline Player_SC_UpdateGuide& operator=(const Player_SC_UpdateGuide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_UpdateGuide& default_instance();

  void Swap(Player_SC_UpdateGuide* other);

  // implements Message ----------------------------------------------

  Player_SC_UpdateGuide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_UpdateGuide& from);
  void MergeFrom(const Player_SC_UpdateGuide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_UpdateGuide)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_UpdateGuide* default_instance_;
};
// -------------------------------------------------------------------

class ProtoSingleCon : public ::google::protobuf::Message {
 public:
  ProtoSingleCon();
  virtual ~ProtoSingleCon();

  ProtoSingleCon(const ProtoSingleCon& from);

  inline ProtoSingleCon& operator=(const ProtoSingleCon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoSingleCon& default_instance();

  void Swap(ProtoSingleCon* other);

  // implements Message ----------------------------------------------

  ProtoSingleCon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoSingleCon& from);
  void MergeFrom(const ProtoSingleCon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional int64 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int64 val() const;
  inline void set_val(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoSingleCon)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 val_;
  ::google::protobuf::int32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ProtoSingleCon* default_instance_;
};
// -------------------------------------------------------------------

class ProtoProgressConInfo : public ::google::protobuf::Message {
 public:
  ProtoProgressConInfo();
  virtual ~ProtoProgressConInfo();

  ProtoProgressConInfo(const ProtoProgressConInfo& from);

  inline ProtoProgressConInfo& operator=(const ProtoProgressConInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoProgressConInfo& default_instance();

  void Swap(ProtoProgressConInfo* other);

  // implements Message ----------------------------------------------

  ProtoProgressConInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoProgressConInfo& from);
  void MergeFrom(const ProtoProgressConInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eTpye = 1;
  inline bool has_etpye() const;
  inline void clear_etpye();
  static const int kETpyeFieldNumber = 1;
  inline ::google::protobuf::int32 etpye() const;
  inline void set_etpye(::google::protobuf::int32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // repeated .proto.message.ProtoSingleCon mapParam = 3;
  inline int mapparam_size() const;
  inline void clear_mapparam();
  static const int kMapParamFieldNumber = 3;
  inline const ::proto::message::ProtoSingleCon& mapparam(int index) const;
  inline ::proto::message::ProtoSingleCon* mutable_mapparam(int index);
  inline ::proto::message::ProtoSingleCon* add_mapparam();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleCon >&
      mapparam() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleCon >*
      mutable_mapparam();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoProgressConInfo)
 private:
  inline void set_has_etpye();
  inline void clear_has_etpye();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleCon > mapparam_;
  ::google::protobuf::int32 etpye_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ProtoProgressConInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoAllProgressConInfo : public ::google::protobuf::Message {
 public:
  ProtoAllProgressConInfo();
  virtual ~ProtoAllProgressConInfo();

  ProtoAllProgressConInfo(const ProtoAllProgressConInfo& from);

  inline ProtoAllProgressConInfo& operator=(const ProtoAllProgressConInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAllProgressConInfo& default_instance();

  void Swap(ProtoAllProgressConInfo* other);

  // implements Message ----------------------------------------------

  ProtoAllProgressConInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoAllProgressConInfo& from);
  void MergeFrom(const ProtoAllProgressConInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoProgressConInfo allInfo = 1;
  inline int allinfo_size() const;
  inline void clear_allinfo();
  static const int kAllInfoFieldNumber = 1;
  inline const ::proto::message::ProtoProgressConInfo& allinfo(int index) const;
  inline ::proto::message::ProtoProgressConInfo* mutable_allinfo(int index);
  inline ::proto::message::ProtoProgressConInfo* add_allinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConInfo >&
      allinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConInfo >*
      mutable_allinfo();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoAllProgressConInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConInfo > allinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ProtoAllProgressConInfo* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_OffRewordInfo : public ::google::protobuf::Message {
 public:
  Player_SC_OffRewordInfo();
  virtual ~Player_SC_OffRewordInfo();

  Player_SC_OffRewordInfo(const Player_SC_OffRewordInfo& from);

  inline Player_SC_OffRewordInfo& operator=(const Player_SC_OffRewordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_OffRewordInfo& default_instance();

  void Swap(Player_SC_OffRewordInfo* other);

  // implements Message ----------------------------------------------

  Player_SC_OffRewordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_OffRewordInfo& from);
  void MergeFrom(const Player_SC_OffRewordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 accumulatetime = 1;
  inline bool has_accumulatetime() const;
  inline void clear_accumulatetime();
  static const int kAccumulatetimeFieldNumber = 1;
  inline ::google::protobuf::uint64 accumulatetime() const;
  inline void set_accumulatetime(::google::protobuf::uint64 value);

  // optional uint64 lastouttime = 2;
  inline bool has_lastouttime() const;
  inline void clear_lastouttime();
  static const int kLastouttimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastouttime() const;
  inline void set_lastouttime(::google::protobuf::uint64 value);

  // optional uint64 curexp = 3;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurexpFieldNumber = 3;
  inline ::google::protobuf::uint64 curexp() const;
  inline void set_curexp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_OffRewordInfo)
 private:
  inline void set_has_accumulatetime();
  inline void clear_has_accumulatetime();
  inline void set_has_lastouttime();
  inline void clear_has_lastouttime();
  inline void set_has_curexp();
  inline void clear_has_curexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 accumulatetime_;
  ::google::protobuf::uint64 lastouttime_;
  ::google::protobuf::uint64 curexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_OffRewordInfo* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_GetOffReword : public ::google::protobuf::Message {
 public:
  Player_CS_GetOffReword();
  virtual ~Player_CS_GetOffReword();

  Player_CS_GetOffReword(const Player_CS_GetOffReword& from);

  inline Player_CS_GetOffReword& operator=(const Player_CS_GetOffReword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_GetOffReword& default_instance();

  void Swap(Player_CS_GetOffReword* other);

  // implements Message ----------------------------------------------

  Player_CS_GetOffReword* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_GetOffReword& from);
  void MergeFrom(const Player_CS_GetOffReword& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_GetOffReword)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_GetOffReword* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_GetDreadDungeonInfo : public ::google::protobuf::Message {
 public:
  Player_SC_GetDreadDungeonInfo();
  virtual ~Player_SC_GetDreadDungeonInfo();

  Player_SC_GetDreadDungeonInfo(const Player_SC_GetDreadDungeonInfo& from);

  inline Player_SC_GetDreadDungeonInfo& operator=(const Player_SC_GetDreadDungeonInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_GetDreadDungeonInfo& default_instance();

  void Swap(Player_SC_GetDreadDungeonInfo* other);

  // implements Message ----------------------------------------------

  Player_SC_GetDreadDungeonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_GetDreadDungeonInfo& from);
  void MergeFrom(const Player_SC_GetDreadDungeonInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 draedcounts = 1;
  inline bool has_draedcounts() const;
  inline void clear_draedcounts();
  static const int kDraedcountsFieldNumber = 1;
  inline ::google::protobuf::uint32 draedcounts() const;
  inline void set_draedcounts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_GetDreadDungeonInfo)
 private:
  inline void set_has_draedcounts();
  inline void clear_has_draedcounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 draedcounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_GetDreadDungeonInfo* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_GetAssignPlayerInfo : public ::google::protobuf::Message {
 public:
  Player_CS_GetAssignPlayerInfo();
  virtual ~Player_CS_GetAssignPlayerInfo();

  Player_CS_GetAssignPlayerInfo(const Player_CS_GetAssignPlayerInfo& from);

  inline Player_CS_GetAssignPlayerInfo& operator=(const Player_CS_GetAssignPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_GetAssignPlayerInfo& default_instance();

  void Swap(Player_CS_GetAssignPlayerInfo* other);

  // implements Message ----------------------------------------------

  Player_CS_GetAssignPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_GetAssignPlayerInfo& from);
  void MergeFrom(const Player_CS_GetAssignPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 assignplayerid = 1;
  inline bool has_assignplayerid() const;
  inline void clear_assignplayerid();
  static const int kAssignplayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 assignplayerid() const;
  inline void set_assignplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_GetAssignPlayerInfo)
 private:
  inline void set_has_assignplayerid();
  inline void clear_has_assignplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 assignplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_GetAssignPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_GetAssignPlayerInfo : public ::google::protobuf::Message {
 public:
  Player_SC_GetAssignPlayerInfo();
  virtual ~Player_SC_GetAssignPlayerInfo();

  Player_SC_GetAssignPlayerInfo(const Player_SC_GetAssignPlayerInfo& from);

  inline Player_SC_GetAssignPlayerInfo& operator=(const Player_SC_GetAssignPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_GetAssignPlayerInfo& default_instance();

  void Swap(Player_SC_GetAssignPlayerInfo* other);

  // implements Message ----------------------------------------------

  Player_SC_GetAssignPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_GetAssignPlayerInfo& from);
  void MergeFrom(const Player_SC_GetAssignPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.PlayerShow datainfo = 1;
  inline bool has_datainfo() const;
  inline void clear_datainfo();
  static const int kDatainfoFieldNumber = 1;
  inline const ::proto::message::PlayerShow& datainfo() const;
  inline ::proto::message::PlayerShow* mutable_datainfo();
  inline ::proto::message::PlayerShow* release_datainfo();
  inline void set_allocated_datainfo(::proto::message::PlayerShow* datainfo);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_GetAssignPlayerInfo)
 private:
  inline void set_has_datainfo();
  inline void clear_has_datainfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::PlayerShow* datainfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_GetAssignPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_GetTerritoryBattleInfo : public ::google::protobuf::Message {
 public:
  Player_SC_GetTerritoryBattleInfo();
  virtual ~Player_SC_GetTerritoryBattleInfo();

  Player_SC_GetTerritoryBattleInfo(const Player_SC_GetTerritoryBattleInfo& from);

  inline Player_SC_GetTerritoryBattleInfo& operator=(const Player_SC_GetTerritoryBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_GetTerritoryBattleInfo& default_instance();

  void Swap(Player_SC_GetTerritoryBattleInfo* other);

  // implements Message ----------------------------------------------

  Player_SC_GetTerritoryBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_GetTerritoryBattleInfo& from);
  void MergeFrom(const Player_SC_GetTerritoryBattleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.TBFieldInfo infolist = 1;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfolistFieldNumber = 1;
  inline const ::proto::message::TBFieldInfo& infolist(int index) const;
  inline ::proto::message::TBFieldInfo* mutable_infolist(int index);
  inline ::proto::message::TBFieldInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >*
      mutable_infolist();

  // repeated uint32 rewardid = 2;
  inline int rewardid_size() const;
  inline void clear_rewardid();
  static const int kRewardidFieldNumber = 2;
  inline ::google::protobuf::uint32 rewardid(int index) const;
  inline void set_rewardid(int index, ::google::protobuf::uint32 value);
  inline void add_rewardid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardid();

  // optional uint32 fightcity = 3;
  inline bool has_fightcity() const;
  inline void clear_fightcity();
  static const int kFightcityFieldNumber = 3;
  inline ::google::protobuf::uint32 fightcity() const;
  inline void set_fightcity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_GetTerritoryBattleInfo)
 private:
  inline void set_has_fightcity();
  inline void clear_has_fightcity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo > infolist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardid_;
  ::google::protobuf::uint32 fightcity_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_GetTerritoryBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_GetTerBatReward : public ::google::protobuf::Message {
 public:
  Player_CS_GetTerBatReward();
  virtual ~Player_CS_GetTerBatReward();

  Player_CS_GetTerBatReward(const Player_CS_GetTerBatReward& from);

  inline Player_CS_GetTerBatReward& operator=(const Player_CS_GetTerBatReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_GetTerBatReward& default_instance();

  void Swap(Player_CS_GetTerBatReward* other);

  // implements Message ----------------------------------------------

  Player_CS_GetTerBatReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_GetTerBatReward& from);
  void MergeFrom(const Player_CS_GetTerBatReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fieldid = 1;
  inline bool has_fieldid() const;
  inline void clear_fieldid();
  static const int kFieldidFieldNumber = 1;
  inline ::google::protobuf::uint32 fieldid() const;
  inline void set_fieldid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_GetTerBatReward)
 private:
  inline void set_has_fieldid();
  inline void clear_has_fieldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 fieldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_GetTerBatReward* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_JoinTerritoryBattle : public ::google::protobuf::Message {
 public:
  Player_CS_JoinTerritoryBattle();
  virtual ~Player_CS_JoinTerritoryBattle();

  Player_CS_JoinTerritoryBattle(const Player_CS_JoinTerritoryBattle& from);

  inline Player_CS_JoinTerritoryBattle& operator=(const Player_CS_JoinTerritoryBattle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_JoinTerritoryBattle& default_instance();

  void Swap(Player_CS_JoinTerritoryBattle* other);

  // implements Message ----------------------------------------------

  Player_CS_JoinTerritoryBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_JoinTerritoryBattle& from);
  void MergeFrom(const Player_CS_JoinTerritoryBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fieldid = 1;
  inline bool has_fieldid() const;
  inline void clear_fieldid();
  static const int kFieldidFieldNumber = 1;
  inline ::google::protobuf::uint32 fieldid() const;
  inline void set_fieldid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_JoinTerritoryBattle)
 private:
  inline void set_has_fieldid();
  inline void clear_has_fieldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 fieldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_JoinTerritoryBattle* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_TBCaptureFlag : public ::google::protobuf::Message {
 public:
  Player_CS_TBCaptureFlag();
  virtual ~Player_CS_TBCaptureFlag();

  Player_CS_TBCaptureFlag(const Player_CS_TBCaptureFlag& from);

  inline Player_CS_TBCaptureFlag& operator=(const Player_CS_TBCaptureFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_TBCaptureFlag& default_instance();

  void Swap(Player_CS_TBCaptureFlag* other);

  // implements Message ----------------------------------------------

  Player_CS_TBCaptureFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_TBCaptureFlag& from);
  void MergeFrom(const Player_CS_TBCaptureFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fieldid = 1;
  inline bool has_fieldid() const;
  inline void clear_fieldid();
  static const int kFieldidFieldNumber = 1;
  inline ::google::protobuf::uint32 fieldid() const;
  inline void set_fieldid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_TBCaptureFlag)
 private:
  inline void set_has_fieldid();
  inline void clear_has_fieldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 fieldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_TBCaptureFlag* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_TerritoryBattleResult : public ::google::protobuf::Message {
 public:
  Player_SC_TerritoryBattleResult();
  virtual ~Player_SC_TerritoryBattleResult();

  Player_SC_TerritoryBattleResult(const Player_SC_TerritoryBattleResult& from);

  inline Player_SC_TerritoryBattleResult& operator=(const Player_SC_TerritoryBattleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_TerritoryBattleResult& default_instance();

  void Swap(Player_SC_TerritoryBattleResult* other);

  // implements Message ----------------------------------------------

  Player_SC_TerritoryBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_TerritoryBattleResult& from);
  void MergeFrom(const Player_SC_TerritoryBattleResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 wingid = 2;
  inline bool has_wingid() const;
  inline void clear_wingid();
  static const int kWingidFieldNumber = 2;
  inline ::google::protobuf::uint64 wingid() const;
  inline void set_wingid(::google::protobuf::uint64 value);

  // optional string winname = 3;
  inline bool has_winname() const;
  inline void clear_winname();
  static const int kWinnameFieldNumber = 3;
  inline const ::std::string& winname() const;
  inline void set_winname(const ::std::string& value);
  inline void set_winname(const char* value);
  inline void set_winname(const char* value, size_t size);
  inline ::std::string* mutable_winname();
  inline ::std::string* release_winname();
  inline void set_allocated_winname(::std::string* winname);

  // optional uint64 losegid = 4;
  inline bool has_losegid() const;
  inline void clear_losegid();
  static const int kLosegidFieldNumber = 4;
  inline ::google::protobuf::uint64 losegid() const;
  inline void set_losegid(::google::protobuf::uint64 value);

  // optional uint32 onlinetime = 5;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 5;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_TerritoryBattleResult)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_wingid();
  inline void clear_has_wingid();
  inline void set_has_winname();
  inline void clear_has_winname();
  inline void set_has_losegid();
  inline void clear_has_losegid();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 wingid_;
  ::std::string* winname_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint64 losegid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_TerritoryBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class Player_CS_QueryPlayerSimpleData : public ::google::protobuf::Message {
 public:
  Player_CS_QueryPlayerSimpleData();
  virtual ~Player_CS_QueryPlayerSimpleData();

  Player_CS_QueryPlayerSimpleData(const Player_CS_QueryPlayerSimpleData& from);

  inline Player_CS_QueryPlayerSimpleData& operator=(const Player_CS_QueryPlayerSimpleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_CS_QueryPlayerSimpleData& default_instance();

  void Swap(Player_CS_QueryPlayerSimpleData* other);

  // implements Message ----------------------------------------------

  Player_CS_QueryPlayerSimpleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_CS_QueryPlayerSimpleData& from);
  void MergeFrom(const Player_CS_QueryPlayerSimpleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_CS_QueryPlayerSimpleData)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_CS_QueryPlayerSimpleData* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSimpleData : public ::google::protobuf::Message {
 public:
  PlayerSimpleData();
  virtual ~PlayerSimpleData();

  PlayerSimpleData(const PlayerSimpleData& from);

  inline PlayerSimpleData& operator=(const PlayerSimpleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSimpleData& default_instance();

  void Swap(PlayerSimpleData* other);

  // implements Message ----------------------------------------------

  PlayerSimpleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerSimpleData& from);
  void MergeFrom(const PlayerSimpleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 career = 2;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 2;
  inline ::google::protobuf::int32 career() const;
  inline void set_career(::google::protobuf::int32 value);

  // optional string charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint64 guild_id = 5;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 5;
  inline ::google::protobuf::uint64 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint64 value);

  // optional string guild_name = 6;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 6;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional uint32 dhlevel = 7;
  inline bool has_dhlevel() const;
  inline void clear_dhlevel();
  static const int kDhlevelFieldNumber = 7;
  inline ::google::protobuf::uint32 dhlevel() const;
  inline void set_dhlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.PlayerSimpleData)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_dhlevel();
  inline void clear_has_dhlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::int32 career_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint64 guild_id_;
  ::std::string* guild_name_;
  ::google::protobuf::uint32 dhlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerSimpleData* default_instance_;
};
// -------------------------------------------------------------------

class Player_SC_QueryPlayerSimpleData : public ::google::protobuf::Message {
 public:
  Player_SC_QueryPlayerSimpleData();
  virtual ~Player_SC_QueryPlayerSimpleData();

  Player_SC_QueryPlayerSimpleData(const Player_SC_QueryPlayerSimpleData& from);

  inline Player_SC_QueryPlayerSimpleData& operator=(const Player_SC_QueryPlayerSimpleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_SC_QueryPlayerSimpleData& default_instance();

  void Swap(Player_SC_QueryPlayerSimpleData* other);

  // implements Message ----------------------------------------------

  Player_SC_QueryPlayerSimpleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_SC_QueryPlayerSimpleData& from);
  void MergeFrom(const Player_SC_QueryPlayerSimpleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.PlayerSimpleData simple_data = 2;
  inline bool has_simple_data() const;
  inline void clear_simple_data();
  static const int kSimpleDataFieldNumber = 2;
  inline const ::proto::message::PlayerSimpleData& simple_data() const;
  inline ::proto::message::PlayerSimpleData* mutable_simple_data();
  inline ::proto::message::PlayerSimpleData* release_simple_data();
  inline void set_allocated_simple_data(::proto::message::PlayerSimpleData* simple_data);

  // optional int32 online = 3;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 3;
  inline ::google::protobuf::int32 online() const;
  inline void set_online(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Player_SC_QueryPlayerSimpleData)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_simple_data();
  inline void clear_has_simple_data();
  inline void set_has_online();
  inline void clear_has_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::PlayerSimpleData* simple_data_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 online_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static Player_SC_QueryPlayerSimpleData* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoAttrData

// required int32 type = 1;
inline bool ProtoAttrData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoAttrData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoAttrData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoAttrData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProtoAttrData::type() const {
  return type_;
}
inline void ProtoAttrData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 value = 2;
inline bool ProtoAttrData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoAttrData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoAttrData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoAttrData::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ProtoAttrData::value() const {
  return value_;
}
inline void ProtoAttrData::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 percent = 3;
inline bool ProtoAttrData::has_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoAttrData::set_has_percent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoAttrData::clear_has_percent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoAttrData::clear_percent() {
  percent_ = 0u;
  clear_has_percent();
}
inline ::google::protobuf::uint32 ProtoAttrData::percent() const {
  return percent_;
}
inline void ProtoAttrData::set_percent(::google::protobuf::uint32 value) {
  set_has_percent();
  percent_ = value;
}

// -------------------------------------------------------------------

// Player_SC_PlayerAttrData

// repeated .proto.message.ProtoAttrData attrData = 1;
inline int Player_SC_PlayerAttrData::attrdata_size() const {
  return attrdata_.size();
}
inline void Player_SC_PlayerAttrData::clear_attrdata() {
  attrdata_.Clear();
}
inline const ::proto::message::ProtoAttrData& Player_SC_PlayerAttrData::attrdata(int index) const {
  return attrdata_.Get(index);
}
inline ::proto::message::ProtoAttrData* Player_SC_PlayerAttrData::mutable_attrdata(int index) {
  return attrdata_.Mutable(index);
}
inline ::proto::message::ProtoAttrData* Player_SC_PlayerAttrData::add_attrdata() {
  return attrdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoAttrData >&
Player_SC_PlayerAttrData::attrdata() const {
  return attrdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoAttrData >*
Player_SC_PlayerAttrData::mutable_attrdata() {
  return &attrdata_;
}

// -------------------------------------------------------------------

// Player_SC_PlayerAttrData_Exp

// required uint64 value = 1;
inline bool Player_SC_PlayerAttrData_Exp::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_PlayerAttrData_Exp::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_PlayerAttrData_Exp::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_PlayerAttrData_Exp::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 Player_SC_PlayerAttrData_Exp::value() const {
  return value_;
}
inline void Player_SC_PlayerAttrData_Exp::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// MultiProgressCon

// required int32 param = 1;
inline bool MultiProgressCon::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MultiProgressCon::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MultiProgressCon::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MultiProgressCon::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 MultiProgressCon::param() const {
  return param_;
}
inline void MultiProgressCon::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// optional int64 val = 2;
inline bool MultiProgressCon::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MultiProgressCon::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MultiProgressCon::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MultiProgressCon::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
  clear_has_val();
}
inline ::google::protobuf::int64 MultiProgressCon::val() const {
  return val_;
}
inline void MultiProgressCon::set_val(::google::protobuf::int64 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// ProtoProgressConData

// required int32 type = 1;
inline bool ProtoProgressConData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoProgressConData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoProgressConData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoProgressConData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProtoProgressConData::type() const {
  return type_;
}
inline void ProtoProgressConData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 value = 2;
inline bool ProtoProgressConData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoProgressConData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoProgressConData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoProgressConData::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 ProtoProgressConData::value() const {
  return value_;
}
inline void ProtoProgressConData::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// repeated .proto.message.MultiProgressCon multivalue = 3;
inline int ProtoProgressConData::multivalue_size() const {
  return multivalue_.size();
}
inline void ProtoProgressConData::clear_multivalue() {
  multivalue_.Clear();
}
inline const ::proto::message::MultiProgressCon& ProtoProgressConData::multivalue(int index) const {
  return multivalue_.Get(index);
}
inline ::proto::message::MultiProgressCon* ProtoProgressConData::mutable_multivalue(int index) {
  return multivalue_.Mutable(index);
}
inline ::proto::message::MultiProgressCon* ProtoProgressConData::add_multivalue() {
  return multivalue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MultiProgressCon >&
ProtoProgressConData::multivalue() const {
  return multivalue_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::MultiProgressCon >*
ProtoProgressConData::mutable_multivalue() {
  return &multivalue_;
}

// -------------------------------------------------------------------

// Player_SC_PlayerProgressConData

// repeated .proto.message.ProtoProgressConData condata = 1;
inline int Player_SC_PlayerProgressConData::condata_size() const {
  return condata_.size();
}
inline void Player_SC_PlayerProgressConData::clear_condata() {
  condata_.Clear();
}
inline const ::proto::message::ProtoProgressConData& Player_SC_PlayerProgressConData::condata(int index) const {
  return condata_.Get(index);
}
inline ::proto::message::ProtoProgressConData* Player_SC_PlayerProgressConData::mutable_condata(int index) {
  return condata_.Mutable(index);
}
inline ::proto::message::ProtoProgressConData* Player_SC_PlayerProgressConData::add_condata() {
  return condata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConData >&
Player_SC_PlayerProgressConData::condata() const {
  return condata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConData >*
Player_SC_PlayerProgressConData::mutable_condata() {
  return &condata_;
}

// -------------------------------------------------------------------

// Player_CS_OpenSystem

// required uint32 open_id = 1;
inline bool Player_CS_OpenSystem::has_open_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_OpenSystem::set_has_open_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_OpenSystem::clear_has_open_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_OpenSystem::clear_open_id() {
  open_id_ = 0u;
  clear_has_open_id();
}
inline ::google::protobuf::uint32 Player_CS_OpenSystem::open_id() const {
  return open_id_;
}
inline void Player_CS_OpenSystem::set_open_id(::google::protobuf::uint32 value) {
  set_has_open_id();
  open_id_ = value;
}

// optional uint32 item_id = 2;
inline bool Player_CS_OpenSystem::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_CS_OpenSystem::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_CS_OpenSystem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_CS_OpenSystem::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 Player_CS_OpenSystem::item_id() const {
  return item_id_;
}
inline void Player_CS_OpenSystem::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// Player_SC_UpdateOpenButton

// repeated .proto.message.IDNum button_id_list = 1;
inline int Player_SC_UpdateOpenButton::button_id_list_size() const {
  return button_id_list_.size();
}
inline void Player_SC_UpdateOpenButton::clear_button_id_list() {
  button_id_list_.Clear();
}
inline const ::proto::message::IDNum& Player_SC_UpdateOpenButton::button_id_list(int index) const {
  return button_id_list_.Get(index);
}
inline ::proto::message::IDNum* Player_SC_UpdateOpenButton::mutable_button_id_list(int index) {
  return button_id_list_.Mutable(index);
}
inline ::proto::message::IDNum* Player_SC_UpdateOpenButton::add_button_id_list() {
  return button_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Player_SC_UpdateOpenButton::button_id_list() const {
  return button_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Player_SC_UpdateOpenButton::mutable_button_id_list() {
  return &button_id_list_;
}

// -------------------------------------------------------------------

// Player_CS_QueryPlayerData

// optional uint64 charid = 1;
inline bool Player_CS_QueryPlayerData::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_QueryPlayerData::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_QueryPlayerData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_QueryPlayerData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Player_CS_QueryPlayerData::charid() const {
  return charid_;
}
inline void Player_CS_QueryPlayerData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Player_SC_QueryPlayerData

// optional int32 result = 1;
inline bool Player_SC_QueryPlayerData::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_QueryPlayerData::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_QueryPlayerData::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::result() const {
  return result_;
}
inline void Player_SC_QueryPlayerData::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 charid = 2;
inline bool Player_SC_QueryPlayerData::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_SC_QueryPlayerData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_SC_QueryPlayerData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Player_SC_QueryPlayerData::charid() const {
  return charid_;
}
inline void Player_SC_QueryPlayerData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 career = 3;
inline bool Player_SC_QueryPlayerData::has_career() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_career() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player_SC_QueryPlayerData::clear_has_career() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player_SC_QueryPlayerData::clear_career() {
  career_ = 0;
  clear_has_career();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::career() const {
  return career_;
}
inline void Player_SC_QueryPlayerData::set_career(::google::protobuf::int32 value) {
  set_has_career();
  career_ = value;
}

// optional string charname = 4;
inline bool Player_SC_QueryPlayerData::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Player_SC_QueryPlayerData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Player_SC_QueryPlayerData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& Player_SC_QueryPlayerData::charname() const {
  return *charname_;
}
inline void Player_SC_QueryPlayerData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_SC_QueryPlayerData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* Player_SC_QueryPlayerData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_SC_QueryPlayerData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 5;
inline bool Player_SC_QueryPlayerData::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Player_SC_QueryPlayerData::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Player_SC_QueryPlayerData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::level() const {
  return level_;
}
inline void Player_SC_QueryPlayerData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .proto.message.Equip equip_list = 6;
inline int Player_SC_QueryPlayerData::equip_list_size() const {
  return equip_list_.size();
}
inline void Player_SC_QueryPlayerData::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::message::Equip& Player_SC_QueryPlayerData::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline ::proto::message::Equip* Player_SC_QueryPlayerData::mutable_equip_list(int index) {
  return equip_list_.Mutable(index);
}
inline ::proto::message::Equip* Player_SC_QueryPlayerData::add_equip_list() {
  return equip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Player_SC_QueryPlayerData::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Player_SC_QueryPlayerData::mutable_equip_list() {
  return &equip_list_;
}

// optional .proto.message.PlayerEffect player_attr = 7;
inline bool Player_SC_QueryPlayerData::has_player_attr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_player_attr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Player_SC_QueryPlayerData::clear_has_player_attr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Player_SC_QueryPlayerData::clear_player_attr() {
  if (player_attr_ != NULL) player_attr_->::proto::message::PlayerEffect::Clear();
  clear_has_player_attr();
}
inline const ::proto::message::PlayerEffect& Player_SC_QueryPlayerData::player_attr() const {
  return player_attr_ != NULL ? *player_attr_ : *default_instance_->player_attr_;
}
inline ::proto::message::PlayerEffect* Player_SC_QueryPlayerData::mutable_player_attr() {
  set_has_player_attr();
  if (player_attr_ == NULL) player_attr_ = new ::proto::message::PlayerEffect;
  return player_attr_;
}
inline ::proto::message::PlayerEffect* Player_SC_QueryPlayerData::release_player_attr() {
  clear_has_player_attr();
  ::proto::message::PlayerEffect* temp = player_attr_;
  player_attr_ = NULL;
  return temp;
}
inline void Player_SC_QueryPlayerData::set_allocated_player_attr(::proto::message::PlayerEffect* player_attr) {
  delete player_attr_;
  player_attr_ = player_attr;
  if (player_attr) {
    set_has_player_attr();
  } else {
    clear_has_player_attr();
  }
}

// optional int32 titleID = 8;
inline bool Player_SC_QueryPlayerData::has_titleid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_titleid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Player_SC_QueryPlayerData::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Player_SC_QueryPlayerData::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::titleid() const {
  return titleid_;
}
inline void Player_SC_QueryPlayerData::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional int32 isHideTitle = 9;
inline bool Player_SC_QueryPlayerData::has_ishidetitle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_ishidetitle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Player_SC_QueryPlayerData::clear_has_ishidetitle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Player_SC_QueryPlayerData::clear_ishidetitle() {
  ishidetitle_ = 0;
  clear_has_ishidetitle();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::ishidetitle() const {
  return ishidetitle_;
}
inline void Player_SC_QueryPlayerData::set_ishidetitle(::google::protobuf::int32 value) {
  set_has_ishidetitle();
  ishidetitle_ = value;
}

// optional string titleName = 10;
inline bool Player_SC_QueryPlayerData::has_titlename() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_titlename() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Player_SC_QueryPlayerData::clear_has_titlename() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Player_SC_QueryPlayerData::clear_titlename() {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    titlename_->clear();
  }
  clear_has_titlename();
}
inline const ::std::string& Player_SC_QueryPlayerData::titlename() const {
  return *titlename_;
}
inline void Player_SC_QueryPlayerData::set_titlename(const ::std::string& value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_titlename(const char* value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_titlename(const char* value, size_t size) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_SC_QueryPlayerData::mutable_titlename() {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  return titlename_;
}
inline ::std::string* Player_SC_QueryPlayerData::release_titlename() {
  clear_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = titlename_;
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_SC_QueryPlayerData::set_allocated_titlename(::std::string* titlename) {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    delete titlename_;
  }
  if (titlename) {
    set_has_titlename();
    titlename_ = titlename;
  } else {
    clear_has_titlename();
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 player_combat = 11;
inline bool Player_SC_QueryPlayerData::has_player_combat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_player_combat() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Player_SC_QueryPlayerData::clear_has_player_combat() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Player_SC_QueryPlayerData::clear_player_combat() {
  player_combat_ = 0;
  clear_has_player_combat();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::player_combat() const {
  return player_combat_;
}
inline void Player_SC_QueryPlayerData::set_player_combat(::google::protobuf::int32 value) {
  set_has_player_combat();
  player_combat_ = value;
}

// optional string guild_name = 12;
inline bool Player_SC_QueryPlayerData::has_guild_name() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_guild_name() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Player_SC_QueryPlayerData::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Player_SC_QueryPlayerData::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& Player_SC_QueryPlayerData::guild_name() const {
  return *guild_name_;
}
inline void Player_SC_QueryPlayerData::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_SC_QueryPlayerData::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* Player_SC_QueryPlayerData::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_SC_QueryPlayerData::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string boat_name = 20;
inline bool Player_SC_QueryPlayerData::has_boat_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_boat_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Player_SC_QueryPlayerData::clear_has_boat_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Player_SC_QueryPlayerData::clear_boat_name() {
  if (boat_name_ != &::google::protobuf::internal::kEmptyString) {
    boat_name_->clear();
  }
  clear_has_boat_name();
}
inline const ::std::string& Player_SC_QueryPlayerData::boat_name() const {
  return *boat_name_;
}
inline void Player_SC_QueryPlayerData::set_boat_name(const ::std::string& value) {
  set_has_boat_name();
  if (boat_name_ == &::google::protobuf::internal::kEmptyString) {
    boat_name_ = new ::std::string;
  }
  boat_name_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_boat_name(const char* value) {
  set_has_boat_name();
  if (boat_name_ == &::google::protobuf::internal::kEmptyString) {
    boat_name_ = new ::std::string;
  }
  boat_name_->assign(value);
}
inline void Player_SC_QueryPlayerData::set_boat_name(const char* value, size_t size) {
  set_has_boat_name();
  if (boat_name_ == &::google::protobuf::internal::kEmptyString) {
    boat_name_ = new ::std::string;
  }
  boat_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_SC_QueryPlayerData::mutable_boat_name() {
  set_has_boat_name();
  if (boat_name_ == &::google::protobuf::internal::kEmptyString) {
    boat_name_ = new ::std::string;
  }
  return boat_name_;
}
inline ::std::string* Player_SC_QueryPlayerData::release_boat_name() {
  clear_has_boat_name();
  if (boat_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = boat_name_;
    boat_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_SC_QueryPlayerData::set_allocated_boat_name(::std::string* boat_name) {
  if (boat_name_ != &::google::protobuf::internal::kEmptyString) {
    delete boat_name_;
  }
  if (boat_name) {
    set_has_boat_name();
    boat_name_ = boat_name;
  } else {
    clear_has_boat_name();
    boat_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 boat_level = 21;
inline bool Player_SC_QueryPlayerData::has_boat_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_boat_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Player_SC_QueryPlayerData::clear_has_boat_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Player_SC_QueryPlayerData::clear_boat_level() {
  boat_level_ = 0;
  clear_has_boat_level();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::boat_level() const {
  return boat_level_;
}
inline void Player_SC_QueryPlayerData::set_boat_level(::google::protobuf::int32 value) {
  set_has_boat_level();
  boat_level_ = value;
}

// optional int32 fa_id = 22;
inline bool Player_SC_QueryPlayerData::has_fa_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_fa_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Player_SC_QueryPlayerData::clear_has_fa_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Player_SC_QueryPlayerData::clear_fa_id() {
  fa_id_ = 0;
  clear_has_fa_id();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::fa_id() const {
  return fa_id_;
}
inline void Player_SC_QueryPlayerData::set_fa_id(::google::protobuf::int32 value) {
  set_has_fa_id();
  fa_id_ = value;
}

// optional int32 stage_id = 23;
inline bool Player_SC_QueryPlayerData::has_stage_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Player_SC_QueryPlayerData::set_has_stage_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Player_SC_QueryPlayerData::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Player_SC_QueryPlayerData::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::stage_id() const {
  return stage_id_;
}
inline void Player_SC_QueryPlayerData::set_stage_id(::google::protobuf::int32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// repeated int32 part_list = 24;
inline int Player_SC_QueryPlayerData::part_list_size() const {
  return part_list_.size();
}
inline void Player_SC_QueryPlayerData::clear_part_list() {
  part_list_.Clear();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerData::part_list(int index) const {
  return part_list_.Get(index);
}
inline void Player_SC_QueryPlayerData::set_part_list(int index, ::google::protobuf::int32 value) {
  part_list_.Set(index, value);
}
inline void Player_SC_QueryPlayerData::add_part_list(::google::protobuf::int32 value) {
  part_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player_SC_QueryPlayerData::part_list() const {
  return part_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player_SC_QueryPlayerData::mutable_part_list() {
  return &part_list_;
}

// -------------------------------------------------------------------

// Player_CS_ChangeCharname

// optional string charname = 1;
inline bool Player_CS_ChangeCharname::has_charname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_ChangeCharname::set_has_charname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_ChangeCharname::clear_has_charname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_ChangeCharname::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& Player_CS_ChangeCharname::charname() const {
  return *charname_;
}
inline void Player_CS_ChangeCharname::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void Player_CS_ChangeCharname::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void Player_CS_ChangeCharname::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_CS_ChangeCharname::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* Player_CS_ChangeCharname::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_CS_ChangeCharname::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Player_SC_ChangeCharname

// optional int32 result = 1;
inline bool Player_SC_ChangeCharname::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_ChangeCharname::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_ChangeCharname::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_ChangeCharname::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Player_SC_ChangeCharname::result() const {
  return result_;
}
inline void Player_SC_ChangeCharname::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string charname = 2;
inline bool Player_SC_ChangeCharname::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_SC_ChangeCharname::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_SC_ChangeCharname::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_SC_ChangeCharname::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& Player_SC_ChangeCharname::charname() const {
  return *charname_;
}
inline void Player_SC_ChangeCharname::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void Player_SC_ChangeCharname::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void Player_SC_ChangeCharname::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_SC_ChangeCharname::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* Player_SC_ChangeCharname::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_SC_ChangeCharname::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SingleExpRio

// optional int32 nID = 1;
inline bool SingleExpRio::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleExpRio::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleExpRio::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleExpRio::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 SingleExpRio::nid() const {
  return nid_;
}
inline void SingleExpRio::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
}

// optional int32 rio = 2;
inline bool SingleExpRio::has_rio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleExpRio::set_has_rio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleExpRio::clear_has_rio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleExpRio::clear_rio() {
  rio_ = 0;
  clear_has_rio();
}
inline ::google::protobuf::int32 SingleExpRio::rio() const {
  return rio_;
}
inline void SingleExpRio::set_rio(::google::protobuf::int32 value) {
  set_has_rio();
  rio_ = value;
}

// -------------------------------------------------------------------

// Player_SC_UpdatePlayerExpRio

// repeated .proto.message.SingleExpRio all_info = 1;
inline int Player_SC_UpdatePlayerExpRio::all_info_size() const {
  return all_info_.size();
}
inline void Player_SC_UpdatePlayerExpRio::clear_all_info() {
  all_info_.Clear();
}
inline const ::proto::message::SingleExpRio& Player_SC_UpdatePlayerExpRio::all_info(int index) const {
  return all_info_.Get(index);
}
inline ::proto::message::SingleExpRio* Player_SC_UpdatePlayerExpRio::mutable_all_info(int index) {
  return all_info_.Mutable(index);
}
inline ::proto::message::SingleExpRio* Player_SC_UpdatePlayerExpRio::add_all_info() {
  return all_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SingleExpRio >&
Player_SC_UpdatePlayerExpRio::all_info() const {
  return all_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SingleExpRio >*
Player_SC_UpdatePlayerExpRio::mutable_all_info() {
  return &all_info_;
}

// -------------------------------------------------------------------

// Player_CS_UpdateGuide

// optional string finishkey = 1;
inline bool Player_CS_UpdateGuide::has_finishkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_UpdateGuide::set_has_finishkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_UpdateGuide::clear_has_finishkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_UpdateGuide::clear_finishkey() {
  if (finishkey_ != &::google::protobuf::internal::kEmptyString) {
    finishkey_->clear();
  }
  clear_has_finishkey();
}
inline const ::std::string& Player_CS_UpdateGuide::finishkey() const {
  return *finishkey_;
}
inline void Player_CS_UpdateGuide::set_finishkey(const ::std::string& value) {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  finishkey_->assign(value);
}
inline void Player_CS_UpdateGuide::set_finishkey(const char* value) {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  finishkey_->assign(value);
}
inline void Player_CS_UpdateGuide::set_finishkey(const char* value, size_t size) {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  finishkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_CS_UpdateGuide::mutable_finishkey() {
  set_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    finishkey_ = new ::std::string;
  }
  return finishkey_;
}
inline ::std::string* Player_CS_UpdateGuide::release_finishkey() {
  clear_has_finishkey();
  if (finishkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = finishkey_;
    finishkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_CS_UpdateGuide::set_allocated_finishkey(::std::string* finishkey) {
  if (finishkey_ != &::google::protobuf::internal::kEmptyString) {
    delete finishkey_;
  }
  if (finishkey) {
    set_has_finishkey();
    finishkey_ = finishkey;
  } else {
    clear_has_finishkey();
    finishkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 guidepart = 2;
inline bool Player_CS_UpdateGuide::has_guidepart() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_CS_UpdateGuide::set_has_guidepart() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_CS_UpdateGuide::clear_has_guidepart() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_CS_UpdateGuide::clear_guidepart() {
  guidepart_ = 0u;
  clear_has_guidepart();
}
inline ::google::protobuf::uint32 Player_CS_UpdateGuide::guidepart() const {
  return guidepart_;
}
inline void Player_CS_UpdateGuide::set_guidepart(::google::protobuf::uint32 value) {
  set_has_guidepart();
  guidepart_ = value;
}

// -------------------------------------------------------------------

// Player_SC_UpdateGuide

// optional int32 result = 1;
inline bool Player_SC_UpdateGuide::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_UpdateGuide::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_UpdateGuide::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_UpdateGuide::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Player_SC_UpdateGuide::result() const {
  return result_;
}
inline void Player_SC_UpdateGuide::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProtoSingleCon

// optional int32 param = 1;
inline bool ProtoSingleCon::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoSingleCon::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoSingleCon::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoSingleCon::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 ProtoSingleCon::param() const {
  return param_;
}
inline void ProtoSingleCon::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// optional int64 val = 2;
inline bool ProtoSingleCon::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoSingleCon::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoSingleCon::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoSingleCon::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
  clear_has_val();
}
inline ::google::protobuf::int64 ProtoSingleCon::val() const {
  return val_;
}
inline void ProtoSingleCon::set_val(::google::protobuf::int64 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// ProtoProgressConInfo

// optional int32 eTpye = 1;
inline bool ProtoProgressConInfo::has_etpye() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoProgressConInfo::set_has_etpye() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoProgressConInfo::clear_has_etpye() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoProgressConInfo::clear_etpye() {
  etpye_ = 0;
  clear_has_etpye();
}
inline ::google::protobuf::int32 ProtoProgressConInfo::etpye() const {
  return etpye_;
}
inline void ProtoProgressConInfo::set_etpye(::google::protobuf::int32 value) {
  set_has_etpye();
  etpye_ = value;
}

// optional int64 value = 2;
inline bool ProtoProgressConInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoProgressConInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoProgressConInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoProgressConInfo::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 ProtoProgressConInfo::value() const {
  return value_;
}
inline void ProtoProgressConInfo::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// repeated .proto.message.ProtoSingleCon mapParam = 3;
inline int ProtoProgressConInfo::mapparam_size() const {
  return mapparam_.size();
}
inline void ProtoProgressConInfo::clear_mapparam() {
  mapparam_.Clear();
}
inline const ::proto::message::ProtoSingleCon& ProtoProgressConInfo::mapparam(int index) const {
  return mapparam_.Get(index);
}
inline ::proto::message::ProtoSingleCon* ProtoProgressConInfo::mutable_mapparam(int index) {
  return mapparam_.Mutable(index);
}
inline ::proto::message::ProtoSingleCon* ProtoProgressConInfo::add_mapparam() {
  return mapparam_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleCon >&
ProtoProgressConInfo::mapparam() const {
  return mapparam_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoSingleCon >*
ProtoProgressConInfo::mutable_mapparam() {
  return &mapparam_;
}

// -------------------------------------------------------------------

// ProtoAllProgressConInfo

// repeated .proto.message.ProtoProgressConInfo allInfo = 1;
inline int ProtoAllProgressConInfo::allinfo_size() const {
  return allinfo_.size();
}
inline void ProtoAllProgressConInfo::clear_allinfo() {
  allinfo_.Clear();
}
inline const ::proto::message::ProtoProgressConInfo& ProtoAllProgressConInfo::allinfo(int index) const {
  return allinfo_.Get(index);
}
inline ::proto::message::ProtoProgressConInfo* ProtoAllProgressConInfo::mutable_allinfo(int index) {
  return allinfo_.Mutable(index);
}
inline ::proto::message::ProtoProgressConInfo* ProtoAllProgressConInfo::add_allinfo() {
  return allinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConInfo >&
ProtoAllProgressConInfo::allinfo() const {
  return allinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoProgressConInfo >*
ProtoAllProgressConInfo::mutable_allinfo() {
  return &allinfo_;
}

// -------------------------------------------------------------------

// Player_SC_OffRewordInfo

// optional uint64 accumulatetime = 1;
inline bool Player_SC_OffRewordInfo::has_accumulatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_OffRewordInfo::set_has_accumulatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_OffRewordInfo::clear_has_accumulatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_OffRewordInfo::clear_accumulatetime() {
  accumulatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_accumulatetime();
}
inline ::google::protobuf::uint64 Player_SC_OffRewordInfo::accumulatetime() const {
  return accumulatetime_;
}
inline void Player_SC_OffRewordInfo::set_accumulatetime(::google::protobuf::uint64 value) {
  set_has_accumulatetime();
  accumulatetime_ = value;
}

// optional uint64 lastouttime = 2;
inline bool Player_SC_OffRewordInfo::has_lastouttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_SC_OffRewordInfo::set_has_lastouttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_SC_OffRewordInfo::clear_has_lastouttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_SC_OffRewordInfo::clear_lastouttime() {
  lastouttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastouttime();
}
inline ::google::protobuf::uint64 Player_SC_OffRewordInfo::lastouttime() const {
  return lastouttime_;
}
inline void Player_SC_OffRewordInfo::set_lastouttime(::google::protobuf::uint64 value) {
  set_has_lastouttime();
  lastouttime_ = value;
}

// optional uint64 curexp = 3;
inline bool Player_SC_OffRewordInfo::has_curexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player_SC_OffRewordInfo::set_has_curexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player_SC_OffRewordInfo::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player_SC_OffRewordInfo::clear_curexp() {
  curexp_ = GOOGLE_ULONGLONG(0);
  clear_has_curexp();
}
inline ::google::protobuf::uint64 Player_SC_OffRewordInfo::curexp() const {
  return curexp_;
}
inline void Player_SC_OffRewordInfo::set_curexp(::google::protobuf::uint64 value) {
  set_has_curexp();
  curexp_ = value;
}

// -------------------------------------------------------------------

// Player_CS_GetOffReword

// optional uint32 type = 1;
inline bool Player_CS_GetOffReword::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_GetOffReword::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_GetOffReword::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_GetOffReword::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Player_CS_GetOffReword::type() const {
  return type_;
}
inline void Player_CS_GetOffReword::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Player_SC_GetDreadDungeonInfo

// optional uint32 draedcounts = 1;
inline bool Player_SC_GetDreadDungeonInfo::has_draedcounts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_GetDreadDungeonInfo::set_has_draedcounts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_GetDreadDungeonInfo::clear_has_draedcounts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_GetDreadDungeonInfo::clear_draedcounts() {
  draedcounts_ = 0u;
  clear_has_draedcounts();
}
inline ::google::protobuf::uint32 Player_SC_GetDreadDungeonInfo::draedcounts() const {
  return draedcounts_;
}
inline void Player_SC_GetDreadDungeonInfo::set_draedcounts(::google::protobuf::uint32 value) {
  set_has_draedcounts();
  draedcounts_ = value;
}

// -------------------------------------------------------------------

// Player_CS_GetAssignPlayerInfo

// optional uint64 assignplayerid = 1;
inline bool Player_CS_GetAssignPlayerInfo::has_assignplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_GetAssignPlayerInfo::set_has_assignplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_GetAssignPlayerInfo::clear_has_assignplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_GetAssignPlayerInfo::clear_assignplayerid() {
  assignplayerid_ = GOOGLE_ULONGLONG(0);
  clear_has_assignplayerid();
}
inline ::google::protobuf::uint64 Player_CS_GetAssignPlayerInfo::assignplayerid() const {
  return assignplayerid_;
}
inline void Player_CS_GetAssignPlayerInfo::set_assignplayerid(::google::protobuf::uint64 value) {
  set_has_assignplayerid();
  assignplayerid_ = value;
}

// -------------------------------------------------------------------

// Player_SC_GetAssignPlayerInfo

// optional .proto.message.PlayerShow datainfo = 1;
inline bool Player_SC_GetAssignPlayerInfo::has_datainfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_GetAssignPlayerInfo::set_has_datainfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_GetAssignPlayerInfo::clear_has_datainfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_GetAssignPlayerInfo::clear_datainfo() {
  if (datainfo_ != NULL) datainfo_->::proto::message::PlayerShow::Clear();
  clear_has_datainfo();
}
inline const ::proto::message::PlayerShow& Player_SC_GetAssignPlayerInfo::datainfo() const {
  return datainfo_ != NULL ? *datainfo_ : *default_instance_->datainfo_;
}
inline ::proto::message::PlayerShow* Player_SC_GetAssignPlayerInfo::mutable_datainfo() {
  set_has_datainfo();
  if (datainfo_ == NULL) datainfo_ = new ::proto::message::PlayerShow;
  return datainfo_;
}
inline ::proto::message::PlayerShow* Player_SC_GetAssignPlayerInfo::release_datainfo() {
  clear_has_datainfo();
  ::proto::message::PlayerShow* temp = datainfo_;
  datainfo_ = NULL;
  return temp;
}
inline void Player_SC_GetAssignPlayerInfo::set_allocated_datainfo(::proto::message::PlayerShow* datainfo) {
  delete datainfo_;
  datainfo_ = datainfo;
  if (datainfo) {
    set_has_datainfo();
  } else {
    clear_has_datainfo();
  }
}

// -------------------------------------------------------------------

// Player_SC_GetTerritoryBattleInfo

// repeated .proto.message.TBFieldInfo infolist = 1;
inline int Player_SC_GetTerritoryBattleInfo::infolist_size() const {
  return infolist_.size();
}
inline void Player_SC_GetTerritoryBattleInfo::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::TBFieldInfo& Player_SC_GetTerritoryBattleInfo::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::TBFieldInfo* Player_SC_GetTerritoryBattleInfo::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::TBFieldInfo* Player_SC_GetTerritoryBattleInfo::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >&
Player_SC_GetTerritoryBattleInfo::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TBFieldInfo >*
Player_SC_GetTerritoryBattleInfo::mutable_infolist() {
  return &infolist_;
}

// repeated uint32 rewardid = 2;
inline int Player_SC_GetTerritoryBattleInfo::rewardid_size() const {
  return rewardid_.size();
}
inline void Player_SC_GetTerritoryBattleInfo::clear_rewardid() {
  rewardid_.Clear();
}
inline ::google::protobuf::uint32 Player_SC_GetTerritoryBattleInfo::rewardid(int index) const {
  return rewardid_.Get(index);
}
inline void Player_SC_GetTerritoryBattleInfo::set_rewardid(int index, ::google::protobuf::uint32 value) {
  rewardid_.Set(index, value);
}
inline void Player_SC_GetTerritoryBattleInfo::add_rewardid(::google::protobuf::uint32 value) {
  rewardid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player_SC_GetTerritoryBattleInfo::rewardid() const {
  return rewardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player_SC_GetTerritoryBattleInfo::mutable_rewardid() {
  return &rewardid_;
}

// optional uint32 fightcity = 3;
inline bool Player_SC_GetTerritoryBattleInfo::has_fightcity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player_SC_GetTerritoryBattleInfo::set_has_fightcity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player_SC_GetTerritoryBattleInfo::clear_has_fightcity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player_SC_GetTerritoryBattleInfo::clear_fightcity() {
  fightcity_ = 0u;
  clear_has_fightcity();
}
inline ::google::protobuf::uint32 Player_SC_GetTerritoryBattleInfo::fightcity() const {
  return fightcity_;
}
inline void Player_SC_GetTerritoryBattleInfo::set_fightcity(::google::protobuf::uint32 value) {
  set_has_fightcity();
  fightcity_ = value;
}

// -------------------------------------------------------------------

// Player_CS_GetTerBatReward

// optional uint32 fieldid = 1;
inline bool Player_CS_GetTerBatReward::has_fieldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_GetTerBatReward::set_has_fieldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_GetTerBatReward::clear_has_fieldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_GetTerBatReward::clear_fieldid() {
  fieldid_ = 0u;
  clear_has_fieldid();
}
inline ::google::protobuf::uint32 Player_CS_GetTerBatReward::fieldid() const {
  return fieldid_;
}
inline void Player_CS_GetTerBatReward::set_fieldid(::google::protobuf::uint32 value) {
  set_has_fieldid();
  fieldid_ = value;
}

// -------------------------------------------------------------------

// Player_CS_JoinTerritoryBattle

// optional uint32 fieldid = 1;
inline bool Player_CS_JoinTerritoryBattle::has_fieldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_JoinTerritoryBattle::set_has_fieldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_JoinTerritoryBattle::clear_has_fieldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_JoinTerritoryBattle::clear_fieldid() {
  fieldid_ = 0u;
  clear_has_fieldid();
}
inline ::google::protobuf::uint32 Player_CS_JoinTerritoryBattle::fieldid() const {
  return fieldid_;
}
inline void Player_CS_JoinTerritoryBattle::set_fieldid(::google::protobuf::uint32 value) {
  set_has_fieldid();
  fieldid_ = value;
}

// -------------------------------------------------------------------

// Player_CS_TBCaptureFlag

// optional uint32 fieldid = 1;
inline bool Player_CS_TBCaptureFlag::has_fieldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_TBCaptureFlag::set_has_fieldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_TBCaptureFlag::clear_has_fieldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_TBCaptureFlag::clear_fieldid() {
  fieldid_ = 0u;
  clear_has_fieldid();
}
inline ::google::protobuf::uint32 Player_CS_TBCaptureFlag::fieldid() const {
  return fieldid_;
}
inline void Player_CS_TBCaptureFlag::set_fieldid(::google::protobuf::uint32 value) {
  set_has_fieldid();
  fieldid_ = value;
}

// -------------------------------------------------------------------

// Player_SC_TerritoryBattleResult

// optional uint32 id = 1;
inline bool Player_SC_TerritoryBattleResult::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_TerritoryBattleResult::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_TerritoryBattleResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_TerritoryBattleResult::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Player_SC_TerritoryBattleResult::id() const {
  return id_;
}
inline void Player_SC_TerritoryBattleResult::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 wingid = 2;
inline bool Player_SC_TerritoryBattleResult::has_wingid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_SC_TerritoryBattleResult::set_has_wingid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_SC_TerritoryBattleResult::clear_has_wingid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_SC_TerritoryBattleResult::clear_wingid() {
  wingid_ = GOOGLE_ULONGLONG(0);
  clear_has_wingid();
}
inline ::google::protobuf::uint64 Player_SC_TerritoryBattleResult::wingid() const {
  return wingid_;
}
inline void Player_SC_TerritoryBattleResult::set_wingid(::google::protobuf::uint64 value) {
  set_has_wingid();
  wingid_ = value;
}

// optional string winname = 3;
inline bool Player_SC_TerritoryBattleResult::has_winname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player_SC_TerritoryBattleResult::set_has_winname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player_SC_TerritoryBattleResult::clear_has_winname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player_SC_TerritoryBattleResult::clear_winname() {
  if (winname_ != &::google::protobuf::internal::kEmptyString) {
    winname_->clear();
  }
  clear_has_winname();
}
inline const ::std::string& Player_SC_TerritoryBattleResult::winname() const {
  return *winname_;
}
inline void Player_SC_TerritoryBattleResult::set_winname(const ::std::string& value) {
  set_has_winname();
  if (winname_ == &::google::protobuf::internal::kEmptyString) {
    winname_ = new ::std::string;
  }
  winname_->assign(value);
}
inline void Player_SC_TerritoryBattleResult::set_winname(const char* value) {
  set_has_winname();
  if (winname_ == &::google::protobuf::internal::kEmptyString) {
    winname_ = new ::std::string;
  }
  winname_->assign(value);
}
inline void Player_SC_TerritoryBattleResult::set_winname(const char* value, size_t size) {
  set_has_winname();
  if (winname_ == &::google::protobuf::internal::kEmptyString) {
    winname_ = new ::std::string;
  }
  winname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Player_SC_TerritoryBattleResult::mutable_winname() {
  set_has_winname();
  if (winname_ == &::google::protobuf::internal::kEmptyString) {
    winname_ = new ::std::string;
  }
  return winname_;
}
inline ::std::string* Player_SC_TerritoryBattleResult::release_winname() {
  clear_has_winname();
  if (winname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = winname_;
    winname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Player_SC_TerritoryBattleResult::set_allocated_winname(::std::string* winname) {
  if (winname_ != &::google::protobuf::internal::kEmptyString) {
    delete winname_;
  }
  if (winname) {
    set_has_winname();
    winname_ = winname;
  } else {
    clear_has_winname();
    winname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 losegid = 4;
inline bool Player_SC_TerritoryBattleResult::has_losegid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Player_SC_TerritoryBattleResult::set_has_losegid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Player_SC_TerritoryBattleResult::clear_has_losegid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Player_SC_TerritoryBattleResult::clear_losegid() {
  losegid_ = GOOGLE_ULONGLONG(0);
  clear_has_losegid();
}
inline ::google::protobuf::uint64 Player_SC_TerritoryBattleResult::losegid() const {
  return losegid_;
}
inline void Player_SC_TerritoryBattleResult::set_losegid(::google::protobuf::uint64 value) {
  set_has_losegid();
  losegid_ = value;
}

// optional uint32 onlinetime = 5;
inline bool Player_SC_TerritoryBattleResult::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Player_SC_TerritoryBattleResult::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Player_SC_TerritoryBattleResult::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Player_SC_TerritoryBattleResult::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 Player_SC_TerritoryBattleResult::onlinetime() const {
  return onlinetime_;
}
inline void Player_SC_TerritoryBattleResult::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// -------------------------------------------------------------------

// Player_CS_QueryPlayerSimpleData

// optional uint64 charid = 1;
inline bool Player_CS_QueryPlayerSimpleData::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_CS_QueryPlayerSimpleData::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_CS_QueryPlayerSimpleData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_CS_QueryPlayerSimpleData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Player_CS_QueryPlayerSimpleData::charid() const {
  return charid_;
}
inline void Player_CS_QueryPlayerSimpleData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// PlayerSimpleData

// optional uint64 charid = 1;
inline bool PlayerSimpleData::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSimpleData::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSimpleData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSimpleData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 PlayerSimpleData::charid() const {
  return charid_;
}
inline void PlayerSimpleData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 career = 2;
inline bool PlayerSimpleData::has_career() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSimpleData::set_has_career() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSimpleData::clear_has_career() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSimpleData::clear_career() {
  career_ = 0;
  clear_has_career();
}
inline ::google::protobuf::int32 PlayerSimpleData::career() const {
  return career_;
}
inline void PlayerSimpleData::set_career(::google::protobuf::int32 value) {
  set_has_career();
  career_ = value;
}

// optional string charname = 3;
inline bool PlayerSimpleData::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSimpleData::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerSimpleData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerSimpleData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& PlayerSimpleData::charname() const {
  return *charname_;
}
inline void PlayerSimpleData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PlayerSimpleData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PlayerSimpleData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerSimpleData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* PlayerSimpleData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerSimpleData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 4;
inline bool PlayerSimpleData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerSimpleData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerSimpleData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerSimpleData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerSimpleData::level() const {
  return level_;
}
inline void PlayerSimpleData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 guild_id = 5;
inline bool PlayerSimpleData::has_guild_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerSimpleData::set_has_guild_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerSimpleData::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerSimpleData::clear_guild_id() {
  guild_id_ = GOOGLE_ULONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::uint64 PlayerSimpleData::guild_id() const {
  return guild_id_;
}
inline void PlayerSimpleData::set_guild_id(::google::protobuf::uint64 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional string guild_name = 6;
inline bool PlayerSimpleData::has_guild_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerSimpleData::set_has_guild_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerSimpleData::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerSimpleData::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& PlayerSimpleData::guild_name() const {
  return *guild_name_;
}
inline void PlayerSimpleData::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void PlayerSimpleData::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void PlayerSimpleData::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerSimpleData::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* PlayerSimpleData::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerSimpleData::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 dhlevel = 7;
inline bool PlayerSimpleData::has_dhlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerSimpleData::set_has_dhlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerSimpleData::clear_has_dhlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerSimpleData::clear_dhlevel() {
  dhlevel_ = 0u;
  clear_has_dhlevel();
}
inline ::google::protobuf::uint32 PlayerSimpleData::dhlevel() const {
  return dhlevel_;
}
inline void PlayerSimpleData::set_dhlevel(::google::protobuf::uint32 value) {
  set_has_dhlevel();
  dhlevel_ = value;
}

// -------------------------------------------------------------------

// Player_SC_QueryPlayerSimpleData

// optional int32 result = 1;
inline bool Player_SC_QueryPlayerSimpleData::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_SC_QueryPlayerSimpleData::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_SC_QueryPlayerSimpleData::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_SC_QueryPlayerSimpleData::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerSimpleData::result() const {
  return result_;
}
inline void Player_SC_QueryPlayerSimpleData::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.PlayerSimpleData simple_data = 2;
inline bool Player_SC_QueryPlayerSimpleData::has_simple_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_SC_QueryPlayerSimpleData::set_has_simple_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_SC_QueryPlayerSimpleData::clear_has_simple_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_SC_QueryPlayerSimpleData::clear_simple_data() {
  if (simple_data_ != NULL) simple_data_->::proto::message::PlayerSimpleData::Clear();
  clear_has_simple_data();
}
inline const ::proto::message::PlayerSimpleData& Player_SC_QueryPlayerSimpleData::simple_data() const {
  return simple_data_ != NULL ? *simple_data_ : *default_instance_->simple_data_;
}
inline ::proto::message::PlayerSimpleData* Player_SC_QueryPlayerSimpleData::mutable_simple_data() {
  set_has_simple_data();
  if (simple_data_ == NULL) simple_data_ = new ::proto::message::PlayerSimpleData;
  return simple_data_;
}
inline ::proto::message::PlayerSimpleData* Player_SC_QueryPlayerSimpleData::release_simple_data() {
  clear_has_simple_data();
  ::proto::message::PlayerSimpleData* temp = simple_data_;
  simple_data_ = NULL;
  return temp;
}
inline void Player_SC_QueryPlayerSimpleData::set_allocated_simple_data(::proto::message::PlayerSimpleData* simple_data) {
  delete simple_data_;
  simple_data_ = simple_data;
  if (simple_data) {
    set_has_simple_data();
  } else {
    clear_has_simple_data();
  }
}

// optional int32 online = 3;
inline bool Player_SC_QueryPlayerSimpleData::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player_SC_QueryPlayerSimpleData::set_has_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player_SC_QueryPlayerSimpleData::clear_has_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player_SC_QueryPlayerSimpleData::clear_online() {
  online_ = 0;
  clear_has_online();
}
inline ::google::protobuf::int32 Player_SC_QueryPlayerSimpleData::online() const {
  return online_;
}
inline void Player_SC_QueryPlayerSimpleData::set_online(::google::protobuf::int32 value) {
  set_has_online();
  online_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_player_2eproto__INCLUDED
