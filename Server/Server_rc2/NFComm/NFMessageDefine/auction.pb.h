// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auction.proto

#ifndef PROTOBUF_auction_2eproto__INCLUDED
#define PROTOBUF_auction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "item.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_auction_2eproto();
void protobuf_AssignDesc_auction_2eproto();
void protobuf_ShutdownFile_auction_2eproto();

class AuctionItem;
class Auction_CS_GetAuctionInfo;
class Auction_SC_GetAuctionInfo;
class Auction_CS_AuctionItem;
class Auction_SC_AuctionItem;
class Auction_CS_AuctionItemAgain;
class Auction_SC_AuctionItemAgain;
class Auction_CS_RemoveItem;
class Auction_SC_RemoveItem;
class Auction_CS_SearchItem;
class Auction_SC_SearchItem;
class Auction_CS_BrowseItem;
class Auction_SC_BrowseItem;
class Auction_CS_BuyItem;
class Auction_SC_BuyItem;
class Auction_CS_GetAttentionInfo;
class Auction_SC_GetAttentionInfo;
class Auction_CS_AttentionItem;
class Auction_SC_AttentionItem;
class Auction_CS_CancelAttentionItem;
class Auction_SC_CancelAttentionItem;
class Auction_CS_GetCaseInfo;
class Auction_SC_GetCaseInfo;
class Auction_CS_GetAuctionItemNum;
class Auction_SC_GetAuctionItemNum;
class Auction_CS_GetAuctionItem;
class Auction_SC_GetAuctionItem;
class Auction_SC_OtherBuy;

// ===================================================================

class AuctionItem : public ::google::protobuf::Message {
 public:
  AuctionItem();
  virtual ~AuctionItem();

  AuctionItem(const AuctionItem& from);

  inline AuctionItem& operator=(const AuctionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionItem& default_instance();

  void Swap(AuctionItem* other);

  // implements Message ----------------------------------------------

  AuctionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionItem& from);
  void MergeFrom(const AuctionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 gold = 5;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 5;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 att_persons = 7;
  inline bool has_att_persons() const;
  inline void clear_att_persons();
  static const int kAttPersonsFieldNumber = 7;
  inline ::google::protobuf::int32 att_persons() const;
  inline void set_att_persons(::google::protobuf::int32 value);

  // optional .proto.message.Item item_info = 8;
  inline bool has_item_info() const;
  inline void clear_item_info();
  static const int kItemInfoFieldNumber = 8;
  inline const ::proto::message::Item& item_info() const;
  inline ::proto::message::Item* mutable_item_info();
  inline ::proto::message::Item* release_item_info();
  inline void set_allocated_item_info(::proto::message::Item* item_info);

  // optional .proto.message.Equip equip_info = 9;
  inline bool has_equip_info() const;
  inline void clear_equip_info();
  static const int kEquipInfoFieldNumber = 9;
  inline const ::proto::message::Equip& equip_info() const;
  inline ::proto::message::Equip* mutable_equip_info();
  inline ::proto::message::Equip* release_equip_info();
  inline void set_allocated_equip_info(::proto::message::Equip* equip_info);

  // @@protoc_insertion_point(class_scope:proto.message.AuctionItem)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_att_persons();
  inline void clear_has_att_persons();
  inline void set_has_item_info();
  inline void clear_has_item_info();
  inline void set_has_equip_info();
  inline void clear_has_equip_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 time_;
  ::proto::message::Item* item_info_;
  ::proto::message::Equip* equip_info_;
  ::google::protobuf::int32 att_persons_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static AuctionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_GetAuctionInfo : public ::google::protobuf::Message {
 public:
  Auction_CS_GetAuctionInfo();
  virtual ~Auction_CS_GetAuctionInfo();

  Auction_CS_GetAuctionInfo(const Auction_CS_GetAuctionInfo& from);

  inline Auction_CS_GetAuctionInfo& operator=(const Auction_CS_GetAuctionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_GetAuctionInfo& default_instance();

  void Swap(Auction_CS_GetAuctionInfo* other);

  // implements Message ----------------------------------------------

  Auction_CS_GetAuctionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_GetAuctionInfo& from);
  void MergeFrom(const Auction_CS_GetAuctionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_GetAuctionInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_GetAuctionInfo* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_GetAuctionInfo : public ::google::protobuf::Message {
 public:
  Auction_SC_GetAuctionInfo();
  virtual ~Auction_SC_GetAuctionInfo();

  Auction_SC_GetAuctionInfo(const Auction_SC_GetAuctionInfo& from);

  inline Auction_SC_GetAuctionInfo& operator=(const Auction_SC_GetAuctionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_GetAuctionInfo& default_instance();

  void Swap(Auction_SC_GetAuctionInfo* other);

  // implements Message ----------------------------------------------

  Auction_SC_GetAuctionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_GetAuctionInfo& from);
  void MergeFrom(const Auction_SC_GetAuctionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rate = 1;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 1;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // repeated .proto.message.AuctionItem item_list = 2;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 2;
  inline const ::proto::message::AuctionItem& item_list(int index) const;
  inline ::proto::message::AuctionItem* mutable_item_list(int index);
  inline ::proto::message::AuctionItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_GetAuctionInfo)
 private:
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem > item_list_;
  ::google::protobuf::int32 rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_GetAuctionInfo* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_AuctionItem : public ::google::protobuf::Message {
 public:
  Auction_CS_AuctionItem();
  virtual ~Auction_CS_AuctionItem();

  Auction_CS_AuctionItem(const Auction_CS_AuctionItem& from);

  inline Auction_CS_AuctionItem& operator=(const Auction_CS_AuctionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_AuctionItem& default_instance();

  void Swap(Auction_CS_AuctionItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_AuctionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_AuctionItem& from);
  void MergeFrom(const Auction_CS_AuctionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_AuctionItem)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_AuctionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_AuctionItem : public ::google::protobuf::Message {
 public:
  Auction_SC_AuctionItem();
  virtual ~Auction_SC_AuctionItem();

  Auction_SC_AuctionItem(const Auction_SC_AuctionItem& from);

  inline Auction_SC_AuctionItem& operator=(const Auction_SC_AuctionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_AuctionItem& default_instance();

  void Swap(Auction_SC_AuctionItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_AuctionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_AuctionItem& from);
  void MergeFrom(const Auction_SC_AuctionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.AuctionItem item_info = 2;
  inline bool has_item_info() const;
  inline void clear_item_info();
  static const int kItemInfoFieldNumber = 2;
  inline const ::proto::message::AuctionItem& item_info() const;
  inline ::proto::message::AuctionItem* mutable_item_info();
  inline ::proto::message::AuctionItem* release_item_info();
  inline void set_allocated_item_info(::proto::message::AuctionItem* item_info);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_AuctionItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_item_info();
  inline void clear_has_item_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::AuctionItem* item_info_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_AuctionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_AuctionItemAgain : public ::google::protobuf::Message {
 public:
  Auction_CS_AuctionItemAgain();
  virtual ~Auction_CS_AuctionItemAgain();

  Auction_CS_AuctionItemAgain(const Auction_CS_AuctionItemAgain& from);

  inline Auction_CS_AuctionItemAgain& operator=(const Auction_CS_AuctionItemAgain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_AuctionItemAgain& default_instance();

  void Swap(Auction_CS_AuctionItemAgain* other);

  // implements Message ----------------------------------------------

  Auction_CS_AuctionItemAgain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_AuctionItemAgain& from);
  void MergeFrom(const Auction_CS_AuctionItemAgain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_AuctionItemAgain)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_AuctionItemAgain* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_AuctionItemAgain : public ::google::protobuf::Message {
 public:
  Auction_SC_AuctionItemAgain();
  virtual ~Auction_SC_AuctionItemAgain();

  Auction_SC_AuctionItemAgain(const Auction_SC_AuctionItemAgain& from);

  inline Auction_SC_AuctionItemAgain& operator=(const Auction_SC_AuctionItemAgain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_AuctionItemAgain& default_instance();

  void Swap(Auction_SC_AuctionItemAgain* other);

  // implements Message ----------------------------------------------

  Auction_SC_AuctionItemAgain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_AuctionItemAgain& from);
  void MergeFrom(const Auction_SC_AuctionItemAgain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.AuctionItem item_info = 2;
  inline bool has_item_info() const;
  inline void clear_item_info();
  static const int kItemInfoFieldNumber = 2;
  inline const ::proto::message::AuctionItem& item_info() const;
  inline ::proto::message::AuctionItem* mutable_item_info();
  inline ::proto::message::AuctionItem* release_item_info();
  inline void set_allocated_item_info(::proto::message::AuctionItem* item_info);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_AuctionItemAgain)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_item_info();
  inline void clear_has_item_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::AuctionItem* item_info_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_AuctionItemAgain* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_RemoveItem : public ::google::protobuf::Message {
 public:
  Auction_CS_RemoveItem();
  virtual ~Auction_CS_RemoveItem();

  Auction_CS_RemoveItem(const Auction_CS_RemoveItem& from);

  inline Auction_CS_RemoveItem& operator=(const Auction_CS_RemoveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_RemoveItem& default_instance();

  void Swap(Auction_CS_RemoveItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_RemoveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_RemoveItem& from);
  void MergeFrom(const Auction_CS_RemoveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_RemoveItem)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_RemoveItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_RemoveItem : public ::google::protobuf::Message {
 public:
  Auction_SC_RemoveItem();
  virtual ~Auction_SC_RemoveItem();

  Auction_SC_RemoveItem(const Auction_SC_RemoveItem& from);

  inline Auction_SC_RemoveItem& operator=(const Auction_SC_RemoveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_RemoveItem& default_instance();

  void Swap(Auction_SC_RemoveItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_RemoveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_RemoveItem& from);
  void MergeFrom(const Auction_SC_RemoveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_RemoveItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_RemoveItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_SearchItem : public ::google::protobuf::Message {
 public:
  Auction_CS_SearchItem();
  virtual ~Auction_CS_SearchItem();

  Auction_CS_SearchItem(const Auction_CS_SearchItem& from);

  inline Auction_CS_SearchItem& operator=(const Auction_CS_SearchItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_SearchItem& default_instance();

  void Swap(Auction_CS_SearchItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_SearchItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_SearchItem& from);
  void MergeFrom(const Auction_CS_SearchItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 is_again = 1;
  inline bool has_is_again() const;
  inline void clear_is_again();
  static const int kIsAgainFieldNumber = 1;
  inline ::google::protobuf::int32 is_again() const;
  inline void set_is_again(::google::protobuf::int32 value);

  // optional int32 is_auction = 2;
  inline bool has_is_auction() const;
  inline void clear_is_auction();
  static const int kIsAuctionFieldNumber = 2;
  inline ::google::protobuf::int32 is_auction() const;
  inline void set_is_auction(::google::protobuf::int32 value);

  // optional int32 pro_id = 3;
  inline bool has_pro_id() const;
  inline void clear_pro_id();
  static const int kProIdFieldNumber = 3;
  inline ::google::protobuf::int32 pro_id() const;
  inline void set_pro_id(::google::protobuf::int32 value);

  // repeated int32 item_id_list = 4;
  inline int item_id_list_size() const;
  inline void clear_item_id_list();
  static const int kItemIdListFieldNumber = 4;
  inline ::google::protobuf::int32 item_id_list(int index) const;
  inline void set_item_id_list(int index, ::google::protobuf::int32 value);
  inline void add_item_id_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_id_list();

  // optional int32 combat_min = 5;
  inline bool has_combat_min() const;
  inline void clear_combat_min();
  static const int kCombatMinFieldNumber = 5;
  inline ::google::protobuf::int32 combat_min() const;
  inline void set_combat_min(::google::protobuf::int32 value);

  // optional int32 sort_type = 6;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 6;
  inline ::google::protobuf::int32 sort_type() const;
  inline void set_sort_type(::google::protobuf::int32 value);

  // optional int32 price_min = 7;
  inline bool has_price_min() const;
  inline void clear_price_min();
  static const int kPriceMinFieldNumber = 7;
  inline ::google::protobuf::int32 price_min() const;
  inline void set_price_min(::google::protobuf::int32 value);

  // optional int32 price_max = 8;
  inline bool has_price_max() const;
  inline void clear_price_max();
  static const int kPriceMaxFieldNumber = 8;
  inline ::google::protobuf::int32 price_max() const;
  inline void set_price_max(::google::protobuf::int32 value);

  // optional int32 quality_min = 9;
  inline bool has_quality_min() const;
  inline void clear_quality_min();
  static const int kQualityMinFieldNumber = 9;
  inline ::google::protobuf::int32 quality_min() const;
  inline void set_quality_min(::google::protobuf::int32 value);

  // optional int32 quality_max = 10;
  inline bool has_quality_max() const;
  inline void clear_quality_max();
  static const int kQualityMaxFieldNumber = 10;
  inline ::google::protobuf::int32 quality_max() const;
  inline void set_quality_max(::google::protobuf::int32 value);

  // optional int32 start_index = 11;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 11;
  inline ::google::protobuf::int32 start_index() const;
  inline void set_start_index(::google::protobuf::int32 value);

  // optional int32 end_index = 12;
  inline bool has_end_index() const;
  inline void clear_end_index();
  static const int kEndIndexFieldNumber = 12;
  inline ::google::protobuf::int32 end_index() const;
  inline void set_end_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_SearchItem)
 private:
  inline void set_has_is_again();
  inline void clear_has_is_again();
  inline void set_has_is_auction();
  inline void clear_has_is_auction();
  inline void set_has_pro_id();
  inline void clear_has_pro_id();
  inline void set_has_combat_min();
  inline void clear_has_combat_min();
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  inline void set_has_price_min();
  inline void clear_has_price_min();
  inline void set_has_price_max();
  inline void clear_has_price_max();
  inline void set_has_quality_min();
  inline void clear_has_quality_min();
  inline void set_has_quality_max();
  inline void clear_has_quality_max();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 is_again_;
  ::google::protobuf::int32 is_auction_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_id_list_;
  ::google::protobuf::int32 pro_id_;
  ::google::protobuf::int32 combat_min_;
  ::google::protobuf::int32 sort_type_;
  ::google::protobuf::int32 price_min_;
  ::google::protobuf::int32 price_max_;
  ::google::protobuf::int32 quality_min_;
  ::google::protobuf::int32 quality_max_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::int32 end_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_SearchItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_SearchItem : public ::google::protobuf::Message {
 public:
  Auction_SC_SearchItem();
  virtual ~Auction_SC_SearchItem();

  Auction_SC_SearchItem(const Auction_SC_SearchItem& from);

  inline Auction_SC_SearchItem& operator=(const Auction_SC_SearchItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_SearchItem& default_instance();

  void Swap(Auction_SC_SearchItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_SearchItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_SearchItem& from);
  void MergeFrom(const Auction_SC_SearchItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_num = 1;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 start_index = 2;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  inline ::google::protobuf::int32 start_index() const;
  inline void set_start_index(::google::protobuf::int32 value);

  // optional int32 end_index = 3;
  inline bool has_end_index() const;
  inline void clear_end_index();
  static const int kEndIndexFieldNumber = 3;
  inline ::google::protobuf::int32 end_index() const;
  inline void set_end_index(::google::protobuf::int32 value);

  // repeated .proto.message.AuctionItem item_list = 4;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 4;
  inline const ::proto::message::AuctionItem& item_list(int index) const;
  inline ::proto::message::AuctionItem* mutable_item_list(int index);
  inline ::proto::message::AuctionItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_SearchItem)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem > item_list_;
  ::google::protobuf::int32 end_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_SearchItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_BrowseItem : public ::google::protobuf::Message {
 public:
  Auction_CS_BrowseItem();
  virtual ~Auction_CS_BrowseItem();

  Auction_CS_BrowseItem(const Auction_CS_BrowseItem& from);

  inline Auction_CS_BrowseItem& operator=(const Auction_CS_BrowseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_BrowseItem& default_instance();

  void Swap(Auction_CS_BrowseItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_BrowseItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_BrowseItem& from);
  void MergeFrom(const Auction_CS_BrowseItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 is_again = 1;
  inline bool has_is_again() const;
  inline void clear_is_again();
  static const int kIsAgainFieldNumber = 1;
  inline ::google::protobuf::int32 is_again() const;
  inline void set_is_again(::google::protobuf::int32 value);

  // optional int32 is_auction = 2;
  inline bool has_is_auction() const;
  inline void clear_is_auction();
  static const int kIsAuctionFieldNumber = 2;
  inline ::google::protobuf::int32 is_auction() const;
  inline void set_is_auction(::google::protobuf::int32 value);

  // optional int32 pro_id = 3;
  inline bool has_pro_id() const;
  inline void clear_pro_id();
  static const int kProIdFieldNumber = 3;
  inline ::google::protobuf::int32 pro_id() const;
  inline void set_pro_id(::google::protobuf::int32 value);

  // repeated int32 item_id_list = 4;
  inline int item_id_list_size() const;
  inline void clear_item_id_list();
  static const int kItemIdListFieldNumber = 4;
  inline ::google::protobuf::int32 item_id_list(int index) const;
  inline void set_item_id_list(int index, ::google::protobuf::int32 value);
  inline void add_item_id_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_id_list();

  // optional int32 stren_lv = 5;
  inline bool has_stren_lv() const;
  inline void clear_stren_lv();
  static const int kStrenLvFieldNumber = 5;
  inline ::google::protobuf::int32 stren_lv() const;
  inline void set_stren_lv(::google::protobuf::int32 value);

  // optional int32 sort_type = 6;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 6;
  inline ::google::protobuf::int32 sort_type() const;
  inline void set_sort_type(::google::protobuf::int32 value);

  // optional int32 quality_min = 7;
  inline bool has_quality_min() const;
  inline void clear_quality_min();
  static const int kQualityMinFieldNumber = 7;
  inline ::google::protobuf::int32 quality_min() const;
  inline void set_quality_min(::google::protobuf::int32 value);

  // optional int32 quality_max = 8;
  inline bool has_quality_max() const;
  inline void clear_quality_max();
  static const int kQualityMaxFieldNumber = 8;
  inline ::google::protobuf::int32 quality_max() const;
  inline void set_quality_max(::google::protobuf::int32 value);

  // optional int32 start_index = 9;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 9;
  inline ::google::protobuf::int32 start_index() const;
  inline void set_start_index(::google::protobuf::int32 value);

  // optional int32 end_index = 10;
  inline bool has_end_index() const;
  inline void clear_end_index();
  static const int kEndIndexFieldNumber = 10;
  inline ::google::protobuf::int32 end_index() const;
  inline void set_end_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_BrowseItem)
 private:
  inline void set_has_is_again();
  inline void clear_has_is_again();
  inline void set_has_is_auction();
  inline void clear_has_is_auction();
  inline void set_has_pro_id();
  inline void clear_has_pro_id();
  inline void set_has_stren_lv();
  inline void clear_has_stren_lv();
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  inline void set_has_quality_min();
  inline void clear_has_quality_min();
  inline void set_has_quality_max();
  inline void clear_has_quality_max();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 is_again_;
  ::google::protobuf::int32 is_auction_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_id_list_;
  ::google::protobuf::int32 pro_id_;
  ::google::protobuf::int32 stren_lv_;
  ::google::protobuf::int32 sort_type_;
  ::google::protobuf::int32 quality_min_;
  ::google::protobuf::int32 quality_max_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::int32 end_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_BrowseItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_BrowseItem : public ::google::protobuf::Message {
 public:
  Auction_SC_BrowseItem();
  virtual ~Auction_SC_BrowseItem();

  Auction_SC_BrowseItem(const Auction_SC_BrowseItem& from);

  inline Auction_SC_BrowseItem& operator=(const Auction_SC_BrowseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_BrowseItem& default_instance();

  void Swap(Auction_SC_BrowseItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_BrowseItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_BrowseItem& from);
  void MergeFrom(const Auction_SC_BrowseItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_num = 1;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 start_index = 2;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  inline ::google::protobuf::int32 start_index() const;
  inline void set_start_index(::google::protobuf::int32 value);

  // optional int32 end_index = 3;
  inline bool has_end_index() const;
  inline void clear_end_index();
  static const int kEndIndexFieldNumber = 3;
  inline ::google::protobuf::int32 end_index() const;
  inline void set_end_index(::google::protobuf::int32 value);

  // repeated .proto.message.AuctionItem item_list = 4;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 4;
  inline const ::proto::message::AuctionItem& item_list(int index) const;
  inline ::proto::message::AuctionItem* mutable_item_list(int index);
  inline ::proto::message::AuctionItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_BrowseItem)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem > item_list_;
  ::google::protobuf::int32 end_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_BrowseItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_BuyItem : public ::google::protobuf::Message {
 public:
  Auction_CS_BuyItem();
  virtual ~Auction_CS_BuyItem();

  Auction_CS_BuyItem(const Auction_CS_BuyItem& from);

  inline Auction_CS_BuyItem& operator=(const Auction_CS_BuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_BuyItem& default_instance();

  void Swap(Auction_CS_BuyItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_BuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_BuyItem& from);
  void MergeFrom(const Auction_CS_BuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // optional int32 buy_num = 2;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 2;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_BuyItem)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_BuyItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_BuyItem : public ::google::protobuf::Message {
 public:
  Auction_SC_BuyItem();
  virtual ~Auction_SC_BuyItem();

  Auction_SC_BuyItem(const Auction_SC_BuyItem& from);

  inline Auction_SC_BuyItem& operator=(const Auction_SC_BuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_BuyItem& default_instance();

  void Swap(Auction_SC_BuyItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_BuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_BuyItem& from);
  void MergeFrom(const Auction_SC_BuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // optional int32 buy_num = 3;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 3;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional int32 remain_num = 4;
  inline bool has_remain_num() const;
  inline void clear_remain_num();
  static const int kRemainNumFieldNumber = 4;
  inline ::google::protobuf::int32 remain_num() const;
  inline void set_remain_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_BuyItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_remain_num();
  inline void clear_has_remain_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 buy_num_;
  ::google::protobuf::int32 remain_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_BuyItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_GetAttentionInfo : public ::google::protobuf::Message {
 public:
  Auction_CS_GetAttentionInfo();
  virtual ~Auction_CS_GetAttentionInfo();

  Auction_CS_GetAttentionInfo(const Auction_CS_GetAttentionInfo& from);

  inline Auction_CS_GetAttentionInfo& operator=(const Auction_CS_GetAttentionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_GetAttentionInfo& default_instance();

  void Swap(Auction_CS_GetAttentionInfo* other);

  // implements Message ----------------------------------------------

  Auction_CS_GetAttentionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_GetAttentionInfo& from);
  void MergeFrom(const Auction_CS_GetAttentionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 is_auction = 1;
  inline bool has_is_auction() const;
  inline void clear_is_auction();
  static const int kIsAuctionFieldNumber = 1;
  inline ::google::protobuf::int32 is_auction() const;
  inline void set_is_auction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_GetAttentionInfo)
 private:
  inline void set_has_is_auction();
  inline void clear_has_is_auction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 is_auction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_GetAttentionInfo* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_GetAttentionInfo : public ::google::protobuf::Message {
 public:
  Auction_SC_GetAttentionInfo();
  virtual ~Auction_SC_GetAttentionInfo();

  Auction_SC_GetAttentionInfo(const Auction_SC_GetAttentionInfo& from);

  inline Auction_SC_GetAttentionInfo& operator=(const Auction_SC_GetAttentionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_GetAttentionInfo& default_instance();

  void Swap(Auction_SC_GetAttentionInfo* other);

  // implements Message ----------------------------------------------

  Auction_SC_GetAttentionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_GetAttentionInfo& from);
  void MergeFrom(const Auction_SC_GetAttentionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 is_auction = 1;
  inline bool has_is_auction() const;
  inline void clear_is_auction();
  static const int kIsAuctionFieldNumber = 1;
  inline ::google::protobuf::int32 is_auction() const;
  inline void set_is_auction(::google::protobuf::int32 value);

  // repeated .proto.message.AuctionItem item_list = 2;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 2;
  inline const ::proto::message::AuctionItem& item_list(int index) const;
  inline ::proto::message::AuctionItem* mutable_item_list(int index);
  inline ::proto::message::AuctionItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_GetAttentionInfo)
 private:
  inline void set_has_is_auction();
  inline void clear_has_is_auction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem > item_list_;
  ::google::protobuf::int32 is_auction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_GetAttentionInfo* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_AttentionItem : public ::google::protobuf::Message {
 public:
  Auction_CS_AttentionItem();
  virtual ~Auction_CS_AttentionItem();

  Auction_CS_AttentionItem(const Auction_CS_AttentionItem& from);

  inline Auction_CS_AttentionItem& operator=(const Auction_CS_AttentionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_AttentionItem& default_instance();

  void Swap(Auction_CS_AttentionItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_AttentionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_AttentionItem& from);
  void MergeFrom(const Auction_CS_AttentionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_AttentionItem)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_AttentionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_AttentionItem : public ::google::protobuf::Message {
 public:
  Auction_SC_AttentionItem();
  virtual ~Auction_SC_AttentionItem();

  Auction_SC_AttentionItem(const Auction_SC_AttentionItem& from);

  inline Auction_SC_AttentionItem& operator=(const Auction_SC_AttentionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_AttentionItem& default_instance();

  void Swap(Auction_SC_AttentionItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_AttentionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_AttentionItem& from);
  void MergeFrom(const Auction_SC_AttentionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // optional int32 att_persons = 3;
  inline bool has_att_persons() const;
  inline void clear_att_persons();
  static const int kAttPersonsFieldNumber = 3;
  inline ::google::protobuf::int32 att_persons() const;
  inline void set_att_persons(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_AttentionItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_att_persons();
  inline void clear_has_att_persons();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 att_persons_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_AttentionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_CancelAttentionItem : public ::google::protobuf::Message {
 public:
  Auction_CS_CancelAttentionItem();
  virtual ~Auction_CS_CancelAttentionItem();

  Auction_CS_CancelAttentionItem(const Auction_CS_CancelAttentionItem& from);

  inline Auction_CS_CancelAttentionItem& operator=(const Auction_CS_CancelAttentionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_CancelAttentionItem& default_instance();

  void Swap(Auction_CS_CancelAttentionItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_CancelAttentionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_CancelAttentionItem& from);
  void MergeFrom(const Auction_CS_CancelAttentionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_CancelAttentionItem)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_CancelAttentionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_CancelAttentionItem : public ::google::protobuf::Message {
 public:
  Auction_SC_CancelAttentionItem();
  virtual ~Auction_SC_CancelAttentionItem();

  Auction_SC_CancelAttentionItem(const Auction_SC_CancelAttentionItem& from);

  inline Auction_SC_CancelAttentionItem& operator=(const Auction_SC_CancelAttentionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_CancelAttentionItem& default_instance();

  void Swap(Auction_SC_CancelAttentionItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_CancelAttentionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_CancelAttentionItem& from);
  void MergeFrom(const Auction_SC_CancelAttentionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_CancelAttentionItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_CancelAttentionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_GetCaseInfo : public ::google::protobuf::Message {
 public:
  Auction_CS_GetCaseInfo();
  virtual ~Auction_CS_GetCaseInfo();

  Auction_CS_GetCaseInfo(const Auction_CS_GetCaseInfo& from);

  inline Auction_CS_GetCaseInfo& operator=(const Auction_CS_GetCaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_GetCaseInfo& default_instance();

  void Swap(Auction_CS_GetCaseInfo* other);

  // implements Message ----------------------------------------------

  Auction_CS_GetCaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_GetCaseInfo& from);
  void MergeFrom(const Auction_CS_GetCaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_GetCaseInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_GetCaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_GetCaseInfo : public ::google::protobuf::Message {
 public:
  Auction_SC_GetCaseInfo();
  virtual ~Auction_SC_GetCaseInfo();

  Auction_SC_GetCaseInfo(const Auction_SC_GetCaseInfo& from);

  inline Auction_SC_GetCaseInfo& operator=(const Auction_SC_GetCaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_GetCaseInfo& default_instance();

  void Swap(Auction_SC_GetCaseInfo* other);

  // implements Message ----------------------------------------------

  Auction_SC_GetCaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_GetCaseInfo& from);
  void MergeFrom(const Auction_SC_GetCaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 recommend_price = 1;
  inline bool has_recommend_price() const;
  inline void clear_recommend_price();
  static const int kRecommendPriceFieldNumber = 1;
  inline ::google::protobuf::int32 recommend_price() const;
  inline void set_recommend_price(::google::protobuf::int32 value);

  // repeated .proto.message.AuctionItem item_list = 2;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 2;
  inline const ::proto::message::AuctionItem& item_list(int index) const;
  inline ::proto::message::AuctionItem* mutable_item_list(int index);
  inline ::proto::message::AuctionItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_GetCaseInfo)
 private:
  inline void set_has_recommend_price();
  inline void clear_has_recommend_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem > item_list_;
  ::google::protobuf::int32 recommend_price_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_GetCaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_GetAuctionItemNum : public ::google::protobuf::Message {
 public:
  Auction_CS_GetAuctionItemNum();
  virtual ~Auction_CS_GetAuctionItemNum();

  Auction_CS_GetAuctionItemNum(const Auction_CS_GetAuctionItemNum& from);

  inline Auction_CS_GetAuctionItemNum& operator=(const Auction_CS_GetAuctionItemNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_GetAuctionItemNum& default_instance();

  void Swap(Auction_CS_GetAuctionItemNum* other);

  // implements Message ----------------------------------------------

  Auction_CS_GetAuctionItemNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_GetAuctionItemNum& from);
  void MergeFrom(const Auction_CS_GetAuctionItemNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 is_auction = 1;
  inline bool has_is_auction() const;
  inline void clear_is_auction();
  static const int kIsAuctionFieldNumber = 1;
  inline ::google::protobuf::int32 is_auction() const;
  inline void set_is_auction(::google::protobuf::int32 value);

  // repeated int32 pro_id_list = 2;
  inline int pro_id_list_size() const;
  inline void clear_pro_id_list();
  static const int kProIdListFieldNumber = 2;
  inline ::google::protobuf::int32 pro_id_list(int index) const;
  inline void set_pro_id_list(int index, ::google::protobuf::int32 value);
  inline void add_pro_id_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pro_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pro_id_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_GetAuctionItemNum)
 private:
  inline void set_has_is_auction();
  inline void clear_has_is_auction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pro_id_list_;
  ::google::protobuf::int32 is_auction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_GetAuctionItemNum* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_GetAuctionItemNum : public ::google::protobuf::Message {
 public:
  Auction_SC_GetAuctionItemNum();
  virtual ~Auction_SC_GetAuctionItemNum();

  Auction_SC_GetAuctionItemNum(const Auction_SC_GetAuctionItemNum& from);

  inline Auction_SC_GetAuctionItemNum& operator=(const Auction_SC_GetAuctionItemNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_GetAuctionItemNum& default_instance();

  void Swap(Auction_SC_GetAuctionItemNum* other);

  // implements Message ----------------------------------------------

  Auction_SC_GetAuctionItemNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_GetAuctionItemNum& from);
  void MergeFrom(const Auction_SC_GetAuctionItemNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 is_auction = 1;
  inline bool has_is_auction() const;
  inline void clear_is_auction();
  static const int kIsAuctionFieldNumber = 1;
  inline ::google::protobuf::int32 is_auction() const;
  inline void set_is_auction(::google::protobuf::int32 value);

  // repeated .proto.message.IDNum id_num_list = 2;
  inline int id_num_list_size() const;
  inline void clear_id_num_list();
  static const int kIdNumListFieldNumber = 2;
  inline const ::proto::message::IDNum& id_num_list(int index) const;
  inline ::proto::message::IDNum* mutable_id_num_list(int index);
  inline ::proto::message::IDNum* add_id_num_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
      id_num_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
      mutable_id_num_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_GetAuctionItemNum)
 private:
  inline void set_has_is_auction();
  inline void clear_has_is_auction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum > id_num_list_;
  ::google::protobuf::int32 is_auction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_GetAuctionItemNum* default_instance_;
};
// -------------------------------------------------------------------

class Auction_CS_GetAuctionItem : public ::google::protobuf::Message {
 public:
  Auction_CS_GetAuctionItem();
  virtual ~Auction_CS_GetAuctionItem();

  Auction_CS_GetAuctionItem(const Auction_CS_GetAuctionItem& from);

  inline Auction_CS_GetAuctionItem& operator=(const Auction_CS_GetAuctionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_CS_GetAuctionItem& default_instance();

  void Swap(Auction_CS_GetAuctionItem* other);

  // implements Message ----------------------------------------------

  Auction_CS_GetAuctionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_CS_GetAuctionItem& from);
  void MergeFrom(const Auction_CS_GetAuctionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_uuid = 1;
  inline bool has_item_uuid() const;
  inline void clear_item_uuid();
  static const int kItemUuidFieldNumber = 1;
  inline ::google::protobuf::uint64 item_uuid() const;
  inline void set_item_uuid(::google::protobuf::uint64 value);

  // optional int32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);

  // optional int32 start_index = 3;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 3;
  inline ::google::protobuf::int32 start_index() const;
  inline void set_start_index(::google::protobuf::int32 value);

  // optional int32 end_index = 4;
  inline bool has_end_index() const;
  inline void clear_end_index();
  static const int kEndIndexFieldNumber = 4;
  inline ::google::protobuf::int32 end_index() const;
  inline void set_end_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_CS_GetAuctionItem)
 private:
  inline void set_has_item_uuid();
  inline void clear_has_item_uuid();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_uuid_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::int32 end_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_CS_GetAuctionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_GetAuctionItem : public ::google::protobuf::Message {
 public:
  Auction_SC_GetAuctionItem();
  virtual ~Auction_SC_GetAuctionItem();

  Auction_SC_GetAuctionItem(const Auction_SC_GetAuctionItem& from);

  inline Auction_SC_GetAuctionItem& operator=(const Auction_SC_GetAuctionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_GetAuctionItem& default_instance();

  void Swap(Auction_SC_GetAuctionItem* other);

  // implements Message ----------------------------------------------

  Auction_SC_GetAuctionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_GetAuctionItem& from);
  void MergeFrom(const Auction_SC_GetAuctionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_num = 1;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 start_index = 2;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  inline ::google::protobuf::int32 start_index() const;
  inline void set_start_index(::google::protobuf::int32 value);

  // optional int32 end_index = 3;
  inline bool has_end_index() const;
  inline void clear_end_index();
  static const int kEndIndexFieldNumber = 3;
  inline ::google::protobuf::int32 end_index() const;
  inline void set_end_index(::google::protobuf::int32 value);

  // repeated .proto.message.AuctionItem item_list = 4;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 4;
  inline const ::proto::message::AuctionItem& item_list(int index) const;
  inline ::proto::message::AuctionItem* mutable_item_list(int index);
  inline ::proto::message::AuctionItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_GetAuctionItem)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_end_index();
  inline void clear_has_end_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem > item_list_;
  ::google::protobuf::int32 end_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_GetAuctionItem* default_instance_;
};
// -------------------------------------------------------------------

class Auction_SC_OtherBuy : public ::google::protobuf::Message {
 public:
  Auction_SC_OtherBuy();
  virtual ~Auction_SC_OtherBuy();

  Auction_SC_OtherBuy(const Auction_SC_OtherBuy& from);

  inline Auction_SC_OtherBuy& operator=(const Auction_SC_OtherBuy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auction_SC_OtherBuy& default_instance();

  void Swap(Auction_SC_OtherBuy* other);

  // implements Message ----------------------------------------------

  Auction_SC_OtherBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auction_SC_OtherBuy& from);
  void MergeFrom(const Auction_SC_OtherBuy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.AuctionItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::proto::message::AuctionItem& item() const;
  inline ::proto::message::AuctionItem* mutable_item();
  inline ::proto::message::AuctionItem* release_item();
  inline void set_allocated_item(::proto::message::AuctionItem* item);

  // @@protoc_insertion_point(class_scope:proto.message.Auction_SC_OtherBuy)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::AuctionItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_auction_2eproto();
  friend void protobuf_AssignDesc_auction_2eproto();
  friend void protobuf_ShutdownFile_auction_2eproto();

  void InitAsDefaultInstance();
  static Auction_SC_OtherBuy* default_instance_;
};
// ===================================================================


// ===================================================================

// AuctionItem

// optional uint64 uuid = 1;
inline bool AuctionItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 AuctionItem::uuid() const {
  return uuid_;
}
inline void AuctionItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional int32 id = 2;
inline bool AuctionItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AuctionItem::id() const {
  return id_;
}
inline void AuctionItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 charid = 3;
inline bool AuctionItem::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionItem::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionItem::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AuctionItem::charid() const {
  return charid_;
}
inline void AuctionItem::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 status = 4;
inline bool AuctionItem::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionItem::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AuctionItem::status() const {
  return status_;
}
inline void AuctionItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 gold = 5;
inline bool AuctionItem::has_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionItem::set_has_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionItem::clear_has_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionItem::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 AuctionItem::gold() const {
  return gold_;
}
inline void AuctionItem::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 time = 6;
inline bool AuctionItem::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionItem::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionItem::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 AuctionItem::time() const {
  return time_;
}
inline void AuctionItem::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 att_persons = 7;
inline bool AuctionItem::has_att_persons() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuctionItem::set_has_att_persons() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuctionItem::clear_has_att_persons() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuctionItem::clear_att_persons() {
  att_persons_ = 0;
  clear_has_att_persons();
}
inline ::google::protobuf::int32 AuctionItem::att_persons() const {
  return att_persons_;
}
inline void AuctionItem::set_att_persons(::google::protobuf::int32 value) {
  set_has_att_persons();
  att_persons_ = value;
}

// optional .proto.message.Item item_info = 8;
inline bool AuctionItem::has_item_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuctionItem::set_has_item_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuctionItem::clear_has_item_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuctionItem::clear_item_info() {
  if (item_info_ != NULL) item_info_->::proto::message::Item::Clear();
  clear_has_item_info();
}
inline const ::proto::message::Item& AuctionItem::item_info() const {
  return item_info_ != NULL ? *item_info_ : *default_instance_->item_info_;
}
inline ::proto::message::Item* AuctionItem::mutable_item_info() {
  set_has_item_info();
  if (item_info_ == NULL) item_info_ = new ::proto::message::Item;
  return item_info_;
}
inline ::proto::message::Item* AuctionItem::release_item_info() {
  clear_has_item_info();
  ::proto::message::Item* temp = item_info_;
  item_info_ = NULL;
  return temp;
}
inline void AuctionItem::set_allocated_item_info(::proto::message::Item* item_info) {
  delete item_info_;
  item_info_ = item_info;
  if (item_info) {
    set_has_item_info();
  } else {
    clear_has_item_info();
  }
}

// optional .proto.message.Equip equip_info = 9;
inline bool AuctionItem::has_equip_info() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AuctionItem::set_has_equip_info() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AuctionItem::clear_has_equip_info() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AuctionItem::clear_equip_info() {
  if (equip_info_ != NULL) equip_info_->::proto::message::Equip::Clear();
  clear_has_equip_info();
}
inline const ::proto::message::Equip& AuctionItem::equip_info() const {
  return equip_info_ != NULL ? *equip_info_ : *default_instance_->equip_info_;
}
inline ::proto::message::Equip* AuctionItem::mutable_equip_info() {
  set_has_equip_info();
  if (equip_info_ == NULL) equip_info_ = new ::proto::message::Equip;
  return equip_info_;
}
inline ::proto::message::Equip* AuctionItem::release_equip_info() {
  clear_has_equip_info();
  ::proto::message::Equip* temp = equip_info_;
  equip_info_ = NULL;
  return temp;
}
inline void AuctionItem::set_allocated_equip_info(::proto::message::Equip* equip_info) {
  delete equip_info_;
  equip_info_ = equip_info;
  if (equip_info) {
    set_has_equip_info();
  } else {
    clear_has_equip_info();
  }
}

// -------------------------------------------------------------------

// Auction_CS_GetAuctionInfo

// -------------------------------------------------------------------

// Auction_SC_GetAuctionInfo

// optional int32 rate = 1;
inline bool Auction_SC_GetAuctionInfo::has_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_GetAuctionInfo::set_has_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_GetAuctionInfo::clear_has_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_GetAuctionInfo::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 Auction_SC_GetAuctionInfo::rate() const {
  return rate_;
}
inline void Auction_SC_GetAuctionInfo::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// repeated .proto.message.AuctionItem item_list = 2;
inline int Auction_SC_GetAuctionInfo::item_list_size() const {
  return item_list_.size();
}
inline void Auction_SC_GetAuctionInfo::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::AuctionItem& Auction_SC_GetAuctionInfo::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetAuctionInfo::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetAuctionInfo::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
Auction_SC_GetAuctionInfo::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
Auction_SC_GetAuctionInfo::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Auction_CS_AuctionItem

// optional uint64 uuid = 1;
inline bool Auction_CS_AuctionItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_AuctionItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_AuctionItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_AuctionItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_AuctionItem::uuid() const {
  return uuid_;
}
inline void Auction_CS_AuctionItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional int32 num = 2;
inline bool Auction_CS_AuctionItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_CS_AuctionItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_CS_AuctionItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_CS_AuctionItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Auction_CS_AuctionItem::num() const {
  return num_;
}
inline void Auction_CS_AuctionItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 gold = 3;
inline bool Auction_CS_AuctionItem::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_CS_AuctionItem::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_CS_AuctionItem::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_CS_AuctionItem::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Auction_CS_AuctionItem::gold() const {
  return gold_;
}
inline void Auction_CS_AuctionItem::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_AuctionItem

// optional int32 result = 1;
inline bool Auction_SC_AuctionItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_AuctionItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_AuctionItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_AuctionItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Auction_SC_AuctionItem::result() const {
  return result_;
}
inline void Auction_SC_AuctionItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.AuctionItem item_info = 2;
inline bool Auction_SC_AuctionItem::has_item_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_AuctionItem::set_has_item_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_AuctionItem::clear_has_item_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_AuctionItem::clear_item_info() {
  if (item_info_ != NULL) item_info_->::proto::message::AuctionItem::Clear();
  clear_has_item_info();
}
inline const ::proto::message::AuctionItem& Auction_SC_AuctionItem::item_info() const {
  return item_info_ != NULL ? *item_info_ : *default_instance_->item_info_;
}
inline ::proto::message::AuctionItem* Auction_SC_AuctionItem::mutable_item_info() {
  set_has_item_info();
  if (item_info_ == NULL) item_info_ = new ::proto::message::AuctionItem;
  return item_info_;
}
inline ::proto::message::AuctionItem* Auction_SC_AuctionItem::release_item_info() {
  clear_has_item_info();
  ::proto::message::AuctionItem* temp = item_info_;
  item_info_ = NULL;
  return temp;
}
inline void Auction_SC_AuctionItem::set_allocated_item_info(::proto::message::AuctionItem* item_info) {
  delete item_info_;
  item_info_ = item_info;
  if (item_info) {
    set_has_item_info();
  } else {
    clear_has_item_info();
  }
}

// -------------------------------------------------------------------

// Auction_CS_AuctionItemAgain

// optional uint64 uuid = 1;
inline bool Auction_CS_AuctionItemAgain::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_AuctionItemAgain::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_AuctionItemAgain::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_AuctionItemAgain::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_AuctionItemAgain::uuid() const {
  return uuid_;
}
inline void Auction_CS_AuctionItemAgain::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_AuctionItemAgain

// optional int32 result = 1;
inline bool Auction_SC_AuctionItemAgain::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_AuctionItemAgain::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_AuctionItemAgain::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_AuctionItemAgain::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Auction_SC_AuctionItemAgain::result() const {
  return result_;
}
inline void Auction_SC_AuctionItemAgain::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.AuctionItem item_info = 2;
inline bool Auction_SC_AuctionItemAgain::has_item_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_AuctionItemAgain::set_has_item_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_AuctionItemAgain::clear_has_item_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_AuctionItemAgain::clear_item_info() {
  if (item_info_ != NULL) item_info_->::proto::message::AuctionItem::Clear();
  clear_has_item_info();
}
inline const ::proto::message::AuctionItem& Auction_SC_AuctionItemAgain::item_info() const {
  return item_info_ != NULL ? *item_info_ : *default_instance_->item_info_;
}
inline ::proto::message::AuctionItem* Auction_SC_AuctionItemAgain::mutable_item_info() {
  set_has_item_info();
  if (item_info_ == NULL) item_info_ = new ::proto::message::AuctionItem;
  return item_info_;
}
inline ::proto::message::AuctionItem* Auction_SC_AuctionItemAgain::release_item_info() {
  clear_has_item_info();
  ::proto::message::AuctionItem* temp = item_info_;
  item_info_ = NULL;
  return temp;
}
inline void Auction_SC_AuctionItemAgain::set_allocated_item_info(::proto::message::AuctionItem* item_info) {
  delete item_info_;
  item_info_ = item_info;
  if (item_info) {
    set_has_item_info();
  } else {
    clear_has_item_info();
  }
}

// -------------------------------------------------------------------

// Auction_CS_RemoveItem

// optional uint64 uuid = 1;
inline bool Auction_CS_RemoveItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_RemoveItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_RemoveItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_RemoveItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_RemoveItem::uuid() const {
  return uuid_;
}
inline void Auction_CS_RemoveItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_RemoveItem

// optional int32 result = 1;
inline bool Auction_SC_RemoveItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_RemoveItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_RemoveItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_RemoveItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Auction_SC_RemoveItem::result() const {
  return result_;
}
inline void Auction_SC_RemoveItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 uuid = 2;
inline bool Auction_SC_RemoveItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_RemoveItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_RemoveItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_RemoveItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_SC_RemoveItem::uuid() const {
  return uuid_;
}
inline void Auction_SC_RemoveItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Auction_CS_SearchItem

// optional int32 is_again = 1;
inline bool Auction_CS_SearchItem::has_is_again() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_SearchItem::set_has_is_again() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_SearchItem::clear_has_is_again() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_SearchItem::clear_is_again() {
  is_again_ = 0;
  clear_has_is_again();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::is_again() const {
  return is_again_;
}
inline void Auction_CS_SearchItem::set_is_again(::google::protobuf::int32 value) {
  set_has_is_again();
  is_again_ = value;
}

// optional int32 is_auction = 2;
inline bool Auction_CS_SearchItem::has_is_auction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_CS_SearchItem::set_has_is_auction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_CS_SearchItem::clear_has_is_auction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_CS_SearchItem::clear_is_auction() {
  is_auction_ = 0;
  clear_has_is_auction();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::is_auction() const {
  return is_auction_;
}
inline void Auction_CS_SearchItem::set_is_auction(::google::protobuf::int32 value) {
  set_has_is_auction();
  is_auction_ = value;
}

// optional int32 pro_id = 3;
inline bool Auction_CS_SearchItem::has_pro_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_CS_SearchItem::set_has_pro_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_CS_SearchItem::clear_has_pro_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_CS_SearchItem::clear_pro_id() {
  pro_id_ = 0;
  clear_has_pro_id();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::pro_id() const {
  return pro_id_;
}
inline void Auction_CS_SearchItem::set_pro_id(::google::protobuf::int32 value) {
  set_has_pro_id();
  pro_id_ = value;
}

// repeated int32 item_id_list = 4;
inline int Auction_CS_SearchItem::item_id_list_size() const {
  return item_id_list_.size();
}
inline void Auction_CS_SearchItem::clear_item_id_list() {
  item_id_list_.Clear();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::item_id_list(int index) const {
  return item_id_list_.Get(index);
}
inline void Auction_CS_SearchItem::set_item_id_list(int index, ::google::protobuf::int32 value) {
  item_id_list_.Set(index, value);
}
inline void Auction_CS_SearchItem::add_item_id_list(::google::protobuf::int32 value) {
  item_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Auction_CS_SearchItem::item_id_list() const {
  return item_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Auction_CS_SearchItem::mutable_item_id_list() {
  return &item_id_list_;
}

// optional int32 combat_min = 5;
inline bool Auction_CS_SearchItem::has_combat_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Auction_CS_SearchItem::set_has_combat_min() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Auction_CS_SearchItem::clear_has_combat_min() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Auction_CS_SearchItem::clear_combat_min() {
  combat_min_ = 0;
  clear_has_combat_min();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::combat_min() const {
  return combat_min_;
}
inline void Auction_CS_SearchItem::set_combat_min(::google::protobuf::int32 value) {
  set_has_combat_min();
  combat_min_ = value;
}

// optional int32 sort_type = 6;
inline bool Auction_CS_SearchItem::has_sort_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Auction_CS_SearchItem::set_has_sort_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Auction_CS_SearchItem::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Auction_CS_SearchItem::clear_sort_type() {
  sort_type_ = 0;
  clear_has_sort_type();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::sort_type() const {
  return sort_type_;
}
inline void Auction_CS_SearchItem::set_sort_type(::google::protobuf::int32 value) {
  set_has_sort_type();
  sort_type_ = value;
}

// optional int32 price_min = 7;
inline bool Auction_CS_SearchItem::has_price_min() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Auction_CS_SearchItem::set_has_price_min() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Auction_CS_SearchItem::clear_has_price_min() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Auction_CS_SearchItem::clear_price_min() {
  price_min_ = 0;
  clear_has_price_min();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::price_min() const {
  return price_min_;
}
inline void Auction_CS_SearchItem::set_price_min(::google::protobuf::int32 value) {
  set_has_price_min();
  price_min_ = value;
}

// optional int32 price_max = 8;
inline bool Auction_CS_SearchItem::has_price_max() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Auction_CS_SearchItem::set_has_price_max() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Auction_CS_SearchItem::clear_has_price_max() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Auction_CS_SearchItem::clear_price_max() {
  price_max_ = 0;
  clear_has_price_max();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::price_max() const {
  return price_max_;
}
inline void Auction_CS_SearchItem::set_price_max(::google::protobuf::int32 value) {
  set_has_price_max();
  price_max_ = value;
}

// optional int32 quality_min = 9;
inline bool Auction_CS_SearchItem::has_quality_min() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Auction_CS_SearchItem::set_has_quality_min() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Auction_CS_SearchItem::clear_has_quality_min() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Auction_CS_SearchItem::clear_quality_min() {
  quality_min_ = 0;
  clear_has_quality_min();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::quality_min() const {
  return quality_min_;
}
inline void Auction_CS_SearchItem::set_quality_min(::google::protobuf::int32 value) {
  set_has_quality_min();
  quality_min_ = value;
}

// optional int32 quality_max = 10;
inline bool Auction_CS_SearchItem::has_quality_max() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Auction_CS_SearchItem::set_has_quality_max() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Auction_CS_SearchItem::clear_has_quality_max() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Auction_CS_SearchItem::clear_quality_max() {
  quality_max_ = 0;
  clear_has_quality_max();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::quality_max() const {
  return quality_max_;
}
inline void Auction_CS_SearchItem::set_quality_max(::google::protobuf::int32 value) {
  set_has_quality_max();
  quality_max_ = value;
}

// optional int32 start_index = 11;
inline bool Auction_CS_SearchItem::has_start_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Auction_CS_SearchItem::set_has_start_index() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Auction_CS_SearchItem::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Auction_CS_SearchItem::clear_start_index() {
  start_index_ = 0;
  clear_has_start_index();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::start_index() const {
  return start_index_;
}
inline void Auction_CS_SearchItem::set_start_index(::google::protobuf::int32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional int32 end_index = 12;
inline bool Auction_CS_SearchItem::has_end_index() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Auction_CS_SearchItem::set_has_end_index() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Auction_CS_SearchItem::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Auction_CS_SearchItem::clear_end_index() {
  end_index_ = 0;
  clear_has_end_index();
}
inline ::google::protobuf::int32 Auction_CS_SearchItem::end_index() const {
  return end_index_;
}
inline void Auction_CS_SearchItem::set_end_index(::google::protobuf::int32 value) {
  set_has_end_index();
  end_index_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_SearchItem

// optional int32 total_num = 1;
inline bool Auction_SC_SearchItem::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_SearchItem::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_SearchItem::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_SearchItem::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 Auction_SC_SearchItem::total_num() const {
  return total_num_;
}
inline void Auction_SC_SearchItem::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
}

// optional int32 start_index = 2;
inline bool Auction_SC_SearchItem::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_SearchItem::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_SearchItem::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_SearchItem::clear_start_index() {
  start_index_ = 0;
  clear_has_start_index();
}
inline ::google::protobuf::int32 Auction_SC_SearchItem::start_index() const {
  return start_index_;
}
inline void Auction_SC_SearchItem::set_start_index(::google::protobuf::int32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional int32 end_index = 3;
inline bool Auction_SC_SearchItem::has_end_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_SC_SearchItem::set_has_end_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_SC_SearchItem::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_SC_SearchItem::clear_end_index() {
  end_index_ = 0;
  clear_has_end_index();
}
inline ::google::protobuf::int32 Auction_SC_SearchItem::end_index() const {
  return end_index_;
}
inline void Auction_SC_SearchItem::set_end_index(::google::protobuf::int32 value) {
  set_has_end_index();
  end_index_ = value;
}

// repeated .proto.message.AuctionItem item_list = 4;
inline int Auction_SC_SearchItem::item_list_size() const {
  return item_list_.size();
}
inline void Auction_SC_SearchItem::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::AuctionItem& Auction_SC_SearchItem::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::AuctionItem* Auction_SC_SearchItem::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::AuctionItem* Auction_SC_SearchItem::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
Auction_SC_SearchItem::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
Auction_SC_SearchItem::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Auction_CS_BrowseItem

// optional int32 is_again = 1;
inline bool Auction_CS_BrowseItem::has_is_again() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_is_again() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_BrowseItem::clear_has_is_again() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_BrowseItem::clear_is_again() {
  is_again_ = 0;
  clear_has_is_again();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::is_again() const {
  return is_again_;
}
inline void Auction_CS_BrowseItem::set_is_again(::google::protobuf::int32 value) {
  set_has_is_again();
  is_again_ = value;
}

// optional int32 is_auction = 2;
inline bool Auction_CS_BrowseItem::has_is_auction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_is_auction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_CS_BrowseItem::clear_has_is_auction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_CS_BrowseItem::clear_is_auction() {
  is_auction_ = 0;
  clear_has_is_auction();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::is_auction() const {
  return is_auction_;
}
inline void Auction_CS_BrowseItem::set_is_auction(::google::protobuf::int32 value) {
  set_has_is_auction();
  is_auction_ = value;
}

// optional int32 pro_id = 3;
inline bool Auction_CS_BrowseItem::has_pro_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_pro_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_CS_BrowseItem::clear_has_pro_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_CS_BrowseItem::clear_pro_id() {
  pro_id_ = 0;
  clear_has_pro_id();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::pro_id() const {
  return pro_id_;
}
inline void Auction_CS_BrowseItem::set_pro_id(::google::protobuf::int32 value) {
  set_has_pro_id();
  pro_id_ = value;
}

// repeated int32 item_id_list = 4;
inline int Auction_CS_BrowseItem::item_id_list_size() const {
  return item_id_list_.size();
}
inline void Auction_CS_BrowseItem::clear_item_id_list() {
  item_id_list_.Clear();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::item_id_list(int index) const {
  return item_id_list_.Get(index);
}
inline void Auction_CS_BrowseItem::set_item_id_list(int index, ::google::protobuf::int32 value) {
  item_id_list_.Set(index, value);
}
inline void Auction_CS_BrowseItem::add_item_id_list(::google::protobuf::int32 value) {
  item_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Auction_CS_BrowseItem::item_id_list() const {
  return item_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Auction_CS_BrowseItem::mutable_item_id_list() {
  return &item_id_list_;
}

// optional int32 stren_lv = 5;
inline bool Auction_CS_BrowseItem::has_stren_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_stren_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Auction_CS_BrowseItem::clear_has_stren_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Auction_CS_BrowseItem::clear_stren_lv() {
  stren_lv_ = 0;
  clear_has_stren_lv();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::stren_lv() const {
  return stren_lv_;
}
inline void Auction_CS_BrowseItem::set_stren_lv(::google::protobuf::int32 value) {
  set_has_stren_lv();
  stren_lv_ = value;
}

// optional int32 sort_type = 6;
inline bool Auction_CS_BrowseItem::has_sort_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_sort_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Auction_CS_BrowseItem::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Auction_CS_BrowseItem::clear_sort_type() {
  sort_type_ = 0;
  clear_has_sort_type();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::sort_type() const {
  return sort_type_;
}
inline void Auction_CS_BrowseItem::set_sort_type(::google::protobuf::int32 value) {
  set_has_sort_type();
  sort_type_ = value;
}

// optional int32 quality_min = 7;
inline bool Auction_CS_BrowseItem::has_quality_min() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_quality_min() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Auction_CS_BrowseItem::clear_has_quality_min() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Auction_CS_BrowseItem::clear_quality_min() {
  quality_min_ = 0;
  clear_has_quality_min();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::quality_min() const {
  return quality_min_;
}
inline void Auction_CS_BrowseItem::set_quality_min(::google::protobuf::int32 value) {
  set_has_quality_min();
  quality_min_ = value;
}

// optional int32 quality_max = 8;
inline bool Auction_CS_BrowseItem::has_quality_max() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_quality_max() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Auction_CS_BrowseItem::clear_has_quality_max() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Auction_CS_BrowseItem::clear_quality_max() {
  quality_max_ = 0;
  clear_has_quality_max();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::quality_max() const {
  return quality_max_;
}
inline void Auction_CS_BrowseItem::set_quality_max(::google::protobuf::int32 value) {
  set_has_quality_max();
  quality_max_ = value;
}

// optional int32 start_index = 9;
inline bool Auction_CS_BrowseItem::has_start_index() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_start_index() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Auction_CS_BrowseItem::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Auction_CS_BrowseItem::clear_start_index() {
  start_index_ = 0;
  clear_has_start_index();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::start_index() const {
  return start_index_;
}
inline void Auction_CS_BrowseItem::set_start_index(::google::protobuf::int32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional int32 end_index = 10;
inline bool Auction_CS_BrowseItem::has_end_index() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Auction_CS_BrowseItem::set_has_end_index() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Auction_CS_BrowseItem::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Auction_CS_BrowseItem::clear_end_index() {
  end_index_ = 0;
  clear_has_end_index();
}
inline ::google::protobuf::int32 Auction_CS_BrowseItem::end_index() const {
  return end_index_;
}
inline void Auction_CS_BrowseItem::set_end_index(::google::protobuf::int32 value) {
  set_has_end_index();
  end_index_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_BrowseItem

// optional int32 total_num = 1;
inline bool Auction_SC_BrowseItem::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_BrowseItem::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_BrowseItem::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_BrowseItem::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 Auction_SC_BrowseItem::total_num() const {
  return total_num_;
}
inline void Auction_SC_BrowseItem::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
}

// optional int32 start_index = 2;
inline bool Auction_SC_BrowseItem::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_BrowseItem::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_BrowseItem::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_BrowseItem::clear_start_index() {
  start_index_ = 0;
  clear_has_start_index();
}
inline ::google::protobuf::int32 Auction_SC_BrowseItem::start_index() const {
  return start_index_;
}
inline void Auction_SC_BrowseItem::set_start_index(::google::protobuf::int32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional int32 end_index = 3;
inline bool Auction_SC_BrowseItem::has_end_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_SC_BrowseItem::set_has_end_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_SC_BrowseItem::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_SC_BrowseItem::clear_end_index() {
  end_index_ = 0;
  clear_has_end_index();
}
inline ::google::protobuf::int32 Auction_SC_BrowseItem::end_index() const {
  return end_index_;
}
inline void Auction_SC_BrowseItem::set_end_index(::google::protobuf::int32 value) {
  set_has_end_index();
  end_index_ = value;
}

// repeated .proto.message.AuctionItem item_list = 4;
inline int Auction_SC_BrowseItem::item_list_size() const {
  return item_list_.size();
}
inline void Auction_SC_BrowseItem::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::AuctionItem& Auction_SC_BrowseItem::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::AuctionItem* Auction_SC_BrowseItem::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::AuctionItem* Auction_SC_BrowseItem::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
Auction_SC_BrowseItem::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
Auction_SC_BrowseItem::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Auction_CS_BuyItem

// optional uint64 uuid = 1;
inline bool Auction_CS_BuyItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_BuyItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_BuyItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_BuyItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_BuyItem::uuid() const {
  return uuid_;
}
inline void Auction_CS_BuyItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional int32 buy_num = 2;
inline bool Auction_CS_BuyItem::has_buy_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_CS_BuyItem::set_has_buy_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_CS_BuyItem::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_CS_BuyItem::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 Auction_CS_BuyItem::buy_num() const {
  return buy_num_;
}
inline void Auction_CS_BuyItem::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_BuyItem

// optional int32 result = 1;
inline bool Auction_SC_BuyItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_BuyItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_BuyItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_BuyItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Auction_SC_BuyItem::result() const {
  return result_;
}
inline void Auction_SC_BuyItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 uuid = 2;
inline bool Auction_SC_BuyItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_BuyItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_BuyItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_BuyItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_SC_BuyItem::uuid() const {
  return uuid_;
}
inline void Auction_SC_BuyItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional int32 buy_num = 3;
inline bool Auction_SC_BuyItem::has_buy_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_SC_BuyItem::set_has_buy_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_SC_BuyItem::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_SC_BuyItem::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 Auction_SC_BuyItem::buy_num() const {
  return buy_num_;
}
inline void Auction_SC_BuyItem::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional int32 remain_num = 4;
inline bool Auction_SC_BuyItem::has_remain_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Auction_SC_BuyItem::set_has_remain_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Auction_SC_BuyItem::clear_has_remain_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Auction_SC_BuyItem::clear_remain_num() {
  remain_num_ = 0;
  clear_has_remain_num();
}
inline ::google::protobuf::int32 Auction_SC_BuyItem::remain_num() const {
  return remain_num_;
}
inline void Auction_SC_BuyItem::set_remain_num(::google::protobuf::int32 value) {
  set_has_remain_num();
  remain_num_ = value;
}

// -------------------------------------------------------------------

// Auction_CS_GetAttentionInfo

// optional int32 is_auction = 1;
inline bool Auction_CS_GetAttentionInfo::has_is_auction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_GetAttentionInfo::set_has_is_auction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_GetAttentionInfo::clear_has_is_auction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_GetAttentionInfo::clear_is_auction() {
  is_auction_ = 0;
  clear_has_is_auction();
}
inline ::google::protobuf::int32 Auction_CS_GetAttentionInfo::is_auction() const {
  return is_auction_;
}
inline void Auction_CS_GetAttentionInfo::set_is_auction(::google::protobuf::int32 value) {
  set_has_is_auction();
  is_auction_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_GetAttentionInfo

// optional int32 is_auction = 1;
inline bool Auction_SC_GetAttentionInfo::has_is_auction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_GetAttentionInfo::set_has_is_auction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_GetAttentionInfo::clear_has_is_auction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_GetAttentionInfo::clear_is_auction() {
  is_auction_ = 0;
  clear_has_is_auction();
}
inline ::google::protobuf::int32 Auction_SC_GetAttentionInfo::is_auction() const {
  return is_auction_;
}
inline void Auction_SC_GetAttentionInfo::set_is_auction(::google::protobuf::int32 value) {
  set_has_is_auction();
  is_auction_ = value;
}

// repeated .proto.message.AuctionItem item_list = 2;
inline int Auction_SC_GetAttentionInfo::item_list_size() const {
  return item_list_.size();
}
inline void Auction_SC_GetAttentionInfo::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::AuctionItem& Auction_SC_GetAttentionInfo::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetAttentionInfo::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetAttentionInfo::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
Auction_SC_GetAttentionInfo::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
Auction_SC_GetAttentionInfo::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Auction_CS_AttentionItem

// optional uint64 uuid = 1;
inline bool Auction_CS_AttentionItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_AttentionItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_AttentionItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_AttentionItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_AttentionItem::uuid() const {
  return uuid_;
}
inline void Auction_CS_AttentionItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_AttentionItem

// optional int32 result = 1;
inline bool Auction_SC_AttentionItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_AttentionItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_AttentionItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_AttentionItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Auction_SC_AttentionItem::result() const {
  return result_;
}
inline void Auction_SC_AttentionItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 uuid = 2;
inline bool Auction_SC_AttentionItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_AttentionItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_AttentionItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_AttentionItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_SC_AttentionItem::uuid() const {
  return uuid_;
}
inline void Auction_SC_AttentionItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional int32 att_persons = 3;
inline bool Auction_SC_AttentionItem::has_att_persons() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_SC_AttentionItem::set_has_att_persons() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_SC_AttentionItem::clear_has_att_persons() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_SC_AttentionItem::clear_att_persons() {
  att_persons_ = 0;
  clear_has_att_persons();
}
inline ::google::protobuf::int32 Auction_SC_AttentionItem::att_persons() const {
  return att_persons_;
}
inline void Auction_SC_AttentionItem::set_att_persons(::google::protobuf::int32 value) {
  set_has_att_persons();
  att_persons_ = value;
}

// -------------------------------------------------------------------

// Auction_CS_CancelAttentionItem

// optional uint64 uuid = 1;
inline bool Auction_CS_CancelAttentionItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_CancelAttentionItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_CancelAttentionItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_CancelAttentionItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_CancelAttentionItem::uuid() const {
  return uuid_;
}
inline void Auction_CS_CancelAttentionItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_CancelAttentionItem

// optional int32 result = 1;
inline bool Auction_SC_CancelAttentionItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_CancelAttentionItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_CancelAttentionItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_CancelAttentionItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Auction_SC_CancelAttentionItem::result() const {
  return result_;
}
inline void Auction_SC_CancelAttentionItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 uuid = 2;
inline bool Auction_SC_CancelAttentionItem::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_CancelAttentionItem::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_CancelAttentionItem::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_CancelAttentionItem::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Auction_SC_CancelAttentionItem::uuid() const {
  return uuid_;
}
inline void Auction_SC_CancelAttentionItem::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Auction_CS_GetCaseInfo

// optional int32 id = 1;
inline bool Auction_CS_GetCaseInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_GetCaseInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_GetCaseInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_GetCaseInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Auction_CS_GetCaseInfo::id() const {
  return id_;
}
inline void Auction_CS_GetCaseInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_GetCaseInfo

// optional int32 recommend_price = 1;
inline bool Auction_SC_GetCaseInfo::has_recommend_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_GetCaseInfo::set_has_recommend_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_GetCaseInfo::clear_has_recommend_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_GetCaseInfo::clear_recommend_price() {
  recommend_price_ = 0;
  clear_has_recommend_price();
}
inline ::google::protobuf::int32 Auction_SC_GetCaseInfo::recommend_price() const {
  return recommend_price_;
}
inline void Auction_SC_GetCaseInfo::set_recommend_price(::google::protobuf::int32 value) {
  set_has_recommend_price();
  recommend_price_ = value;
}

// repeated .proto.message.AuctionItem item_list = 2;
inline int Auction_SC_GetCaseInfo::item_list_size() const {
  return item_list_.size();
}
inline void Auction_SC_GetCaseInfo::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::AuctionItem& Auction_SC_GetCaseInfo::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetCaseInfo::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetCaseInfo::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
Auction_SC_GetCaseInfo::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
Auction_SC_GetCaseInfo::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Auction_CS_GetAuctionItemNum

// optional int32 is_auction = 1;
inline bool Auction_CS_GetAuctionItemNum::has_is_auction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_GetAuctionItemNum::set_has_is_auction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_GetAuctionItemNum::clear_has_is_auction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_GetAuctionItemNum::clear_is_auction() {
  is_auction_ = 0;
  clear_has_is_auction();
}
inline ::google::protobuf::int32 Auction_CS_GetAuctionItemNum::is_auction() const {
  return is_auction_;
}
inline void Auction_CS_GetAuctionItemNum::set_is_auction(::google::protobuf::int32 value) {
  set_has_is_auction();
  is_auction_ = value;
}

// repeated int32 pro_id_list = 2;
inline int Auction_CS_GetAuctionItemNum::pro_id_list_size() const {
  return pro_id_list_.size();
}
inline void Auction_CS_GetAuctionItemNum::clear_pro_id_list() {
  pro_id_list_.Clear();
}
inline ::google::protobuf::int32 Auction_CS_GetAuctionItemNum::pro_id_list(int index) const {
  return pro_id_list_.Get(index);
}
inline void Auction_CS_GetAuctionItemNum::set_pro_id_list(int index, ::google::protobuf::int32 value) {
  pro_id_list_.Set(index, value);
}
inline void Auction_CS_GetAuctionItemNum::add_pro_id_list(::google::protobuf::int32 value) {
  pro_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Auction_CS_GetAuctionItemNum::pro_id_list() const {
  return pro_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Auction_CS_GetAuctionItemNum::mutable_pro_id_list() {
  return &pro_id_list_;
}

// -------------------------------------------------------------------

// Auction_SC_GetAuctionItemNum

// optional int32 is_auction = 1;
inline bool Auction_SC_GetAuctionItemNum::has_is_auction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_GetAuctionItemNum::set_has_is_auction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_GetAuctionItemNum::clear_has_is_auction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_GetAuctionItemNum::clear_is_auction() {
  is_auction_ = 0;
  clear_has_is_auction();
}
inline ::google::protobuf::int32 Auction_SC_GetAuctionItemNum::is_auction() const {
  return is_auction_;
}
inline void Auction_SC_GetAuctionItemNum::set_is_auction(::google::protobuf::int32 value) {
  set_has_is_auction();
  is_auction_ = value;
}

// repeated .proto.message.IDNum id_num_list = 2;
inline int Auction_SC_GetAuctionItemNum::id_num_list_size() const {
  return id_num_list_.size();
}
inline void Auction_SC_GetAuctionItemNum::clear_id_num_list() {
  id_num_list_.Clear();
}
inline const ::proto::message::IDNum& Auction_SC_GetAuctionItemNum::id_num_list(int index) const {
  return id_num_list_.Get(index);
}
inline ::proto::message::IDNum* Auction_SC_GetAuctionItemNum::mutable_id_num_list(int index) {
  return id_num_list_.Mutable(index);
}
inline ::proto::message::IDNum* Auction_SC_GetAuctionItemNum::add_id_num_list() {
  return id_num_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >&
Auction_SC_GetAuctionItemNum::id_num_list() const {
  return id_num_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::IDNum >*
Auction_SC_GetAuctionItemNum::mutable_id_num_list() {
  return &id_num_list_;
}

// -------------------------------------------------------------------

// Auction_CS_GetAuctionItem

// optional uint64 item_uuid = 1;
inline bool Auction_CS_GetAuctionItem::has_item_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_CS_GetAuctionItem::set_has_item_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_CS_GetAuctionItem::clear_has_item_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_CS_GetAuctionItem::clear_item_uuid() {
  item_uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_uuid();
}
inline ::google::protobuf::uint64 Auction_CS_GetAuctionItem::item_uuid() const {
  return item_uuid_;
}
inline void Auction_CS_GetAuctionItem::set_item_uuid(::google::protobuf::uint64 value) {
  set_has_item_uuid();
  item_uuid_ = value;
}

// optional int32 item_id = 2;
inline bool Auction_CS_GetAuctionItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_CS_GetAuctionItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_CS_GetAuctionItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_CS_GetAuctionItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 Auction_CS_GetAuctionItem::item_id() const {
  return item_id_;
}
inline void Auction_CS_GetAuctionItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int32 start_index = 3;
inline bool Auction_CS_GetAuctionItem::has_start_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_CS_GetAuctionItem::set_has_start_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_CS_GetAuctionItem::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_CS_GetAuctionItem::clear_start_index() {
  start_index_ = 0;
  clear_has_start_index();
}
inline ::google::protobuf::int32 Auction_CS_GetAuctionItem::start_index() const {
  return start_index_;
}
inline void Auction_CS_GetAuctionItem::set_start_index(::google::protobuf::int32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional int32 end_index = 4;
inline bool Auction_CS_GetAuctionItem::has_end_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Auction_CS_GetAuctionItem::set_has_end_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Auction_CS_GetAuctionItem::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Auction_CS_GetAuctionItem::clear_end_index() {
  end_index_ = 0;
  clear_has_end_index();
}
inline ::google::protobuf::int32 Auction_CS_GetAuctionItem::end_index() const {
  return end_index_;
}
inline void Auction_CS_GetAuctionItem::set_end_index(::google::protobuf::int32 value) {
  set_has_end_index();
  end_index_ = value;
}

// -------------------------------------------------------------------

// Auction_SC_GetAuctionItem

// optional int32 total_num = 1;
inline bool Auction_SC_GetAuctionItem::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_GetAuctionItem::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_GetAuctionItem::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_GetAuctionItem::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 Auction_SC_GetAuctionItem::total_num() const {
  return total_num_;
}
inline void Auction_SC_GetAuctionItem::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
}

// optional int32 start_index = 2;
inline bool Auction_SC_GetAuctionItem::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auction_SC_GetAuctionItem::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auction_SC_GetAuctionItem::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auction_SC_GetAuctionItem::clear_start_index() {
  start_index_ = 0;
  clear_has_start_index();
}
inline ::google::protobuf::int32 Auction_SC_GetAuctionItem::start_index() const {
  return start_index_;
}
inline void Auction_SC_GetAuctionItem::set_start_index(::google::protobuf::int32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional int32 end_index = 3;
inline bool Auction_SC_GetAuctionItem::has_end_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auction_SC_GetAuctionItem::set_has_end_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auction_SC_GetAuctionItem::clear_has_end_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auction_SC_GetAuctionItem::clear_end_index() {
  end_index_ = 0;
  clear_has_end_index();
}
inline ::google::protobuf::int32 Auction_SC_GetAuctionItem::end_index() const {
  return end_index_;
}
inline void Auction_SC_GetAuctionItem::set_end_index(::google::protobuf::int32 value) {
  set_has_end_index();
  end_index_ = value;
}

// repeated .proto.message.AuctionItem item_list = 4;
inline int Auction_SC_GetAuctionItem::item_list_size() const {
  return item_list_.size();
}
inline void Auction_SC_GetAuctionItem::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::AuctionItem& Auction_SC_GetAuctionItem::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetAuctionItem::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::AuctionItem* Auction_SC_GetAuctionItem::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >&
Auction_SC_GetAuctionItem::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::AuctionItem >*
Auction_SC_GetAuctionItem::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Auction_SC_OtherBuy

// optional .proto.message.AuctionItem item = 1;
inline bool Auction_SC_OtherBuy::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auction_SC_OtherBuy::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auction_SC_OtherBuy::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auction_SC_OtherBuy::clear_item() {
  if (item_ != NULL) item_->::proto::message::AuctionItem::Clear();
  clear_has_item();
}
inline const ::proto::message::AuctionItem& Auction_SC_OtherBuy::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::proto::message::AuctionItem* Auction_SC_OtherBuy::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::proto::message::AuctionItem;
  return item_;
}
inline ::proto::message::AuctionItem* Auction_SC_OtherBuy::release_item() {
  clear_has_item();
  ::proto::message::AuctionItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void Auction_SC_OtherBuy::set_allocated_item(::proto::message::AuctionItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_auction_2eproto__INCLUDED
