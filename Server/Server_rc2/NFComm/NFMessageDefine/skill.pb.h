// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skill.proto

#ifndef PROTOBUF_skill_2eproto__INCLUDED
#define PROTOBUF_skill_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_skill_2eproto();
void protobuf_AssignDesc_skill_2eproto();
void protobuf_ShutdownFile_skill_2eproto();

class SkillInfo;
class MarkInfo;
class Skill_CS_GetSkillInfo;
class Skill_SC_GetSkillInfo;
class Skill_CS_UpSkill;
class Skill_SC_UpSkill;
class Skill_CS_SetFightSkill;
class Skill_SC_SetFightSkill;
class Skill_CS_UpMarkSkill;
class Skill_SC_UpMarkSkill;
class Skill_CS_SetMarkSkill;
class Skill_SC_SetMarkSkill;
class ProtoOnKeySkillInfo;
class Skill_CS_UpTenSkill;
class Skill_SC_UpTenSkill;
class UpSkillData;
class Skill_CS_UpOnKeySkill;
class Skill_SC_UpOnKeySkill;
class Skill_SC_UpdateSkillInfo;

// ===================================================================

class SkillInfo : public ::google::protobuf::Message {
 public:
  SkillInfo();
  virtual ~SkillInfo();

  SkillInfo(const SkillInfo& from);

  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();

  void Swap(SkillInfo* other);

  // implements Message ----------------------------------------------

  SkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 curMark = 4;
  inline bool has_curmark() const;
  inline void clear_curmark();
  static const int kCurMarkFieldNumber = 4;
  inline ::google::protobuf::int32 curmark() const;
  inline void set_curmark(::google::protobuf::int32 value);

  // optional int32 skillexp = 5;
  inline bool has_skillexp() const;
  inline void clear_skillexp();
  static const int kSkillexpFieldNumber = 5;
  inline ::google::protobuf::int32 skillexp() const;
  inline void set_skillexp(::google::protobuf::int32 value);

  // repeated .proto.message.MarkInfo markInfo = 6;
  inline int markinfo_size() const;
  inline void clear_markinfo();
  static const int kMarkInfoFieldNumber = 6;
  inline const ::proto::message::MarkInfo& markinfo(int index) const;
  inline ::proto::message::MarkInfo* mutable_markinfo(int index);
  inline ::proto::message::MarkInfo* add_markinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MarkInfo >&
      markinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::MarkInfo >*
      mutable_markinfo();

  // @@protoc_insertion_point(class_scope:proto.message.SkillInfo)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_curmark();
  inline void clear_has_curmark();
  inline void set_has_skillexp();
  inline void clear_has_skillexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 curmark_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::MarkInfo > markinfo_;
  ::google::protobuf::int32 skillexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static SkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class MarkInfo : public ::google::protobuf::Message {
 public:
  MarkInfo();
  virtual ~MarkInfo();

  MarkInfo(const MarkInfo& from);

  inline MarkInfo& operator=(const MarkInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkInfo& default_instance();

  void Swap(MarkInfo* other);

  // implements Message ----------------------------------------------

  MarkInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarkInfo& from);
  void MergeFrom(const MarkInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 markId = 1;
  inline bool has_markid() const;
  inline void clear_markid();
  static const int kMarkIdFieldNumber = 1;
  inline ::google::protobuf::int32 markid() const;
  inline void set_markid(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.MarkInfo)
 private:
  inline void set_has_markid();
  inline void clear_has_markid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 markid_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static MarkInfo* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_GetSkillInfo : public ::google::protobuf::Message {
 public:
  Skill_CS_GetSkillInfo();
  virtual ~Skill_CS_GetSkillInfo();

  Skill_CS_GetSkillInfo(const Skill_CS_GetSkillInfo& from);

  inline Skill_CS_GetSkillInfo& operator=(const Skill_CS_GetSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_GetSkillInfo& default_instance();

  void Swap(Skill_CS_GetSkillInfo* other);

  // implements Message ----------------------------------------------

  Skill_CS_GetSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_GetSkillInfo& from);
  void MergeFrom(const Skill_CS_GetSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_GetSkillInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_GetSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_GetSkillInfo : public ::google::protobuf::Message {
 public:
  Skill_SC_GetSkillInfo();
  virtual ~Skill_SC_GetSkillInfo();

  Skill_SC_GetSkillInfo(const Skill_SC_GetSkillInfo& from);

  inline Skill_SC_GetSkillInfo& operator=(const Skill_SC_GetSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_GetSkillInfo& default_instance();

  void Swap(Skill_SC_GetSkillInfo* other);

  // implements Message ----------------------------------------------

  Skill_SC_GetSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_GetSkillInfo& from);
  void MergeFrom(const Skill_SC_GetSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.SkillInfo skillInfo = 2;
  inline int skillinfo_size() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 2;
  inline const ::proto::message::SkillInfo& skillinfo(int index) const;
  inline ::proto::message::SkillInfo* mutable_skillinfo(int index);
  inline ::proto::message::SkillInfo* add_skillinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >&
      skillinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >*
      mutable_skillinfo();

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_GetSkillInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo > skillinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_GetSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_UpSkill : public ::google::protobuf::Message {
 public:
  Skill_CS_UpSkill();
  virtual ~Skill_CS_UpSkill();

  Skill_CS_UpSkill(const Skill_CS_UpSkill& from);

  inline Skill_CS_UpSkill& operator=(const Skill_CS_UpSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_UpSkill& default_instance();

  void Swap(Skill_CS_UpSkill* other);

  // implements Message ----------------------------------------------

  Skill_CS_UpSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_UpSkill& from);
  void MergeFrom(const Skill_CS_UpSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_UpSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_UpSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_UpSkill : public ::google::protobuf::Message {
 public:
  Skill_SC_UpSkill();
  virtual ~Skill_SC_UpSkill();

  Skill_SC_UpSkill(const Skill_SC_UpSkill& from);

  inline Skill_SC_UpSkill& operator=(const Skill_SC_UpSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_UpSkill& default_instance();

  void Swap(Skill_SC_UpSkill* other);

  // implements Message ----------------------------------------------

  Skill_SC_UpSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_UpSkill& from);
  void MergeFrom(const Skill_SC_UpSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 oldSkillId = 2;
  inline bool has_oldskillid() const;
  inline void clear_oldskillid();
  static const int kOldSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 oldskillid() const;
  inline void set_oldskillid(::google::protobuf::int32 value);

  // optional .proto.message.SkillInfo skillInfo = 3;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 3;
  inline const ::proto::message::SkillInfo& skillinfo() const;
  inline ::proto::message::SkillInfo* mutable_skillinfo();
  inline ::proto::message::SkillInfo* release_skillinfo();
  inline void set_allocated_skillinfo(::proto::message::SkillInfo* skillinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_UpSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_oldskillid();
  inline void clear_has_oldskillid();
  inline void set_has_skillinfo();
  inline void clear_has_skillinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 oldskillid_;
  ::proto::message::SkillInfo* skillinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_UpSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_SetFightSkill : public ::google::protobuf::Message {
 public:
  Skill_CS_SetFightSkill();
  virtual ~Skill_CS_SetFightSkill();

  Skill_CS_SetFightSkill(const Skill_CS_SetFightSkill& from);

  inline Skill_CS_SetFightSkill& operator=(const Skill_CS_SetFightSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_SetFightSkill& default_instance();

  void Swap(Skill_CS_SetFightSkill* other);

  // implements Message ----------------------------------------------

  Skill_CS_SetFightSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_SetFightSkill& from);
  void MergeFrom(const Skill_CS_SetFightSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // required int32 posDes = 2;
  inline bool has_posdes() const;
  inline void clear_posdes();
  static const int kPosDesFieldNumber = 2;
  inline ::google::protobuf::int32 posdes() const;
  inline void set_posdes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_SetFightSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_posdes();
  inline void clear_has_posdes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 posdes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_SetFightSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_SetFightSkill : public ::google::protobuf::Message {
 public:
  Skill_SC_SetFightSkill();
  virtual ~Skill_SC_SetFightSkill();

  Skill_SC_SetFightSkill(const Skill_SC_SetFightSkill& from);

  inline Skill_SC_SetFightSkill& operator=(const Skill_SC_SetFightSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_SetFightSkill& default_instance();

  void Swap(Skill_SC_SetFightSkill* other);

  // implements Message ----------------------------------------------

  Skill_SC_SetFightSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_SetFightSkill& from);
  void MergeFrom(const Skill_SC_SetFightSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.SkillInfo skillInfo = 2;
  inline int skillinfo_size() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 2;
  inline const ::proto::message::SkillInfo& skillinfo(int index) const;
  inline ::proto::message::SkillInfo* mutable_skillinfo(int index);
  inline ::proto::message::SkillInfo* add_skillinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >&
      skillinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >*
      mutable_skillinfo();

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_SetFightSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo > skillinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_SetFightSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_UpMarkSkill : public ::google::protobuf::Message {
 public:
  Skill_CS_UpMarkSkill();
  virtual ~Skill_CS_UpMarkSkill();

  Skill_CS_UpMarkSkill(const Skill_CS_UpMarkSkill& from);

  inline Skill_CS_UpMarkSkill& operator=(const Skill_CS_UpMarkSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_UpMarkSkill& default_instance();

  void Swap(Skill_CS_UpMarkSkill* other);

  // implements Message ----------------------------------------------

  Skill_CS_UpMarkSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_UpMarkSkill& from);
  void MergeFrom(const Skill_CS_UpMarkSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // required int32 markId = 2;
  inline bool has_markid() const;
  inline void clear_markid();
  static const int kMarkIdFieldNumber = 2;
  inline ::google::protobuf::int32 markid() const;
  inline void set_markid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_UpMarkSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_markid();
  inline void clear_has_markid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 markid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_UpMarkSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_UpMarkSkill : public ::google::protobuf::Message {
 public:
  Skill_SC_UpMarkSkill();
  virtual ~Skill_SC_UpMarkSkill();

  Skill_SC_UpMarkSkill(const Skill_SC_UpMarkSkill& from);

  inline Skill_SC_UpMarkSkill& operator=(const Skill_SC_UpMarkSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_UpMarkSkill& default_instance();

  void Swap(Skill_SC_UpMarkSkill* other);

  // implements Message ----------------------------------------------

  Skill_SC_UpMarkSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_UpMarkSkill& from);
  void MergeFrom(const Skill_SC_UpMarkSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 oldMarkId = 3;
  inline bool has_oldmarkid() const;
  inline void clear_oldmarkid();
  static const int kOldMarkIdFieldNumber = 3;
  inline ::google::protobuf::int32 oldmarkid() const;
  inline void set_oldmarkid(::google::protobuf::int32 value);

  // optional .proto.message.MarkInfo markInfo = 4;
  inline bool has_markinfo() const;
  inline void clear_markinfo();
  static const int kMarkInfoFieldNumber = 4;
  inline const ::proto::message::MarkInfo& markinfo() const;
  inline ::proto::message::MarkInfo* mutable_markinfo();
  inline ::proto::message::MarkInfo* release_markinfo();
  inline void set_allocated_markinfo(::proto::message::MarkInfo* markinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_UpMarkSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_oldmarkid();
  inline void clear_has_oldmarkid();
  inline void set_has_markinfo();
  inline void clear_has_markinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 skillid_;
  ::proto::message::MarkInfo* markinfo_;
  ::google::protobuf::int32 oldmarkid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_UpMarkSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_SetMarkSkill : public ::google::protobuf::Message {
 public:
  Skill_CS_SetMarkSkill();
  virtual ~Skill_CS_SetMarkSkill();

  Skill_CS_SetMarkSkill(const Skill_CS_SetMarkSkill& from);

  inline Skill_CS_SetMarkSkill& operator=(const Skill_CS_SetMarkSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_SetMarkSkill& default_instance();

  void Swap(Skill_CS_SetMarkSkill* other);

  // implements Message ----------------------------------------------

  Skill_CS_SetMarkSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_SetMarkSkill& from);
  void MergeFrom(const Skill_CS_SetMarkSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // required int32 markId = 2;
  inline bool has_markid() const;
  inline void clear_markid();
  static const int kMarkIdFieldNumber = 2;
  inline ::google::protobuf::int32 markid() const;
  inline void set_markid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_SetMarkSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_markid();
  inline void clear_has_markid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 markid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_SetMarkSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_SetMarkSkill : public ::google::protobuf::Message {
 public:
  Skill_SC_SetMarkSkill();
  virtual ~Skill_SC_SetMarkSkill();

  Skill_SC_SetMarkSkill(const Skill_SC_SetMarkSkill& from);

  inline Skill_SC_SetMarkSkill& operator=(const Skill_SC_SetMarkSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_SetMarkSkill& default_instance();

  void Swap(Skill_SC_SetMarkSkill* other);

  // implements Message ----------------------------------------------

  Skill_SC_SetMarkSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_SetMarkSkill& from);
  void MergeFrom(const Skill_SC_SetMarkSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 curMark = 3;
  inline bool has_curmark() const;
  inline void clear_curmark();
  static const int kCurMarkFieldNumber = 3;
  inline ::google::protobuf::int32 curmark() const;
  inline void set_curmark(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_SetMarkSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_curmark();
  inline void clear_has_curmark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 curmark_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_SetMarkSkill* default_instance_;
};
// -------------------------------------------------------------------

class ProtoOnKeySkillInfo : public ::google::protobuf::Message {
 public:
  ProtoOnKeySkillInfo();
  virtual ~ProtoOnKeySkillInfo();

  ProtoOnKeySkillInfo(const ProtoOnKeySkillInfo& from);

  inline ProtoOnKeySkillInfo& operator=(const ProtoOnKeySkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoOnKeySkillInfo& default_instance();

  void Swap(ProtoOnKeySkillInfo* other);

  // implements Message ----------------------------------------------

  ProtoOnKeySkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoOnKeySkillInfo& from);
  void MergeFrom(const ProtoOnKeySkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 oldSkillId = 1;
  inline bool has_oldskillid() const;
  inline void clear_oldskillid();
  static const int kOldSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 oldskillid() const;
  inline void set_oldskillid(::google::protobuf::int32 value);

  // optional .proto.message.SkillInfo skillInfo = 2;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 2;
  inline const ::proto::message::SkillInfo& skillinfo() const;
  inline ::proto::message::SkillInfo* mutable_skillinfo();
  inline ::proto::message::SkillInfo* release_skillinfo();
  inline void set_allocated_skillinfo(::proto::message::SkillInfo* skillinfo);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoOnKeySkillInfo)
 private:
  inline void set_has_oldskillid();
  inline void clear_has_oldskillid();
  inline void set_has_skillinfo();
  inline void clear_has_skillinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::SkillInfo* skillinfo_;
  ::google::protobuf::int32 oldskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static ProtoOnKeySkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_UpTenSkill : public ::google::protobuf::Message {
 public:
  Skill_CS_UpTenSkill();
  virtual ~Skill_CS_UpTenSkill();

  Skill_CS_UpTenSkill(const Skill_CS_UpTenSkill& from);

  inline Skill_CS_UpTenSkill& operator=(const Skill_CS_UpTenSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_UpTenSkill& default_instance();

  void Swap(Skill_CS_UpTenSkill* other);

  // implements Message ----------------------------------------------

  Skill_CS_UpTenSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_UpTenSkill& from);
  void MergeFrom(const Skill_CS_UpTenSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 oldSkillId = 1;
  inline bool has_oldskillid() const;
  inline void clear_oldskillid();
  static const int kOldSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 oldskillid() const;
  inline void set_oldskillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_UpTenSkill)
 private:
  inline void set_has_oldskillid();
  inline void clear_has_oldskillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 oldskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_UpTenSkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_UpTenSkill : public ::google::protobuf::Message {
 public:
  Skill_SC_UpTenSkill();
  virtual ~Skill_SC_UpTenSkill();

  Skill_SC_UpTenSkill(const Skill_SC_UpTenSkill& from);

  inline Skill_SC_UpTenSkill& operator=(const Skill_SC_UpTenSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_UpTenSkill& default_instance();

  void Swap(Skill_SC_UpTenSkill* other);

  // implements Message ----------------------------------------------

  Skill_SC_UpTenSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_UpTenSkill& from);
  void MergeFrom(const Skill_SC_UpTenSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .proto.message.ProtoOnKeySkillInfo skillInfo = 2;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 2;
  inline const ::proto::message::ProtoOnKeySkillInfo& skillinfo() const;
  inline ::proto::message::ProtoOnKeySkillInfo* mutable_skillinfo();
  inline ::proto::message::ProtoOnKeySkillInfo* release_skillinfo();
  inline void set_allocated_skillinfo(::proto::message::ProtoOnKeySkillInfo* skillinfo);

  // repeated int32 rollexp = 3;
  inline int rollexp_size() const;
  inline void clear_rollexp();
  static const int kRollexpFieldNumber = 3;
  inline ::google::protobuf::int32 rollexp(int index) const;
  inline void set_rollexp(int index, ::google::protobuf::int32 value);
  inline void add_rollexp(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rollexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rollexp();

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_UpTenSkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_skillinfo();
  inline void clear_has_skillinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoOnKeySkillInfo* skillinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rollexp_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_UpTenSkill* default_instance_;
};
// -------------------------------------------------------------------

class UpSkillData : public ::google::protobuf::Message {
 public:
  UpSkillData();
  virtual ~UpSkillData();

  UpSkillData(const UpSkillData& from);

  inline UpSkillData& operator=(const UpSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpSkillData& default_instance();

  void Swap(UpSkillData* other);

  // implements Message ----------------------------------------------

  UpSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpSkillData& from);
  void MergeFrom(const UpSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 upcounts = 2;
  inline bool has_upcounts() const;
  inline void clear_upcounts();
  static const int kUpcountsFieldNumber = 2;
  inline ::google::protobuf::uint32 upcounts() const;
  inline void set_upcounts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.UpSkillData)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_upcounts();
  inline void clear_has_upcounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 upcounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static UpSkillData* default_instance_;
};
// -------------------------------------------------------------------

class Skill_CS_UpOnKeySkill : public ::google::protobuf::Message {
 public:
  Skill_CS_UpOnKeySkill();
  virtual ~Skill_CS_UpOnKeySkill();

  Skill_CS_UpOnKeySkill(const Skill_CS_UpOnKeySkill& from);

  inline Skill_CS_UpOnKeySkill& operator=(const Skill_CS_UpOnKeySkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_CS_UpOnKeySkill& default_instance();

  void Swap(Skill_CS_UpOnKeySkill* other);

  // implements Message ----------------------------------------------

  Skill_CS_UpOnKeySkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_CS_UpOnKeySkill& from);
  void MergeFrom(const Skill_CS_UpOnKeySkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.UpSkillData upskillid = 1;
  inline int upskillid_size() const;
  inline void clear_upskillid();
  static const int kUpskillidFieldNumber = 1;
  inline const ::proto::message::UpSkillData& upskillid(int index) const;
  inline ::proto::message::UpSkillData* mutable_upskillid(int index);
  inline ::proto::message::UpSkillData* add_upskillid();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::UpSkillData >&
      upskillid() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::UpSkillData >*
      mutable_upskillid();

  // @@protoc_insertion_point(class_scope:proto.message.Skill_CS_UpOnKeySkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::UpSkillData > upskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_CS_UpOnKeySkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_UpOnKeySkill : public ::google::protobuf::Message {
 public:
  Skill_SC_UpOnKeySkill();
  virtual ~Skill_SC_UpOnKeySkill();

  Skill_SC_UpOnKeySkill(const Skill_SC_UpOnKeySkill& from);

  inline Skill_SC_UpOnKeySkill& operator=(const Skill_SC_UpOnKeySkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_UpOnKeySkill& default_instance();

  void Swap(Skill_SC_UpOnKeySkill* other);

  // implements Message ----------------------------------------------

  Skill_SC_UpOnKeySkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_UpOnKeySkill& from);
  void MergeFrom(const Skill_SC_UpOnKeySkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoOnKeySkillInfo upinfo = 2;
  inline int upinfo_size() const;
  inline void clear_upinfo();
  static const int kUpinfoFieldNumber = 2;
  inline const ::proto::message::ProtoOnKeySkillInfo& upinfo(int index) const;
  inline ::proto::message::ProtoOnKeySkillInfo* mutable_upinfo(int index);
  inline ::proto::message::ProtoOnKeySkillInfo* add_upinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoOnKeySkillInfo >&
      upinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoOnKeySkillInfo >*
      mutable_upinfo();

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_UpOnKeySkill)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoOnKeySkillInfo > upinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_UpOnKeySkill* default_instance_;
};
// -------------------------------------------------------------------

class Skill_SC_UpdateSkillInfo : public ::google::protobuf::Message {
 public:
  Skill_SC_UpdateSkillInfo();
  virtual ~Skill_SC_UpdateSkillInfo();

  Skill_SC_UpdateSkillInfo(const Skill_SC_UpdateSkillInfo& from);

  inline Skill_SC_UpdateSkillInfo& operator=(const Skill_SC_UpdateSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_SC_UpdateSkillInfo& default_instance();

  void Swap(Skill_SC_UpdateSkillInfo* other);

  // implements Message ----------------------------------------------

  Skill_SC_UpdateSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill_SC_UpdateSkillInfo& from);
  void MergeFrom(const Skill_SC_UpdateSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.SkillInfo skillInfo = 1;
  inline int skillinfo_size() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 1;
  inline const ::proto::message::SkillInfo& skillinfo(int index) const;
  inline ::proto::message::SkillInfo* mutable_skillinfo(int index);
  inline ::proto::message::SkillInfo* add_skillinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >&
      skillinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >*
      mutable_skillinfo();

  // @@protoc_insertion_point(class_scope:proto.message.Skill_SC_UpdateSkillInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo > skillinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_skill_2eproto();
  friend void protobuf_AssignDesc_skill_2eproto();
  friend void protobuf_ShutdownFile_skill_2eproto();

  void InitAsDefaultInstance();
  static Skill_SC_UpdateSkillInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillInfo

// required int32 skillId = 1;
inline bool SkillInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillInfo::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SkillInfo::skillid() const {
  return skillid_;
}
inline void SkillInfo::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 level = 2;
inline bool SkillInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SkillInfo::level() const {
  return level_;
}
inline void SkillInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 pos = 3;
inline bool SkillInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 SkillInfo::pos() const {
  return pos_;
}
inline void SkillInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 curMark = 4;
inline bool SkillInfo::has_curmark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillInfo::set_has_curmark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillInfo::clear_has_curmark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillInfo::clear_curmark() {
  curmark_ = 0;
  clear_has_curmark();
}
inline ::google::protobuf::int32 SkillInfo::curmark() const {
  return curmark_;
}
inline void SkillInfo::set_curmark(::google::protobuf::int32 value) {
  set_has_curmark();
  curmark_ = value;
}

// optional int32 skillexp = 5;
inline bool SkillInfo::has_skillexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillInfo::set_has_skillexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillInfo::clear_has_skillexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillInfo::clear_skillexp() {
  skillexp_ = 0;
  clear_has_skillexp();
}
inline ::google::protobuf::int32 SkillInfo::skillexp() const {
  return skillexp_;
}
inline void SkillInfo::set_skillexp(::google::protobuf::int32 value) {
  set_has_skillexp();
  skillexp_ = value;
}

// repeated .proto.message.MarkInfo markInfo = 6;
inline int SkillInfo::markinfo_size() const {
  return markinfo_.size();
}
inline void SkillInfo::clear_markinfo() {
  markinfo_.Clear();
}
inline const ::proto::message::MarkInfo& SkillInfo::markinfo(int index) const {
  return markinfo_.Get(index);
}
inline ::proto::message::MarkInfo* SkillInfo::mutable_markinfo(int index) {
  return markinfo_.Mutable(index);
}
inline ::proto::message::MarkInfo* SkillInfo::add_markinfo() {
  return markinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MarkInfo >&
SkillInfo::markinfo() const {
  return markinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::MarkInfo >*
SkillInfo::mutable_markinfo() {
  return &markinfo_;
}

// -------------------------------------------------------------------

// MarkInfo

// required int32 markId = 1;
inline bool MarkInfo::has_markid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarkInfo::set_has_markid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarkInfo::clear_has_markid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarkInfo::clear_markid() {
  markid_ = 0;
  clear_has_markid();
}
inline ::google::protobuf::int32 MarkInfo::markid() const {
  return markid_;
}
inline void MarkInfo::set_markid(::google::protobuf::int32 value) {
  set_has_markid();
  markid_ = value;
}

// required int32 level = 2;
inline bool MarkInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarkInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarkInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarkInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MarkInfo::level() const {
  return level_;
}
inline void MarkInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// Skill_CS_GetSkillInfo

// -------------------------------------------------------------------

// Skill_SC_GetSkillInfo

// required int32 result = 1;
inline bool Skill_SC_GetSkillInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_GetSkillInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_GetSkillInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_GetSkillInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_GetSkillInfo::result() const {
  return result_;
}
inline void Skill_SC_GetSkillInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.SkillInfo skillInfo = 2;
inline int Skill_SC_GetSkillInfo::skillinfo_size() const {
  return skillinfo_.size();
}
inline void Skill_SC_GetSkillInfo::clear_skillinfo() {
  skillinfo_.Clear();
}
inline const ::proto::message::SkillInfo& Skill_SC_GetSkillInfo::skillinfo(int index) const {
  return skillinfo_.Get(index);
}
inline ::proto::message::SkillInfo* Skill_SC_GetSkillInfo::mutable_skillinfo(int index) {
  return skillinfo_.Mutable(index);
}
inline ::proto::message::SkillInfo* Skill_SC_GetSkillInfo::add_skillinfo() {
  return skillinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >&
Skill_SC_GetSkillInfo::skillinfo() const {
  return skillinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >*
Skill_SC_GetSkillInfo::mutable_skillinfo() {
  return &skillinfo_;
}

// -------------------------------------------------------------------

// Skill_CS_UpSkill

// required int32 skillId = 1;
inline bool Skill_CS_UpSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_CS_UpSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_CS_UpSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_CS_UpSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Skill_CS_UpSkill::skillid() const {
  return skillid_;
}
inline void Skill_CS_UpSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// Skill_SC_UpSkill

// required int32 result = 1;
inline bool Skill_SC_UpSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_UpSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_UpSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_UpSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_UpSkill::result() const {
  return result_;
}
inline void Skill_SC_UpSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 oldSkillId = 2;
inline bool Skill_SC_UpSkill::has_oldskillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_SC_UpSkill::set_has_oldskillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_SC_UpSkill::clear_has_oldskillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_SC_UpSkill::clear_oldskillid() {
  oldskillid_ = 0;
  clear_has_oldskillid();
}
inline ::google::protobuf::int32 Skill_SC_UpSkill::oldskillid() const {
  return oldskillid_;
}
inline void Skill_SC_UpSkill::set_oldskillid(::google::protobuf::int32 value) {
  set_has_oldskillid();
  oldskillid_ = value;
}

// optional .proto.message.SkillInfo skillInfo = 3;
inline bool Skill_SC_UpSkill::has_skillinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Skill_SC_UpSkill::set_has_skillinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Skill_SC_UpSkill::clear_has_skillinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Skill_SC_UpSkill::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::proto::message::SkillInfo::Clear();
  clear_has_skillinfo();
}
inline const ::proto::message::SkillInfo& Skill_SC_UpSkill::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::proto::message::SkillInfo* Skill_SC_UpSkill::mutable_skillinfo() {
  set_has_skillinfo();
  if (skillinfo_ == NULL) skillinfo_ = new ::proto::message::SkillInfo;
  return skillinfo_;
}
inline ::proto::message::SkillInfo* Skill_SC_UpSkill::release_skillinfo() {
  clear_has_skillinfo();
  ::proto::message::SkillInfo* temp = skillinfo_;
  skillinfo_ = NULL;
  return temp;
}
inline void Skill_SC_UpSkill::set_allocated_skillinfo(::proto::message::SkillInfo* skillinfo) {
  delete skillinfo_;
  skillinfo_ = skillinfo;
  if (skillinfo) {
    set_has_skillinfo();
  } else {
    clear_has_skillinfo();
  }
}

// -------------------------------------------------------------------

// Skill_CS_SetFightSkill

// required int32 skillId = 1;
inline bool Skill_CS_SetFightSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_CS_SetFightSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_CS_SetFightSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_CS_SetFightSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Skill_CS_SetFightSkill::skillid() const {
  return skillid_;
}
inline void Skill_CS_SetFightSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 posDes = 2;
inline bool Skill_CS_SetFightSkill::has_posdes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_CS_SetFightSkill::set_has_posdes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_CS_SetFightSkill::clear_has_posdes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_CS_SetFightSkill::clear_posdes() {
  posdes_ = 0;
  clear_has_posdes();
}
inline ::google::protobuf::int32 Skill_CS_SetFightSkill::posdes() const {
  return posdes_;
}
inline void Skill_CS_SetFightSkill::set_posdes(::google::protobuf::int32 value) {
  set_has_posdes();
  posdes_ = value;
}

// -------------------------------------------------------------------

// Skill_SC_SetFightSkill

// required int32 result = 1;
inline bool Skill_SC_SetFightSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_SetFightSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_SetFightSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_SetFightSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_SetFightSkill::result() const {
  return result_;
}
inline void Skill_SC_SetFightSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.SkillInfo skillInfo = 2;
inline int Skill_SC_SetFightSkill::skillinfo_size() const {
  return skillinfo_.size();
}
inline void Skill_SC_SetFightSkill::clear_skillinfo() {
  skillinfo_.Clear();
}
inline const ::proto::message::SkillInfo& Skill_SC_SetFightSkill::skillinfo(int index) const {
  return skillinfo_.Get(index);
}
inline ::proto::message::SkillInfo* Skill_SC_SetFightSkill::mutable_skillinfo(int index) {
  return skillinfo_.Mutable(index);
}
inline ::proto::message::SkillInfo* Skill_SC_SetFightSkill::add_skillinfo() {
  return skillinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >&
Skill_SC_SetFightSkill::skillinfo() const {
  return skillinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >*
Skill_SC_SetFightSkill::mutable_skillinfo() {
  return &skillinfo_;
}

// -------------------------------------------------------------------

// Skill_CS_UpMarkSkill

// required int32 skillId = 1;
inline bool Skill_CS_UpMarkSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_CS_UpMarkSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_CS_UpMarkSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_CS_UpMarkSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Skill_CS_UpMarkSkill::skillid() const {
  return skillid_;
}
inline void Skill_CS_UpMarkSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 markId = 2;
inline bool Skill_CS_UpMarkSkill::has_markid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_CS_UpMarkSkill::set_has_markid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_CS_UpMarkSkill::clear_has_markid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_CS_UpMarkSkill::clear_markid() {
  markid_ = 0;
  clear_has_markid();
}
inline ::google::protobuf::int32 Skill_CS_UpMarkSkill::markid() const {
  return markid_;
}
inline void Skill_CS_UpMarkSkill::set_markid(::google::protobuf::int32 value) {
  set_has_markid();
  markid_ = value;
}

// -------------------------------------------------------------------

// Skill_SC_UpMarkSkill

// required int32 result = 1;
inline bool Skill_SC_UpMarkSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_UpMarkSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_UpMarkSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_UpMarkSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_UpMarkSkill::result() const {
  return result_;
}
inline void Skill_SC_UpMarkSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 skillId = 2;
inline bool Skill_SC_UpMarkSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_SC_UpMarkSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_SC_UpMarkSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_SC_UpMarkSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Skill_SC_UpMarkSkill::skillid() const {
  return skillid_;
}
inline void Skill_SC_UpMarkSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 oldMarkId = 3;
inline bool Skill_SC_UpMarkSkill::has_oldmarkid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Skill_SC_UpMarkSkill::set_has_oldmarkid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Skill_SC_UpMarkSkill::clear_has_oldmarkid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Skill_SC_UpMarkSkill::clear_oldmarkid() {
  oldmarkid_ = 0;
  clear_has_oldmarkid();
}
inline ::google::protobuf::int32 Skill_SC_UpMarkSkill::oldmarkid() const {
  return oldmarkid_;
}
inline void Skill_SC_UpMarkSkill::set_oldmarkid(::google::protobuf::int32 value) {
  set_has_oldmarkid();
  oldmarkid_ = value;
}

// optional .proto.message.MarkInfo markInfo = 4;
inline bool Skill_SC_UpMarkSkill::has_markinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Skill_SC_UpMarkSkill::set_has_markinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Skill_SC_UpMarkSkill::clear_has_markinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Skill_SC_UpMarkSkill::clear_markinfo() {
  if (markinfo_ != NULL) markinfo_->::proto::message::MarkInfo::Clear();
  clear_has_markinfo();
}
inline const ::proto::message::MarkInfo& Skill_SC_UpMarkSkill::markinfo() const {
  return markinfo_ != NULL ? *markinfo_ : *default_instance_->markinfo_;
}
inline ::proto::message::MarkInfo* Skill_SC_UpMarkSkill::mutable_markinfo() {
  set_has_markinfo();
  if (markinfo_ == NULL) markinfo_ = new ::proto::message::MarkInfo;
  return markinfo_;
}
inline ::proto::message::MarkInfo* Skill_SC_UpMarkSkill::release_markinfo() {
  clear_has_markinfo();
  ::proto::message::MarkInfo* temp = markinfo_;
  markinfo_ = NULL;
  return temp;
}
inline void Skill_SC_UpMarkSkill::set_allocated_markinfo(::proto::message::MarkInfo* markinfo) {
  delete markinfo_;
  markinfo_ = markinfo;
  if (markinfo) {
    set_has_markinfo();
  } else {
    clear_has_markinfo();
  }
}

// -------------------------------------------------------------------

// Skill_CS_SetMarkSkill

// required int32 skillId = 1;
inline bool Skill_CS_SetMarkSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_CS_SetMarkSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_CS_SetMarkSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_CS_SetMarkSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Skill_CS_SetMarkSkill::skillid() const {
  return skillid_;
}
inline void Skill_CS_SetMarkSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 markId = 2;
inline bool Skill_CS_SetMarkSkill::has_markid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_CS_SetMarkSkill::set_has_markid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_CS_SetMarkSkill::clear_has_markid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_CS_SetMarkSkill::clear_markid() {
  markid_ = 0;
  clear_has_markid();
}
inline ::google::protobuf::int32 Skill_CS_SetMarkSkill::markid() const {
  return markid_;
}
inline void Skill_CS_SetMarkSkill::set_markid(::google::protobuf::int32 value) {
  set_has_markid();
  markid_ = value;
}

// -------------------------------------------------------------------

// Skill_SC_SetMarkSkill

// required int32 result = 1;
inline bool Skill_SC_SetMarkSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_SetMarkSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_SetMarkSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_SetMarkSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_SetMarkSkill::result() const {
  return result_;
}
inline void Skill_SC_SetMarkSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 skillId = 2;
inline bool Skill_SC_SetMarkSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_SC_SetMarkSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_SC_SetMarkSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_SC_SetMarkSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Skill_SC_SetMarkSkill::skillid() const {
  return skillid_;
}
inline void Skill_SC_SetMarkSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 curMark = 3;
inline bool Skill_SC_SetMarkSkill::has_curmark() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Skill_SC_SetMarkSkill::set_has_curmark() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Skill_SC_SetMarkSkill::clear_has_curmark() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Skill_SC_SetMarkSkill::clear_curmark() {
  curmark_ = 0;
  clear_has_curmark();
}
inline ::google::protobuf::int32 Skill_SC_SetMarkSkill::curmark() const {
  return curmark_;
}
inline void Skill_SC_SetMarkSkill::set_curmark(::google::protobuf::int32 value) {
  set_has_curmark();
  curmark_ = value;
}

// -------------------------------------------------------------------

// ProtoOnKeySkillInfo

// optional int32 oldSkillId = 1;
inline bool ProtoOnKeySkillInfo::has_oldskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoOnKeySkillInfo::set_has_oldskillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoOnKeySkillInfo::clear_has_oldskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoOnKeySkillInfo::clear_oldskillid() {
  oldskillid_ = 0;
  clear_has_oldskillid();
}
inline ::google::protobuf::int32 ProtoOnKeySkillInfo::oldskillid() const {
  return oldskillid_;
}
inline void ProtoOnKeySkillInfo::set_oldskillid(::google::protobuf::int32 value) {
  set_has_oldskillid();
  oldskillid_ = value;
}

// optional .proto.message.SkillInfo skillInfo = 2;
inline bool ProtoOnKeySkillInfo::has_skillinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoOnKeySkillInfo::set_has_skillinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoOnKeySkillInfo::clear_has_skillinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoOnKeySkillInfo::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::proto::message::SkillInfo::Clear();
  clear_has_skillinfo();
}
inline const ::proto::message::SkillInfo& ProtoOnKeySkillInfo::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::proto::message::SkillInfo* ProtoOnKeySkillInfo::mutable_skillinfo() {
  set_has_skillinfo();
  if (skillinfo_ == NULL) skillinfo_ = new ::proto::message::SkillInfo;
  return skillinfo_;
}
inline ::proto::message::SkillInfo* ProtoOnKeySkillInfo::release_skillinfo() {
  clear_has_skillinfo();
  ::proto::message::SkillInfo* temp = skillinfo_;
  skillinfo_ = NULL;
  return temp;
}
inline void ProtoOnKeySkillInfo::set_allocated_skillinfo(::proto::message::SkillInfo* skillinfo) {
  delete skillinfo_;
  skillinfo_ = skillinfo;
  if (skillinfo) {
    set_has_skillinfo();
  } else {
    clear_has_skillinfo();
  }
}

// -------------------------------------------------------------------

// Skill_CS_UpTenSkill

// required int32 oldSkillId = 1;
inline bool Skill_CS_UpTenSkill::has_oldskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_CS_UpTenSkill::set_has_oldskillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_CS_UpTenSkill::clear_has_oldskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_CS_UpTenSkill::clear_oldskillid() {
  oldskillid_ = 0;
  clear_has_oldskillid();
}
inline ::google::protobuf::int32 Skill_CS_UpTenSkill::oldskillid() const {
  return oldskillid_;
}
inline void Skill_CS_UpTenSkill::set_oldskillid(::google::protobuf::int32 value) {
  set_has_oldskillid();
  oldskillid_ = value;
}

// -------------------------------------------------------------------

// Skill_SC_UpTenSkill

// required int32 result = 1;
inline bool Skill_SC_UpTenSkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_UpTenSkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_UpTenSkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_UpTenSkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_UpTenSkill::result() const {
  return result_;
}
inline void Skill_SC_UpTenSkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .proto.message.ProtoOnKeySkillInfo skillInfo = 2;
inline bool Skill_SC_UpTenSkill::has_skillinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill_SC_UpTenSkill::set_has_skillinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill_SC_UpTenSkill::clear_has_skillinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill_SC_UpTenSkill::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::proto::message::ProtoOnKeySkillInfo::Clear();
  clear_has_skillinfo();
}
inline const ::proto::message::ProtoOnKeySkillInfo& Skill_SC_UpTenSkill::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::proto::message::ProtoOnKeySkillInfo* Skill_SC_UpTenSkill::mutable_skillinfo() {
  set_has_skillinfo();
  if (skillinfo_ == NULL) skillinfo_ = new ::proto::message::ProtoOnKeySkillInfo;
  return skillinfo_;
}
inline ::proto::message::ProtoOnKeySkillInfo* Skill_SC_UpTenSkill::release_skillinfo() {
  clear_has_skillinfo();
  ::proto::message::ProtoOnKeySkillInfo* temp = skillinfo_;
  skillinfo_ = NULL;
  return temp;
}
inline void Skill_SC_UpTenSkill::set_allocated_skillinfo(::proto::message::ProtoOnKeySkillInfo* skillinfo) {
  delete skillinfo_;
  skillinfo_ = skillinfo;
  if (skillinfo) {
    set_has_skillinfo();
  } else {
    clear_has_skillinfo();
  }
}

// repeated int32 rollexp = 3;
inline int Skill_SC_UpTenSkill::rollexp_size() const {
  return rollexp_.size();
}
inline void Skill_SC_UpTenSkill::clear_rollexp() {
  rollexp_.Clear();
}
inline ::google::protobuf::int32 Skill_SC_UpTenSkill::rollexp(int index) const {
  return rollexp_.Get(index);
}
inline void Skill_SC_UpTenSkill::set_rollexp(int index, ::google::protobuf::int32 value) {
  rollexp_.Set(index, value);
}
inline void Skill_SC_UpTenSkill::add_rollexp(::google::protobuf::int32 value) {
  rollexp_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Skill_SC_UpTenSkill::rollexp() const {
  return rollexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Skill_SC_UpTenSkill::mutable_rollexp() {
  return &rollexp_;
}

// -------------------------------------------------------------------

// UpSkillData

// optional uint32 skillid = 1;
inline bool UpSkillData::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpSkillData::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpSkillData::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpSkillData::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 UpSkillData::skillid() const {
  return skillid_;
}
inline void UpSkillData::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 upcounts = 2;
inline bool UpSkillData::has_upcounts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpSkillData::set_has_upcounts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpSkillData::clear_has_upcounts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpSkillData::clear_upcounts() {
  upcounts_ = 0u;
  clear_has_upcounts();
}
inline ::google::protobuf::uint32 UpSkillData::upcounts() const {
  return upcounts_;
}
inline void UpSkillData::set_upcounts(::google::protobuf::uint32 value) {
  set_has_upcounts();
  upcounts_ = value;
}

// -------------------------------------------------------------------

// Skill_CS_UpOnKeySkill

// repeated .proto.message.UpSkillData upskillid = 1;
inline int Skill_CS_UpOnKeySkill::upskillid_size() const {
  return upskillid_.size();
}
inline void Skill_CS_UpOnKeySkill::clear_upskillid() {
  upskillid_.Clear();
}
inline const ::proto::message::UpSkillData& Skill_CS_UpOnKeySkill::upskillid(int index) const {
  return upskillid_.Get(index);
}
inline ::proto::message::UpSkillData* Skill_CS_UpOnKeySkill::mutable_upskillid(int index) {
  return upskillid_.Mutable(index);
}
inline ::proto::message::UpSkillData* Skill_CS_UpOnKeySkill::add_upskillid() {
  return upskillid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::UpSkillData >&
Skill_CS_UpOnKeySkill::upskillid() const {
  return upskillid_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::UpSkillData >*
Skill_CS_UpOnKeySkill::mutable_upskillid() {
  return &upskillid_;
}

// -------------------------------------------------------------------

// Skill_SC_UpOnKeySkill

// required int32 result = 1;
inline bool Skill_SC_UpOnKeySkill::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill_SC_UpOnKeySkill::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill_SC_UpOnKeySkill::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill_SC_UpOnKeySkill::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Skill_SC_UpOnKeySkill::result() const {
  return result_;
}
inline void Skill_SC_UpOnKeySkill::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.ProtoOnKeySkillInfo upinfo = 2;
inline int Skill_SC_UpOnKeySkill::upinfo_size() const {
  return upinfo_.size();
}
inline void Skill_SC_UpOnKeySkill::clear_upinfo() {
  upinfo_.Clear();
}
inline const ::proto::message::ProtoOnKeySkillInfo& Skill_SC_UpOnKeySkill::upinfo(int index) const {
  return upinfo_.Get(index);
}
inline ::proto::message::ProtoOnKeySkillInfo* Skill_SC_UpOnKeySkill::mutable_upinfo(int index) {
  return upinfo_.Mutable(index);
}
inline ::proto::message::ProtoOnKeySkillInfo* Skill_SC_UpOnKeySkill::add_upinfo() {
  return upinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoOnKeySkillInfo >&
Skill_SC_UpOnKeySkill::upinfo() const {
  return upinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoOnKeySkillInfo >*
Skill_SC_UpOnKeySkill::mutable_upinfo() {
  return &upinfo_;
}

// -------------------------------------------------------------------

// Skill_SC_UpdateSkillInfo

// repeated .proto.message.SkillInfo skillInfo = 1;
inline int Skill_SC_UpdateSkillInfo::skillinfo_size() const {
  return skillinfo_.size();
}
inline void Skill_SC_UpdateSkillInfo::clear_skillinfo() {
  skillinfo_.Clear();
}
inline const ::proto::message::SkillInfo& Skill_SC_UpdateSkillInfo::skillinfo(int index) const {
  return skillinfo_.Get(index);
}
inline ::proto::message::SkillInfo* Skill_SC_UpdateSkillInfo::mutable_skillinfo(int index) {
  return skillinfo_.Mutable(index);
}
inline ::proto::message::SkillInfo* Skill_SC_UpdateSkillInfo::add_skillinfo() {
  return skillinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >&
Skill_SC_UpdateSkillInfo::skillinfo() const {
  return skillinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SkillInfo >*
Skill_SC_UpdateSkillInfo::mutable_skillinfo() {
  return &skillinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_skill_2eproto__INCLUDED
