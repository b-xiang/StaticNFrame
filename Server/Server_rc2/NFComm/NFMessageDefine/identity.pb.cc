// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "identity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

namespace {

const ::google::protobuf::Descriptor* Identity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_CS_GetIdentityInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_CS_GetIdentityInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_SC_GetIdentityInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_SC_GetIdentityInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_CS_SelectIdentity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_CS_SelectIdentity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_SC_SelectIdentity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_SC_SelectIdentity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_CS_ResetIdentity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_CS_ResetIdentity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_SC_ResetIdentity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_SC_ResetIdentity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_CS_ActivateTalent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_CS_ActivateTalent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_SC_ActivateTalent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_SC_ActivateTalent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_CS_UpTalent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_CS_UpTalent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_SC_UpTalent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_SC_UpTalent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_CS_SynthesisItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_CS_SynthesisItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Identity_SC_SynthesisItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Identity_SC_SynthesisItem_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* eIdentityType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* eIdyTalentType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_identity_2eproto() {
  protobuf_AddDesc_identity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "identity.proto");
  GOOGLE_CHECK(file != NULL);
  Identity_descriptor_ = file->message_type(0);
  static const int Identity_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity, talent_list_),
  };
  Identity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_descriptor_,
      Identity::default_instance_,
      Identity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity));
  Identity_CS_GetIdentityInfo_descriptor_ = file->message_type(1);
  static const int Identity_CS_GetIdentityInfo_offsets_[1] = {
  };
  Identity_CS_GetIdentityInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_CS_GetIdentityInfo_descriptor_,
      Identity_CS_GetIdentityInfo::default_instance_,
      Identity_CS_GetIdentityInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_GetIdentityInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_GetIdentityInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_CS_GetIdentityInfo));
  Identity_SC_GetIdentityInfo_descriptor_ = file->message_type(2);
  static const int Identity_SC_GetIdentityInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_GetIdentityInfo, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_GetIdentityInfo, vigor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_GetIdentityInfo, identity_list_),
  };
  Identity_SC_GetIdentityInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_SC_GetIdentityInfo_descriptor_,
      Identity_SC_GetIdentityInfo::default_instance_,
      Identity_SC_GetIdentityInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_GetIdentityInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_GetIdentityInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_SC_GetIdentityInfo));
  Identity_CS_SelectIdentity_descriptor_ = file->message_type(3);
  static const int Identity_CS_SelectIdentity_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SelectIdentity, itype_),
  };
  Identity_CS_SelectIdentity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_CS_SelectIdentity_descriptor_,
      Identity_CS_SelectIdentity::default_instance_,
      Identity_CS_SelectIdentity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SelectIdentity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SelectIdentity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_CS_SelectIdentity));
  Identity_SC_SelectIdentity_descriptor_ = file->message_type(4);
  static const int Identity_SC_SelectIdentity_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SelectIdentity, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SelectIdentity, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SelectIdentity, identity_),
  };
  Identity_SC_SelectIdentity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_SC_SelectIdentity_descriptor_,
      Identity_SC_SelectIdentity::default_instance_,
      Identity_SC_SelectIdentity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SelectIdentity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SelectIdentity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_SC_SelectIdentity));
  Identity_CS_ResetIdentity_descriptor_ = file->message_type(5);
  static const int Identity_CS_ResetIdentity_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ResetIdentity, itype_),
  };
  Identity_CS_ResetIdentity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_CS_ResetIdentity_descriptor_,
      Identity_CS_ResetIdentity::default_instance_,
      Identity_CS_ResetIdentity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ResetIdentity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ResetIdentity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_CS_ResetIdentity));
  Identity_SC_ResetIdentity_descriptor_ = file->message_type(6);
  static const int Identity_SC_ResetIdentity_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ResetIdentity, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ResetIdentity, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ResetIdentity, itype_),
  };
  Identity_SC_ResetIdentity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_SC_ResetIdentity_descriptor_,
      Identity_SC_ResetIdentity::default_instance_,
      Identity_SC_ResetIdentity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ResetIdentity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ResetIdentity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_SC_ResetIdentity));
  Identity_CS_ActivateTalent_descriptor_ = file->message_type(7);
  static const int Identity_CS_ActivateTalent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ActivateTalent, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ActivateTalent, talent_id_),
  };
  Identity_CS_ActivateTalent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_CS_ActivateTalent_descriptor_,
      Identity_CS_ActivateTalent::default_instance_,
      Identity_CS_ActivateTalent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ActivateTalent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_ActivateTalent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_CS_ActivateTalent));
  Identity_SC_ActivateTalent_descriptor_ = file->message_type(8);
  static const int Identity_SC_ActivateTalent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ActivateTalent, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ActivateTalent, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ActivateTalent, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ActivateTalent, talent_id_),
  };
  Identity_SC_ActivateTalent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_SC_ActivateTalent_descriptor_,
      Identity_SC_ActivateTalent::default_instance_,
      Identity_SC_ActivateTalent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ActivateTalent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_ActivateTalent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_SC_ActivateTalent));
  Identity_CS_UpTalent_descriptor_ = file->message_type(9);
  static const int Identity_CS_UpTalent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_UpTalent, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_UpTalent, talent_id_),
  };
  Identity_CS_UpTalent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_CS_UpTalent_descriptor_,
      Identity_CS_UpTalent::default_instance_,
      Identity_CS_UpTalent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_UpTalent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_UpTalent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_CS_UpTalent));
  Identity_SC_UpTalent_descriptor_ = file->message_type(10);
  static const int Identity_SC_UpTalent_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, talent_id_bef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, talent_id_now_),
  };
  Identity_SC_UpTalent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_SC_UpTalent_descriptor_,
      Identity_SC_UpTalent::default_instance_,
      Identity_SC_UpTalent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_UpTalent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_SC_UpTalent));
  Identity_CS_SynthesisItem_descriptor_ = file->message_type(11);
  static const int Identity_CS_SynthesisItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SynthesisItem, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SynthesisItem, item_id_),
  };
  Identity_CS_SynthesisItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_CS_SynthesisItem_descriptor_,
      Identity_CS_SynthesisItem::default_instance_,
      Identity_CS_SynthesisItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SynthesisItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_CS_SynthesisItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_CS_SynthesisItem));
  Identity_SC_SynthesisItem_descriptor_ = file->message_type(12);
  static const int Identity_SC_SynthesisItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, vigor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, talent_id_list_),
  };
  Identity_SC_SynthesisItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Identity_SC_SynthesisItem_descriptor_,
      Identity_SC_SynthesisItem::default_instance_,
      Identity_SC_SynthesisItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Identity_SC_SynthesisItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Identity_SC_SynthesisItem));
  eIdentityType_descriptor_ = file->enum_type(0);
  eIdyTalentType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_identity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_descriptor_, &Identity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_CS_GetIdentityInfo_descriptor_, &Identity_CS_GetIdentityInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_SC_GetIdentityInfo_descriptor_, &Identity_SC_GetIdentityInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_CS_SelectIdentity_descriptor_, &Identity_CS_SelectIdentity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_SC_SelectIdentity_descriptor_, &Identity_SC_SelectIdentity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_CS_ResetIdentity_descriptor_, &Identity_CS_ResetIdentity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_SC_ResetIdentity_descriptor_, &Identity_SC_ResetIdentity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_CS_ActivateTalent_descriptor_, &Identity_CS_ActivateTalent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_SC_ActivateTalent_descriptor_, &Identity_SC_ActivateTalent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_CS_UpTalent_descriptor_, &Identity_CS_UpTalent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_SC_UpTalent_descriptor_, &Identity_SC_UpTalent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_CS_SynthesisItem_descriptor_, &Identity_CS_SynthesisItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Identity_SC_SynthesisItem_descriptor_, &Identity_SC_SynthesisItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_identity_2eproto() {
  delete Identity::default_instance_;
  delete Identity_reflection_;
  delete Identity_CS_GetIdentityInfo::default_instance_;
  delete Identity_CS_GetIdentityInfo_reflection_;
  delete Identity_SC_GetIdentityInfo::default_instance_;
  delete Identity_SC_GetIdentityInfo_reflection_;
  delete Identity_CS_SelectIdentity::default_instance_;
  delete Identity_CS_SelectIdentity_reflection_;
  delete Identity_SC_SelectIdentity::default_instance_;
  delete Identity_SC_SelectIdentity_reflection_;
  delete Identity_CS_ResetIdentity::default_instance_;
  delete Identity_CS_ResetIdentity_reflection_;
  delete Identity_SC_ResetIdentity::default_instance_;
  delete Identity_SC_ResetIdentity_reflection_;
  delete Identity_CS_ActivateTalent::default_instance_;
  delete Identity_CS_ActivateTalent_reflection_;
  delete Identity_SC_ActivateTalent::default_instance_;
  delete Identity_SC_ActivateTalent_reflection_;
  delete Identity_CS_UpTalent::default_instance_;
  delete Identity_CS_UpTalent_reflection_;
  delete Identity_SC_UpTalent::default_instance_;
  delete Identity_SC_UpTalent_reflection_;
  delete Identity_CS_SynthesisItem::default_instance_;
  delete Identity_CS_SynthesisItem_reflection_;
  delete Identity_SC_SynthesisItem::default_instance_;
  delete Identity_SC_SynthesisItem_reflection_;
}

void protobuf_AddDesc_identity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016identity.proto\022\rproto.message\"L\n\010Ident"
    "ity\022+\n\005itype\030\001 \002(\0162\034.proto.message.eIden"
    "tityType\022\023\n\013talent_list\030\002 \003(\005\"\035\n\033Identit"
    "y_CS_GetIdentityInfo\"l\n\033Identity_SC_GetI"
    "dentityInfo\022\016\n\006points\030\001 \001(\005\022\r\n\005vigor\030\002 \001"
    "(\005\022.\n\ridentity_list\030\003 \003(\0132\027.proto.messag"
    "e.Identity\"I\n\032Identity_CS_SelectIdentity"
    "\022+\n\005itype\030\001 \002(\0162\034.proto.message.eIdentit"
    "yType\"g\n\032Identity_SC_SelectIdentity\022\016\n\006r"
    "esult\030\001 \001(\005\022\016\n\006points\030\002 \001(\005\022)\n\010identity\030"
    "\003 \001(\0132\027.proto.message.Identity\"H\n\031Identi"
    "ty_CS_ResetIdentity\022+\n\005itype\030\001 \002(\0162\034.pro"
    "to.message.eIdentityType\"h\n\031Identity_SC_"
    "ResetIdentity\022\016\n\006result\030\001 \001(\005\022\016\n\006points\030"
    "\002 \001(\005\022+\n\005itype\030\003 \002(\0162\034.proto.message.eId"
    "entityType\"\\\n\032Identity_CS_ActivateTalent"
    "\022+\n\005itype\030\001 \002(\0162\034.proto.message.eIdentit"
    "yType\022\021\n\ttalent_id\030\002 \001(\005\"|\n\032Identity_SC_"
    "ActivateTalent\022\016\n\006result\030\001 \001(\005\022\016\n\006points"
    "\030\002 \001(\005\022+\n\005itype\030\003 \002(\0162\034.proto.message.eI"
    "dentityType\022\021\n\ttalent_id\030\004 \001(\005\"V\n\024Identi"
    "ty_CS_UpTalent\022+\n\005itype\030\001 \002(\0162\034.proto.me"
    "ssage.eIdentityType\022\021\n\ttalent_id\030\002 \001(\005\"\221"
    "\001\n\024Identity_SC_UpTalent\022\016\n\006result\030\001 \001(\005\022"
    "\016\n\006points\030\002 \001(\005\022+\n\005itype\030\003 \002(\0162\034.proto.m"
    "essage.eIdentityType\022\025\n\rtalent_id_bef\030\004 "
    "\001(\005\022\025\n\rtalent_id_now\030\005 \001(\005\"Y\n\031Identity_C"
    "S_SynthesisItem\022+\n\005itype\030\001 \002(\0162\034.proto.m"
    "essage.eIdentityType\022\017\n\007item_id\030\002 \001(\005\"\220\001"
    "\n\031Identity_SC_SynthesisItem\022\016\n\006result\030\001 "
    "\001(\005\022\r\n\005vigor\030\002 \001(\005\022+\n\005itype\030\003 \002(\0162\034.prot"
    "o.message.eIdentityType\022\017\n\007item_id\030\004 \001(\005"
    "\022\026\n\016talent_id_list\030\005 \003(\005*\231\001\n\reIdentityTy"
    "pe\022\022\n\016eIdentity_Null\020\000\022\024\n\020eIdentity_Kill"
    "er\020\001\022\024\n\020eIdentity_Hunter\020\002\022\024\n\020eIdentity_"
    "Pirate\020\003\022\031\n\025eIdentity_Businessman\020\004\022\027\n\023e"
    "Identity_Smugglers\020\005*\254\004\n\016eIdyTalentType\022"
    "\026\n\022eIdyTalent_Special\020\000\022\032\n\026eIdyTalent_Do"
    "ubleSword\020\001\022\032\n\026eIdyTalent_BoxingBlade\020\002\022"
    "\024\n\020eIdyTalent_Rifle\020\003\022\022\n\016eIdyTalent_Axe\020"
    "\004\022\033\n\027eIdyTalent_DeputyWeapon\020\005\022\025\n\021eIdyTa"
    "lent_Helmet\020\006\022\026\n\022eIdyTalent_Cuirass\020\007\022\023\n"
    "\017eIdyTalent_Belt\020\010\022\027\n\023eIdyTalent_LegArmo"
    "r\020\t\022\024\n\020eIdyTalent_Shoes\020\n\022\027\n\023eIdyTalent_"
    "MainSail\020\013\022\026\n\022eIdyTalent_SideGun\020\014\022\032\n\026eI"
    "dyTalent_SternRudder\020\r\022\027\n\023eIdyTalent_Cha"
    "inGun\020\016\022\025\n\021eIdyTalent_Rudder\020\017\022\025\n\021eIdyTa"
    "lent_Mortar\020\020\022\032\n\026eIdyTalent_ArmoredHull\020"
    "\021\022\022\n\016eIdyTalent_Ram\020\022\022\023\n\017eIdyTalent_Keel"
    "\020\023\022\033\n\027eIdyTalent_CyclotronGun\020\024\022\032\n\026eIdyT"
    "alent_ItemQuality\020\025B\017\n\rproto.message", 2036);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "identity.proto", &protobuf_RegisterTypes);
  Identity::default_instance_ = new Identity();
  Identity_CS_GetIdentityInfo::default_instance_ = new Identity_CS_GetIdentityInfo();
  Identity_SC_GetIdentityInfo::default_instance_ = new Identity_SC_GetIdentityInfo();
  Identity_CS_SelectIdentity::default_instance_ = new Identity_CS_SelectIdentity();
  Identity_SC_SelectIdentity::default_instance_ = new Identity_SC_SelectIdentity();
  Identity_CS_ResetIdentity::default_instance_ = new Identity_CS_ResetIdentity();
  Identity_SC_ResetIdentity::default_instance_ = new Identity_SC_ResetIdentity();
  Identity_CS_ActivateTalent::default_instance_ = new Identity_CS_ActivateTalent();
  Identity_SC_ActivateTalent::default_instance_ = new Identity_SC_ActivateTalent();
  Identity_CS_UpTalent::default_instance_ = new Identity_CS_UpTalent();
  Identity_SC_UpTalent::default_instance_ = new Identity_SC_UpTalent();
  Identity_CS_SynthesisItem::default_instance_ = new Identity_CS_SynthesisItem();
  Identity_SC_SynthesisItem::default_instance_ = new Identity_SC_SynthesisItem();
  Identity::default_instance_->InitAsDefaultInstance();
  Identity_CS_GetIdentityInfo::default_instance_->InitAsDefaultInstance();
  Identity_SC_GetIdentityInfo::default_instance_->InitAsDefaultInstance();
  Identity_CS_SelectIdentity::default_instance_->InitAsDefaultInstance();
  Identity_SC_SelectIdentity::default_instance_->InitAsDefaultInstance();
  Identity_CS_ResetIdentity::default_instance_->InitAsDefaultInstance();
  Identity_SC_ResetIdentity::default_instance_->InitAsDefaultInstance();
  Identity_CS_ActivateTalent::default_instance_->InitAsDefaultInstance();
  Identity_SC_ActivateTalent::default_instance_->InitAsDefaultInstance();
  Identity_CS_UpTalent::default_instance_->InitAsDefaultInstance();
  Identity_SC_UpTalent::default_instance_->InitAsDefaultInstance();
  Identity_CS_SynthesisItem::default_instance_->InitAsDefaultInstance();
  Identity_SC_SynthesisItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_identity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_identity_2eproto {
  StaticDescriptorInitializer_identity_2eproto() {
    protobuf_AddDesc_identity_2eproto();
  }
} static_descriptor_initializer_identity_2eproto_;
const ::google::protobuf::EnumDescriptor* eIdentityType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return eIdentityType_descriptor_;
}
bool eIdentityType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eIdyTalentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return eIdyTalentType_descriptor_;
}
bool eIdyTalentType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Identity::kItypeFieldNumber;
const int Identity::kTalentListFieldNumber;
#endif  // !_MSC_VER

Identity::Identity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity::InitAsDefaultInstance() {
}

Identity::Identity(const Identity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity::~Identity() {
  SharedDtor();
}

void Identity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_descriptor_;
}

const Identity& Identity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity* Identity::default_instance_ = NULL;

Identity* Identity::New() const {
  return new Identity;
}

void Identity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
  }
  talent_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.message.eIdentityType itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_talent_list;
        break;
      }

      // repeated int32 talent_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_talent_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_talent_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_talent_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itype(), output);
  }

  // repeated int32 talent_list = 2;
  for (int i = 0; i < this->talent_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->talent_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itype(), target);
  }

  // repeated int32 talent_list = 2;
  for (int i = 0; i < this->talent_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->talent_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.message.eIdentityType itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

  }
  // repeated int32 talent_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->talent_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->talent_list(i));
    }
    total_size += 1 * this->talent_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity::MergeFrom(const Identity& from) {
  GOOGLE_CHECK_NE(&from, this);
  talent_list_.MergeFrom(from.talent_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity::CopyFrom(const Identity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Identity::Swap(Identity* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    talent_list_.Swap(&other->talent_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_descriptor_;
  metadata.reflection = Identity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Identity_CS_GetIdentityInfo::Identity_CS_GetIdentityInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_CS_GetIdentityInfo::InitAsDefaultInstance() {
}

Identity_CS_GetIdentityInfo::Identity_CS_GetIdentityInfo(const Identity_CS_GetIdentityInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_CS_GetIdentityInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_CS_GetIdentityInfo::~Identity_CS_GetIdentityInfo() {
  SharedDtor();
}

void Identity_CS_GetIdentityInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_CS_GetIdentityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_CS_GetIdentityInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_CS_GetIdentityInfo_descriptor_;
}

const Identity_CS_GetIdentityInfo& Identity_CS_GetIdentityInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_CS_GetIdentityInfo* Identity_CS_GetIdentityInfo::default_instance_ = NULL;

Identity_CS_GetIdentityInfo* Identity_CS_GetIdentityInfo::New() const {
  return new Identity_CS_GetIdentityInfo;
}

void Identity_CS_GetIdentityInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_CS_GetIdentityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Identity_CS_GetIdentityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_CS_GetIdentityInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_CS_GetIdentityInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_CS_GetIdentityInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_CS_GetIdentityInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_CS_GetIdentityInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_CS_GetIdentityInfo::MergeFrom(const Identity_CS_GetIdentityInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_CS_GetIdentityInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_CS_GetIdentityInfo::CopyFrom(const Identity_CS_GetIdentityInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_CS_GetIdentityInfo::IsInitialized() const {

  return true;
}

void Identity_CS_GetIdentityInfo::Swap(Identity_CS_GetIdentityInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_CS_GetIdentityInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_CS_GetIdentityInfo_descriptor_;
  metadata.reflection = Identity_CS_GetIdentityInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_SC_GetIdentityInfo::kPointsFieldNumber;
const int Identity_SC_GetIdentityInfo::kVigorFieldNumber;
const int Identity_SC_GetIdentityInfo::kIdentityListFieldNumber;
#endif  // !_MSC_VER

Identity_SC_GetIdentityInfo::Identity_SC_GetIdentityInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_SC_GetIdentityInfo::InitAsDefaultInstance() {
}

Identity_SC_GetIdentityInfo::Identity_SC_GetIdentityInfo(const Identity_SC_GetIdentityInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_SC_GetIdentityInfo::SharedCtor() {
  _cached_size_ = 0;
  points_ = 0;
  vigor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_SC_GetIdentityInfo::~Identity_SC_GetIdentityInfo() {
  SharedDtor();
}

void Identity_SC_GetIdentityInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_SC_GetIdentityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_SC_GetIdentityInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_SC_GetIdentityInfo_descriptor_;
}

const Identity_SC_GetIdentityInfo& Identity_SC_GetIdentityInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_SC_GetIdentityInfo* Identity_SC_GetIdentityInfo::default_instance_ = NULL;

Identity_SC_GetIdentityInfo* Identity_SC_GetIdentityInfo::New() const {
  return new Identity_SC_GetIdentityInfo;
}

void Identity_SC_GetIdentityInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    points_ = 0;
    vigor_ = 0;
  }
  identity_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_SC_GetIdentityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 points = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vigor;
        break;
      }

      // optional int32 vigor = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vigor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vigor_)));
          set_has_vigor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_identity_list;
        break;
      }

      // repeated .proto.message.Identity identity_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_identity_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_identity_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_identity_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_SC_GetIdentityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 points = 1;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->points(), output);
  }

  // optional int32 vigor = 2;
  if (has_vigor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vigor(), output);
  }

  // repeated .proto.message.Identity identity_list = 3;
  for (int i = 0; i < this->identity_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->identity_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_SC_GetIdentityInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 points = 1;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->points(), target);
  }

  // optional int32 vigor = 2;
  if (has_vigor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vigor(), target);
  }

  // repeated .proto.message.Identity identity_list = 3;
  for (int i = 0; i < this->identity_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->identity_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_SC_GetIdentityInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 points = 1;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->points());
    }

    // optional int32 vigor = 2;
    if (has_vigor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vigor());
    }

  }
  // repeated .proto.message.Identity identity_list = 3;
  total_size += 1 * this->identity_list_size();
  for (int i = 0; i < this->identity_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->identity_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_SC_GetIdentityInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_SC_GetIdentityInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_SC_GetIdentityInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_SC_GetIdentityInfo::MergeFrom(const Identity_SC_GetIdentityInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  identity_list_.MergeFrom(from.identity_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_points()) {
      set_points(from.points());
    }
    if (from.has_vigor()) {
      set_vigor(from.vigor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_SC_GetIdentityInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_SC_GetIdentityInfo::CopyFrom(const Identity_SC_GetIdentityInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_SC_GetIdentityInfo::IsInitialized() const {

  for (int i = 0; i < identity_list_size(); i++) {
    if (!this->identity_list(i).IsInitialized()) return false;
  }
  return true;
}

void Identity_SC_GetIdentityInfo::Swap(Identity_SC_GetIdentityInfo* other) {
  if (other != this) {
    std::swap(points_, other->points_);
    std::swap(vigor_, other->vigor_);
    identity_list_.Swap(&other->identity_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_SC_GetIdentityInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_SC_GetIdentityInfo_descriptor_;
  metadata.reflection = Identity_SC_GetIdentityInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_CS_SelectIdentity::kItypeFieldNumber;
#endif  // !_MSC_VER

Identity_CS_SelectIdentity::Identity_CS_SelectIdentity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_CS_SelectIdentity::InitAsDefaultInstance() {
}

Identity_CS_SelectIdentity::Identity_CS_SelectIdentity(const Identity_CS_SelectIdentity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_CS_SelectIdentity::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_CS_SelectIdentity::~Identity_CS_SelectIdentity() {
  SharedDtor();
}

void Identity_CS_SelectIdentity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_CS_SelectIdentity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_CS_SelectIdentity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_CS_SelectIdentity_descriptor_;
}

const Identity_CS_SelectIdentity& Identity_CS_SelectIdentity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_CS_SelectIdentity* Identity_CS_SelectIdentity::default_instance_ = NULL;

Identity_CS_SelectIdentity* Identity_CS_SelectIdentity::New() const {
  return new Identity_CS_SelectIdentity;
}

void Identity_CS_SelectIdentity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_CS_SelectIdentity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.message.eIdentityType itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_CS_SelectIdentity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_CS_SelectIdentity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_CS_SelectIdentity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.message.eIdentityType itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_CS_SelectIdentity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_CS_SelectIdentity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_CS_SelectIdentity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_CS_SelectIdentity::MergeFrom(const Identity_CS_SelectIdentity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_CS_SelectIdentity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_CS_SelectIdentity::CopyFrom(const Identity_CS_SelectIdentity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_CS_SelectIdentity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Identity_CS_SelectIdentity::Swap(Identity_CS_SelectIdentity* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_CS_SelectIdentity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_CS_SelectIdentity_descriptor_;
  metadata.reflection = Identity_CS_SelectIdentity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_SC_SelectIdentity::kResultFieldNumber;
const int Identity_SC_SelectIdentity::kPointsFieldNumber;
const int Identity_SC_SelectIdentity::kIdentityFieldNumber;
#endif  // !_MSC_VER

Identity_SC_SelectIdentity::Identity_SC_SelectIdentity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_SC_SelectIdentity::InitAsDefaultInstance() {
  identity_ = const_cast< ::proto::message::Identity*>(&::proto::message::Identity::default_instance());
}

Identity_SC_SelectIdentity::Identity_SC_SelectIdentity(const Identity_SC_SelectIdentity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_SC_SelectIdentity::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  points_ = 0;
  identity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_SC_SelectIdentity::~Identity_SC_SelectIdentity() {
  SharedDtor();
}

void Identity_SC_SelectIdentity::SharedDtor() {
  if (this != default_instance_) {
    delete identity_;
  }
}

void Identity_SC_SelectIdentity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_SC_SelectIdentity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_SC_SelectIdentity_descriptor_;
}

const Identity_SC_SelectIdentity& Identity_SC_SelectIdentity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_SC_SelectIdentity* Identity_SC_SelectIdentity::default_instance_ = NULL;

Identity_SC_SelectIdentity* Identity_SC_SelectIdentity::New() const {
  return new Identity_SC_SelectIdentity;
}

void Identity_SC_SelectIdentity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    points_ = 0;
    if (has_identity()) {
      if (identity_ != NULL) identity_->::proto::message::Identity::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_SC_SelectIdentity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_points;
        break;
      }

      // optional int32 points = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_points:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_identity;
        break;
      }

      // optional .proto.message.Identity identity = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_identity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_identity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_SC_SelectIdentity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 points = 2;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->points(), output);
  }

  // optional .proto.message.Identity identity = 3;
  if (has_identity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->identity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_SC_SelectIdentity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 points = 2;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->points(), target);
  }

  // optional .proto.message.Identity identity = 3;
  if (has_identity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->identity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_SC_SelectIdentity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 points = 2;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->points());
    }

    // optional .proto.message.Identity identity = 3;
    if (has_identity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->identity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_SC_SelectIdentity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_SC_SelectIdentity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_SC_SelectIdentity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_SC_SelectIdentity::MergeFrom(const Identity_SC_SelectIdentity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_points()) {
      set_points(from.points());
    }
    if (from.has_identity()) {
      mutable_identity()->::proto::message::Identity::MergeFrom(from.identity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_SC_SelectIdentity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_SC_SelectIdentity::CopyFrom(const Identity_SC_SelectIdentity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_SC_SelectIdentity::IsInitialized() const {

  if (has_identity()) {
    if (!this->identity().IsInitialized()) return false;
  }
  return true;
}

void Identity_SC_SelectIdentity::Swap(Identity_SC_SelectIdentity* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(points_, other->points_);
    std::swap(identity_, other->identity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_SC_SelectIdentity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_SC_SelectIdentity_descriptor_;
  metadata.reflection = Identity_SC_SelectIdentity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_CS_ResetIdentity::kItypeFieldNumber;
#endif  // !_MSC_VER

Identity_CS_ResetIdentity::Identity_CS_ResetIdentity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_CS_ResetIdentity::InitAsDefaultInstance() {
}

Identity_CS_ResetIdentity::Identity_CS_ResetIdentity(const Identity_CS_ResetIdentity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_CS_ResetIdentity::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_CS_ResetIdentity::~Identity_CS_ResetIdentity() {
  SharedDtor();
}

void Identity_CS_ResetIdentity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_CS_ResetIdentity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_CS_ResetIdentity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_CS_ResetIdentity_descriptor_;
}

const Identity_CS_ResetIdentity& Identity_CS_ResetIdentity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_CS_ResetIdentity* Identity_CS_ResetIdentity::default_instance_ = NULL;

Identity_CS_ResetIdentity* Identity_CS_ResetIdentity::New() const {
  return new Identity_CS_ResetIdentity;
}

void Identity_CS_ResetIdentity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_CS_ResetIdentity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.message.eIdentityType itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_CS_ResetIdentity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_CS_ResetIdentity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_CS_ResetIdentity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.message.eIdentityType itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_CS_ResetIdentity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_CS_ResetIdentity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_CS_ResetIdentity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_CS_ResetIdentity::MergeFrom(const Identity_CS_ResetIdentity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_CS_ResetIdentity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_CS_ResetIdentity::CopyFrom(const Identity_CS_ResetIdentity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_CS_ResetIdentity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Identity_CS_ResetIdentity::Swap(Identity_CS_ResetIdentity* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_CS_ResetIdentity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_CS_ResetIdentity_descriptor_;
  metadata.reflection = Identity_CS_ResetIdentity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_SC_ResetIdentity::kResultFieldNumber;
const int Identity_SC_ResetIdentity::kPointsFieldNumber;
const int Identity_SC_ResetIdentity::kItypeFieldNumber;
#endif  // !_MSC_VER

Identity_SC_ResetIdentity::Identity_SC_ResetIdentity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_SC_ResetIdentity::InitAsDefaultInstance() {
}

Identity_SC_ResetIdentity::Identity_SC_ResetIdentity(const Identity_SC_ResetIdentity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_SC_ResetIdentity::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  points_ = 0;
  itype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_SC_ResetIdentity::~Identity_SC_ResetIdentity() {
  SharedDtor();
}

void Identity_SC_ResetIdentity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_SC_ResetIdentity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_SC_ResetIdentity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_SC_ResetIdentity_descriptor_;
}

const Identity_SC_ResetIdentity& Identity_SC_ResetIdentity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_SC_ResetIdentity* Identity_SC_ResetIdentity::default_instance_ = NULL;

Identity_SC_ResetIdentity* Identity_SC_ResetIdentity::New() const {
  return new Identity_SC_ResetIdentity;
}

void Identity_SC_ResetIdentity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    points_ = 0;
    itype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_SC_ResetIdentity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_points;
        break;
      }

      // optional int32 points = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_points:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itype;
        break;
      }

      // required .proto.message.eIdentityType itype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_SC_ResetIdentity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 points = 2;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->points(), output);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->itype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_SC_ResetIdentity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 points = 2;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->points(), target);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->itype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_SC_ResetIdentity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 points = 2;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->points());
    }

    // required .proto.message.eIdentityType itype = 3;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_SC_ResetIdentity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_SC_ResetIdentity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_SC_ResetIdentity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_SC_ResetIdentity::MergeFrom(const Identity_SC_ResetIdentity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_points()) {
      set_points(from.points());
    }
    if (from.has_itype()) {
      set_itype(from.itype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_SC_ResetIdentity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_SC_ResetIdentity::CopyFrom(const Identity_SC_ResetIdentity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_SC_ResetIdentity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void Identity_SC_ResetIdentity::Swap(Identity_SC_ResetIdentity* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(points_, other->points_);
    std::swap(itype_, other->itype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_SC_ResetIdentity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_SC_ResetIdentity_descriptor_;
  metadata.reflection = Identity_SC_ResetIdentity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_CS_ActivateTalent::kItypeFieldNumber;
const int Identity_CS_ActivateTalent::kTalentIdFieldNumber;
#endif  // !_MSC_VER

Identity_CS_ActivateTalent::Identity_CS_ActivateTalent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_CS_ActivateTalent::InitAsDefaultInstance() {
}

Identity_CS_ActivateTalent::Identity_CS_ActivateTalent(const Identity_CS_ActivateTalent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_CS_ActivateTalent::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  talent_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_CS_ActivateTalent::~Identity_CS_ActivateTalent() {
  SharedDtor();
}

void Identity_CS_ActivateTalent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_CS_ActivateTalent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_CS_ActivateTalent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_CS_ActivateTalent_descriptor_;
}

const Identity_CS_ActivateTalent& Identity_CS_ActivateTalent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_CS_ActivateTalent* Identity_CS_ActivateTalent::default_instance_ = NULL;

Identity_CS_ActivateTalent* Identity_CS_ActivateTalent::New() const {
  return new Identity_CS_ActivateTalent;
}

void Identity_CS_ActivateTalent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
    talent_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_CS_ActivateTalent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.message.eIdentityType itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_talent_id;
        break;
      }

      // optional int32 talent_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talent_id_)));
          set_has_talent_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_CS_ActivateTalent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itype(), output);
  }

  // optional int32 talent_id = 2;
  if (has_talent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->talent_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_CS_ActivateTalent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itype(), target);
  }

  // optional int32 talent_id = 2;
  if (has_talent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->talent_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_CS_ActivateTalent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.message.eIdentityType itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

    // optional int32 talent_id = 2;
    if (has_talent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->talent_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_CS_ActivateTalent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_CS_ActivateTalent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_CS_ActivateTalent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_CS_ActivateTalent::MergeFrom(const Identity_CS_ActivateTalent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
    if (from.has_talent_id()) {
      set_talent_id(from.talent_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_CS_ActivateTalent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_CS_ActivateTalent::CopyFrom(const Identity_CS_ActivateTalent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_CS_ActivateTalent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Identity_CS_ActivateTalent::Swap(Identity_CS_ActivateTalent* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    std::swap(talent_id_, other->talent_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_CS_ActivateTalent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_CS_ActivateTalent_descriptor_;
  metadata.reflection = Identity_CS_ActivateTalent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_SC_ActivateTalent::kResultFieldNumber;
const int Identity_SC_ActivateTalent::kPointsFieldNumber;
const int Identity_SC_ActivateTalent::kItypeFieldNumber;
const int Identity_SC_ActivateTalent::kTalentIdFieldNumber;
#endif  // !_MSC_VER

Identity_SC_ActivateTalent::Identity_SC_ActivateTalent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_SC_ActivateTalent::InitAsDefaultInstance() {
}

Identity_SC_ActivateTalent::Identity_SC_ActivateTalent(const Identity_SC_ActivateTalent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_SC_ActivateTalent::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  points_ = 0;
  itype_ = 0;
  talent_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_SC_ActivateTalent::~Identity_SC_ActivateTalent() {
  SharedDtor();
}

void Identity_SC_ActivateTalent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_SC_ActivateTalent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_SC_ActivateTalent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_SC_ActivateTalent_descriptor_;
}

const Identity_SC_ActivateTalent& Identity_SC_ActivateTalent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_SC_ActivateTalent* Identity_SC_ActivateTalent::default_instance_ = NULL;

Identity_SC_ActivateTalent* Identity_SC_ActivateTalent::New() const {
  return new Identity_SC_ActivateTalent;
}

void Identity_SC_ActivateTalent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    points_ = 0;
    itype_ = 0;
    talent_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_SC_ActivateTalent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_points;
        break;
      }

      // optional int32 points = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_points:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itype;
        break;
      }

      // required .proto.message.eIdentityType itype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_talent_id;
        break;
      }

      // optional int32 talent_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talent_id_)));
          set_has_talent_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_SC_ActivateTalent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 points = 2;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->points(), output);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->itype(), output);
  }

  // optional int32 talent_id = 4;
  if (has_talent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->talent_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_SC_ActivateTalent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 points = 2;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->points(), target);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->itype(), target);
  }

  // optional int32 talent_id = 4;
  if (has_talent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->talent_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_SC_ActivateTalent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 points = 2;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->points());
    }

    // required .proto.message.eIdentityType itype = 3;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

    // optional int32 talent_id = 4;
    if (has_talent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->talent_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_SC_ActivateTalent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_SC_ActivateTalent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_SC_ActivateTalent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_SC_ActivateTalent::MergeFrom(const Identity_SC_ActivateTalent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_points()) {
      set_points(from.points());
    }
    if (from.has_itype()) {
      set_itype(from.itype());
    }
    if (from.has_talent_id()) {
      set_talent_id(from.talent_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_SC_ActivateTalent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_SC_ActivateTalent::CopyFrom(const Identity_SC_ActivateTalent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_SC_ActivateTalent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void Identity_SC_ActivateTalent::Swap(Identity_SC_ActivateTalent* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(points_, other->points_);
    std::swap(itype_, other->itype_);
    std::swap(talent_id_, other->talent_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_SC_ActivateTalent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_SC_ActivateTalent_descriptor_;
  metadata.reflection = Identity_SC_ActivateTalent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_CS_UpTalent::kItypeFieldNumber;
const int Identity_CS_UpTalent::kTalentIdFieldNumber;
#endif  // !_MSC_VER

Identity_CS_UpTalent::Identity_CS_UpTalent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_CS_UpTalent::InitAsDefaultInstance() {
}

Identity_CS_UpTalent::Identity_CS_UpTalent(const Identity_CS_UpTalent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_CS_UpTalent::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  talent_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_CS_UpTalent::~Identity_CS_UpTalent() {
  SharedDtor();
}

void Identity_CS_UpTalent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_CS_UpTalent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_CS_UpTalent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_CS_UpTalent_descriptor_;
}

const Identity_CS_UpTalent& Identity_CS_UpTalent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_CS_UpTalent* Identity_CS_UpTalent::default_instance_ = NULL;

Identity_CS_UpTalent* Identity_CS_UpTalent::New() const {
  return new Identity_CS_UpTalent;
}

void Identity_CS_UpTalent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
    talent_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_CS_UpTalent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.message.eIdentityType itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_talent_id;
        break;
      }

      // optional int32 talent_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talent_id_)));
          set_has_talent_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_CS_UpTalent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itype(), output);
  }

  // optional int32 talent_id = 2;
  if (has_talent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->talent_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_CS_UpTalent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itype(), target);
  }

  // optional int32 talent_id = 2;
  if (has_talent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->talent_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_CS_UpTalent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.message.eIdentityType itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

    // optional int32 talent_id = 2;
    if (has_talent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->talent_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_CS_UpTalent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_CS_UpTalent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_CS_UpTalent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_CS_UpTalent::MergeFrom(const Identity_CS_UpTalent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
    if (from.has_talent_id()) {
      set_talent_id(from.talent_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_CS_UpTalent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_CS_UpTalent::CopyFrom(const Identity_CS_UpTalent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_CS_UpTalent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Identity_CS_UpTalent::Swap(Identity_CS_UpTalent* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    std::swap(talent_id_, other->talent_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_CS_UpTalent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_CS_UpTalent_descriptor_;
  metadata.reflection = Identity_CS_UpTalent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_SC_UpTalent::kResultFieldNumber;
const int Identity_SC_UpTalent::kPointsFieldNumber;
const int Identity_SC_UpTalent::kItypeFieldNumber;
const int Identity_SC_UpTalent::kTalentIdBefFieldNumber;
const int Identity_SC_UpTalent::kTalentIdNowFieldNumber;
#endif  // !_MSC_VER

Identity_SC_UpTalent::Identity_SC_UpTalent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_SC_UpTalent::InitAsDefaultInstance() {
}

Identity_SC_UpTalent::Identity_SC_UpTalent(const Identity_SC_UpTalent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_SC_UpTalent::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  points_ = 0;
  itype_ = 0;
  talent_id_bef_ = 0;
  talent_id_now_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_SC_UpTalent::~Identity_SC_UpTalent() {
  SharedDtor();
}

void Identity_SC_UpTalent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_SC_UpTalent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_SC_UpTalent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_SC_UpTalent_descriptor_;
}

const Identity_SC_UpTalent& Identity_SC_UpTalent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_SC_UpTalent* Identity_SC_UpTalent::default_instance_ = NULL;

Identity_SC_UpTalent* Identity_SC_UpTalent::New() const {
  return new Identity_SC_UpTalent;
}

void Identity_SC_UpTalent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    points_ = 0;
    itype_ = 0;
    talent_id_bef_ = 0;
    talent_id_now_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_SC_UpTalent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_points;
        break;
      }

      // optional int32 points = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_points:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itype;
        break;
      }

      // required .proto.message.eIdentityType itype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_talent_id_bef;
        break;
      }

      // optional int32 talent_id_bef = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_id_bef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talent_id_bef_)));
          set_has_talent_id_bef();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_talent_id_now;
        break;
      }

      // optional int32 talent_id_now = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_id_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talent_id_now_)));
          set_has_talent_id_now();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_SC_UpTalent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 points = 2;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->points(), output);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->itype(), output);
  }

  // optional int32 talent_id_bef = 4;
  if (has_talent_id_bef()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->talent_id_bef(), output);
  }

  // optional int32 talent_id_now = 5;
  if (has_talent_id_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->talent_id_now(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_SC_UpTalent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 points = 2;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->points(), target);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->itype(), target);
  }

  // optional int32 talent_id_bef = 4;
  if (has_talent_id_bef()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->talent_id_bef(), target);
  }

  // optional int32 talent_id_now = 5;
  if (has_talent_id_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->talent_id_now(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_SC_UpTalent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 points = 2;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->points());
    }

    // required .proto.message.eIdentityType itype = 3;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

    // optional int32 talent_id_bef = 4;
    if (has_talent_id_bef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->talent_id_bef());
    }

    // optional int32 talent_id_now = 5;
    if (has_talent_id_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->talent_id_now());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_SC_UpTalent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_SC_UpTalent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_SC_UpTalent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_SC_UpTalent::MergeFrom(const Identity_SC_UpTalent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_points()) {
      set_points(from.points());
    }
    if (from.has_itype()) {
      set_itype(from.itype());
    }
    if (from.has_talent_id_bef()) {
      set_talent_id_bef(from.talent_id_bef());
    }
    if (from.has_talent_id_now()) {
      set_talent_id_now(from.talent_id_now());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_SC_UpTalent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_SC_UpTalent::CopyFrom(const Identity_SC_UpTalent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_SC_UpTalent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void Identity_SC_UpTalent::Swap(Identity_SC_UpTalent* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(points_, other->points_);
    std::swap(itype_, other->itype_);
    std::swap(talent_id_bef_, other->talent_id_bef_);
    std::swap(talent_id_now_, other->talent_id_now_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_SC_UpTalent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_SC_UpTalent_descriptor_;
  metadata.reflection = Identity_SC_UpTalent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_CS_SynthesisItem::kItypeFieldNumber;
const int Identity_CS_SynthesisItem::kItemIdFieldNumber;
#endif  // !_MSC_VER

Identity_CS_SynthesisItem::Identity_CS_SynthesisItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_CS_SynthesisItem::InitAsDefaultInstance() {
}

Identity_CS_SynthesisItem::Identity_CS_SynthesisItem(const Identity_CS_SynthesisItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_CS_SynthesisItem::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_CS_SynthesisItem::~Identity_CS_SynthesisItem() {
  SharedDtor();
}

void Identity_CS_SynthesisItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_CS_SynthesisItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_CS_SynthesisItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_CS_SynthesisItem_descriptor_;
}

const Identity_CS_SynthesisItem& Identity_CS_SynthesisItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_CS_SynthesisItem* Identity_CS_SynthesisItem::default_instance_ = NULL;

Identity_CS_SynthesisItem* Identity_CS_SynthesisItem::New() const {
  return new Identity_CS_SynthesisItem;
}

void Identity_CS_SynthesisItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_CS_SynthesisItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.message.eIdentityType itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_CS_SynthesisItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itype(), output);
  }

  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_CS_SynthesisItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.message.eIdentityType itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itype(), target);
  }

  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_CS_SynthesisItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.message.eIdentityType itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_CS_SynthesisItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_CS_SynthesisItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_CS_SynthesisItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_CS_SynthesisItem::MergeFrom(const Identity_CS_SynthesisItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_CS_SynthesisItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_CS_SynthesisItem::CopyFrom(const Identity_CS_SynthesisItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_CS_SynthesisItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Identity_CS_SynthesisItem::Swap(Identity_CS_SynthesisItem* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_CS_SynthesisItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_CS_SynthesisItem_descriptor_;
  metadata.reflection = Identity_CS_SynthesisItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Identity_SC_SynthesisItem::kResultFieldNumber;
const int Identity_SC_SynthesisItem::kVigorFieldNumber;
const int Identity_SC_SynthesisItem::kItypeFieldNumber;
const int Identity_SC_SynthesisItem::kItemIdFieldNumber;
const int Identity_SC_SynthesisItem::kTalentIdListFieldNumber;
#endif  // !_MSC_VER

Identity_SC_SynthesisItem::Identity_SC_SynthesisItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Identity_SC_SynthesisItem::InitAsDefaultInstance() {
}

Identity_SC_SynthesisItem::Identity_SC_SynthesisItem(const Identity_SC_SynthesisItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Identity_SC_SynthesisItem::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  vigor_ = 0;
  itype_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Identity_SC_SynthesisItem::~Identity_SC_SynthesisItem() {
  SharedDtor();
}

void Identity_SC_SynthesisItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Identity_SC_SynthesisItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identity_SC_SynthesisItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Identity_SC_SynthesisItem_descriptor_;
}

const Identity_SC_SynthesisItem& Identity_SC_SynthesisItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_identity_2eproto();
  return *default_instance_;
}

Identity_SC_SynthesisItem* Identity_SC_SynthesisItem::default_instance_ = NULL;

Identity_SC_SynthesisItem* Identity_SC_SynthesisItem::New() const {
  return new Identity_SC_SynthesisItem;
}

void Identity_SC_SynthesisItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    vigor_ = 0;
    itype_ = 0;
    item_id_ = 0;
  }
  talent_id_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Identity_SC_SynthesisItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vigor;
        break;
      }

      // optional int32 vigor = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vigor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vigor_)));
          set_has_vigor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itype;
        break;
      }

      // required .proto.message.eIdentityType itype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::message::eIdentityType_IsValid(value)) {
            set_itype(static_cast< ::proto::message::eIdentityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_id;
        break;
      }

      // optional int32 item_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_talent_id_list;
        break;
      }

      // repeated int32 talent_id_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_talent_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_talent_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_talent_id_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Identity_SC_SynthesisItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 vigor = 2;
  if (has_vigor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vigor(), output);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->itype(), output);
  }

  // optional int32 item_id = 4;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_id(), output);
  }

  // repeated int32 talent_id_list = 5;
  for (int i = 0; i < this->talent_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->talent_id_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Identity_SC_SynthesisItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 vigor = 2;
  if (has_vigor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vigor(), target);
  }

  // required .proto.message.eIdentityType itype = 3;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->itype(), target);
  }

  // optional int32 item_id = 4;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_id(), target);
  }

  // repeated int32 talent_id_list = 5;
  for (int i = 0; i < this->talent_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->talent_id_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Identity_SC_SynthesisItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 vigor = 2;
    if (has_vigor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vigor());
    }

    // required .proto.message.eIdentityType itype = 3;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itype());
    }

    // optional int32 item_id = 4;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

  }
  // repeated int32 talent_id_list = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->talent_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->talent_id_list(i));
    }
    total_size += 1 * this->talent_id_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identity_SC_SynthesisItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Identity_SC_SynthesisItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Identity_SC_SynthesisItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Identity_SC_SynthesisItem::MergeFrom(const Identity_SC_SynthesisItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  talent_id_list_.MergeFrom(from.talent_id_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_vigor()) {
      set_vigor(from.vigor());
    }
    if (from.has_itype()) {
      set_itype(from.itype());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Identity_SC_SynthesisItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity_SC_SynthesisItem::CopyFrom(const Identity_SC_SynthesisItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity_SC_SynthesisItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void Identity_SC_SynthesisItem::Swap(Identity_SC_SynthesisItem* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(vigor_, other->vigor_);
    std::swap(itype_, other->itype_);
    std::swap(item_id_, other->item_id_);
    talent_id_list_.Swap(&other->talent_id_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Identity_SC_SynthesisItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Identity_SC_SynthesisItem_descriptor_;
  metadata.reflection = Identity_SC_SynthesisItem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

// @@protoc_insertion_point(global_scope)
