// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pet.proto

#ifndef PROTOBUF_pet_2eproto__INCLUDED
#define PROTOBUF_pet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pet_2eproto();
void protobuf_AssignDesc_pet_2eproto();
void protobuf_ShutdownFile_pet_2eproto();

class ProtoPetEquipCell;
class ProtoPetCellInfo;
class ProtoPetAllCellInfo;
class Pet_CS_GetPetInfo;
class Pet_SC_GetPetInfo;
class Pet_SC_UpdateSinglePetInfo;
class Pet_CS_OperaCell;
class Pet_SC_OperaCell;
class Pet_CS_PutOnPetEquip;
class Pet_SC_PutOnPetEquip;
class Pet_CS_GetOffPetEquip;
class Pet_SC_GetOffPetEquip;

// ===================================================================

class ProtoPetEquipCell : public ::google::protobuf::Message {
 public:
  ProtoPetEquipCell();
  virtual ~ProtoPetEquipCell();

  ProtoPetEquipCell(const ProtoPetEquipCell& from);

  inline ProtoPetEquipCell& operator=(const ProtoPetEquipCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPetEquipCell& default_instance();

  void Swap(ProtoPetEquipCell* other);

  // implements Message ----------------------------------------------

  ProtoPetEquipCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPetEquipCell& from);
  void MergeFrom(const ProtoPetEquipCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 equipid = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 1;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // required bool isOpen = 2;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 2;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoPetEquipCell)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_isopen();
  inline void clear_has_isopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 equipid_;
  bool isopen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static ProtoPetEquipCell* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPetCellInfo : public ::google::protobuf::Message {
 public:
  ProtoPetCellInfo();
  virtual ~ProtoPetCellInfo();

  ProtoPetCellInfo(const ProtoPetCellInfo& from);

  inline ProtoPetCellInfo& operator=(const ProtoPetCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPetCellInfo& default_instance();

  void Swap(ProtoPetCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoPetCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPetCellInfo& from);
  void MergeFrom(const ProtoPetCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // optional bool isActive = 2;
  inline bool has_isactive() const;
  inline void clear_isactive();
  static const int kIsActiveFieldNumber = 2;
  inline bool isactive() const;
  inline void set_isactive(bool value);

  // optional bool isUse = 3;
  inline bool has_isuse() const;
  inline void clear_isuse();
  static const int kIsUseFieldNumber = 3;
  inline bool isuse() const;
  inline void set_isuse(bool value);

  // optional uint32 petId = 4;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetIdFieldNumber = 4;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional uint32 strLv = 5;
  inline bool has_strlv() const;
  inline void clear_strlv();
  static const int kStrLvFieldNumber = 5;
  inline ::google::protobuf::uint32 strlv() const;
  inline void set_strlv(::google::protobuf::uint32 value);

  // optional uint32 luckyValue = 6;
  inline bool has_luckyvalue() const;
  inline void clear_luckyvalue();
  static const int kLuckyValueFieldNumber = 6;
  inline ::google::protobuf::uint32 luckyvalue() const;
  inline void set_luckyvalue(::google::protobuf::uint32 value);

  // optional uint32 skills = 7;
  inline bool has_skills() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 7;
  inline ::google::protobuf::uint32 skills() const;
  inline void set_skills(::google::protobuf::uint32 value);

  // optional uint32 activeType = 8;
  inline bool has_activetype() const;
  inline void clear_activetype();
  static const int kActiveTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 activetype() const;
  inline void set_activetype(::google::protobuf::uint32 value);

  // optional uint32 activeNowValue = 9;
  inline bool has_activenowvalue() const;
  inline void clear_activenowvalue();
  static const int kActiveNowValueFieldNumber = 9;
  inline ::google::protobuf::uint32 activenowvalue() const;
  inline void set_activenowvalue(::google::protobuf::uint32 value);

  // repeated .proto.message.ProtoPetEquipCell equips = 10;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 10;
  inline const ::proto::message::ProtoPetEquipCell& equips(int index) const;
  inline ::proto::message::ProtoPetEquipCell* mutable_equips(int index);
  inline ::proto::message::ProtoPetEquipCell* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetEquipCell >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetEquipCell >*
      mutable_equips();

  // repeated .proto.message.Equip petequipgird_list = 11;
  inline int petequipgird_list_size() const;
  inline void clear_petequipgird_list();
  static const int kPetequipgirdListFieldNumber = 11;
  inline const ::proto::message::Equip& petequipgird_list(int index) const;
  inline ::proto::message::Equip* mutable_petequipgird_list(int index);
  inline ::proto::message::Equip* add_petequipgird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      petequipgird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_petequipgird_list();

  // optional uint32 eatFoodId = 12;
  inline bool has_eatfoodid() const;
  inline void clear_eatfoodid();
  static const int kEatFoodIdFieldNumber = 12;
  inline ::google::protobuf::uint32 eatfoodid() const;
  inline void set_eatfoodid(::google::protobuf::uint32 value);

  // optional uint32 eatFoodNum = 13;
  inline bool has_eatfoodnum() const;
  inline void clear_eatfoodnum();
  static const int kEatFoodNumFieldNumber = 13;
  inline ::google::protobuf::uint32 eatfoodnum() const;
  inline void set_eatfoodnum(::google::protobuf::uint32 value);

  // optional uint32 ranking = 14;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 14;
  inline ::google::protobuf::uint32 ranking() const;
  inline void set_ranking(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoPetCellInfo)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_isactive();
  inline void clear_has_isactive();
  inline void set_has_isuse();
  inline void clear_has_isuse();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_strlv();
  inline void clear_has_strlv();
  inline void set_has_luckyvalue();
  inline void clear_has_luckyvalue();
  inline void set_has_skills();
  inline void clear_has_skills();
  inline void set_has_activetype();
  inline void clear_has_activetype();
  inline void set_has_activenowvalue();
  inline void clear_has_activenowvalue();
  inline void set_has_eatfoodid();
  inline void clear_has_eatfoodid();
  inline void set_has_eatfoodnum();
  inline void clear_has_eatfoodnum();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  bool isactive_;
  bool isuse_;
  ::google::protobuf::uint32 petid_;
  ::google::protobuf::uint32 strlv_;
  ::google::protobuf::uint32 luckyvalue_;
  ::google::protobuf::uint32 skills_;
  ::google::protobuf::uint32 activetype_;
  ::google::protobuf::uint32 activenowvalue_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetEquipCell > equips_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > petequipgird_list_;
  ::google::protobuf::uint32 eatfoodid_;
  ::google::protobuf::uint32 eatfoodnum_;
  ::google::protobuf::uint32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static ProtoPetCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPetAllCellInfo : public ::google::protobuf::Message {
 public:
  ProtoPetAllCellInfo();
  virtual ~ProtoPetAllCellInfo();

  ProtoPetAllCellInfo(const ProtoPetAllCellInfo& from);

  inline ProtoPetAllCellInfo& operator=(const ProtoPetAllCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPetAllCellInfo& default_instance();

  void Swap(ProtoPetAllCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoPetAllCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPetAllCellInfo& from);
  void MergeFrom(const ProtoPetAllCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoPetCellInfo allInfo = 1;
  inline int allinfo_size() const;
  inline void clear_allinfo();
  static const int kAllInfoFieldNumber = 1;
  inline const ::proto::message::ProtoPetCellInfo& allinfo(int index) const;
  inline ::proto::message::ProtoPetCellInfo* mutable_allinfo(int index);
  inline ::proto::message::ProtoPetCellInfo* add_allinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >&
      allinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >*
      mutable_allinfo();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoPetAllCellInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo > allinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static ProtoPetAllCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class Pet_CS_GetPetInfo : public ::google::protobuf::Message {
 public:
  Pet_CS_GetPetInfo();
  virtual ~Pet_CS_GetPetInfo();

  Pet_CS_GetPetInfo(const Pet_CS_GetPetInfo& from);

  inline Pet_CS_GetPetInfo& operator=(const Pet_CS_GetPetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_CS_GetPetInfo& default_instance();

  void Swap(Pet_CS_GetPetInfo* other);

  // implements Message ----------------------------------------------

  Pet_CS_GetPetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_CS_GetPetInfo& from);
  void MergeFrom(const Pet_CS_GetPetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Pet_CS_GetPetInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_CS_GetPetInfo* default_instance_;
};
// -------------------------------------------------------------------

class Pet_SC_GetPetInfo : public ::google::protobuf::Message {
 public:
  Pet_SC_GetPetInfo();
  virtual ~Pet_SC_GetPetInfo();

  Pet_SC_GetPetInfo(const Pet_SC_GetPetInfo& from);

  inline Pet_SC_GetPetInfo& operator=(const Pet_SC_GetPetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_SC_GetPetInfo& default_instance();

  void Swap(Pet_SC_GetPetInfo* other);

  // implements Message ----------------------------------------------

  Pet_SC_GetPetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_SC_GetPetInfo& from);
  void MergeFrom(const Pet_SC_GetPetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoPetCellInfo infoList = 2;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 2;
  inline const ::proto::message::ProtoPetCellInfo& infolist(int index) const;
  inline ::proto::message::ProtoPetCellInfo* mutable_infolist(int index);
  inline ::proto::message::ProtoPetCellInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:proto.message.Pet_SC_GetPetInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo > infolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_SC_GetPetInfo* default_instance_;
};
// -------------------------------------------------------------------

class Pet_SC_UpdateSinglePetInfo : public ::google::protobuf::Message {
 public:
  Pet_SC_UpdateSinglePetInfo();
  virtual ~Pet_SC_UpdateSinglePetInfo();

  Pet_SC_UpdateSinglePetInfo(const Pet_SC_UpdateSinglePetInfo& from);

  inline Pet_SC_UpdateSinglePetInfo& operator=(const Pet_SC_UpdateSinglePetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_SC_UpdateSinglePetInfo& default_instance();

  void Swap(Pet_SC_UpdateSinglePetInfo* other);

  // implements Message ----------------------------------------------

  Pet_SC_UpdateSinglePetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_SC_UpdateSinglePetInfo& from);
  void MergeFrom(const Pet_SC_UpdateSinglePetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoPetCellInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto::message::ProtoPetCellInfo& info() const;
  inline ::proto::message::ProtoPetCellInfo* mutable_info();
  inline ::proto::message::ProtoPetCellInfo* release_info();
  inline void set_allocated_info(::proto::message::ProtoPetCellInfo* info);

  // @@protoc_insertion_point(class_scope:proto.message.Pet_SC_UpdateSinglePetInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoPetCellInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_SC_UpdateSinglePetInfo* default_instance_;
};
// -------------------------------------------------------------------

class Pet_CS_OperaCell : public ::google::protobuf::Message {
 public:
  Pet_CS_OperaCell();
  virtual ~Pet_CS_OperaCell();

  Pet_CS_OperaCell(const Pet_CS_OperaCell& from);

  inline Pet_CS_OperaCell& operator=(const Pet_CS_OperaCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_CS_OperaCell& default_instance();

  void Swap(Pet_CS_OperaCell* other);

  // implements Message ----------------------------------------------

  Pet_CS_OperaCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_CS_OperaCell& from);
  void MergeFrom(const Pet_CS_OperaCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint32 operaType = 2;
  inline bool has_operatype() const;
  inline void clear_operatype();
  static const int kOperaTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 operatype() const;
  inline void set_operatype(::google::protobuf::uint32 value);

  // optional uint32 param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Pet_CS_OperaCell)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_operatype();
  inline void clear_has_operatype();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 operatype_;
  ::google::protobuf::uint32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_CS_OperaCell* default_instance_;
};
// -------------------------------------------------------------------

class Pet_SC_OperaCell : public ::google::protobuf::Message {
 public:
  Pet_SC_OperaCell();
  virtual ~Pet_SC_OperaCell();

  Pet_SC_OperaCell(const Pet_SC_OperaCell& from);

  inline Pet_SC_OperaCell& operator=(const Pet_SC_OperaCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_SC_OperaCell& default_instance();

  void Swap(Pet_SC_OperaCell* other);

  // implements Message ----------------------------------------------

  Pet_SC_OperaCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_SC_OperaCell& from);
  void MergeFrom(const Pet_SC_OperaCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Pet_SC_OperaCell)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_SC_OperaCell* default_instance_;
};
// -------------------------------------------------------------------

class Pet_CS_PutOnPetEquip : public ::google::protobuf::Message {
 public:
  Pet_CS_PutOnPetEquip();
  virtual ~Pet_CS_PutOnPetEquip();

  Pet_CS_PutOnPetEquip(const Pet_CS_PutOnPetEquip& from);

  inline Pet_CS_PutOnPetEquip& operator=(const Pet_CS_PutOnPetEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_CS_PutOnPetEquip& default_instance();

  void Swap(Pet_CS_PutOnPetEquip* other);

  // implements Message ----------------------------------------------

  Pet_CS_PutOnPetEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_CS_PutOnPetEquip& from);
  void MergeFrom(const Pet_CS_PutOnPetEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Pet_CS_PutOnPetEquip)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint32 cellid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_CS_PutOnPetEquip* default_instance_;
};
// -------------------------------------------------------------------

class Pet_SC_PutOnPetEquip : public ::google::protobuf::Message {
 public:
  Pet_SC_PutOnPetEquip();
  virtual ~Pet_SC_PutOnPetEquip();

  Pet_SC_PutOnPetEquip(const Pet_SC_PutOnPetEquip& from);

  inline Pet_SC_PutOnPetEquip& operator=(const Pet_SC_PutOnPetEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_SC_PutOnPetEquip& default_instance();

  void Swap(Pet_SC_PutOnPetEquip* other);

  // implements Message ----------------------------------------------

  Pet_SC_PutOnPetEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_SC_PutOnPetEquip& from);
  void MergeFrom(const Pet_SC_PutOnPetEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 petCellId = 2;
  inline bool has_petcellid() const;
  inline void clear_petcellid();
  static const int kPetCellIdFieldNumber = 2;
  inline ::google::protobuf::int32 petcellid() const;
  inline void set_petcellid(::google::protobuf::int32 value);

  // repeated .proto.message.Equip equip_list = 3;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 3;
  inline const ::proto::message::Equip& equip_list(int index) const;
  inline ::proto::message::Equip* mutable_equip_list(int index);
  inline ::proto::message::Equip* add_equip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      equip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_equip_list();

  // @@protoc_insertion_point(class_scope:proto.message.Pet_SC_PutOnPetEquip)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_petcellid();
  inline void clear_has_petcellid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 petcellid_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > equip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_SC_PutOnPetEquip* default_instance_;
};
// -------------------------------------------------------------------

class Pet_CS_GetOffPetEquip : public ::google::protobuf::Message {
 public:
  Pet_CS_GetOffPetEquip();
  virtual ~Pet_CS_GetOffPetEquip();

  Pet_CS_GetOffPetEquip(const Pet_CS_GetOffPetEquip& from);

  inline Pet_CS_GetOffPetEquip& operator=(const Pet_CS_GetOffPetEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_CS_GetOffPetEquip& default_instance();

  void Swap(Pet_CS_GetOffPetEquip* other);

  // implements Message ----------------------------------------------

  Pet_CS_GetOffPetEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_CS_GetOffPetEquip& from);
  void MergeFrom(const Pet_CS_GetOffPetEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cellID = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIDFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Pet_CS_GetOffPetEquip)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint32 cellid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_CS_GetOffPetEquip* default_instance_;
};
// -------------------------------------------------------------------

class Pet_SC_GetOffPetEquip : public ::google::protobuf::Message {
 public:
  Pet_SC_GetOffPetEquip();
  virtual ~Pet_SC_GetOffPetEquip();

  Pet_SC_GetOffPetEquip(const Pet_SC_GetOffPetEquip& from);

  inline Pet_SC_GetOffPetEquip& operator=(const Pet_SC_GetOffPetEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet_SC_GetOffPetEquip& default_instance();

  void Swap(Pet_SC_GetOffPetEquip* other);

  // implements Message ----------------------------------------------

  Pet_SC_GetOffPetEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet_SC_GetOffPetEquip& from);
  void MergeFrom(const Pet_SC_GetOffPetEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 petCellId = 2;
  inline bool has_petcellid() const;
  inline void clear_petcellid();
  static const int kPetCellIdFieldNumber = 2;
  inline ::google::protobuf::int32 petcellid() const;
  inline void set_petcellid(::google::protobuf::int32 value);

  // optional .proto.message.Equip equip_list = 3;
  inline bool has_equip_list() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 3;
  inline const ::proto::message::Equip& equip_list() const;
  inline ::proto::message::Equip* mutable_equip_list();
  inline ::proto::message::Equip* release_equip_list();
  inline void set_allocated_equip_list(::proto::message::Equip* equip_list);

  // @@protoc_insertion_point(class_scope:proto.message.Pet_SC_GetOffPetEquip)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_petcellid();
  inline void clear_has_petcellid();
  inline void set_has_equip_list();
  inline void clear_has_equip_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 petcellid_;
  ::proto::message::Equip* equip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Pet_SC_GetOffPetEquip* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoPetEquipCell

// required uint32 equipid = 1;
inline bool ProtoPetEquipCell::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPetEquipCell::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPetEquipCell::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPetEquipCell::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 ProtoPetEquipCell::equipid() const {
  return equipid_;
}
inline void ProtoPetEquipCell::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
}

// required bool isOpen = 2;
inline bool ProtoPetEquipCell::has_isopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoPetEquipCell::set_has_isopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoPetEquipCell::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoPetEquipCell::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool ProtoPetEquipCell::isopen() const {
  return isopen_;
}
inline void ProtoPetEquipCell::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// ProtoPetCellInfo

// required uint32 cellId = 1;
inline bool ProtoPetCellInfo::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPetCellInfo::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPetCellInfo::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPetCellInfo::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::cellid() const {
  return cellid_;
}
inline void ProtoPetCellInfo::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional bool isActive = 2;
inline bool ProtoPetCellInfo::has_isactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoPetCellInfo::set_has_isactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoPetCellInfo::clear_has_isactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoPetCellInfo::clear_isactive() {
  isactive_ = false;
  clear_has_isactive();
}
inline bool ProtoPetCellInfo::isactive() const {
  return isactive_;
}
inline void ProtoPetCellInfo::set_isactive(bool value) {
  set_has_isactive();
  isactive_ = value;
}

// optional bool isUse = 3;
inline bool ProtoPetCellInfo::has_isuse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoPetCellInfo::set_has_isuse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoPetCellInfo::clear_has_isuse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoPetCellInfo::clear_isuse() {
  isuse_ = false;
  clear_has_isuse();
}
inline bool ProtoPetCellInfo::isuse() const {
  return isuse_;
}
inline void ProtoPetCellInfo::set_isuse(bool value) {
  set_has_isuse();
  isuse_ = value;
}

// optional uint32 petId = 4;
inline bool ProtoPetCellInfo::has_petid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoPetCellInfo::set_has_petid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoPetCellInfo::clear_has_petid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoPetCellInfo::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::petid() const {
  return petid_;
}
inline void ProtoPetCellInfo::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
}

// optional uint32 strLv = 5;
inline bool ProtoPetCellInfo::has_strlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoPetCellInfo::set_has_strlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoPetCellInfo::clear_has_strlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoPetCellInfo::clear_strlv() {
  strlv_ = 0u;
  clear_has_strlv();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::strlv() const {
  return strlv_;
}
inline void ProtoPetCellInfo::set_strlv(::google::protobuf::uint32 value) {
  set_has_strlv();
  strlv_ = value;
}

// optional uint32 luckyValue = 6;
inline bool ProtoPetCellInfo::has_luckyvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoPetCellInfo::set_has_luckyvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoPetCellInfo::clear_has_luckyvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoPetCellInfo::clear_luckyvalue() {
  luckyvalue_ = 0u;
  clear_has_luckyvalue();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::luckyvalue() const {
  return luckyvalue_;
}
inline void ProtoPetCellInfo::set_luckyvalue(::google::protobuf::uint32 value) {
  set_has_luckyvalue();
  luckyvalue_ = value;
}

// optional uint32 skills = 7;
inline bool ProtoPetCellInfo::has_skills() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoPetCellInfo::set_has_skills() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoPetCellInfo::clear_has_skills() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoPetCellInfo::clear_skills() {
  skills_ = 0u;
  clear_has_skills();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::skills() const {
  return skills_;
}
inline void ProtoPetCellInfo::set_skills(::google::protobuf::uint32 value) {
  set_has_skills();
  skills_ = value;
}

// optional uint32 activeType = 8;
inline bool ProtoPetCellInfo::has_activetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoPetCellInfo::set_has_activetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoPetCellInfo::clear_has_activetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoPetCellInfo::clear_activetype() {
  activetype_ = 0u;
  clear_has_activetype();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::activetype() const {
  return activetype_;
}
inline void ProtoPetCellInfo::set_activetype(::google::protobuf::uint32 value) {
  set_has_activetype();
  activetype_ = value;
}

// optional uint32 activeNowValue = 9;
inline bool ProtoPetCellInfo::has_activenowvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoPetCellInfo::set_has_activenowvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoPetCellInfo::clear_has_activenowvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoPetCellInfo::clear_activenowvalue() {
  activenowvalue_ = 0u;
  clear_has_activenowvalue();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::activenowvalue() const {
  return activenowvalue_;
}
inline void ProtoPetCellInfo::set_activenowvalue(::google::protobuf::uint32 value) {
  set_has_activenowvalue();
  activenowvalue_ = value;
}

// repeated .proto.message.ProtoPetEquipCell equips = 10;
inline int ProtoPetCellInfo::equips_size() const {
  return equips_.size();
}
inline void ProtoPetCellInfo::clear_equips() {
  equips_.Clear();
}
inline const ::proto::message::ProtoPetEquipCell& ProtoPetCellInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::proto::message::ProtoPetEquipCell* ProtoPetCellInfo::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::proto::message::ProtoPetEquipCell* ProtoPetCellInfo::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetEquipCell >&
ProtoPetCellInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetEquipCell >*
ProtoPetCellInfo::mutable_equips() {
  return &equips_;
}

// repeated .proto.message.Equip petequipgird_list = 11;
inline int ProtoPetCellInfo::petequipgird_list_size() const {
  return petequipgird_list_.size();
}
inline void ProtoPetCellInfo::clear_petequipgird_list() {
  petequipgird_list_.Clear();
}
inline const ::proto::message::Equip& ProtoPetCellInfo::petequipgird_list(int index) const {
  return petequipgird_list_.Get(index);
}
inline ::proto::message::Equip* ProtoPetCellInfo::mutable_petequipgird_list(int index) {
  return petequipgird_list_.Mutable(index);
}
inline ::proto::message::Equip* ProtoPetCellInfo::add_petequipgird_list() {
  return petequipgird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
ProtoPetCellInfo::petequipgird_list() const {
  return petequipgird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
ProtoPetCellInfo::mutable_petequipgird_list() {
  return &petequipgird_list_;
}

// optional uint32 eatFoodId = 12;
inline bool ProtoPetCellInfo::has_eatfoodid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProtoPetCellInfo::set_has_eatfoodid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProtoPetCellInfo::clear_has_eatfoodid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProtoPetCellInfo::clear_eatfoodid() {
  eatfoodid_ = 0u;
  clear_has_eatfoodid();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::eatfoodid() const {
  return eatfoodid_;
}
inline void ProtoPetCellInfo::set_eatfoodid(::google::protobuf::uint32 value) {
  set_has_eatfoodid();
  eatfoodid_ = value;
}

// optional uint32 eatFoodNum = 13;
inline bool ProtoPetCellInfo::has_eatfoodnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProtoPetCellInfo::set_has_eatfoodnum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProtoPetCellInfo::clear_has_eatfoodnum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProtoPetCellInfo::clear_eatfoodnum() {
  eatfoodnum_ = 0u;
  clear_has_eatfoodnum();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::eatfoodnum() const {
  return eatfoodnum_;
}
inline void ProtoPetCellInfo::set_eatfoodnum(::google::protobuf::uint32 value) {
  set_has_eatfoodnum();
  eatfoodnum_ = value;
}

// optional uint32 ranking = 14;
inline bool ProtoPetCellInfo::has_ranking() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProtoPetCellInfo::set_has_ranking() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProtoPetCellInfo::clear_has_ranking() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProtoPetCellInfo::clear_ranking() {
  ranking_ = 0u;
  clear_has_ranking();
}
inline ::google::protobuf::uint32 ProtoPetCellInfo::ranking() const {
  return ranking_;
}
inline void ProtoPetCellInfo::set_ranking(::google::protobuf::uint32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// ProtoPetAllCellInfo

// repeated .proto.message.ProtoPetCellInfo allInfo = 1;
inline int ProtoPetAllCellInfo::allinfo_size() const {
  return allinfo_.size();
}
inline void ProtoPetAllCellInfo::clear_allinfo() {
  allinfo_.Clear();
}
inline const ::proto::message::ProtoPetCellInfo& ProtoPetAllCellInfo::allinfo(int index) const {
  return allinfo_.Get(index);
}
inline ::proto::message::ProtoPetCellInfo* ProtoPetAllCellInfo::mutable_allinfo(int index) {
  return allinfo_.Mutable(index);
}
inline ::proto::message::ProtoPetCellInfo* ProtoPetAllCellInfo::add_allinfo() {
  return allinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >&
ProtoPetAllCellInfo::allinfo() const {
  return allinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >*
ProtoPetAllCellInfo::mutable_allinfo() {
  return &allinfo_;
}

// -------------------------------------------------------------------

// Pet_CS_GetPetInfo

// -------------------------------------------------------------------

// Pet_SC_GetPetInfo

// repeated .proto.message.ProtoPetCellInfo infoList = 2;
inline int Pet_SC_GetPetInfo::infolist_size() const {
  return infolist_.size();
}
inline void Pet_SC_GetPetInfo::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::ProtoPetCellInfo& Pet_SC_GetPetInfo::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::ProtoPetCellInfo* Pet_SC_GetPetInfo::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::ProtoPetCellInfo* Pet_SC_GetPetInfo::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >&
Pet_SC_GetPetInfo::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPetCellInfo >*
Pet_SC_GetPetInfo::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// Pet_SC_UpdateSinglePetInfo

// optional .proto.message.ProtoPetCellInfo info = 1;
inline bool Pet_SC_UpdateSinglePetInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_SC_UpdateSinglePetInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_SC_UpdateSinglePetInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_SC_UpdateSinglePetInfo::clear_info() {
  if (info_ != NULL) info_->::proto::message::ProtoPetCellInfo::Clear();
  clear_has_info();
}
inline const ::proto::message::ProtoPetCellInfo& Pet_SC_UpdateSinglePetInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto::message::ProtoPetCellInfo* Pet_SC_UpdateSinglePetInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto::message::ProtoPetCellInfo;
  return info_;
}
inline ::proto::message::ProtoPetCellInfo* Pet_SC_UpdateSinglePetInfo::release_info() {
  clear_has_info();
  ::proto::message::ProtoPetCellInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void Pet_SC_UpdateSinglePetInfo::set_allocated_info(::proto::message::ProtoPetCellInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// Pet_CS_OperaCell

// required uint32 cellId = 1;
inline bool Pet_CS_OperaCell::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_CS_OperaCell::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_CS_OperaCell::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_CS_OperaCell::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Pet_CS_OperaCell::cellid() const {
  return cellid_;
}
inline void Pet_CS_OperaCell::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint32 operaType = 2;
inline bool Pet_CS_OperaCell::has_operatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pet_CS_OperaCell::set_has_operatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pet_CS_OperaCell::clear_has_operatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pet_CS_OperaCell::clear_operatype() {
  operatype_ = 0u;
  clear_has_operatype();
}
inline ::google::protobuf::uint32 Pet_CS_OperaCell::operatype() const {
  return operatype_;
}
inline void Pet_CS_OperaCell::set_operatype(::google::protobuf::uint32 value) {
  set_has_operatype();
  operatype_ = value;
}

// optional uint32 param = 3;
inline bool Pet_CS_OperaCell::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pet_CS_OperaCell::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pet_CS_OperaCell::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pet_CS_OperaCell::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 Pet_CS_OperaCell::param() const {
  return param_;
}
inline void Pet_CS_OperaCell::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// Pet_SC_OperaCell

// required int32 ret = 1;
inline bool Pet_SC_OperaCell::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_SC_OperaCell::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_SC_OperaCell::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_SC_OperaCell::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Pet_SC_OperaCell::ret() const {
  return ret_;
}
inline void Pet_SC_OperaCell::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Pet_CS_PutOnPetEquip

// required uint32 cellId = 1;
inline bool Pet_CS_PutOnPetEquip::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_CS_PutOnPetEquip::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_CS_PutOnPetEquip::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_CS_PutOnPetEquip::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Pet_CS_PutOnPetEquip::cellid() const {
  return cellid_;
}
inline void Pet_CS_PutOnPetEquip::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint64 uuid = 2;
inline bool Pet_CS_PutOnPetEquip::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pet_CS_PutOnPetEquip::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pet_CS_PutOnPetEquip::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pet_CS_PutOnPetEquip::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Pet_CS_PutOnPetEquip::uuid() const {
  return uuid_;
}
inline void Pet_CS_PutOnPetEquip::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Pet_SC_PutOnPetEquip

// optional int32 result = 1;
inline bool Pet_SC_PutOnPetEquip::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_SC_PutOnPetEquip::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_SC_PutOnPetEquip::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_SC_PutOnPetEquip::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Pet_SC_PutOnPetEquip::result() const {
  return result_;
}
inline void Pet_SC_PutOnPetEquip::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 petCellId = 2;
inline bool Pet_SC_PutOnPetEquip::has_petcellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pet_SC_PutOnPetEquip::set_has_petcellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pet_SC_PutOnPetEquip::clear_has_petcellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pet_SC_PutOnPetEquip::clear_petcellid() {
  petcellid_ = 0;
  clear_has_petcellid();
}
inline ::google::protobuf::int32 Pet_SC_PutOnPetEquip::petcellid() const {
  return petcellid_;
}
inline void Pet_SC_PutOnPetEquip::set_petcellid(::google::protobuf::int32 value) {
  set_has_petcellid();
  petcellid_ = value;
}

// repeated .proto.message.Equip equip_list = 3;
inline int Pet_SC_PutOnPetEquip::equip_list_size() const {
  return equip_list_.size();
}
inline void Pet_SC_PutOnPetEquip::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::message::Equip& Pet_SC_PutOnPetEquip::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline ::proto::message::Equip* Pet_SC_PutOnPetEquip::mutable_equip_list(int index) {
  return equip_list_.Mutable(index);
}
inline ::proto::message::Equip* Pet_SC_PutOnPetEquip::add_equip_list() {
  return equip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Pet_SC_PutOnPetEquip::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Pet_SC_PutOnPetEquip::mutable_equip_list() {
  return &equip_list_;
}

// -------------------------------------------------------------------

// Pet_CS_GetOffPetEquip

// optional uint32 cellID = 1;
inline bool Pet_CS_GetOffPetEquip::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_CS_GetOffPetEquip::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_CS_GetOffPetEquip::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_CS_GetOffPetEquip::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Pet_CS_GetOffPetEquip::cellid() const {
  return cellid_;
}
inline void Pet_CS_GetOffPetEquip::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint64 uuid = 2;
inline bool Pet_CS_GetOffPetEquip::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pet_CS_GetOffPetEquip::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pet_CS_GetOffPetEquip::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pet_CS_GetOffPetEquip::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Pet_CS_GetOffPetEquip::uuid() const {
  return uuid_;
}
inline void Pet_CS_GetOffPetEquip::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Pet_SC_GetOffPetEquip

// optional int32 result = 1;
inline bool Pet_SC_GetOffPetEquip::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet_SC_GetOffPetEquip::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet_SC_GetOffPetEquip::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet_SC_GetOffPetEquip::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Pet_SC_GetOffPetEquip::result() const {
  return result_;
}
inline void Pet_SC_GetOffPetEquip::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 petCellId = 2;
inline bool Pet_SC_GetOffPetEquip::has_petcellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pet_SC_GetOffPetEquip::set_has_petcellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pet_SC_GetOffPetEquip::clear_has_petcellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pet_SC_GetOffPetEquip::clear_petcellid() {
  petcellid_ = 0;
  clear_has_petcellid();
}
inline ::google::protobuf::int32 Pet_SC_GetOffPetEquip::petcellid() const {
  return petcellid_;
}
inline void Pet_SC_GetOffPetEquip::set_petcellid(::google::protobuf::int32 value) {
  set_has_petcellid();
  petcellid_ = value;
}

// optional .proto.message.Equip equip_list = 3;
inline bool Pet_SC_GetOffPetEquip::has_equip_list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pet_SC_GetOffPetEquip::set_has_equip_list() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pet_SC_GetOffPetEquip::clear_has_equip_list() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pet_SC_GetOffPetEquip::clear_equip_list() {
  if (equip_list_ != NULL) equip_list_->::proto::message::Equip::Clear();
  clear_has_equip_list();
}
inline const ::proto::message::Equip& Pet_SC_GetOffPetEquip::equip_list() const {
  return equip_list_ != NULL ? *equip_list_ : *default_instance_->equip_list_;
}
inline ::proto::message::Equip* Pet_SC_GetOffPetEquip::mutable_equip_list() {
  set_has_equip_list();
  if (equip_list_ == NULL) equip_list_ = new ::proto::message::Equip;
  return equip_list_;
}
inline ::proto::message::Equip* Pet_SC_GetOffPetEquip::release_equip_list() {
  clear_has_equip_list();
  ::proto::message::Equip* temp = equip_list_;
  equip_list_ = NULL;
  return temp;
}
inline void Pet_SC_GetOffPetEquip::set_allocated_equip_list(::proto::message::Equip* equip_list) {
  delete equip_list_;
  equip_list_ = equip_list;
  if (equip_list) {
    set_has_equip_list();
  } else {
    clear_has_equip_list();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pet_2eproto__INCLUDED
