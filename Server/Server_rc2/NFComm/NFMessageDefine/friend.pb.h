// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friend.proto

#ifndef PROTOBUF_friend_2eproto__INCLUDED
#define PROTOBUF_friend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "player.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_friend_2eproto();
void protobuf_AssignDesc_friend_2eproto();
void protobuf_ShutdownFile_friend_2eproto();

class ProtoPlyInfo;
class ProtoFriendChatMsg;
class Friend_CS_GetFriendInfo;
class Friend_SC_GetFriendInfo;
class Friend_CS_AddFriend;
class Friend_SC_AddFriend;
class Friend_CS_DelFriend;
class Friend_SC_DelFriend;
class Friend_CS_AddToBlack;
class Friend_SC_AddToBlack;
class Friend_CS_DelBlack;
class Friend_SC_DelBlack;
class Friend_CS_FriendChat;
class Friend_SC_FriendChat;
class Friend_CS_FriendPresent;
class Friend_SC_FriendPresent;
class Friend_CS_QueryFriendInfo;
class Friend_SC_QueryFriendInfo;
class Friend_CS_SearchFriendInfo;
class Friend_SC_SearchFriendInfo;
class Friend_SC_UpdateBeAddFriend;
class Friend_SC_UpdateFriendMsg;
class Friend_SC_UpdateFriendInfo;
class Friend_SC_NotifyFriendGift;
class Friend_CS_RecommentFriend;
class Friend_SC_RecommentFriend;

// ===================================================================

class ProtoPlyInfo : public ::google::protobuf::Message {
 public:
  ProtoPlyInfo();
  virtual ~ProtoPlyInfo();

  ProtoPlyInfo(const ProtoPlyInfo& from);

  inline ProtoPlyInfo& operator=(const ProtoPlyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPlyInfo& default_instance();

  void Swap(ProtoPlyInfo* other);

  // implements Message ----------------------------------------------

  ProtoPlyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPlyInfo& from);
  void MergeFrom(const ProtoPlyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 weapon = 4;
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 4;
  inline ::google::protobuf::int32 weapon() const;
  inline void set_weapon(::google::protobuf::int32 value);

  // optional int32 online = 5;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 5;
  inline ::google::protobuf::int32 online() const;
  inline void set_online(::google::protobuf::int32 value);

  // optional int32 friendShip = 6;
  inline bool has_friendship() const;
  inline void clear_friendship();
  static const int kFriendShipFieldNumber = 6;
  inline ::google::protobuf::int32 friendship() const;
  inline void set_friendship(::google::protobuf::int32 value);

  // optional int32 dhlevel = 7;
  inline bool has_dhlevel() const;
  inline void clear_dhlevel();
  static const int kDhlevelFieldNumber = 7;
  inline ::google::protobuf::int32 dhlevel() const;
  inline void set_dhlevel(::google::protobuf::int32 value);

  // optional int32 combat = 8;
  inline bool has_combat() const;
  inline void clear_combat();
  static const int kCombatFieldNumber = 8;
  inline ::google::protobuf::int32 combat() const;
  inline void set_combat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoPlyInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_weapon();
  inline void clear_has_weapon();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_friendship();
  inline void clear_has_friendship();
  inline void set_has_dhlevel();
  inline void clear_has_dhlevel();
  inline void set_has_combat();
  inline void clear_has_combat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::std::string* rolename_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 weapon_;
  ::google::protobuf::int32 online_;
  ::google::protobuf::int32 friendship_;
  ::google::protobuf::int32 dhlevel_;
  ::google::protobuf::int32 combat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static ProtoPlyInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFriendChatMsg : public ::google::protobuf::Message {
 public:
  ProtoFriendChatMsg();
  virtual ~ProtoFriendChatMsg();

  ProtoFriendChatMsg(const ProtoFriendChatMsg& from);

  inline ProtoFriendChatMsg& operator=(const ProtoFriendChatMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendChatMsg& default_instance();

  void Swap(ProtoFriendChatMsg* other);

  // implements Message ----------------------------------------------

  ProtoFriendChatMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFriendChatMsg& from);
  void MergeFrom(const ProtoFriendChatMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fromPlyId = 1;
  inline bool has_fromplyid() const;
  inline void clear_fromplyid();
  static const int kFromPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fromplyid() const;
  inline void set_fromplyid(::google::protobuf::uint64 value);

  // required uint64 toPlyId = 2;
  inline bool has_toplyid() const;
  inline void clear_toplyid();
  static const int kToPlyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 toplyid() const;
  inline void set_toplyid(::google::protobuf::uint64 value);

  // optional string date = 3;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 3;
  inline const ::std::string& date() const;
  inline void set_date(const ::std::string& value);
  inline void set_date(const char* value);
  inline void set_date(const char* value, size_t size);
  inline ::std::string* mutable_date();
  inline ::std::string* release_date();
  inline void set_allocated_date(::std::string* date);

  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .proto.message.ProtoPlyInfo fromPlyInfo = 5;
  inline bool has_fromplyinfo() const;
  inline void clear_fromplyinfo();
  static const int kFromPlyInfoFieldNumber = 5;
  inline const ::proto::message::ProtoPlyInfo& fromplyinfo() const;
  inline ::proto::message::ProtoPlyInfo* mutable_fromplyinfo();
  inline ::proto::message::ProtoPlyInfo* release_fromplyinfo();
  inline void set_allocated_fromplyinfo(::proto::message::ProtoPlyInfo* fromplyinfo);

  // optional int32 leaveMsg = 6;
  inline bool has_leavemsg() const;
  inline void clear_leavemsg();
  static const int kLeaveMsgFieldNumber = 6;
  inline ::google::protobuf::int32 leavemsg() const;
  inline void set_leavemsg(::google::protobuf::int32 value);

  // optional uint64 msgId = 7;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIdFieldNumber = 7;
  inline ::google::protobuf::uint64 msgid() const;
  inline void set_msgid(::google::protobuf::uint64 value);

  // optional int32 contentType = 8;
  inline bool has_contenttype() const;
  inline void clear_contenttype();
  static const int kContentTypeFieldNumber = 8;
  inline ::google::protobuf::int32 contenttype() const;
  inline void set_contenttype(::google::protobuf::int32 value);

  // optional int32 voiceTime = 9;
  inline bool has_voicetime() const;
  inline void clear_voicetime();
  static const int kVoiceTimeFieldNumber = 9;
  inline ::google::protobuf::int32 voicetime() const;
  inline void set_voicetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoFriendChatMsg)
 private:
  inline void set_has_fromplyid();
  inline void clear_has_fromplyid();
  inline void set_has_toplyid();
  inline void clear_has_toplyid();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_fromplyinfo();
  inline void clear_has_fromplyinfo();
  inline void set_has_leavemsg();
  inline void clear_has_leavemsg();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_contenttype();
  inline void clear_has_contenttype();
  inline void set_has_voicetime();
  inline void clear_has_voicetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fromplyid_;
  ::google::protobuf::uint64 toplyid_;
  ::std::string* date_;
  ::std::string* content_;
  ::proto::message::ProtoPlyInfo* fromplyinfo_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::int32 leavemsg_;
  ::google::protobuf::int32 contenttype_;
  ::google::protobuf::int32 voicetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static ProtoFriendChatMsg* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_GetFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_CS_GetFriendInfo();
  virtual ~Friend_CS_GetFriendInfo();

  Friend_CS_GetFriendInfo(const Friend_CS_GetFriendInfo& from);

  inline Friend_CS_GetFriendInfo& operator=(const Friend_CS_GetFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_GetFriendInfo& default_instance();

  void Swap(Friend_CS_GetFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_CS_GetFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_GetFriendInfo& from);
  void MergeFrom(const Friend_CS_GetFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 isInTeam = 2;
  inline bool has_isinteam() const;
  inline void clear_isinteam();
  static const int kIsInTeamFieldNumber = 2;
  inline ::google::protobuf::int32 isinteam() const;
  inline void set_isinteam(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_GetFriendInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isinteam();
  inline void clear_has_isinteam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 isinteam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_GetFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_GetFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_SC_GetFriendInfo();
  virtual ~Friend_SC_GetFriendInfo();

  Friend_SC_GetFriendInfo(const Friend_SC_GetFriendInfo& from);

  inline Friend_SC_GetFriendInfo& operator=(const Friend_SC_GetFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_GetFriendInfo& default_instance();

  void Swap(Friend_SC_GetFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_SC_GetFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_GetFriendInfo& from);
  void MergeFrom(const Friend_SC_GetFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoPlyInfo plyList = 3;
  inline int plylist_size() const;
  inline void clear_plylist();
  static const int kPlyListFieldNumber = 3;
  inline const ::proto::message::ProtoPlyInfo& plylist(int index) const;
  inline ::proto::message::ProtoPlyInfo* mutable_plylist(int index);
  inline ::proto::message::ProtoPlyInfo* add_plylist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >&
      plylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >*
      mutable_plylist();

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_GetFriendInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo > plylist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_GetFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_AddFriend : public ::google::protobuf::Message {
 public:
  Friend_CS_AddFriend();
  virtual ~Friend_CS_AddFriend();

  Friend_CS_AddFriend(const Friend_CS_AddFriend& from);

  inline Friend_CS_AddFriend& operator=(const Friend_CS_AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_AddFriend& default_instance();

  void Swap(Friend_CS_AddFriend* other);

  // implements Message ----------------------------------------------

  Friend_CS_AddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_AddFriend& from);
  void MergeFrom(const Friend_CS_AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_AddFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_AddFriend : public ::google::protobuf::Message {
 public:
  Friend_SC_AddFriend();
  virtual ~Friend_SC_AddFriend();

  Friend_SC_AddFriend(const Friend_SC_AddFriend& from);

  inline Friend_SC_AddFriend& operator=(const Friend_SC_AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_AddFriend& default_instance();

  void Swap(Friend_SC_AddFriend* other);

  // implements Message ----------------------------------------------

  Friend_SC_AddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_AddFriend& from);
  void MergeFrom(const Friend_SC_AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.ProtoPlyInfo plyInfo = 2;
  inline bool has_plyinfo() const;
  inline void clear_plyinfo();
  static const int kPlyInfoFieldNumber = 2;
  inline const ::proto::message::ProtoPlyInfo& plyinfo() const;
  inline ::proto::message::ProtoPlyInfo* mutable_plyinfo();
  inline ::proto::message::ProtoPlyInfo* release_plyinfo();
  inline void set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_AddFriend)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_plyinfo();
  inline void clear_has_plyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoPlyInfo* plyinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_DelFriend : public ::google::protobuf::Message {
 public:
  Friend_CS_DelFriend();
  virtual ~Friend_CS_DelFriend();

  Friend_CS_DelFriend(const Friend_CS_DelFriend& from);

  inline Friend_CS_DelFriend& operator=(const Friend_CS_DelFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_DelFriend& default_instance();

  void Swap(Friend_CS_DelFriend* other);

  // implements Message ----------------------------------------------

  Friend_CS_DelFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_DelFriend& from);
  void MergeFrom(const Friend_CS_DelFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_DelFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_DelFriend* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_DelFriend : public ::google::protobuf::Message {
 public:
  Friend_SC_DelFriend();
  virtual ~Friend_SC_DelFriend();

  Friend_SC_DelFriend(const Friend_SC_DelFriend& from);

  inline Friend_SC_DelFriend& operator=(const Friend_SC_DelFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_DelFriend& default_instance();

  void Swap(Friend_SC_DelFriend* other);

  // implements Message ----------------------------------------------

  Friend_SC_DelFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_DelFriend& from);
  void MergeFrom(const Friend_SC_DelFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_DelFriend)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_DelFriend* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_AddToBlack : public ::google::protobuf::Message {
 public:
  Friend_CS_AddToBlack();
  virtual ~Friend_CS_AddToBlack();

  Friend_CS_AddToBlack(const Friend_CS_AddToBlack& from);

  inline Friend_CS_AddToBlack& operator=(const Friend_CS_AddToBlack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_AddToBlack& default_instance();

  void Swap(Friend_CS_AddToBlack* other);

  // implements Message ----------------------------------------------

  Friend_CS_AddToBlack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_AddToBlack& from);
  void MergeFrom(const Friend_CS_AddToBlack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_AddToBlack)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_AddToBlack* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_AddToBlack : public ::google::protobuf::Message {
 public:
  Friend_SC_AddToBlack();
  virtual ~Friend_SC_AddToBlack();

  Friend_SC_AddToBlack(const Friend_SC_AddToBlack& from);

  inline Friend_SC_AddToBlack& operator=(const Friend_SC_AddToBlack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_AddToBlack& default_instance();

  void Swap(Friend_SC_AddToBlack* other);

  // implements Message ----------------------------------------------

  Friend_SC_AddToBlack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_AddToBlack& from);
  void MergeFrom(const Friend_SC_AddToBlack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.ProtoPlyInfo plyInfo = 2;
  inline bool has_plyinfo() const;
  inline void clear_plyinfo();
  static const int kPlyInfoFieldNumber = 2;
  inline const ::proto::message::ProtoPlyInfo& plyinfo() const;
  inline ::proto::message::ProtoPlyInfo* mutable_plyinfo();
  inline ::proto::message::ProtoPlyInfo* release_plyinfo();
  inline void set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_AddToBlack)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_plyinfo();
  inline void clear_has_plyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoPlyInfo* plyinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_AddToBlack* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_DelBlack : public ::google::protobuf::Message {
 public:
  Friend_CS_DelBlack();
  virtual ~Friend_CS_DelBlack();

  Friend_CS_DelBlack(const Friend_CS_DelBlack& from);

  inline Friend_CS_DelBlack& operator=(const Friend_CS_DelBlack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_DelBlack& default_instance();

  void Swap(Friend_CS_DelBlack* other);

  // implements Message ----------------------------------------------

  Friend_CS_DelBlack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_DelBlack& from);
  void MergeFrom(const Friend_CS_DelBlack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_DelBlack)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_DelBlack* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_DelBlack : public ::google::protobuf::Message {
 public:
  Friend_SC_DelBlack();
  virtual ~Friend_SC_DelBlack();

  Friend_SC_DelBlack(const Friend_SC_DelBlack& from);

  inline Friend_SC_DelBlack& operator=(const Friend_SC_DelBlack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_DelBlack& default_instance();

  void Swap(Friend_SC_DelBlack* other);

  // implements Message ----------------------------------------------

  Friend_SC_DelBlack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_DelBlack& from);
  void MergeFrom(const Friend_SC_DelBlack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_DelBlack)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_DelBlack* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_FriendChat : public ::google::protobuf::Message {
 public:
  Friend_CS_FriendChat();
  virtual ~Friend_CS_FriendChat();

  Friend_CS_FriendChat(const Friend_CS_FriendChat& from);

  inline Friend_CS_FriendChat& operator=(const Friend_CS_FriendChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_FriendChat& default_instance();

  void Swap(Friend_CS_FriendChat* other);

  // implements Message ----------------------------------------------

  Friend_CS_FriendChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_FriendChat& from);
  void MergeFrom(const Friend_CS_FriendChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.ProtoFriendChatMsg chatMsg = 1;
  inline bool has_chatmsg() const;
  inline void clear_chatmsg();
  static const int kChatMsgFieldNumber = 1;
  inline const ::proto::message::ProtoFriendChatMsg& chatmsg() const;
  inline ::proto::message::ProtoFriendChatMsg* mutable_chatmsg();
  inline ::proto::message::ProtoFriendChatMsg* release_chatmsg();
  inline void set_allocated_chatmsg(::proto::message::ProtoFriendChatMsg* chatmsg);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_FriendChat)
 private:
  inline void set_has_chatmsg();
  inline void clear_has_chatmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoFriendChatMsg* chatmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_FriendChat* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_FriendChat : public ::google::protobuf::Message {
 public:
  Friend_SC_FriendChat();
  virtual ~Friend_SC_FriendChat();

  Friend_SC_FriendChat(const Friend_SC_FriendChat& from);

  inline Friend_SC_FriendChat& operator=(const Friend_SC_FriendChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_FriendChat& default_instance();

  void Swap(Friend_SC_FriendChat* other);

  // implements Message ----------------------------------------------

  Friend_SC_FriendChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_FriendChat& from);
  void MergeFrom(const Friend_SC_FriendChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 msgId = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  inline ::google::protobuf::uint64 msgid() const;
  inline void set_msgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_FriendChat)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_FriendChat* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_FriendPresent : public ::google::protobuf::Message {
 public:
  Friend_CS_FriendPresent();
  virtual ~Friend_CS_FriendPresent();

  Friend_CS_FriendPresent(const Friend_CS_FriendPresent& from);

  inline Friend_CS_FriendPresent& operator=(const Friend_CS_FriendPresent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_FriendPresent& default_instance();

  void Swap(Friend_CS_FriendPresent* other);

  // implements Message ----------------------------------------------

  Friend_CS_FriendPresent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_FriendPresent& from);
  void MergeFrom(const Friend_CS_FriendPresent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_FriendPresent)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_FriendPresent* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_FriendPresent : public ::google::protobuf::Message {
 public:
  Friend_SC_FriendPresent();
  virtual ~Friend_SC_FriendPresent();

  Friend_SC_FriendPresent(const Friend_SC_FriendPresent& from);

  inline Friend_SC_FriendPresent& operator=(const Friend_SC_FriendPresent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_FriendPresent& default_instance();

  void Swap(Friend_SC_FriendPresent* other);

  // implements Message ----------------------------------------------

  Friend_SC_FriendPresent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_FriendPresent& from);
  void MergeFrom(const Friend_SC_FriendPresent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_FriendPresent)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_FriendPresent* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_QueryFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_CS_QueryFriendInfo();
  virtual ~Friend_CS_QueryFriendInfo();

  Friend_CS_QueryFriendInfo(const Friend_CS_QueryFriendInfo& from);

  inline Friend_CS_QueryFriendInfo& operator=(const Friend_CS_QueryFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_QueryFriendInfo& default_instance();

  void Swap(Friend_CS_QueryFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_CS_QueryFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_QueryFriendInfo& from);
  void MergeFrom(const Friend_CS_QueryFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_QueryFriendInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_QueryFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_QueryFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_SC_QueryFriendInfo();
  virtual ~Friend_SC_QueryFriendInfo();

  Friend_SC_QueryFriendInfo(const Friend_SC_QueryFriendInfo& from);

  inline Friend_SC_QueryFriendInfo& operator=(const Friend_SC_QueryFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_QueryFriendInfo& default_instance();

  void Swap(Friend_SC_QueryFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_SC_QueryFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_QueryFriendInfo& from);
  void MergeFrom(const Friend_SC_QueryFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.ProtoPlyInfo plyInfo = 2;
  inline bool has_plyinfo() const;
  inline void clear_plyinfo();
  static const int kPlyInfoFieldNumber = 2;
  inline const ::proto::message::ProtoPlyInfo& plyinfo() const;
  inline ::proto::message::ProtoPlyInfo* mutable_plyinfo();
  inline ::proto::message::ProtoPlyInfo* release_plyinfo();
  inline void set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_QueryFriendInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_plyinfo();
  inline void clear_has_plyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoPlyInfo* plyinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_QueryFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_SearchFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_CS_SearchFriendInfo();
  virtual ~Friend_CS_SearchFriendInfo();

  Friend_CS_SearchFriendInfo(const Friend_CS_SearchFriendInfo& from);

  inline Friend_CS_SearchFriendInfo& operator=(const Friend_CS_SearchFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_SearchFriendInfo& default_instance();

  void Swap(Friend_CS_SearchFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_CS_SearchFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_SearchFriendInfo& from);
  void MergeFrom(const Friend_CS_SearchFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_SearchFriendInfo)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_SearchFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_SearchFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_SC_SearchFriendInfo();
  virtual ~Friend_SC_SearchFriendInfo();

  Friend_SC_SearchFriendInfo(const Friend_SC_SearchFriendInfo& from);

  inline Friend_SC_SearchFriendInfo& operator=(const Friend_SC_SearchFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_SearchFriendInfo& default_instance();

  void Swap(Friend_SC_SearchFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_SC_SearchFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_SearchFriendInfo& from);
  void MergeFrom(const Friend_SC_SearchFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoPlyInfo plyInfo = 2;
  inline int plyinfo_size() const;
  inline void clear_plyinfo();
  static const int kPlyInfoFieldNumber = 2;
  inline const ::proto::message::ProtoPlyInfo& plyinfo(int index) const;
  inline ::proto::message::ProtoPlyInfo* mutable_plyinfo(int index);
  inline ::proto::message::ProtoPlyInfo* add_plyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >&
      plyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >*
      mutable_plyinfo();

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_SearchFriendInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo > plyinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_SearchFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_UpdateBeAddFriend : public ::google::protobuf::Message {
 public:
  Friend_SC_UpdateBeAddFriend();
  virtual ~Friend_SC_UpdateBeAddFriend();

  Friend_SC_UpdateBeAddFriend(const Friend_SC_UpdateBeAddFriend& from);

  inline Friend_SC_UpdateBeAddFriend& operator=(const Friend_SC_UpdateBeAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_UpdateBeAddFriend& default_instance();

  void Swap(Friend_SC_UpdateBeAddFriend* other);

  // implements Message ----------------------------------------------

  Friend_SC_UpdateBeAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_UpdateBeAddFriend& from);
  void MergeFrom(const Friend_SC_UpdateBeAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.ProtoPlyInfo plyInfo = 1;
  inline bool has_plyinfo() const;
  inline void clear_plyinfo();
  static const int kPlyInfoFieldNumber = 1;
  inline const ::proto::message::ProtoPlyInfo& plyinfo() const;
  inline ::proto::message::ProtoPlyInfo* mutable_plyinfo();
  inline ::proto::message::ProtoPlyInfo* release_plyinfo();
  inline void set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_UpdateBeAddFriend)
 private:
  inline void set_has_plyinfo();
  inline void clear_has_plyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoPlyInfo* plyinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_UpdateBeAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_UpdateFriendMsg : public ::google::protobuf::Message {
 public:
  Friend_SC_UpdateFriendMsg();
  virtual ~Friend_SC_UpdateFriendMsg();

  Friend_SC_UpdateFriendMsg(const Friend_SC_UpdateFriendMsg& from);

  inline Friend_SC_UpdateFriendMsg& operator=(const Friend_SC_UpdateFriendMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_UpdateFriendMsg& default_instance();

  void Swap(Friend_SC_UpdateFriendMsg* other);

  // implements Message ----------------------------------------------

  Friend_SC_UpdateFriendMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_UpdateFriendMsg& from);
  void MergeFrom(const Friend_SC_UpdateFriendMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.ProtoFriendChatMsg msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::proto::message::ProtoFriendChatMsg& msg() const;
  inline ::proto::message::ProtoFriendChatMsg* mutable_msg();
  inline ::proto::message::ProtoFriendChatMsg* release_msg();
  inline void set_allocated_msg(::proto::message::ProtoFriendChatMsg* msg);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_UpdateFriendMsg)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoFriendChatMsg* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_UpdateFriendMsg* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_UpdateFriendInfo : public ::google::protobuf::Message {
 public:
  Friend_SC_UpdateFriendInfo();
  virtual ~Friend_SC_UpdateFriendInfo();

  Friend_SC_UpdateFriendInfo(const Friend_SC_UpdateFriendInfo& from);

  inline Friend_SC_UpdateFriendInfo& operator=(const Friend_SC_UpdateFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_UpdateFriendInfo& default_instance();

  void Swap(Friend_SC_UpdateFriendInfo* other);

  // implements Message ----------------------------------------------

  Friend_SC_UpdateFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_UpdateFriendInfo& from);
  void MergeFrom(const Friend_SC_UpdateFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.ProtoPlyInfo plyInfo = 1;
  inline bool has_plyinfo() const;
  inline void clear_plyinfo();
  static const int kPlyInfoFieldNumber = 1;
  inline const ::proto::message::ProtoPlyInfo& plyinfo() const;
  inline ::proto::message::ProtoPlyInfo* mutable_plyinfo();
  inline ::proto::message::ProtoPlyInfo* release_plyinfo();
  inline void set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_UpdateFriendInfo)
 private:
  inline void set_has_plyinfo();
  inline void clear_has_plyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoPlyInfo* plyinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_UpdateFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_NotifyFriendGift : public ::google::protobuf::Message {
 public:
  Friend_SC_NotifyFriendGift();
  virtual ~Friend_SC_NotifyFriendGift();

  Friend_SC_NotifyFriendGift(const Friend_SC_NotifyFriendGift& from);

  inline Friend_SC_NotifyFriendGift& operator=(const Friend_SC_NotifyFriendGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_NotifyFriendGift& default_instance();

  void Swap(Friend_SC_NotifyFriendGift* other);

  // implements Message ----------------------------------------------

  Friend_SC_NotifyFriendGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_NotifyFriendGift& from);
  void MergeFrom(const Friend_SC_NotifyFriendGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 giftid = 2;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftidFieldNumber = 2;
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // optional uint32 ucounts = 3;
  inline bool has_ucounts() const;
  inline void clear_ucounts();
  static const int kUcountsFieldNumber = 3;
  inline ::google::protobuf::uint32 ucounts() const;
  inline void set_ucounts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_NotifyFriendGift)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_ucounts();
  inline void clear_has_ucounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 giftid_;
  ::google::protobuf::uint32 ucounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_NotifyFriendGift* default_instance_;
};
// -------------------------------------------------------------------

class Friend_CS_RecommentFriend : public ::google::protobuf::Message {
 public:
  Friend_CS_RecommentFriend();
  virtual ~Friend_CS_RecommentFriend();

  Friend_CS_RecommentFriend(const Friend_CS_RecommentFriend& from);

  inline Friend_CS_RecommentFriend& operator=(const Friend_CS_RecommentFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_CS_RecommentFriend& default_instance();

  void Swap(Friend_CS_RecommentFriend* other);

  // implements Message ----------------------------------------------

  Friend_CS_RecommentFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_CS_RecommentFriend& from);
  void MergeFrom(const Friend_CS_RecommentFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Friend_CS_RecommentFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_CS_RecommentFriend* default_instance_;
};
// -------------------------------------------------------------------

class Friend_SC_RecommentFriend : public ::google::protobuf::Message {
 public:
  Friend_SC_RecommentFriend();
  virtual ~Friend_SC_RecommentFriend();

  Friend_SC_RecommentFriend(const Friend_SC_RecommentFriend& from);

  inline Friend_SC_RecommentFriend& operator=(const Friend_SC_RecommentFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend_SC_RecommentFriend& default_instance();

  void Swap(Friend_SC_RecommentFriend* other);

  // implements Message ----------------------------------------------

  Friend_SC_RecommentFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend_SC_RecommentFriend& from);
  void MergeFrom(const Friend_SC_RecommentFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoPlyInfo plylist = 1;
  inline int plylist_size() const;
  inline void clear_plylist();
  static const int kPlylistFieldNumber = 1;
  inline const ::proto::message::ProtoPlyInfo& plylist(int index) const;
  inline ::proto::message::ProtoPlyInfo* mutable_plylist(int index);
  inline ::proto::message::ProtoPlyInfo* add_plylist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >&
      plylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >*
      mutable_plylist();

  // @@protoc_insertion_point(class_scope:proto.message.Friend_SC_RecommentFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo > plylist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2eproto();
  friend void protobuf_AssignDesc_friend_2eproto();
  friend void protobuf_ShutdownFile_friend_2eproto();

  void InitAsDefaultInstance();
  static Friend_SC_RecommentFriend* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoPlyInfo

// required uint64 charId = 1;
inline bool ProtoPlyInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoPlyInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoPlyInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoPlyInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ProtoPlyInfo::charid() const {
  return charid_;
}
inline void ProtoPlyInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string roleName = 2;
inline bool ProtoPlyInfo::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoPlyInfo::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoPlyInfo::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoPlyInfo::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& ProtoPlyInfo::rolename() const {
  return *rolename_;
}
inline void ProtoPlyInfo::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void ProtoPlyInfo::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void ProtoPlyInfo::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoPlyInfo::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* ProtoPlyInfo::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtoPlyInfo::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 3;
inline bool ProtoPlyInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoPlyInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoPlyInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoPlyInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ProtoPlyInfo::level() const {
  return level_;
}
inline void ProtoPlyInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 weapon = 4;
inline bool ProtoPlyInfo::has_weapon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoPlyInfo::set_has_weapon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoPlyInfo::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoPlyInfo::clear_weapon() {
  weapon_ = 0;
  clear_has_weapon();
}
inline ::google::protobuf::int32 ProtoPlyInfo::weapon() const {
  return weapon_;
}
inline void ProtoPlyInfo::set_weapon(::google::protobuf::int32 value) {
  set_has_weapon();
  weapon_ = value;
}

// optional int32 online = 5;
inline bool ProtoPlyInfo::has_online() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoPlyInfo::set_has_online() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoPlyInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoPlyInfo::clear_online() {
  online_ = 0;
  clear_has_online();
}
inline ::google::protobuf::int32 ProtoPlyInfo::online() const {
  return online_;
}
inline void ProtoPlyInfo::set_online(::google::protobuf::int32 value) {
  set_has_online();
  online_ = value;
}

// optional int32 friendShip = 6;
inline bool ProtoPlyInfo::has_friendship() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoPlyInfo::set_has_friendship() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoPlyInfo::clear_has_friendship() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoPlyInfo::clear_friendship() {
  friendship_ = 0;
  clear_has_friendship();
}
inline ::google::protobuf::int32 ProtoPlyInfo::friendship() const {
  return friendship_;
}
inline void ProtoPlyInfo::set_friendship(::google::protobuf::int32 value) {
  set_has_friendship();
  friendship_ = value;
}

// optional int32 dhlevel = 7;
inline bool ProtoPlyInfo::has_dhlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoPlyInfo::set_has_dhlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoPlyInfo::clear_has_dhlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoPlyInfo::clear_dhlevel() {
  dhlevel_ = 0;
  clear_has_dhlevel();
}
inline ::google::protobuf::int32 ProtoPlyInfo::dhlevel() const {
  return dhlevel_;
}
inline void ProtoPlyInfo::set_dhlevel(::google::protobuf::int32 value) {
  set_has_dhlevel();
  dhlevel_ = value;
}

// optional int32 combat = 8;
inline bool ProtoPlyInfo::has_combat() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoPlyInfo::set_has_combat() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoPlyInfo::clear_has_combat() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoPlyInfo::clear_combat() {
  combat_ = 0;
  clear_has_combat();
}
inline ::google::protobuf::int32 ProtoPlyInfo::combat() const {
  return combat_;
}
inline void ProtoPlyInfo::set_combat(::google::protobuf::int32 value) {
  set_has_combat();
  combat_ = value;
}

// -------------------------------------------------------------------

// ProtoFriendChatMsg

// optional uint64 fromPlyId = 1;
inline bool ProtoFriendChatMsg::has_fromplyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendChatMsg::set_has_fromplyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendChatMsg::clear_has_fromplyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendChatMsg::clear_fromplyid() {
  fromplyid_ = GOOGLE_ULONGLONG(0);
  clear_has_fromplyid();
}
inline ::google::protobuf::uint64 ProtoFriendChatMsg::fromplyid() const {
  return fromplyid_;
}
inline void ProtoFriendChatMsg::set_fromplyid(::google::protobuf::uint64 value) {
  set_has_fromplyid();
  fromplyid_ = value;
}

// required uint64 toPlyId = 2;
inline bool ProtoFriendChatMsg::has_toplyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriendChatMsg::set_has_toplyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriendChatMsg::clear_has_toplyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriendChatMsg::clear_toplyid() {
  toplyid_ = GOOGLE_ULONGLONG(0);
  clear_has_toplyid();
}
inline ::google::protobuf::uint64 ProtoFriendChatMsg::toplyid() const {
  return toplyid_;
}
inline void ProtoFriendChatMsg::set_toplyid(::google::protobuf::uint64 value) {
  set_has_toplyid();
  toplyid_ = value;
}

// optional string date = 3;
inline bool ProtoFriendChatMsg::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoFriendChatMsg::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoFriendChatMsg::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoFriendChatMsg::clear_date() {
  if (date_ != &::google::protobuf::internal::kEmptyString) {
    date_->clear();
  }
  clear_has_date();
}
inline const ::std::string& ProtoFriendChatMsg::date() const {
  return *date_;
}
inline void ProtoFriendChatMsg::set_date(const ::std::string& value) {
  set_has_date();
  if (date_ == &::google::protobuf::internal::kEmptyString) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void ProtoFriendChatMsg::set_date(const char* value) {
  set_has_date();
  if (date_ == &::google::protobuf::internal::kEmptyString) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void ProtoFriendChatMsg::set_date(const char* value, size_t size) {
  set_has_date();
  if (date_ == &::google::protobuf::internal::kEmptyString) {
    date_ = new ::std::string;
  }
  date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoFriendChatMsg::mutable_date() {
  set_has_date();
  if (date_ == &::google::protobuf::internal::kEmptyString) {
    date_ = new ::std::string;
  }
  return date_;
}
inline ::std::string* ProtoFriendChatMsg::release_date() {
  clear_has_date();
  if (date_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = date_;
    date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtoFriendChatMsg::set_allocated_date(::std::string* date) {
  if (date_ != &::google::protobuf::internal::kEmptyString) {
    delete date_;
  }
  if (date) {
    set_has_date();
    date_ = date;
  } else {
    clear_has_date();
    date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 4;
inline bool ProtoFriendChatMsg::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoFriendChatMsg::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoFriendChatMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoFriendChatMsg::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ProtoFriendChatMsg::content() const {
  return *content_;
}
inline void ProtoFriendChatMsg::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ProtoFriendChatMsg::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ProtoFriendChatMsg::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoFriendChatMsg::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ProtoFriendChatMsg::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtoFriendChatMsg::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto.message.ProtoPlyInfo fromPlyInfo = 5;
inline bool ProtoFriendChatMsg::has_fromplyinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoFriendChatMsg::set_has_fromplyinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoFriendChatMsg::clear_has_fromplyinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoFriendChatMsg::clear_fromplyinfo() {
  if (fromplyinfo_ != NULL) fromplyinfo_->::proto::message::ProtoPlyInfo::Clear();
  clear_has_fromplyinfo();
}
inline const ::proto::message::ProtoPlyInfo& ProtoFriendChatMsg::fromplyinfo() const {
  return fromplyinfo_ != NULL ? *fromplyinfo_ : *default_instance_->fromplyinfo_;
}
inline ::proto::message::ProtoPlyInfo* ProtoFriendChatMsg::mutable_fromplyinfo() {
  set_has_fromplyinfo();
  if (fromplyinfo_ == NULL) fromplyinfo_ = new ::proto::message::ProtoPlyInfo;
  return fromplyinfo_;
}
inline ::proto::message::ProtoPlyInfo* ProtoFriendChatMsg::release_fromplyinfo() {
  clear_has_fromplyinfo();
  ::proto::message::ProtoPlyInfo* temp = fromplyinfo_;
  fromplyinfo_ = NULL;
  return temp;
}
inline void ProtoFriendChatMsg::set_allocated_fromplyinfo(::proto::message::ProtoPlyInfo* fromplyinfo) {
  delete fromplyinfo_;
  fromplyinfo_ = fromplyinfo;
  if (fromplyinfo) {
    set_has_fromplyinfo();
  } else {
    clear_has_fromplyinfo();
  }
}

// optional int32 leaveMsg = 6;
inline bool ProtoFriendChatMsg::has_leavemsg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoFriendChatMsg::set_has_leavemsg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoFriendChatMsg::clear_has_leavemsg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoFriendChatMsg::clear_leavemsg() {
  leavemsg_ = 0;
  clear_has_leavemsg();
}
inline ::google::protobuf::int32 ProtoFriendChatMsg::leavemsg() const {
  return leavemsg_;
}
inline void ProtoFriendChatMsg::set_leavemsg(::google::protobuf::int32 value) {
  set_has_leavemsg();
  leavemsg_ = value;
}

// optional uint64 msgId = 7;
inline bool ProtoFriendChatMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoFriendChatMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoFriendChatMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoFriendChatMsg::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
  clear_has_msgid();
}
inline ::google::protobuf::uint64 ProtoFriendChatMsg::msgid() const {
  return msgid_;
}
inline void ProtoFriendChatMsg::set_msgid(::google::protobuf::uint64 value) {
  set_has_msgid();
  msgid_ = value;
}

// optional int32 contentType = 8;
inline bool ProtoFriendChatMsg::has_contenttype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoFriendChatMsg::set_has_contenttype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoFriendChatMsg::clear_has_contenttype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoFriendChatMsg::clear_contenttype() {
  contenttype_ = 0;
  clear_has_contenttype();
}
inline ::google::protobuf::int32 ProtoFriendChatMsg::contenttype() const {
  return contenttype_;
}
inline void ProtoFriendChatMsg::set_contenttype(::google::protobuf::int32 value) {
  set_has_contenttype();
  contenttype_ = value;
}

// optional int32 voiceTime = 9;
inline bool ProtoFriendChatMsg::has_voicetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoFriendChatMsg::set_has_voicetime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoFriendChatMsg::clear_has_voicetime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoFriendChatMsg::clear_voicetime() {
  voicetime_ = 0;
  clear_has_voicetime();
}
inline ::google::protobuf::int32 ProtoFriendChatMsg::voicetime() const {
  return voicetime_;
}
inline void ProtoFriendChatMsg::set_voicetime(::google::protobuf::int32 value) {
  set_has_voicetime();
  voicetime_ = value;
}

// -------------------------------------------------------------------

// Friend_CS_GetFriendInfo

// required int32 type = 1;
inline bool Friend_CS_GetFriendInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_GetFriendInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_GetFriendInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_GetFriendInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Friend_CS_GetFriendInfo::type() const {
  return type_;
}
inline void Friend_CS_GetFriendInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 isInTeam = 2;
inline bool Friend_CS_GetFriendInfo::has_isinteam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_CS_GetFriendInfo::set_has_isinteam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_CS_GetFriendInfo::clear_has_isinteam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_CS_GetFriendInfo::clear_isinteam() {
  isinteam_ = 0;
  clear_has_isinteam();
}
inline ::google::protobuf::int32 Friend_CS_GetFriendInfo::isinteam() const {
  return isinteam_;
}
inline void Friend_CS_GetFriendInfo::set_isinteam(::google::protobuf::int32 value) {
  set_has_isinteam();
  isinteam_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_GetFriendInfo

// required int32 result = 1;
inline bool Friend_SC_GetFriendInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_GetFriendInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_GetFriendInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_GetFriendInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_GetFriendInfo::result() const {
  return result_;
}
inline void Friend_SC_GetFriendInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 type = 2;
inline bool Friend_SC_GetFriendInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_GetFriendInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_GetFriendInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_GetFriendInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Friend_SC_GetFriendInfo::type() const {
  return type_;
}
inline void Friend_SC_GetFriendInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto.message.ProtoPlyInfo plyList = 3;
inline int Friend_SC_GetFriendInfo::plylist_size() const {
  return plylist_.size();
}
inline void Friend_SC_GetFriendInfo::clear_plylist() {
  plylist_.Clear();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_GetFriendInfo::plylist(int index) const {
  return plylist_.Get(index);
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_GetFriendInfo::mutable_plylist(int index) {
  return plylist_.Mutable(index);
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_GetFriendInfo::add_plylist() {
  return plylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >&
Friend_SC_GetFriendInfo::plylist() const {
  return plylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >*
Friend_SC_GetFriendInfo::mutable_plylist() {
  return &plylist_;
}

// -------------------------------------------------------------------

// Friend_CS_AddFriend

// required uint64 charId = 1;
inline bool Friend_CS_AddFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_AddFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_AddFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_AddFriend::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_CS_AddFriend::charid() const {
  return charid_;
}
inline void Friend_CS_AddFriend::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_AddFriend

// required int32 result = 1;
inline bool Friend_SC_AddFriend::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_AddFriend::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_AddFriend::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_AddFriend::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_AddFriend::result() const {
  return result_;
}
inline void Friend_SC_AddFriend::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.ProtoPlyInfo plyInfo = 2;
inline bool Friend_SC_AddFriend::has_plyinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_AddFriend::set_has_plyinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_AddFriend::clear_has_plyinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_AddFriend::clear_plyinfo() {
  if (plyinfo_ != NULL) plyinfo_->::proto::message::ProtoPlyInfo::Clear();
  clear_has_plyinfo();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_AddFriend::plyinfo() const {
  return plyinfo_ != NULL ? *plyinfo_ : *default_instance_->plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_AddFriend::mutable_plyinfo() {
  set_has_plyinfo();
  if (plyinfo_ == NULL) plyinfo_ = new ::proto::message::ProtoPlyInfo;
  return plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_AddFriend::release_plyinfo() {
  clear_has_plyinfo();
  ::proto::message::ProtoPlyInfo* temp = plyinfo_;
  plyinfo_ = NULL;
  return temp;
}
inline void Friend_SC_AddFriend::set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo) {
  delete plyinfo_;
  plyinfo_ = plyinfo;
  if (plyinfo) {
    set_has_plyinfo();
  } else {
    clear_has_plyinfo();
  }
}

// -------------------------------------------------------------------

// Friend_CS_DelFriend

// required uint64 charId = 1;
inline bool Friend_CS_DelFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_DelFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_DelFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_DelFriend::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_CS_DelFriend::charid() const {
  return charid_;
}
inline void Friend_CS_DelFriend::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_DelFriend

// required int32 result = 1;
inline bool Friend_SC_DelFriend::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_DelFriend::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_DelFriend::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_DelFriend::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_DelFriend::result() const {
  return result_;
}
inline void Friend_SC_DelFriend::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 charId = 2;
inline bool Friend_SC_DelFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_DelFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_DelFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_DelFriend::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_SC_DelFriend::charid() const {
  return charid_;
}
inline void Friend_SC_DelFriend::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_CS_AddToBlack

// required uint64 charId = 1;
inline bool Friend_CS_AddToBlack::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_AddToBlack::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_AddToBlack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_AddToBlack::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_CS_AddToBlack::charid() const {
  return charid_;
}
inline void Friend_CS_AddToBlack::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_AddToBlack

// required int32 result = 1;
inline bool Friend_SC_AddToBlack::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_AddToBlack::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_AddToBlack::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_AddToBlack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_AddToBlack::result() const {
  return result_;
}
inline void Friend_SC_AddToBlack::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.ProtoPlyInfo plyInfo = 2;
inline bool Friend_SC_AddToBlack::has_plyinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_AddToBlack::set_has_plyinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_AddToBlack::clear_has_plyinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_AddToBlack::clear_plyinfo() {
  if (plyinfo_ != NULL) plyinfo_->::proto::message::ProtoPlyInfo::Clear();
  clear_has_plyinfo();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_AddToBlack::plyinfo() const {
  return plyinfo_ != NULL ? *plyinfo_ : *default_instance_->plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_AddToBlack::mutable_plyinfo() {
  set_has_plyinfo();
  if (plyinfo_ == NULL) plyinfo_ = new ::proto::message::ProtoPlyInfo;
  return plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_AddToBlack::release_plyinfo() {
  clear_has_plyinfo();
  ::proto::message::ProtoPlyInfo* temp = plyinfo_;
  plyinfo_ = NULL;
  return temp;
}
inline void Friend_SC_AddToBlack::set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo) {
  delete plyinfo_;
  plyinfo_ = plyinfo;
  if (plyinfo) {
    set_has_plyinfo();
  } else {
    clear_has_plyinfo();
  }
}

// -------------------------------------------------------------------

// Friend_CS_DelBlack

// required uint64 charId = 1;
inline bool Friend_CS_DelBlack::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_DelBlack::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_DelBlack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_DelBlack::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_CS_DelBlack::charid() const {
  return charid_;
}
inline void Friend_CS_DelBlack::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_DelBlack

// required int32 result = 1;
inline bool Friend_SC_DelBlack::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_DelBlack::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_DelBlack::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_DelBlack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_DelBlack::result() const {
  return result_;
}
inline void Friend_SC_DelBlack::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 charId = 2;
inline bool Friend_SC_DelBlack::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_DelBlack::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_DelBlack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_DelBlack::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_SC_DelBlack::charid() const {
  return charid_;
}
inline void Friend_SC_DelBlack::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_CS_FriendChat

// required .proto.message.ProtoFriendChatMsg chatMsg = 1;
inline bool Friend_CS_FriendChat::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_FriendChat::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_FriendChat::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_FriendChat::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::proto::message::ProtoFriendChatMsg::Clear();
  clear_has_chatmsg();
}
inline const ::proto::message::ProtoFriendChatMsg& Friend_CS_FriendChat::chatmsg() const {
  return chatmsg_ != NULL ? *chatmsg_ : *default_instance_->chatmsg_;
}
inline ::proto::message::ProtoFriendChatMsg* Friend_CS_FriendChat::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) chatmsg_ = new ::proto::message::ProtoFriendChatMsg;
  return chatmsg_;
}
inline ::proto::message::ProtoFriendChatMsg* Friend_CS_FriendChat::release_chatmsg() {
  clear_has_chatmsg();
  ::proto::message::ProtoFriendChatMsg* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
inline void Friend_CS_FriendChat::set_allocated_chatmsg(::proto::message::ProtoFriendChatMsg* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
}

// -------------------------------------------------------------------

// Friend_SC_FriendChat

// required int32 result = 1;
inline bool Friend_SC_FriendChat::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_FriendChat::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_FriendChat::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_FriendChat::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_FriendChat::result() const {
  return result_;
}
inline void Friend_SC_FriendChat::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 msgId = 2;
inline bool Friend_SC_FriendChat::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_FriendChat::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_FriendChat::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_FriendChat::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
  clear_has_msgid();
}
inline ::google::protobuf::uint64 Friend_SC_FriendChat::msgid() const {
  return msgid_;
}
inline void Friend_SC_FriendChat::set_msgid(::google::protobuf::uint64 value) {
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// Friend_CS_FriendPresent

// required int32 itemId = 1;
inline bool Friend_CS_FriendPresent::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_FriendPresent::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_FriendPresent::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_FriendPresent::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Friend_CS_FriendPresent::itemid() const {
  return itemid_;
}
inline void Friend_CS_FriendPresent::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 num = 2;
inline bool Friend_CS_FriendPresent::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_CS_FriendPresent::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_CS_FriendPresent::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_CS_FriendPresent::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Friend_CS_FriendPresent::num() const {
  return num_;
}
inline void Friend_CS_FriendPresent::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required uint64 charId = 3;
inline bool Friend_CS_FriendPresent::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Friend_CS_FriendPresent::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Friend_CS_FriendPresent::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Friend_CS_FriendPresent::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_CS_FriendPresent::charid() const {
  return charid_;
}
inline void Friend_CS_FriendPresent::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_FriendPresent

// required int32 result = 1;
inline bool Friend_SC_FriendPresent::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_FriendPresent::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_FriendPresent::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_FriendPresent::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_FriendPresent::result() const {
  return result_;
}
inline void Friend_SC_FriendPresent::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Friend_CS_QueryFriendInfo

// required uint64 charId = 1;
inline bool Friend_CS_QueryFriendInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_QueryFriendInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_QueryFriendInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_QueryFriendInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_CS_QueryFriendInfo::charid() const {
  return charid_;
}
inline void Friend_CS_QueryFriendInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// Friend_SC_QueryFriendInfo

// required int32 result = 1;
inline bool Friend_SC_QueryFriendInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_QueryFriendInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_QueryFriendInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_QueryFriendInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_QueryFriendInfo::result() const {
  return result_;
}
inline void Friend_SC_QueryFriendInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.ProtoPlyInfo plyInfo = 2;
inline bool Friend_SC_QueryFriendInfo::has_plyinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_QueryFriendInfo::set_has_plyinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_QueryFriendInfo::clear_has_plyinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_QueryFriendInfo::clear_plyinfo() {
  if (plyinfo_ != NULL) plyinfo_->::proto::message::ProtoPlyInfo::Clear();
  clear_has_plyinfo();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_QueryFriendInfo::plyinfo() const {
  return plyinfo_ != NULL ? *plyinfo_ : *default_instance_->plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_QueryFriendInfo::mutable_plyinfo() {
  set_has_plyinfo();
  if (plyinfo_ == NULL) plyinfo_ = new ::proto::message::ProtoPlyInfo;
  return plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_QueryFriendInfo::release_plyinfo() {
  clear_has_plyinfo();
  ::proto::message::ProtoPlyInfo* temp = plyinfo_;
  plyinfo_ = NULL;
  return temp;
}
inline void Friend_SC_QueryFriendInfo::set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo) {
  delete plyinfo_;
  plyinfo_ = plyinfo;
  if (plyinfo) {
    set_has_plyinfo();
  } else {
    clear_has_plyinfo();
  }
}

// -------------------------------------------------------------------

// Friend_CS_SearchFriendInfo

// required string key = 1;
inline bool Friend_CS_SearchFriendInfo::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_CS_SearchFriendInfo::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_CS_SearchFriendInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_CS_SearchFriendInfo::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Friend_CS_SearchFriendInfo::key() const {
  return *key_;
}
inline void Friend_CS_SearchFriendInfo::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Friend_CS_SearchFriendInfo::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Friend_CS_SearchFriendInfo::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Friend_CS_SearchFriendInfo::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* Friend_CS_SearchFriendInfo::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Friend_CS_SearchFriendInfo::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Friend_SC_SearchFriendInfo

// required int32 result = 1;
inline bool Friend_SC_SearchFriendInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_SearchFriendInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_SearchFriendInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_SearchFriendInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Friend_SC_SearchFriendInfo::result() const {
  return result_;
}
inline void Friend_SC_SearchFriendInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.ProtoPlyInfo plyInfo = 2;
inline int Friend_SC_SearchFriendInfo::plyinfo_size() const {
  return plyinfo_.size();
}
inline void Friend_SC_SearchFriendInfo::clear_plyinfo() {
  plyinfo_.Clear();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_SearchFriendInfo::plyinfo(int index) const {
  return plyinfo_.Get(index);
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_SearchFriendInfo::mutable_plyinfo(int index) {
  return plyinfo_.Mutable(index);
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_SearchFriendInfo::add_plyinfo() {
  return plyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >&
Friend_SC_SearchFriendInfo::plyinfo() const {
  return plyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >*
Friend_SC_SearchFriendInfo::mutable_plyinfo() {
  return &plyinfo_;
}

// -------------------------------------------------------------------

// Friend_SC_UpdateBeAddFriend

// required .proto.message.ProtoPlyInfo plyInfo = 1;
inline bool Friend_SC_UpdateBeAddFriend::has_plyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_UpdateBeAddFriend::set_has_plyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_UpdateBeAddFriend::clear_has_plyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_UpdateBeAddFriend::clear_plyinfo() {
  if (plyinfo_ != NULL) plyinfo_->::proto::message::ProtoPlyInfo::Clear();
  clear_has_plyinfo();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_UpdateBeAddFriend::plyinfo() const {
  return plyinfo_ != NULL ? *plyinfo_ : *default_instance_->plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_UpdateBeAddFriend::mutable_plyinfo() {
  set_has_plyinfo();
  if (plyinfo_ == NULL) plyinfo_ = new ::proto::message::ProtoPlyInfo;
  return plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_UpdateBeAddFriend::release_plyinfo() {
  clear_has_plyinfo();
  ::proto::message::ProtoPlyInfo* temp = plyinfo_;
  plyinfo_ = NULL;
  return temp;
}
inline void Friend_SC_UpdateBeAddFriend::set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo) {
  delete plyinfo_;
  plyinfo_ = plyinfo;
  if (plyinfo) {
    set_has_plyinfo();
  } else {
    clear_has_plyinfo();
  }
}

// -------------------------------------------------------------------

// Friend_SC_UpdateFriendMsg

// required .proto.message.ProtoFriendChatMsg msg = 1;
inline bool Friend_SC_UpdateFriendMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_UpdateFriendMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_UpdateFriendMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_UpdateFriendMsg::clear_msg() {
  if (msg_ != NULL) msg_->::proto::message::ProtoFriendChatMsg::Clear();
  clear_has_msg();
}
inline const ::proto::message::ProtoFriendChatMsg& Friend_SC_UpdateFriendMsg::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::proto::message::ProtoFriendChatMsg* Friend_SC_UpdateFriendMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::proto::message::ProtoFriendChatMsg;
  return msg_;
}
inline ::proto::message::ProtoFriendChatMsg* Friend_SC_UpdateFriendMsg::release_msg() {
  clear_has_msg();
  ::proto::message::ProtoFriendChatMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void Friend_SC_UpdateFriendMsg::set_allocated_msg(::proto::message::ProtoFriendChatMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// -------------------------------------------------------------------

// Friend_SC_UpdateFriendInfo

// required .proto.message.ProtoPlyInfo plyInfo = 1;
inline bool Friend_SC_UpdateFriendInfo::has_plyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_UpdateFriendInfo::set_has_plyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_UpdateFriendInfo::clear_has_plyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_UpdateFriendInfo::clear_plyinfo() {
  if (plyinfo_ != NULL) plyinfo_->::proto::message::ProtoPlyInfo::Clear();
  clear_has_plyinfo();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_UpdateFriendInfo::plyinfo() const {
  return plyinfo_ != NULL ? *plyinfo_ : *default_instance_->plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_UpdateFriendInfo::mutable_plyinfo() {
  set_has_plyinfo();
  if (plyinfo_ == NULL) plyinfo_ = new ::proto::message::ProtoPlyInfo;
  return plyinfo_;
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_UpdateFriendInfo::release_plyinfo() {
  clear_has_plyinfo();
  ::proto::message::ProtoPlyInfo* temp = plyinfo_;
  plyinfo_ = NULL;
  return temp;
}
inline void Friend_SC_UpdateFriendInfo::set_allocated_plyinfo(::proto::message::ProtoPlyInfo* plyinfo) {
  delete plyinfo_;
  plyinfo_ = plyinfo;
  if (plyinfo) {
    set_has_plyinfo();
  } else {
    clear_has_plyinfo();
  }
}

// -------------------------------------------------------------------

// Friend_SC_NotifyFriendGift

// optional uint64 charid = 1;
inline bool Friend_SC_NotifyFriendGift::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend_SC_NotifyFriendGift::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend_SC_NotifyFriendGift::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend_SC_NotifyFriendGift::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Friend_SC_NotifyFriendGift::charid() const {
  return charid_;
}
inline void Friend_SC_NotifyFriendGift::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint32 giftid = 2;
inline bool Friend_SC_NotifyFriendGift::has_giftid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend_SC_NotifyFriendGift::set_has_giftid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend_SC_NotifyFriendGift::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend_SC_NotifyFriendGift::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 Friend_SC_NotifyFriendGift::giftid() const {
  return giftid_;
}
inline void Friend_SC_NotifyFriendGift::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
}

// optional uint32 ucounts = 3;
inline bool Friend_SC_NotifyFriendGift::has_ucounts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Friend_SC_NotifyFriendGift::set_has_ucounts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Friend_SC_NotifyFriendGift::clear_has_ucounts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Friend_SC_NotifyFriendGift::clear_ucounts() {
  ucounts_ = 0u;
  clear_has_ucounts();
}
inline ::google::protobuf::uint32 Friend_SC_NotifyFriendGift::ucounts() const {
  return ucounts_;
}
inline void Friend_SC_NotifyFriendGift::set_ucounts(::google::protobuf::uint32 value) {
  set_has_ucounts();
  ucounts_ = value;
}

// -------------------------------------------------------------------

// Friend_CS_RecommentFriend

// -------------------------------------------------------------------

// Friend_SC_RecommentFriend

// repeated .proto.message.ProtoPlyInfo plylist = 1;
inline int Friend_SC_RecommentFriend::plylist_size() const {
  return plylist_.size();
}
inline void Friend_SC_RecommentFriend::clear_plylist() {
  plylist_.Clear();
}
inline const ::proto::message::ProtoPlyInfo& Friend_SC_RecommentFriend::plylist(int index) const {
  return plylist_.Get(index);
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_RecommentFriend::mutable_plylist(int index) {
  return plylist_.Mutable(index);
}
inline ::proto::message::ProtoPlyInfo* Friend_SC_RecommentFriend::add_plylist() {
  return plylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >&
Friend_SC_RecommentFriend::plylist() const {
  return plylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoPlyInfo >*
Friend_SC_RecommentFriend::mutable_plylist() {
  return &plylist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_friend_2eproto__INCLUDED
