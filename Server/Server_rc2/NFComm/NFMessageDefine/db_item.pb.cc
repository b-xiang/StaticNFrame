// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_item.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "db_item.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

namespace {

const ::google::protobuf::Descriptor* Bag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Bag_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquiponInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquiponInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_db_5fitem_2eproto() {
  protobuf_AddDesc_db_5fitem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "db_item.proto");
  GOOGLE_CHECK(file != NULL);
  Bag_descriptor_ = file->message_type(0);
  static const int Bag_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, grid_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, equip_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, itemusecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, item_piece_list_),
  };
  Bag_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Bag_descriptor_,
      Bag::default_instance_,
      Bag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bag, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Bag));
  AllItemInfo_descriptor_ = file->message_type(1);
  static const int AllItemInfo_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, player_bag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, temp_bag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, store_8_),
  };
  AllItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllItemInfo_descriptor_,
      AllItemInfo::default_instance_,
      AllItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllItemInfo));
  EquiponInfo_descriptor_ = file->message_type(2);
  static const int EquiponInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquiponInfo, equip_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquiponInfo, equipgird_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquiponInfo, suit_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquiponInfo, suitid_),
  };
  EquiponInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquiponInfo_descriptor_,
      EquiponInfo::default_instance_,
      EquiponInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquiponInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquiponInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquiponInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_db_5fitem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Bag_descriptor_, &Bag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllItemInfo_descriptor_, &AllItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquiponInfo_descriptor_, &EquiponInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_db_5fitem_2eproto() {
  delete Bag::default_instance_;
  delete Bag_reflection_;
  delete AllItemInfo::default_instance_;
  delete AllItemInfo_reflection_;
  delete EquiponInfo::default_instance_;
  delete EquiponInfo_reflection_;
}

void protobuf_AddDesc_db_5fitem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::message::protobuf_AddDesc_common_2eproto();
  ::proto::message::protobuf_AddDesc_item_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rdb_item.proto\022\rproto.message\032\014common.p"
    "roto\032\nitem.proto\"\304\001\n\003Bag\022\020\n\010grid_num\030\001 \001"
    "(\005\022&\n\titem_list\030\002 \003(\0132\023.proto.message.It"
    "em\022(\n\nequip_list\030\003 \003(\0132\024.proto.message.E"
    "quip\022*\n\014itemUseCount\030\004 \003(\0132\024.proto.messa"
    "ge.IDNum\022-\n\017item_piece_list\030\005 \003(\0132\024.prot"
    "o.message.IDNum\"\203\003\n\013AllItemInfo\022&\n\nplaye"
    "r_bag\030\001 \001(\0132\022.proto.message.Bag\022$\n\010temp_"
    "bag\030\002 \001(\0132\022.proto.message.Bag\022#\n\007store_1"
    "\030\003 \001(\0132\022.proto.message.Bag\022#\n\007store_2\030\004 "
    "\001(\0132\022.proto.message.Bag\022#\n\007store_3\030\005 \001(\013"
    "2\022.proto.message.Bag\022#\n\007store_4\030\006 \001(\0132\022."
    "proto.message.Bag\022#\n\007store_5\030\007 \001(\0132\022.pro"
    "to.message.Bag\022#\n\007store_6\030\010 \001(\0132\022.proto."
    "message.Bag\022#\n\007store_7\030\t \001(\0132\022.proto.mes"
    "sage.Bag\022#\n\007store_8\030\n \001(\0132\022.proto.messag"
    "e.Bag\"\246\001\n\013EquiponInfo\022(\n\nequip_list\030\001 \003("
    "\0132\024.proto.message.Equip\0220\n\016equipgird_lis"
    "t\030\002 \003(\0132\030.proto.message.EquipGird\022+\n\tsui"
    "t_list\030\003 \003(\0132\030.proto.message.EquipSuit\022\016"
    "\n\006suitid\030\004 \001(\rB\017\n\rproto.message", 831);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db_item.proto", &protobuf_RegisterTypes);
  Bag::default_instance_ = new Bag();
  AllItemInfo::default_instance_ = new AllItemInfo();
  EquiponInfo::default_instance_ = new EquiponInfo();
  Bag::default_instance_->InitAsDefaultInstance();
  AllItemInfo::default_instance_->InitAsDefaultInstance();
  EquiponInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_db_5fitem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_db_5fitem_2eproto {
  StaticDescriptorInitializer_db_5fitem_2eproto() {
    protobuf_AddDesc_db_5fitem_2eproto();
  }
} static_descriptor_initializer_db_5fitem_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Bag::kGridNumFieldNumber;
const int Bag::kItemListFieldNumber;
const int Bag::kEquipListFieldNumber;
const int Bag::kItemUseCountFieldNumber;
const int Bag::kItemPieceListFieldNumber;
#endif  // !_MSC_VER

Bag::Bag()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Bag::InitAsDefaultInstance() {
}

Bag::Bag(const Bag& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Bag::SharedCtor() {
  _cached_size_ = 0;
  grid_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Bag::~Bag() {
  SharedDtor();
}

void Bag::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Bag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Bag_descriptor_;
}

const Bag& Bag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_db_5fitem_2eproto();
  return *default_instance_;
}

Bag* Bag::default_instance_ = NULL;

Bag* Bag::New() const {
  return new Bag;
}

void Bag::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grid_num_ = 0;
  }
  item_list_.Clear();
  equip_list_.Clear();
  itemusecount_.Clear();
  item_piece_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Bag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 grid_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_num_)));
          set_has_grid_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        break;
      }

      // repeated .proto.message.Item item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        if (input->ExpectTag(26)) goto parse_equip_list;
        break;
      }

      // repeated .proto.message.Equip equip_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_equip_list;
        if (input->ExpectTag(34)) goto parse_itemUseCount;
        break;
      }

      // repeated .proto.message.IDNum itemUseCount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemUseCount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemusecount()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_itemUseCount;
        if (input->ExpectTag(42)) goto parse_item_piece_list;
        break;
      }

      // repeated .proto.message.IDNum item_piece_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_piece_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_piece_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_piece_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Bag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 grid_num = 1;
  if (has_grid_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grid_num(), output);
  }

  // repeated .proto.message.Item item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(i), output);
  }

  // repeated .proto.message.Equip equip_list = 3;
  for (int i = 0; i < this->equip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->equip_list(i), output);
  }

  // repeated .proto.message.IDNum itemUseCount = 4;
  for (int i = 0; i < this->itemusecount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->itemusecount(i), output);
  }

  // repeated .proto.message.IDNum item_piece_list = 5;
  for (int i = 0; i < this->item_piece_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item_piece_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Bag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 grid_num = 1;
  if (has_grid_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grid_num(), target);
  }

  // repeated .proto.message.Item item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_list(i), target);
  }

  // repeated .proto.message.Equip equip_list = 3;
  for (int i = 0; i < this->equip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->equip_list(i), target);
  }

  // repeated .proto.message.IDNum itemUseCount = 4;
  for (int i = 0; i < this->itemusecount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->itemusecount(i), target);
  }

  // repeated .proto.message.IDNum item_piece_list = 5;
  for (int i = 0; i < this->item_piece_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->item_piece_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Bag::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 grid_num = 1;
    if (has_grid_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grid_num());
    }

  }
  // repeated .proto.message.Item item_list = 2;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }

  // repeated .proto.message.Equip equip_list = 3;
  total_size += 1 * this->equip_list_size();
  for (int i = 0; i < this->equip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_list(i));
  }

  // repeated .proto.message.IDNum itemUseCount = 4;
  total_size += 1 * this->itemusecount_size();
  for (int i = 0; i < this->itemusecount_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemusecount(i));
  }

  // repeated .proto.message.IDNum item_piece_list = 5;
  total_size += 1 * this->item_piece_list_size();
  for (int i = 0; i < this->item_piece_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_piece_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bag::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Bag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Bag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Bag::MergeFrom(const Bag& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  equip_list_.MergeFrom(from.equip_list_);
  itemusecount_.MergeFrom(from.itemusecount_);
  item_piece_list_.MergeFrom(from.item_piece_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grid_num()) {
      set_grid_num(from.grid_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Bag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bag::CopyFrom(const Bag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bag::IsInitialized() const {

  return true;
}

void Bag::Swap(Bag* other) {
  if (other != this) {
    std::swap(grid_num_, other->grid_num_);
    item_list_.Swap(&other->item_list_);
    equip_list_.Swap(&other->equip_list_);
    itemusecount_.Swap(&other->itemusecount_);
    item_piece_list_.Swap(&other->item_piece_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Bag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Bag_descriptor_;
  metadata.reflection = Bag_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllItemInfo::kPlayerBagFieldNumber;
const int AllItemInfo::kTempBagFieldNumber;
const int AllItemInfo::kStore1FieldNumber;
const int AllItemInfo::kStore2FieldNumber;
const int AllItemInfo::kStore3FieldNumber;
const int AllItemInfo::kStore4FieldNumber;
const int AllItemInfo::kStore5FieldNumber;
const int AllItemInfo::kStore6FieldNumber;
const int AllItemInfo::kStore7FieldNumber;
const int AllItemInfo::kStore8FieldNumber;
#endif  // !_MSC_VER

AllItemInfo::AllItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllItemInfo::InitAsDefaultInstance() {
  player_bag_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  temp_bag_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_1_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_2_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_3_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_4_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_5_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_6_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_7_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
  store_8_ = const_cast< ::proto::message::Bag*>(&::proto::message::Bag::default_instance());
}

AllItemInfo::AllItemInfo(const AllItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllItemInfo::SharedCtor() {
  _cached_size_ = 0;
  player_bag_ = NULL;
  temp_bag_ = NULL;
  store_1_ = NULL;
  store_2_ = NULL;
  store_3_ = NULL;
  store_4_ = NULL;
  store_5_ = NULL;
  store_6_ = NULL;
  store_7_ = NULL;
  store_8_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllItemInfo::~AllItemInfo() {
  SharedDtor();
}

void AllItemInfo::SharedDtor() {
  if (this != default_instance_) {
    delete player_bag_;
    delete temp_bag_;
    delete store_1_;
    delete store_2_;
    delete store_3_;
    delete store_4_;
    delete store_5_;
    delete store_6_;
    delete store_7_;
    delete store_8_;
  }
}

void AllItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllItemInfo_descriptor_;
}

const AllItemInfo& AllItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_db_5fitem_2eproto();
  return *default_instance_;
}

AllItemInfo* AllItemInfo::default_instance_ = NULL;

AllItemInfo* AllItemInfo::New() const {
  return new AllItemInfo;
}

void AllItemInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_player_bag()) {
      if (player_bag_ != NULL) player_bag_->::proto::message::Bag::Clear();
    }
    if (has_temp_bag()) {
      if (temp_bag_ != NULL) temp_bag_->::proto::message::Bag::Clear();
    }
    if (has_store_1()) {
      if (store_1_ != NULL) store_1_->::proto::message::Bag::Clear();
    }
    if (has_store_2()) {
      if (store_2_ != NULL) store_2_->::proto::message::Bag::Clear();
    }
    if (has_store_3()) {
      if (store_3_ != NULL) store_3_->::proto::message::Bag::Clear();
    }
    if (has_store_4()) {
      if (store_4_ != NULL) store_4_->::proto::message::Bag::Clear();
    }
    if (has_store_5()) {
      if (store_5_ != NULL) store_5_->::proto::message::Bag::Clear();
    }
    if (has_store_6()) {
      if (store_6_ != NULL) store_6_->::proto::message::Bag::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_store_7()) {
      if (store_7_ != NULL) store_7_->::proto::message::Bag::Clear();
    }
    if (has_store_8()) {
      if (store_8_ != NULL) store_8_->::proto::message::Bag::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.message.Bag player_bag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_bag()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_temp_bag;
        break;
      }

      // optional .proto.message.Bag temp_bag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_temp_bag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_temp_bag()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_store_1;
        break;
      }

      // optional .proto.message.Bag store_1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_store_2;
        break;
      }

      // optional .proto.message.Bag store_2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_store_3;
        break;
      }

      // optional .proto.message.Bag store_3 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_3()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_store_4;
        break;
      }

      // optional .proto.message.Bag store_4 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_4()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_store_5;
        break;
      }

      // optional .proto.message.Bag store_5 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_5()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_store_6;
        break;
      }

      // optional .proto.message.Bag store_6 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_6()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_store_7;
        break;
      }

      // optional .proto.message.Bag store_7 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_7()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_store_8;
        break;
      }

      // optional .proto.message.Bag store_8 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_store_8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_8()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto.message.Bag player_bag = 1;
  if (has_player_bag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_bag(), output);
  }

  // optional .proto.message.Bag temp_bag = 2;
  if (has_temp_bag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->temp_bag(), output);
  }

  // optional .proto.message.Bag store_1 = 3;
  if (has_store_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->store_1(), output);
  }

  // optional .proto.message.Bag store_2 = 4;
  if (has_store_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->store_2(), output);
  }

  // optional .proto.message.Bag store_3 = 5;
  if (has_store_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->store_3(), output);
  }

  // optional .proto.message.Bag store_4 = 6;
  if (has_store_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->store_4(), output);
  }

  // optional .proto.message.Bag store_5 = 7;
  if (has_store_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->store_5(), output);
  }

  // optional .proto.message.Bag store_6 = 8;
  if (has_store_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->store_6(), output);
  }

  // optional .proto.message.Bag store_7 = 9;
  if (has_store_7()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->store_7(), output);
  }

  // optional .proto.message.Bag store_8 = 10;
  if (has_store_8()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->store_8(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto.message.Bag player_bag = 1;
  if (has_player_bag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->player_bag(), target);
  }

  // optional .proto.message.Bag temp_bag = 2;
  if (has_temp_bag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->temp_bag(), target);
  }

  // optional .proto.message.Bag store_1 = 3;
  if (has_store_1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->store_1(), target);
  }

  // optional .proto.message.Bag store_2 = 4;
  if (has_store_2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->store_2(), target);
  }

  // optional .proto.message.Bag store_3 = 5;
  if (has_store_3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->store_3(), target);
  }

  // optional .proto.message.Bag store_4 = 6;
  if (has_store_4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->store_4(), target);
  }

  // optional .proto.message.Bag store_5 = 7;
  if (has_store_5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->store_5(), target);
  }

  // optional .proto.message.Bag store_6 = 8;
  if (has_store_6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->store_6(), target);
  }

  // optional .proto.message.Bag store_7 = 9;
  if (has_store_7()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->store_7(), target);
  }

  // optional .proto.message.Bag store_8 = 10;
  if (has_store_8()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->store_8(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllItemInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto.message.Bag player_bag = 1;
    if (has_player_bag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_bag());
    }

    // optional .proto.message.Bag temp_bag = 2;
    if (has_temp_bag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->temp_bag());
    }

    // optional .proto.message.Bag store_1 = 3;
    if (has_store_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_1());
    }

    // optional .proto.message.Bag store_2 = 4;
    if (has_store_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_2());
    }

    // optional .proto.message.Bag store_3 = 5;
    if (has_store_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_3());
    }

    // optional .proto.message.Bag store_4 = 6;
    if (has_store_4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_4());
    }

    // optional .proto.message.Bag store_5 = 7;
    if (has_store_5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_5());
    }

    // optional .proto.message.Bag store_6 = 8;
    if (has_store_6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_6());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .proto.message.Bag store_7 = 9;
    if (has_store_7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_7());
    }

    // optional .proto.message.Bag store_8 = 10;
    if (has_store_8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->store_8());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllItemInfo::MergeFrom(const AllItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_bag()) {
      mutable_player_bag()->::proto::message::Bag::MergeFrom(from.player_bag());
    }
    if (from.has_temp_bag()) {
      mutable_temp_bag()->::proto::message::Bag::MergeFrom(from.temp_bag());
    }
    if (from.has_store_1()) {
      mutable_store_1()->::proto::message::Bag::MergeFrom(from.store_1());
    }
    if (from.has_store_2()) {
      mutable_store_2()->::proto::message::Bag::MergeFrom(from.store_2());
    }
    if (from.has_store_3()) {
      mutable_store_3()->::proto::message::Bag::MergeFrom(from.store_3());
    }
    if (from.has_store_4()) {
      mutable_store_4()->::proto::message::Bag::MergeFrom(from.store_4());
    }
    if (from.has_store_5()) {
      mutable_store_5()->::proto::message::Bag::MergeFrom(from.store_5());
    }
    if (from.has_store_6()) {
      mutable_store_6()->::proto::message::Bag::MergeFrom(from.store_6());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_store_7()) {
      mutable_store_7()->::proto::message::Bag::MergeFrom(from.store_7());
    }
    if (from.has_store_8()) {
      mutable_store_8()->::proto::message::Bag::MergeFrom(from.store_8());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllItemInfo::CopyFrom(const AllItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllItemInfo::IsInitialized() const {

  return true;
}

void AllItemInfo::Swap(AllItemInfo* other) {
  if (other != this) {
    std::swap(player_bag_, other->player_bag_);
    std::swap(temp_bag_, other->temp_bag_);
    std::swap(store_1_, other->store_1_);
    std::swap(store_2_, other->store_2_);
    std::swap(store_3_, other->store_3_);
    std::swap(store_4_, other->store_4_);
    std::swap(store_5_, other->store_5_);
    std::swap(store_6_, other->store_6_);
    std::swap(store_7_, other->store_7_);
    std::swap(store_8_, other->store_8_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllItemInfo_descriptor_;
  metadata.reflection = AllItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquiponInfo::kEquipListFieldNumber;
const int EquiponInfo::kEquipgirdListFieldNumber;
const int EquiponInfo::kSuitListFieldNumber;
const int EquiponInfo::kSuitidFieldNumber;
#endif  // !_MSC_VER

EquiponInfo::EquiponInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquiponInfo::InitAsDefaultInstance() {
}

EquiponInfo::EquiponInfo(const EquiponInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquiponInfo::SharedCtor() {
  _cached_size_ = 0;
  suitid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquiponInfo::~EquiponInfo() {
  SharedDtor();
}

void EquiponInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquiponInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquiponInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquiponInfo_descriptor_;
}

const EquiponInfo& EquiponInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_db_5fitem_2eproto();
  return *default_instance_;
}

EquiponInfo* EquiponInfo::default_instance_ = NULL;

EquiponInfo* EquiponInfo::New() const {
  return new EquiponInfo;
}

void EquiponInfo::Clear() {
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    suitid_ = 0u;
  }
  equip_list_.Clear();
  equipgird_list_.Clear();
  suit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquiponInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.message.Equip equip_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_equip_list;
        if (input->ExpectTag(18)) goto parse_equipgird_list;
        break;
      }

      // repeated .proto.message.EquipGird equipgird_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipgird_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipgird_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equipgird_list;
        if (input->ExpectTag(26)) goto parse_suit_list;
        break;
      }

      // repeated .proto.message.EquipSuit suit_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_suit_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_suit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_suit_list;
        if (input->ExpectTag(32)) goto parse_suitid;
        break;
      }

      // optional uint32 suitid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_suitid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suitid_)));
          set_has_suitid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquiponInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto.message.Equip equip_list = 1;
  for (int i = 0; i < this->equip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equip_list(i), output);
  }

  // repeated .proto.message.EquipGird equipgird_list = 2;
  for (int i = 0; i < this->equipgird_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipgird_list(i), output);
  }

  // repeated .proto.message.EquipSuit suit_list = 3;
  for (int i = 0; i < this->suit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->suit_list(i), output);
  }

  // optional uint32 suitid = 4;
  if (has_suitid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->suitid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquiponInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto.message.Equip equip_list = 1;
  for (int i = 0; i < this->equip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equip_list(i), target);
  }

  // repeated .proto.message.EquipGird equipgird_list = 2;
  for (int i = 0; i < this->equipgird_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipgird_list(i), target);
  }

  // repeated .proto.message.EquipSuit suit_list = 3;
  for (int i = 0; i < this->suit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->suit_list(i), target);
  }

  // optional uint32 suitid = 4;
  if (has_suitid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->suitid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquiponInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional uint32 suitid = 4;
    if (has_suitid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->suitid());
    }

  }
  // repeated .proto.message.Equip equip_list = 1;
  total_size += 1 * this->equip_list_size();
  for (int i = 0; i < this->equip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_list(i));
  }

  // repeated .proto.message.EquipGird equipgird_list = 2;
  total_size += 1 * this->equipgird_list_size();
  for (int i = 0; i < this->equipgird_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipgird_list(i));
  }

  // repeated .proto.message.EquipSuit suit_list = 3;
  total_size += 1 * this->suit_list_size();
  for (int i = 0; i < this->suit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->suit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquiponInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquiponInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquiponInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquiponInfo::MergeFrom(const EquiponInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_list_.MergeFrom(from.equip_list_);
  equipgird_list_.MergeFrom(from.equipgird_list_);
  suit_list_.MergeFrom(from.suit_list_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_suitid()) {
      set_suitid(from.suitid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquiponInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquiponInfo::CopyFrom(const EquiponInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquiponInfo::IsInitialized() const {

  return true;
}

void EquiponInfo::Swap(EquiponInfo* other) {
  if (other != this) {
    equip_list_.Swap(&other->equip_list_);
    equipgird_list_.Swap(&other->equipgird_list_);
    suit_list_.Swap(&other->suit_list_);
    std::swap(suitid_, other->suitid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquiponInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquiponInfo_descriptor_;
  metadata.reflection = EquiponInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

// @@protoc_insertion_point(global_scope)
