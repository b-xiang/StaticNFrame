// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

#ifndef PROTOBUF_mail_2eproto__INCLUDED
#define PROTOBUF_mail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "item.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mail_2eproto();
void protobuf_AssignDesc_mail_2eproto();
void protobuf_ShutdownFile_mail_2eproto();

class MixMailData;
class MailData;
class Mail_CS_GetMailList;
class MailListItem;
class Mail_SC_GetMailDetail;
class Mail_SC_GetMailList;
class Mail_CS_GetMailDetail;
class Mail_CS_GetMailAccessory;
class Mail_SC_GetMailAccessory;
class Mail_SC_NewMails;
class MailRecordData;
class MailBoxData;
class Mail_CS_DelMail;
class Mail_SC_DelMail;

// ===================================================================

class MixMailData : public ::google::protobuf::Message {
 public:
  MixMailData();
  virtual ~MixMailData();

  MixMailData(const MixMailData& from);

  inline MixMailData& operator=(const MixMailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MixMailData& default_instance();

  void Swap(MixMailData* other);

  // implements Message ----------------------------------------------

  MixMailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MixMailData& from);
  void MergeFrom(const MixMailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 templateID = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIDFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // repeated .proto.message.DropItemNum accessory = 4;
  inline int accessory_size() const;
  inline void clear_accessory();
  static const int kAccessoryFieldNumber = 4;
  inline const ::proto::message::DropItemNum& accessory(int index) const;
  inline ::proto::message::DropItemNum* mutable_accessory(int index);
  inline ::proto::message::DropItemNum* add_accessory();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >&
      accessory() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >*
      mutable_accessory();

  // required uint64 sendTime = 5;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 sendtime() const;
  inline void set_sendtime(::google::protobuf::uint64 value);

  // required uint32 validityTime = 6;
  inline bool has_validitytime() const;
  inline void clear_validitytime();
  static const int kValidityTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 validitytime() const;
  inline void set_validitytime(::google::protobuf::uint32 value);

  // optional uint32 flag = 7;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 7;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // repeated string add_content = 8;
  inline int add_content_size() const;
  inline void clear_add_content();
  static const int kAddContentFieldNumber = 8;
  inline const ::std::string& add_content(int index) const;
  inline ::std::string* mutable_add_content(int index);
  inline void set_add_content(int index, const ::std::string& value);
  inline void set_add_content(int index, const char* value);
  inline void set_add_content(int index, const char* value, size_t size);
  inline ::std::string* add_add_content();
  inline void add_add_content(const ::std::string& value);
  inline void add_add_content(const char* value);
  inline void add_add_content(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& add_content() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_add_content();

  // @@protoc_insertion_point(class_scope:proto.message.MixMailData)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_validitytime();
  inline void clear_has_validitytime();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* title_;
  ::std::string* content_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 validitytime_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum > accessory_;
  ::google::protobuf::uint64 sendtime_;
  ::google::protobuf::RepeatedPtrField< ::std::string> add_content_;
  ::google::protobuf::uint32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static MixMailData* default_instance_;
};
// -------------------------------------------------------------------

class MailData : public ::google::protobuf::Message {
 public:
  MailData();
  virtual ~MailData();

  MailData(const MailData& from);

  inline MailData& operator=(const MailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailData& default_instance();

  void Swap(MailData* other);

  // implements Message ----------------------------------------------

  MailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailData& from);
  void MergeFrom(const MailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // required uint64 ownerID = 2;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIDFieldNumber = 2;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // required .proto.message.MixMailData mixinfo = 3;
  inline bool has_mixinfo() const;
  inline void clear_mixinfo();
  static const int kMixinfoFieldNumber = 3;
  inline const ::proto::message::MixMailData& mixinfo() const;
  inline ::proto::message::MixMailData* mutable_mixinfo();
  inline ::proto::message::MixMailData* release_mixinfo();
  inline void set_allocated_mixinfo(::proto::message::MixMailData* mixinfo);

  // required uint32 mail_type = 4;
  inline bool has_mail_type() const;
  inline void clear_mail_type();
  static const int kMailTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 mail_type() const;
  inline void set_mail_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.MailData)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_mixinfo();
  inline void clear_has_mixinfo();
  inline void set_has_mail_type();
  inline void clear_has_mail_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint64 ownerid_;
  ::proto::message::MixMailData* mixinfo_;
  ::google::protobuf::uint32 mail_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static MailData* default_instance_;
};
// -------------------------------------------------------------------

class Mail_CS_GetMailList : public ::google::protobuf::Message {
 public:
  Mail_CS_GetMailList();
  virtual ~Mail_CS_GetMailList();

  Mail_CS_GetMailList(const Mail_CS_GetMailList& from);

  inline Mail_CS_GetMailList& operator=(const Mail_CS_GetMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_CS_GetMailList& default_instance();

  void Swap(Mail_CS_GetMailList* other);

  // implements Message ----------------------------------------------

  Mail_CS_GetMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_CS_GetMailList& from);
  void MergeFrom(const Mail_CS_GetMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Mail_CS_GetMailList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_CS_GetMailList* default_instance_;
};
// -------------------------------------------------------------------

class MailListItem : public ::google::protobuf::Message {
 public:
  MailListItem();
  virtual ~MailListItem();

  MailListItem(const MailListItem& from);

  inline MailListItem& operator=(const MailListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailListItem& default_instance();

  void Swap(MailListItem* other);

  // implements Message ----------------------------------------------

  MailListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailListItem& from);
  void MergeFrom(const MailListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint32 templateID = 2;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIDFieldNumber = 2;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // optional string title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required uint64 sendTime = 4;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 sendtime() const;
  inline void set_sendtime(::google::protobuf::uint64 value);

  // required uint32 flag = 5;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional bool haveAccessory = 6;
  inline bool has_haveaccessory() const;
  inline void clear_haveaccessory();
  static const int kHaveAccessoryFieldNumber = 6;
  inline bool haveaccessory() const;
  inline void set_haveaccessory(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.MailListItem)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_haveaccessory();
  inline void clear_has_haveaccessory();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::std::string* title_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint64 sendtime_;
  bool haveaccessory_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static MailListItem* default_instance_;
};
// -------------------------------------------------------------------

class Mail_SC_GetMailDetail : public ::google::protobuf::Message {
 public:
  Mail_SC_GetMailDetail();
  virtual ~Mail_SC_GetMailDetail();

  Mail_SC_GetMailDetail(const Mail_SC_GetMailDetail& from);

  inline Mail_SC_GetMailDetail& operator=(const Mail_SC_GetMailDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_SC_GetMailDetail& default_instance();

  void Swap(Mail_SC_GetMailDetail* other);

  // implements Message ----------------------------------------------

  Mail_SC_GetMailDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_SC_GetMailDetail& from);
  void MergeFrom(const Mail_SC_GetMailDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // required uint32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required .proto.message.MixMailData mixinfo = 3;
  inline bool has_mixinfo() const;
  inline void clear_mixinfo();
  static const int kMixinfoFieldNumber = 3;
  inline const ::proto::message::MixMailData& mixinfo() const;
  inline ::proto::message::MixMailData* mutable_mixinfo();
  inline ::proto::message::MixMailData* release_mixinfo();
  inline void set_allocated_mixinfo(::proto::message::MixMailData* mixinfo);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_SC_GetMailDetail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_mixinfo();
  inline void clear_has_mixinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::proto::message::MixMailData* mixinfo_;
  ::google::protobuf::uint32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_SC_GetMailDetail* default_instance_;
};
// -------------------------------------------------------------------

class Mail_SC_GetMailList : public ::google::protobuf::Message {
 public:
  Mail_SC_GetMailList();
  virtual ~Mail_SC_GetMailList();

  Mail_SC_GetMailList(const Mail_SC_GetMailList& from);

  inline Mail_SC_GetMailList& operator=(const Mail_SC_GetMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_SC_GetMailList& default_instance();

  void Swap(Mail_SC_GetMailList* other);

  // implements Message ----------------------------------------------

  Mail_SC_GetMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_SC_GetMailList& from);
  void MergeFrom(const Mail_SC_GetMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.MailListItem mailList = 1;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 1;
  inline const ::proto::message::MailListItem& maillist(int index) const;
  inline ::proto::message::MailListItem* mutable_maillist(int index);
  inline ::proto::message::MailListItem* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MailListItem >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::MailListItem >*
      mutable_maillist();

  // optional .proto.message.Mail_SC_GetMailDetail curMail = 2;
  inline bool has_curmail() const;
  inline void clear_curmail();
  static const int kCurMailFieldNumber = 2;
  inline const ::proto::message::Mail_SC_GetMailDetail& curmail() const;
  inline ::proto::message::Mail_SC_GetMailDetail* mutable_curmail();
  inline ::proto::message::Mail_SC_GetMailDetail* release_curmail();
  inline void set_allocated_curmail(::proto::message::Mail_SC_GetMailDetail* curmail);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_SC_GetMailList)
 private:
  inline void set_has_curmail();
  inline void clear_has_curmail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::MailListItem > maillist_;
  ::proto::message::Mail_SC_GetMailDetail* curmail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_SC_GetMailList* default_instance_;
};
// -------------------------------------------------------------------

class Mail_CS_GetMailDetail : public ::google::protobuf::Message {
 public:
  Mail_CS_GetMailDetail();
  virtual ~Mail_CS_GetMailDetail();

  Mail_CS_GetMailDetail(const Mail_CS_GetMailDetail& from);

  inline Mail_CS_GetMailDetail& operator=(const Mail_CS_GetMailDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_CS_GetMailDetail& default_instance();

  void Swap(Mail_CS_GetMailDetail* other);

  // implements Message ----------------------------------------------

  Mail_CS_GetMailDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_CS_GetMailDetail& from);
  void MergeFrom(const Mail_CS_GetMailDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_CS_GetMailDetail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_CS_GetMailDetail* default_instance_;
};
// -------------------------------------------------------------------

class Mail_CS_GetMailAccessory : public ::google::protobuf::Message {
 public:
  Mail_CS_GetMailAccessory();
  virtual ~Mail_CS_GetMailAccessory();

  Mail_CS_GetMailAccessory(const Mail_CS_GetMailAccessory& from);

  inline Mail_CS_GetMailAccessory& operator=(const Mail_CS_GetMailAccessory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_CS_GetMailAccessory& default_instance();

  void Swap(Mail_CS_GetMailAccessory* other);

  // implements Message ----------------------------------------------

  Mail_CS_GetMailAccessory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_CS_GetMailAccessory& from);
  void MergeFrom(const Mail_CS_GetMailAccessory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_CS_GetMailAccessory)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_CS_GetMailAccessory* default_instance_;
};
// -------------------------------------------------------------------

class Mail_SC_GetMailAccessory : public ::google::protobuf::Message {
 public:
  Mail_SC_GetMailAccessory();
  virtual ~Mail_SC_GetMailAccessory();

  Mail_SC_GetMailAccessory(const Mail_SC_GetMailAccessory& from);

  inline Mail_SC_GetMailAccessory& operator=(const Mail_SC_GetMailAccessory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_SC_GetMailAccessory& default_instance();

  void Swap(Mail_SC_GetMailAccessory* other);

  // implements Message ----------------------------------------------

  Mail_SC_GetMailAccessory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_SC_GetMailAccessory& from);
  void MergeFrom(const Mail_SC_GetMailAccessory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint64 mailID = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 2;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // repeated .proto.message.DropItemNum accessory = 3;
  inline int accessory_size() const;
  inline void clear_accessory();
  static const int kAccessoryFieldNumber = 3;
  inline const ::proto::message::DropItemNum& accessory(int index) const;
  inline ::proto::message::DropItemNum* mutable_accessory(int index);
  inline ::proto::message::DropItemNum* add_accessory();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >&
      accessory() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >*
      mutable_accessory();

  // @@protoc_insertion_point(class_scope:proto.message.Mail_SC_GetMailAccessory)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum > accessory_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_SC_GetMailAccessory* default_instance_;
};
// -------------------------------------------------------------------

class Mail_SC_NewMails : public ::google::protobuf::Message {
 public:
  Mail_SC_NewMails();
  virtual ~Mail_SC_NewMails();

  Mail_SC_NewMails(const Mail_SC_NewMails& from);

  inline Mail_SC_NewMails& operator=(const Mail_SC_NewMails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_SC_NewMails& default_instance();

  void Swap(Mail_SC_NewMails* other);

  // implements Message ----------------------------------------------

  Mail_SC_NewMails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_SC_NewMails& from);
  void MergeFrom(const Mail_SC_NewMails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 newMailNum = 1;
  inline bool has_newmailnum() const;
  inline void clear_newmailnum();
  static const int kNewMailNumFieldNumber = 1;
  inline ::google::protobuf::int32 newmailnum() const;
  inline void set_newmailnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_SC_NewMails)
 private:
  inline void set_has_newmailnum();
  inline void clear_has_newmailnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 newmailnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_SC_NewMails* default_instance_;
};
// -------------------------------------------------------------------

class MailRecordData : public ::google::protobuf::Message {
 public:
  MailRecordData();
  virtual ~MailRecordData();

  MailRecordData(const MailRecordData& from);

  inline MailRecordData& operator=(const MailRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailRecordData& default_instance();

  void Swap(MailRecordData* other);

  // implements Message ----------------------------------------------

  MailRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailRecordData& from);
  void MergeFrom(const MailRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // required uint32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.MailRecordData)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static MailRecordData* default_instance_;
};
// -------------------------------------------------------------------

class MailBoxData : public ::google::protobuf::Message {
 public:
  MailBoxData();
  virtual ~MailBoxData();

  MailBoxData(const MailBoxData& from);

  inline MailBoxData& operator=(const MailBoxData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailBoxData& default_instance();

  void Swap(MailBoxData* other);

  // implements Message ----------------------------------------------

  MailBoxData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailBoxData& from);
  void MergeFrom(const MailBoxData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.MailRecordData mailList = 1;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 1;
  inline const ::proto::message::MailRecordData& maillist(int index) const;
  inline ::proto::message::MailRecordData* mutable_maillist(int index);
  inline ::proto::message::MailRecordData* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MailRecordData >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::MailRecordData >*
      mutable_maillist();

  // optional uint64 mail_time_week = 2;
  inline bool has_mail_time_week() const;
  inline void clear_mail_time_week();
  static const int kMailTimeWeekFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_time_week() const;
  inline void set_mail_time_week(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.MailBoxData)
 private:
  inline void set_has_mail_time_week();
  inline void clear_has_mail_time_week();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::MailRecordData > maillist_;
  ::google::protobuf::uint64 mail_time_week_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static MailBoxData* default_instance_;
};
// -------------------------------------------------------------------

class Mail_CS_DelMail : public ::google::protobuf::Message {
 public:
  Mail_CS_DelMail();
  virtual ~Mail_CS_DelMail();

  Mail_CS_DelMail(const Mail_CS_DelMail& from);

  inline Mail_CS_DelMail& operator=(const Mail_CS_DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_CS_DelMail& default_instance();

  void Swap(Mail_CS_DelMail* other);

  // implements Message ----------------------------------------------

  Mail_CS_DelMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_CS_DelMail& from);
  void MergeFrom(const Mail_CS_DelMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_CS_DelMail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_CS_DelMail* default_instance_;
};
// -------------------------------------------------------------------

class Mail_SC_DelMail : public ::google::protobuf::Message {
 public:
  Mail_SC_DelMail();
  virtual ~Mail_SC_DelMail();

  Mail_SC_DelMail(const Mail_SC_DelMail& from);

  inline Mail_SC_DelMail& operator=(const Mail_SC_DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_SC_DelMail& default_instance();

  void Swap(Mail_SC_DelMail* other);

  // implements Message ----------------------------------------------

  Mail_SC_DelMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_SC_DelMail& from);
  void MergeFrom(const Mail_SC_DelMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint64 mailID = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 2;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mail_SC_DelMail)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_SC_DelMail* default_instance_;
};
// ===================================================================


// ===================================================================

// MixMailData

// optional uint32 templateID = 1;
inline bool MixMailData::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MixMailData::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MixMailData::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MixMailData::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 MixMailData::templateid() const {
  return templateid_;
}
inline void MixMailData::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
}

// optional string title = 2;
inline bool MixMailData::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MixMailData::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MixMailData::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MixMailData::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MixMailData::title() const {
  return *title_;
}
inline void MixMailData::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MixMailData::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MixMailData::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MixMailData::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* MixMailData::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MixMailData::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 3;
inline bool MixMailData::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MixMailData::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MixMailData::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MixMailData::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MixMailData::content() const {
  return *content_;
}
inline void MixMailData::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void MixMailData::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void MixMailData::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MixMailData::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* MixMailData::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MixMailData::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto.message.DropItemNum accessory = 4;
inline int MixMailData::accessory_size() const {
  return accessory_.size();
}
inline void MixMailData::clear_accessory() {
  accessory_.Clear();
}
inline const ::proto::message::DropItemNum& MixMailData::accessory(int index) const {
  return accessory_.Get(index);
}
inline ::proto::message::DropItemNum* MixMailData::mutable_accessory(int index) {
  return accessory_.Mutable(index);
}
inline ::proto::message::DropItemNum* MixMailData::add_accessory() {
  return accessory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >&
MixMailData::accessory() const {
  return accessory_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >*
MixMailData::mutable_accessory() {
  return &accessory_;
}

// required uint64 sendTime = 5;
inline bool MixMailData::has_sendtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MixMailData::set_has_sendtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MixMailData::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MixMailData::clear_sendtime() {
  sendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_sendtime();
}
inline ::google::protobuf::uint64 MixMailData::sendtime() const {
  return sendtime_;
}
inline void MixMailData::set_sendtime(::google::protobuf::uint64 value) {
  set_has_sendtime();
  sendtime_ = value;
}

// required uint32 validityTime = 6;
inline bool MixMailData::has_validitytime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MixMailData::set_has_validitytime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MixMailData::clear_has_validitytime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MixMailData::clear_validitytime() {
  validitytime_ = 0u;
  clear_has_validitytime();
}
inline ::google::protobuf::uint32 MixMailData::validitytime() const {
  return validitytime_;
}
inline void MixMailData::set_validitytime(::google::protobuf::uint32 value) {
  set_has_validitytime();
  validitytime_ = value;
}

// optional uint32 flag = 7;
inline bool MixMailData::has_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MixMailData::set_has_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MixMailData::clear_has_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MixMailData::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 MixMailData::flag() const {
  return flag_;
}
inline void MixMailData::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// repeated string add_content = 8;
inline int MixMailData::add_content_size() const {
  return add_content_.size();
}
inline void MixMailData::clear_add_content() {
  add_content_.Clear();
}
inline const ::std::string& MixMailData::add_content(int index) const {
  return add_content_.Get(index);
}
inline ::std::string* MixMailData::mutable_add_content(int index) {
  return add_content_.Mutable(index);
}
inline void MixMailData::set_add_content(int index, const ::std::string& value) {
  add_content_.Mutable(index)->assign(value);
}
inline void MixMailData::set_add_content(int index, const char* value) {
  add_content_.Mutable(index)->assign(value);
}
inline void MixMailData::set_add_content(int index, const char* value, size_t size) {
  add_content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MixMailData::add_add_content() {
  return add_content_.Add();
}
inline void MixMailData::add_add_content(const ::std::string& value) {
  add_content_.Add()->assign(value);
}
inline void MixMailData::add_add_content(const char* value) {
  add_content_.Add()->assign(value);
}
inline void MixMailData::add_add_content(const char* value, size_t size) {
  add_content_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MixMailData::add_content() const {
  return add_content_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MixMailData::mutable_add_content() {
  return &add_content_;
}

// -------------------------------------------------------------------

// MailData

// required uint64 mailID = 1;
inline bool MailData::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailData::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailData::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailData::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MailData::mailid() const {
  return mailid_;
}
inline void MailData::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// required uint64 ownerID = 2;
inline bool MailData::has_ownerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailData::set_has_ownerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailData::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailData::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 MailData::ownerid() const {
  return ownerid_;
}
inline void MailData::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
}

// required .proto.message.MixMailData mixinfo = 3;
inline bool MailData::has_mixinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailData::set_has_mixinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailData::clear_has_mixinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailData::clear_mixinfo() {
  if (mixinfo_ != NULL) mixinfo_->::proto::message::MixMailData::Clear();
  clear_has_mixinfo();
}
inline const ::proto::message::MixMailData& MailData::mixinfo() const {
  return mixinfo_ != NULL ? *mixinfo_ : *default_instance_->mixinfo_;
}
inline ::proto::message::MixMailData* MailData::mutable_mixinfo() {
  set_has_mixinfo();
  if (mixinfo_ == NULL) mixinfo_ = new ::proto::message::MixMailData;
  return mixinfo_;
}
inline ::proto::message::MixMailData* MailData::release_mixinfo() {
  clear_has_mixinfo();
  ::proto::message::MixMailData* temp = mixinfo_;
  mixinfo_ = NULL;
  return temp;
}
inline void MailData::set_allocated_mixinfo(::proto::message::MixMailData* mixinfo) {
  delete mixinfo_;
  mixinfo_ = mixinfo;
  if (mixinfo) {
    set_has_mixinfo();
  } else {
    clear_has_mixinfo();
  }
}

// required uint32 mail_type = 4;
inline bool MailData::has_mail_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailData::set_has_mail_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailData::clear_has_mail_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailData::clear_mail_type() {
  mail_type_ = 0u;
  clear_has_mail_type();
}
inline ::google::protobuf::uint32 MailData::mail_type() const {
  return mail_type_;
}
inline void MailData::set_mail_type(::google::protobuf::uint32 value) {
  set_has_mail_type();
  mail_type_ = value;
}

// -------------------------------------------------------------------

// Mail_CS_GetMailList

// -------------------------------------------------------------------

// MailListItem

// required uint64 mailID = 1;
inline bool MailListItem::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailListItem::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailListItem::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailListItem::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MailListItem::mailid() const {
  return mailid_;
}
inline void MailListItem::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint32 templateID = 2;
inline bool MailListItem::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailListItem::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailListItem::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailListItem::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 MailListItem::templateid() const {
  return templateid_;
}
inline void MailListItem::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
}

// optional string title = 3;
inline bool MailListItem::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailListItem::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailListItem::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailListItem::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailListItem::title() const {
  return *title_;
}
inline void MailListItem::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailListItem::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailListItem::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailListItem::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* MailListItem::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailListItem::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint64 sendTime = 4;
inline bool MailListItem::has_sendtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailListItem::set_has_sendtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailListItem::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailListItem::clear_sendtime() {
  sendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_sendtime();
}
inline ::google::protobuf::uint64 MailListItem::sendtime() const {
  return sendtime_;
}
inline void MailListItem::set_sendtime(::google::protobuf::uint64 value) {
  set_has_sendtime();
  sendtime_ = value;
}

// required uint32 flag = 5;
inline bool MailListItem::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailListItem::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailListItem::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailListItem::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 MailListItem::flag() const {
  return flag_;
}
inline void MailListItem::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// optional bool haveAccessory = 6;
inline bool MailListItem::has_haveaccessory() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailListItem::set_has_haveaccessory() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailListItem::clear_has_haveaccessory() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailListItem::clear_haveaccessory() {
  haveaccessory_ = false;
  clear_has_haveaccessory();
}
inline bool MailListItem::haveaccessory() const {
  return haveaccessory_;
}
inline void MailListItem::set_haveaccessory(bool value) {
  set_has_haveaccessory();
  haveaccessory_ = value;
}

// -------------------------------------------------------------------

// Mail_SC_GetMailDetail

// required uint64 mailID = 1;
inline bool Mail_SC_GetMailDetail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_SC_GetMailDetail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_SC_GetMailDetail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_SC_GetMailDetail::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 Mail_SC_GetMailDetail::mailid() const {
  return mailid_;
}
inline void Mail_SC_GetMailDetail::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// required uint32 flag = 2;
inline bool Mail_SC_GetMailDetail::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail_SC_GetMailDetail::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail_SC_GetMailDetail::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail_SC_GetMailDetail::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 Mail_SC_GetMailDetail::flag() const {
  return flag_;
}
inline void Mail_SC_GetMailDetail::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// required .proto.message.MixMailData mixinfo = 3;
inline bool Mail_SC_GetMailDetail::has_mixinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mail_SC_GetMailDetail::set_has_mixinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mail_SC_GetMailDetail::clear_has_mixinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mail_SC_GetMailDetail::clear_mixinfo() {
  if (mixinfo_ != NULL) mixinfo_->::proto::message::MixMailData::Clear();
  clear_has_mixinfo();
}
inline const ::proto::message::MixMailData& Mail_SC_GetMailDetail::mixinfo() const {
  return mixinfo_ != NULL ? *mixinfo_ : *default_instance_->mixinfo_;
}
inline ::proto::message::MixMailData* Mail_SC_GetMailDetail::mutable_mixinfo() {
  set_has_mixinfo();
  if (mixinfo_ == NULL) mixinfo_ = new ::proto::message::MixMailData;
  return mixinfo_;
}
inline ::proto::message::MixMailData* Mail_SC_GetMailDetail::release_mixinfo() {
  clear_has_mixinfo();
  ::proto::message::MixMailData* temp = mixinfo_;
  mixinfo_ = NULL;
  return temp;
}
inline void Mail_SC_GetMailDetail::set_allocated_mixinfo(::proto::message::MixMailData* mixinfo) {
  delete mixinfo_;
  mixinfo_ = mixinfo;
  if (mixinfo) {
    set_has_mixinfo();
  } else {
    clear_has_mixinfo();
  }
}

// -------------------------------------------------------------------

// Mail_SC_GetMailList

// repeated .proto.message.MailListItem mailList = 1;
inline int Mail_SC_GetMailList::maillist_size() const {
  return maillist_.size();
}
inline void Mail_SC_GetMailList::clear_maillist() {
  maillist_.Clear();
}
inline const ::proto::message::MailListItem& Mail_SC_GetMailList::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::proto::message::MailListItem* Mail_SC_GetMailList::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::proto::message::MailListItem* Mail_SC_GetMailList::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MailListItem >&
Mail_SC_GetMailList::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::MailListItem >*
Mail_SC_GetMailList::mutable_maillist() {
  return &maillist_;
}

// optional .proto.message.Mail_SC_GetMailDetail curMail = 2;
inline bool Mail_SC_GetMailList::has_curmail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail_SC_GetMailList::set_has_curmail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail_SC_GetMailList::clear_has_curmail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail_SC_GetMailList::clear_curmail() {
  if (curmail_ != NULL) curmail_->::proto::message::Mail_SC_GetMailDetail::Clear();
  clear_has_curmail();
}
inline const ::proto::message::Mail_SC_GetMailDetail& Mail_SC_GetMailList::curmail() const {
  return curmail_ != NULL ? *curmail_ : *default_instance_->curmail_;
}
inline ::proto::message::Mail_SC_GetMailDetail* Mail_SC_GetMailList::mutable_curmail() {
  set_has_curmail();
  if (curmail_ == NULL) curmail_ = new ::proto::message::Mail_SC_GetMailDetail;
  return curmail_;
}
inline ::proto::message::Mail_SC_GetMailDetail* Mail_SC_GetMailList::release_curmail() {
  clear_has_curmail();
  ::proto::message::Mail_SC_GetMailDetail* temp = curmail_;
  curmail_ = NULL;
  return temp;
}
inline void Mail_SC_GetMailList::set_allocated_curmail(::proto::message::Mail_SC_GetMailDetail* curmail) {
  delete curmail_;
  curmail_ = curmail;
  if (curmail) {
    set_has_curmail();
  } else {
    clear_has_curmail();
  }
}

// -------------------------------------------------------------------

// Mail_CS_GetMailDetail

// required uint64 mailID = 1;
inline bool Mail_CS_GetMailDetail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_CS_GetMailDetail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_CS_GetMailDetail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_CS_GetMailDetail::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 Mail_CS_GetMailDetail::mailid() const {
  return mailid_;
}
inline void Mail_CS_GetMailDetail::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// Mail_CS_GetMailAccessory

// required uint64 mailID = 1;
inline bool Mail_CS_GetMailAccessory::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_CS_GetMailAccessory::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_CS_GetMailAccessory::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_CS_GetMailAccessory::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 Mail_CS_GetMailAccessory::mailid() const {
  return mailid_;
}
inline void Mail_CS_GetMailAccessory::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// Mail_SC_GetMailAccessory

// required uint32 result = 1;
inline bool Mail_SC_GetMailAccessory::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_SC_GetMailAccessory::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_SC_GetMailAccessory::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_SC_GetMailAccessory::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Mail_SC_GetMailAccessory::result() const {
  return result_;
}
inline void Mail_SC_GetMailAccessory::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint64 mailID = 2;
inline bool Mail_SC_GetMailAccessory::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail_SC_GetMailAccessory::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail_SC_GetMailAccessory::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail_SC_GetMailAccessory::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 Mail_SC_GetMailAccessory::mailid() const {
  return mailid_;
}
inline void Mail_SC_GetMailAccessory::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// repeated .proto.message.DropItemNum accessory = 3;
inline int Mail_SC_GetMailAccessory::accessory_size() const {
  return accessory_.size();
}
inline void Mail_SC_GetMailAccessory::clear_accessory() {
  accessory_.Clear();
}
inline const ::proto::message::DropItemNum& Mail_SC_GetMailAccessory::accessory(int index) const {
  return accessory_.Get(index);
}
inline ::proto::message::DropItemNum* Mail_SC_GetMailAccessory::mutable_accessory(int index) {
  return accessory_.Mutable(index);
}
inline ::proto::message::DropItemNum* Mail_SC_GetMailAccessory::add_accessory() {
  return accessory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >&
Mail_SC_GetMailAccessory::accessory() const {
  return accessory_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::DropItemNum >*
Mail_SC_GetMailAccessory::mutable_accessory() {
  return &accessory_;
}

// -------------------------------------------------------------------

// Mail_SC_NewMails

// required int32 newMailNum = 1;
inline bool Mail_SC_NewMails::has_newmailnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_SC_NewMails::set_has_newmailnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_SC_NewMails::clear_has_newmailnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_SC_NewMails::clear_newmailnum() {
  newmailnum_ = 0;
  clear_has_newmailnum();
}
inline ::google::protobuf::int32 Mail_SC_NewMails::newmailnum() const {
  return newmailnum_;
}
inline void Mail_SC_NewMails::set_newmailnum(::google::protobuf::int32 value) {
  set_has_newmailnum();
  newmailnum_ = value;
}

// -------------------------------------------------------------------

// MailRecordData

// required uint64 mailID = 1;
inline bool MailRecordData::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailRecordData::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailRecordData::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailRecordData::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MailRecordData::mailid() const {
  return mailid_;
}
inline void MailRecordData::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// required uint32 flag = 2;
inline bool MailRecordData::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailRecordData::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailRecordData::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailRecordData::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 MailRecordData::flag() const {
  return flag_;
}
inline void MailRecordData::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// MailBoxData

// repeated .proto.message.MailRecordData mailList = 1;
inline int MailBoxData::maillist_size() const {
  return maillist_.size();
}
inline void MailBoxData::clear_maillist() {
  maillist_.Clear();
}
inline const ::proto::message::MailRecordData& MailBoxData::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::proto::message::MailRecordData* MailBoxData::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::proto::message::MailRecordData* MailBoxData::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::MailRecordData >&
MailBoxData::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::MailRecordData >*
MailBoxData::mutable_maillist() {
  return &maillist_;
}

// optional uint64 mail_time_week = 2;
inline bool MailBoxData::has_mail_time_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailBoxData::set_has_mail_time_week() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailBoxData::clear_has_mail_time_week() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailBoxData::clear_mail_time_week() {
  mail_time_week_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_time_week();
}
inline ::google::protobuf::uint64 MailBoxData::mail_time_week() const {
  return mail_time_week_;
}
inline void MailBoxData::set_mail_time_week(::google::protobuf::uint64 value) {
  set_has_mail_time_week();
  mail_time_week_ = value;
}

// -------------------------------------------------------------------

// Mail_CS_DelMail

// required uint64 mailID = 1;
inline bool Mail_CS_DelMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_CS_DelMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_CS_DelMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_CS_DelMail::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 Mail_CS_DelMail::mailid() const {
  return mailid_;
}
inline void Mail_CS_DelMail::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// Mail_SC_DelMail

// required uint32 result = 1;
inline bool Mail_SC_DelMail::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_SC_DelMail::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_SC_DelMail::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_SC_DelMail::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Mail_SC_DelMail::result() const {
  return result_;
}
inline void Mail_SC_DelMail::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint64 mailID = 2;
inline bool Mail_SC_DelMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail_SC_DelMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail_SC_DelMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail_SC_DelMail::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 Mail_SC_DelMail::mailid() const {
  return mailid_;
}
inline void Mail_SC_DelMail::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mail_2eproto__INCLUDED
