// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avatar.proto

#ifndef PROTOBUF_avatar_2eproto__INCLUDED
#define PROTOBUF_avatar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_avatar_2eproto();
void protobuf_AssignDesc_avatar_2eproto();
void protobuf_ShutdownFile_avatar_2eproto();

class Avatar;
class Avatar_CS_GetAvatarInfo;
class Avatar_SC_GetAvatarInfo;
class Avatar_CS_ActivateAvatar;
class Avatar_SC_ActivateAvatar;
class Avatar_CS_PutOnAvatar;
class Avatar_SC_PutOnAvatar;
class Avatar_CS_GetOffAvatar;
class Avatar_SC_GetOffAvatar;
class Avatar_CS_ActivateColour;
class Avatar_SC_ActivateColour;
class Avatar_CS_SelectColour;
class Avatar_SC_SelectColour;

// ===================================================================

class Avatar : public ::google::protobuf::Message {
 public:
  Avatar();
  virtual ~Avatar();

  Avatar(const Avatar& from);

  inline Avatar& operator=(const Avatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar& default_instance();

  void Swap(Avatar* other);

  // implements Message ----------------------------------------------

  Avatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar& from);
  void MergeFrom(const Avatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint64 deadline_time = 2;
  inline bool has_deadline_time() const;
  inline void clear_deadline_time();
  static const int kDeadlineTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 deadline_time() const;
  inline void set_deadline_time(::google::protobuf::uint64 value);

  // repeated int32 colour_list = 3;
  inline int colour_list_size() const;
  inline void clear_colour_list();
  static const int kColourListFieldNumber = 3;
  inline ::google::protobuf::int32 colour_list(int index) const;
  inline void set_colour_list(int index, ::google::protobuf::int32 value);
  inline void add_colour_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      colour_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_colour_list();

  // @@protoc_insertion_point(class_scope:proto.message.Avatar)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_deadline_time();
  inline void clear_has_deadline_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 deadline_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > colour_list_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_CS_GetAvatarInfo : public ::google::protobuf::Message {
 public:
  Avatar_CS_GetAvatarInfo();
  virtual ~Avatar_CS_GetAvatarInfo();

  Avatar_CS_GetAvatarInfo(const Avatar_CS_GetAvatarInfo& from);

  inline Avatar_CS_GetAvatarInfo& operator=(const Avatar_CS_GetAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_CS_GetAvatarInfo& default_instance();

  void Swap(Avatar_CS_GetAvatarInfo* other);

  // implements Message ----------------------------------------------

  Avatar_CS_GetAvatarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_CS_GetAvatarInfo& from);
  void MergeFrom(const Avatar_CS_GetAvatarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_CS_GetAvatarInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_CS_GetAvatarInfo* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_SC_GetAvatarInfo : public ::google::protobuf::Message {
 public:
  Avatar_SC_GetAvatarInfo();
  virtual ~Avatar_SC_GetAvatarInfo();

  Avatar_SC_GetAvatarInfo(const Avatar_SC_GetAvatarInfo& from);

  inline Avatar_SC_GetAvatarInfo& operator=(const Avatar_SC_GetAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_SC_GetAvatarInfo& default_instance();

  void Swap(Avatar_SC_GetAvatarInfo* other);

  // implements Message ----------------------------------------------

  Avatar_SC_GetAvatarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_SC_GetAvatarInfo& from);
  void MergeFrom(const Avatar_SC_GetAvatarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 avatar_id_on = 1;
  inline bool has_avatar_id_on() const;
  inline void clear_avatar_id_on();
  static const int kAvatarIdOnFieldNumber = 1;
  inline ::google::protobuf::int32 avatar_id_on() const;
  inline void set_avatar_id_on(::google::protobuf::int32 value);

  // optional int32 colour_id_on = 2;
  inline bool has_colour_id_on() const;
  inline void clear_colour_id_on();
  static const int kColourIdOnFieldNumber = 2;
  inline ::google::protobuf::int32 colour_id_on() const;
  inline void set_colour_id_on(::google::protobuf::int32 value);

  // repeated .proto.message.Avatar avatar_list = 3;
  inline int avatar_list_size() const;
  inline void clear_avatar_list();
  static const int kAvatarListFieldNumber = 3;
  inline const ::proto::message::Avatar& avatar_list(int index) const;
  inline ::proto::message::Avatar* mutable_avatar_list(int index);
  inline ::proto::message::Avatar* add_avatar_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >&
      avatar_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >*
      mutable_avatar_list();

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_SC_GetAvatarInfo)
 private:
  inline void set_has_avatar_id_on();
  inline void clear_has_avatar_id_on();
  inline void set_has_colour_id_on();
  inline void clear_has_colour_id_on();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 avatar_id_on_;
  ::google::protobuf::int32 colour_id_on_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar > avatar_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_SC_GetAvatarInfo* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_CS_ActivateAvatar : public ::google::protobuf::Message {
 public:
  Avatar_CS_ActivateAvatar();
  virtual ~Avatar_CS_ActivateAvatar();

  Avatar_CS_ActivateAvatar(const Avatar_CS_ActivateAvatar& from);

  inline Avatar_CS_ActivateAvatar& operator=(const Avatar_CS_ActivateAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_CS_ActivateAvatar& default_instance();

  void Swap(Avatar_CS_ActivateAvatar* other);

  // implements Message ----------------------------------------------

  Avatar_CS_ActivateAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_CS_ActivateAvatar& from);
  void MergeFrom(const Avatar_CS_ActivateAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_CS_ActivateAvatar)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_CS_ActivateAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_SC_ActivateAvatar : public ::google::protobuf::Message {
 public:
  Avatar_SC_ActivateAvatar();
  virtual ~Avatar_SC_ActivateAvatar();

  Avatar_SC_ActivateAvatar(const Avatar_SC_ActivateAvatar& from);

  inline Avatar_SC_ActivateAvatar& operator=(const Avatar_SC_ActivateAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_SC_ActivateAvatar& default_instance();

  void Swap(Avatar_SC_ActivateAvatar* other);

  // implements Message ----------------------------------------------

  Avatar_SC_ActivateAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_SC_ActivateAvatar& from);
  void MergeFrom(const Avatar_SC_ActivateAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.Avatar avatar_info = 2;
  inline bool has_avatar_info() const;
  inline void clear_avatar_info();
  static const int kAvatarInfoFieldNumber = 2;
  inline const ::proto::message::Avatar& avatar_info() const;
  inline ::proto::message::Avatar* mutable_avatar_info();
  inline ::proto::message::Avatar* release_avatar_info();
  inline void set_allocated_avatar_info(::proto::message::Avatar* avatar_info);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_SC_ActivateAvatar)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_avatar_info();
  inline void clear_has_avatar_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Avatar* avatar_info_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_SC_ActivateAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_CS_PutOnAvatar : public ::google::protobuf::Message {
 public:
  Avatar_CS_PutOnAvatar();
  virtual ~Avatar_CS_PutOnAvatar();

  Avatar_CS_PutOnAvatar(const Avatar_CS_PutOnAvatar& from);

  inline Avatar_CS_PutOnAvatar& operator=(const Avatar_CS_PutOnAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_CS_PutOnAvatar& default_instance();

  void Swap(Avatar_CS_PutOnAvatar* other);

  // implements Message ----------------------------------------------

  Avatar_CS_PutOnAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_CS_PutOnAvatar& from);
  void MergeFrom(const Avatar_CS_PutOnAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 avatar_id = 1;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // optional int32 colour_id = 3;
  inline bool has_colour_id() const;
  inline void clear_colour_id();
  static const int kColourIdFieldNumber = 3;
  inline ::google::protobuf::int32 colour_id() const;
  inline void set_colour_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_CS_PutOnAvatar)
 private:
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_colour_id();
  inline void clear_has_colour_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 avatar_id_;
  ::google::protobuf::int32 colour_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_CS_PutOnAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_SC_PutOnAvatar : public ::google::protobuf::Message {
 public:
  Avatar_SC_PutOnAvatar();
  virtual ~Avatar_SC_PutOnAvatar();

  Avatar_SC_PutOnAvatar(const Avatar_SC_PutOnAvatar& from);

  inline Avatar_SC_PutOnAvatar& operator=(const Avatar_SC_PutOnAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_SC_PutOnAvatar& default_instance();

  void Swap(Avatar_SC_PutOnAvatar* other);

  // implements Message ----------------------------------------------

  Avatar_SC_PutOnAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_SC_PutOnAvatar& from);
  void MergeFrom(const Avatar_SC_PutOnAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 avatar_id_on = 2;
  inline bool has_avatar_id_on() const;
  inline void clear_avatar_id_on();
  static const int kAvatarIdOnFieldNumber = 2;
  inline ::google::protobuf::int32 avatar_id_on() const;
  inline void set_avatar_id_on(::google::protobuf::int32 value);

  // optional int32 colour_id_on = 3;
  inline bool has_colour_id_on() const;
  inline void clear_colour_id_on();
  static const int kColourIdOnFieldNumber = 3;
  inline ::google::protobuf::int32 colour_id_on() const;
  inline void set_colour_id_on(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_SC_PutOnAvatar)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_avatar_id_on();
  inline void clear_has_avatar_id_on();
  inline void set_has_colour_id_on();
  inline void clear_has_colour_id_on();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 avatar_id_on_;
  ::google::protobuf::int32 colour_id_on_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_SC_PutOnAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_CS_GetOffAvatar : public ::google::protobuf::Message {
 public:
  Avatar_CS_GetOffAvatar();
  virtual ~Avatar_CS_GetOffAvatar();

  Avatar_CS_GetOffAvatar(const Avatar_CS_GetOffAvatar& from);

  inline Avatar_CS_GetOffAvatar& operator=(const Avatar_CS_GetOffAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_CS_GetOffAvatar& default_instance();

  void Swap(Avatar_CS_GetOffAvatar* other);

  // implements Message ----------------------------------------------

  Avatar_CS_GetOffAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_CS_GetOffAvatar& from);
  void MergeFrom(const Avatar_CS_GetOffAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 avatar_id = 1;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_CS_GetOffAvatar)
 private:
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 avatar_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_CS_GetOffAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_SC_GetOffAvatar : public ::google::protobuf::Message {
 public:
  Avatar_SC_GetOffAvatar();
  virtual ~Avatar_SC_GetOffAvatar();

  Avatar_SC_GetOffAvatar(const Avatar_SC_GetOffAvatar& from);

  inline Avatar_SC_GetOffAvatar& operator=(const Avatar_SC_GetOffAvatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_SC_GetOffAvatar& default_instance();

  void Swap(Avatar_SC_GetOffAvatar* other);

  // implements Message ----------------------------------------------

  Avatar_SC_GetOffAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_SC_GetOffAvatar& from);
  void MergeFrom(const Avatar_SC_GetOffAvatar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 avatar_id = 2;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_SC_GetOffAvatar)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 avatar_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_SC_GetOffAvatar* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_CS_ActivateColour : public ::google::protobuf::Message {
 public:
  Avatar_CS_ActivateColour();
  virtual ~Avatar_CS_ActivateColour();

  Avatar_CS_ActivateColour(const Avatar_CS_ActivateColour& from);

  inline Avatar_CS_ActivateColour& operator=(const Avatar_CS_ActivateColour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_CS_ActivateColour& default_instance();

  void Swap(Avatar_CS_ActivateColour* other);

  // implements Message ----------------------------------------------

  Avatar_CS_ActivateColour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_CS_ActivateColour& from);
  void MergeFrom(const Avatar_CS_ActivateColour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 avatar_id = 1;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // optional int32 colour_id = 2;
  inline bool has_colour_id() const;
  inline void clear_colour_id();
  static const int kColourIdFieldNumber = 2;
  inline ::google::protobuf::int32 colour_id() const;
  inline void set_colour_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_CS_ActivateColour)
 private:
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_colour_id();
  inline void clear_has_colour_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 avatar_id_;
  ::google::protobuf::int32 colour_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_CS_ActivateColour* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_SC_ActivateColour : public ::google::protobuf::Message {
 public:
  Avatar_SC_ActivateColour();
  virtual ~Avatar_SC_ActivateColour();

  Avatar_SC_ActivateColour(const Avatar_SC_ActivateColour& from);

  inline Avatar_SC_ActivateColour& operator=(const Avatar_SC_ActivateColour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_SC_ActivateColour& default_instance();

  void Swap(Avatar_SC_ActivateColour* other);

  // implements Message ----------------------------------------------

  Avatar_SC_ActivateColour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_SC_ActivateColour& from);
  void MergeFrom(const Avatar_SC_ActivateColour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 avatar_id = 2;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // optional int32 colour_id = 3;
  inline bool has_colour_id() const;
  inline void clear_colour_id();
  static const int kColourIdFieldNumber = 3;
  inline ::google::protobuf::int32 colour_id() const;
  inline void set_colour_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_SC_ActivateColour)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_colour_id();
  inline void clear_has_colour_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 avatar_id_;
  ::google::protobuf::int32 colour_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_SC_ActivateColour* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_CS_SelectColour : public ::google::protobuf::Message {
 public:
  Avatar_CS_SelectColour();
  virtual ~Avatar_CS_SelectColour();

  Avatar_CS_SelectColour(const Avatar_CS_SelectColour& from);

  inline Avatar_CS_SelectColour& operator=(const Avatar_CS_SelectColour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_CS_SelectColour& default_instance();

  void Swap(Avatar_CS_SelectColour* other);

  // implements Message ----------------------------------------------

  Avatar_CS_SelectColour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_CS_SelectColour& from);
  void MergeFrom(const Avatar_CS_SelectColour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 avatar_id = 1;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // optional int32 colour_id = 2;
  inline bool has_colour_id() const;
  inline void clear_colour_id();
  static const int kColourIdFieldNumber = 2;
  inline ::google::protobuf::int32 colour_id() const;
  inline void set_colour_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_CS_SelectColour)
 private:
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_colour_id();
  inline void clear_has_colour_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 avatar_id_;
  ::google::protobuf::int32 colour_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_CS_SelectColour* default_instance_;
};
// -------------------------------------------------------------------

class Avatar_SC_SelectColour : public ::google::protobuf::Message {
 public:
  Avatar_SC_SelectColour();
  virtual ~Avatar_SC_SelectColour();

  Avatar_SC_SelectColour(const Avatar_SC_SelectColour& from);

  inline Avatar_SC_SelectColour& operator=(const Avatar_SC_SelectColour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Avatar_SC_SelectColour& default_instance();

  void Swap(Avatar_SC_SelectColour* other);

  // implements Message ----------------------------------------------

  Avatar_SC_SelectColour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Avatar_SC_SelectColour& from);
  void MergeFrom(const Avatar_SC_SelectColour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 avatar_id = 2;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  inline ::google::protobuf::int32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::int32 value);

  // optional int32 colour_id = 3;
  inline bool has_colour_id() const;
  inline void clear_colour_id();
  static const int kColourIdFieldNumber = 3;
  inline ::google::protobuf::int32 colour_id() const;
  inline void set_colour_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Avatar_SC_SelectColour)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_colour_id();
  inline void clear_has_colour_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 avatar_id_;
  ::google::protobuf::int32 colour_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_avatar_2eproto();
  friend void protobuf_AssignDesc_avatar_2eproto();
  friend void protobuf_ShutdownFile_avatar_2eproto();

  void InitAsDefaultInstance();
  static Avatar_SC_SelectColour* default_instance_;
};
// ===================================================================


// ===================================================================

// Avatar

// optional int32 id = 1;
inline bool Avatar::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Avatar::id() const {
  return id_;
}
inline void Avatar::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 deadline_time = 2;
inline bool Avatar::has_deadline_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar::set_has_deadline_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar::clear_has_deadline_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar::clear_deadline_time() {
  deadline_time_ = GOOGLE_ULONGLONG(0);
  clear_has_deadline_time();
}
inline ::google::protobuf::uint64 Avatar::deadline_time() const {
  return deadline_time_;
}
inline void Avatar::set_deadline_time(::google::protobuf::uint64 value) {
  set_has_deadline_time();
  deadline_time_ = value;
}

// repeated int32 colour_list = 3;
inline int Avatar::colour_list_size() const {
  return colour_list_.size();
}
inline void Avatar::clear_colour_list() {
  colour_list_.Clear();
}
inline ::google::protobuf::int32 Avatar::colour_list(int index) const {
  return colour_list_.Get(index);
}
inline void Avatar::set_colour_list(int index, ::google::protobuf::int32 value) {
  colour_list_.Set(index, value);
}
inline void Avatar::add_colour_list(::google::protobuf::int32 value) {
  colour_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Avatar::colour_list() const {
  return colour_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Avatar::mutable_colour_list() {
  return &colour_list_;
}

// -------------------------------------------------------------------

// Avatar_CS_GetAvatarInfo

// -------------------------------------------------------------------

// Avatar_SC_GetAvatarInfo

// optional int32 avatar_id_on = 1;
inline bool Avatar_SC_GetAvatarInfo::has_avatar_id_on() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_SC_GetAvatarInfo::set_has_avatar_id_on() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_SC_GetAvatarInfo::clear_has_avatar_id_on() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_SC_GetAvatarInfo::clear_avatar_id_on() {
  avatar_id_on_ = 0;
  clear_has_avatar_id_on();
}
inline ::google::protobuf::int32 Avatar_SC_GetAvatarInfo::avatar_id_on() const {
  return avatar_id_on_;
}
inline void Avatar_SC_GetAvatarInfo::set_avatar_id_on(::google::protobuf::int32 value) {
  set_has_avatar_id_on();
  avatar_id_on_ = value;
}

// optional int32 colour_id_on = 2;
inline bool Avatar_SC_GetAvatarInfo::has_colour_id_on() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_SC_GetAvatarInfo::set_has_colour_id_on() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_SC_GetAvatarInfo::clear_has_colour_id_on() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_SC_GetAvatarInfo::clear_colour_id_on() {
  colour_id_on_ = 0;
  clear_has_colour_id_on();
}
inline ::google::protobuf::int32 Avatar_SC_GetAvatarInfo::colour_id_on() const {
  return colour_id_on_;
}
inline void Avatar_SC_GetAvatarInfo::set_colour_id_on(::google::protobuf::int32 value) {
  set_has_colour_id_on();
  colour_id_on_ = value;
}

// repeated .proto.message.Avatar avatar_list = 3;
inline int Avatar_SC_GetAvatarInfo::avatar_list_size() const {
  return avatar_list_.size();
}
inline void Avatar_SC_GetAvatarInfo::clear_avatar_list() {
  avatar_list_.Clear();
}
inline const ::proto::message::Avatar& Avatar_SC_GetAvatarInfo::avatar_list(int index) const {
  return avatar_list_.Get(index);
}
inline ::proto::message::Avatar* Avatar_SC_GetAvatarInfo::mutable_avatar_list(int index) {
  return avatar_list_.Mutable(index);
}
inline ::proto::message::Avatar* Avatar_SC_GetAvatarInfo::add_avatar_list() {
  return avatar_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >&
Avatar_SC_GetAvatarInfo::avatar_list() const {
  return avatar_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Avatar >*
Avatar_SC_GetAvatarInfo::mutable_avatar_list() {
  return &avatar_list_;
}

// -------------------------------------------------------------------

// Avatar_CS_ActivateAvatar

// optional int32 id = 1;
inline bool Avatar_CS_ActivateAvatar::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_CS_ActivateAvatar::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_CS_ActivateAvatar::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_CS_ActivateAvatar::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Avatar_CS_ActivateAvatar::id() const {
  return id_;
}
inline void Avatar_CS_ActivateAvatar::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Avatar_SC_ActivateAvatar

// optional int32 result = 1;
inline bool Avatar_SC_ActivateAvatar::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_SC_ActivateAvatar::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_SC_ActivateAvatar::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_SC_ActivateAvatar::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Avatar_SC_ActivateAvatar::result() const {
  return result_;
}
inline void Avatar_SC_ActivateAvatar::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.Avatar avatar_info = 2;
inline bool Avatar_SC_ActivateAvatar::has_avatar_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_SC_ActivateAvatar::set_has_avatar_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_SC_ActivateAvatar::clear_has_avatar_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_SC_ActivateAvatar::clear_avatar_info() {
  if (avatar_info_ != NULL) avatar_info_->::proto::message::Avatar::Clear();
  clear_has_avatar_info();
}
inline const ::proto::message::Avatar& Avatar_SC_ActivateAvatar::avatar_info() const {
  return avatar_info_ != NULL ? *avatar_info_ : *default_instance_->avatar_info_;
}
inline ::proto::message::Avatar* Avatar_SC_ActivateAvatar::mutable_avatar_info() {
  set_has_avatar_info();
  if (avatar_info_ == NULL) avatar_info_ = new ::proto::message::Avatar;
  return avatar_info_;
}
inline ::proto::message::Avatar* Avatar_SC_ActivateAvatar::release_avatar_info() {
  clear_has_avatar_info();
  ::proto::message::Avatar* temp = avatar_info_;
  avatar_info_ = NULL;
  return temp;
}
inline void Avatar_SC_ActivateAvatar::set_allocated_avatar_info(::proto::message::Avatar* avatar_info) {
  delete avatar_info_;
  avatar_info_ = avatar_info;
  if (avatar_info) {
    set_has_avatar_info();
  } else {
    clear_has_avatar_info();
  }
}

// -------------------------------------------------------------------

// Avatar_CS_PutOnAvatar

// optional int32 avatar_id = 1;
inline bool Avatar_CS_PutOnAvatar::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_CS_PutOnAvatar::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_CS_PutOnAvatar::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_CS_PutOnAvatar::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_CS_PutOnAvatar::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_CS_PutOnAvatar::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// optional int32 colour_id = 3;
inline bool Avatar_CS_PutOnAvatar::has_colour_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_CS_PutOnAvatar::set_has_colour_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_CS_PutOnAvatar::clear_has_colour_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_CS_PutOnAvatar::clear_colour_id() {
  colour_id_ = 0;
  clear_has_colour_id();
}
inline ::google::protobuf::int32 Avatar_CS_PutOnAvatar::colour_id() const {
  return colour_id_;
}
inline void Avatar_CS_PutOnAvatar::set_colour_id(::google::protobuf::int32 value) {
  set_has_colour_id();
  colour_id_ = value;
}

// -------------------------------------------------------------------

// Avatar_SC_PutOnAvatar

// optional int32 result = 1;
inline bool Avatar_SC_PutOnAvatar::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_SC_PutOnAvatar::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_SC_PutOnAvatar::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_SC_PutOnAvatar::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Avatar_SC_PutOnAvatar::result() const {
  return result_;
}
inline void Avatar_SC_PutOnAvatar::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 avatar_id_on = 2;
inline bool Avatar_SC_PutOnAvatar::has_avatar_id_on() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_SC_PutOnAvatar::set_has_avatar_id_on() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_SC_PutOnAvatar::clear_has_avatar_id_on() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_SC_PutOnAvatar::clear_avatar_id_on() {
  avatar_id_on_ = 0;
  clear_has_avatar_id_on();
}
inline ::google::protobuf::int32 Avatar_SC_PutOnAvatar::avatar_id_on() const {
  return avatar_id_on_;
}
inline void Avatar_SC_PutOnAvatar::set_avatar_id_on(::google::protobuf::int32 value) {
  set_has_avatar_id_on();
  avatar_id_on_ = value;
}

// optional int32 colour_id_on = 3;
inline bool Avatar_SC_PutOnAvatar::has_colour_id_on() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Avatar_SC_PutOnAvatar::set_has_colour_id_on() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Avatar_SC_PutOnAvatar::clear_has_colour_id_on() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Avatar_SC_PutOnAvatar::clear_colour_id_on() {
  colour_id_on_ = 0;
  clear_has_colour_id_on();
}
inline ::google::protobuf::int32 Avatar_SC_PutOnAvatar::colour_id_on() const {
  return colour_id_on_;
}
inline void Avatar_SC_PutOnAvatar::set_colour_id_on(::google::protobuf::int32 value) {
  set_has_colour_id_on();
  colour_id_on_ = value;
}

// -------------------------------------------------------------------

// Avatar_CS_GetOffAvatar

// optional int32 avatar_id = 1;
inline bool Avatar_CS_GetOffAvatar::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_CS_GetOffAvatar::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_CS_GetOffAvatar::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_CS_GetOffAvatar::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_CS_GetOffAvatar::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_CS_GetOffAvatar::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// -------------------------------------------------------------------

// Avatar_SC_GetOffAvatar

// optional int32 result = 1;
inline bool Avatar_SC_GetOffAvatar::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_SC_GetOffAvatar::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_SC_GetOffAvatar::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_SC_GetOffAvatar::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Avatar_SC_GetOffAvatar::result() const {
  return result_;
}
inline void Avatar_SC_GetOffAvatar::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 avatar_id = 2;
inline bool Avatar_SC_GetOffAvatar::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_SC_GetOffAvatar::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_SC_GetOffAvatar::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_SC_GetOffAvatar::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_SC_GetOffAvatar::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_SC_GetOffAvatar::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// -------------------------------------------------------------------

// Avatar_CS_ActivateColour

// optional int32 avatar_id = 1;
inline bool Avatar_CS_ActivateColour::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_CS_ActivateColour::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_CS_ActivateColour::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_CS_ActivateColour::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_CS_ActivateColour::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_CS_ActivateColour::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// optional int32 colour_id = 2;
inline bool Avatar_CS_ActivateColour::has_colour_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_CS_ActivateColour::set_has_colour_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_CS_ActivateColour::clear_has_colour_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_CS_ActivateColour::clear_colour_id() {
  colour_id_ = 0;
  clear_has_colour_id();
}
inline ::google::protobuf::int32 Avatar_CS_ActivateColour::colour_id() const {
  return colour_id_;
}
inline void Avatar_CS_ActivateColour::set_colour_id(::google::protobuf::int32 value) {
  set_has_colour_id();
  colour_id_ = value;
}

// -------------------------------------------------------------------

// Avatar_SC_ActivateColour

// optional int32 result = 1;
inline bool Avatar_SC_ActivateColour::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_SC_ActivateColour::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_SC_ActivateColour::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_SC_ActivateColour::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Avatar_SC_ActivateColour::result() const {
  return result_;
}
inline void Avatar_SC_ActivateColour::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 avatar_id = 2;
inline bool Avatar_SC_ActivateColour::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_SC_ActivateColour::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_SC_ActivateColour::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_SC_ActivateColour::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_SC_ActivateColour::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_SC_ActivateColour::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// optional int32 colour_id = 3;
inline bool Avatar_SC_ActivateColour::has_colour_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Avatar_SC_ActivateColour::set_has_colour_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Avatar_SC_ActivateColour::clear_has_colour_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Avatar_SC_ActivateColour::clear_colour_id() {
  colour_id_ = 0;
  clear_has_colour_id();
}
inline ::google::protobuf::int32 Avatar_SC_ActivateColour::colour_id() const {
  return colour_id_;
}
inline void Avatar_SC_ActivateColour::set_colour_id(::google::protobuf::int32 value) {
  set_has_colour_id();
  colour_id_ = value;
}

// -------------------------------------------------------------------

// Avatar_CS_SelectColour

// optional int32 avatar_id = 1;
inline bool Avatar_CS_SelectColour::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_CS_SelectColour::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_CS_SelectColour::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_CS_SelectColour::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_CS_SelectColour::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_CS_SelectColour::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// optional int32 colour_id = 2;
inline bool Avatar_CS_SelectColour::has_colour_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_CS_SelectColour::set_has_colour_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_CS_SelectColour::clear_has_colour_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_CS_SelectColour::clear_colour_id() {
  colour_id_ = 0;
  clear_has_colour_id();
}
inline ::google::protobuf::int32 Avatar_CS_SelectColour::colour_id() const {
  return colour_id_;
}
inline void Avatar_CS_SelectColour::set_colour_id(::google::protobuf::int32 value) {
  set_has_colour_id();
  colour_id_ = value;
}

// -------------------------------------------------------------------

// Avatar_SC_SelectColour

// optional int32 result = 1;
inline bool Avatar_SC_SelectColour::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Avatar_SC_SelectColour::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Avatar_SC_SelectColour::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Avatar_SC_SelectColour::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Avatar_SC_SelectColour::result() const {
  return result_;
}
inline void Avatar_SC_SelectColour::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 avatar_id = 2;
inline bool Avatar_SC_SelectColour::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Avatar_SC_SelectColour::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Avatar_SC_SelectColour::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Avatar_SC_SelectColour::clear_avatar_id() {
  avatar_id_ = 0;
  clear_has_avatar_id();
}
inline ::google::protobuf::int32 Avatar_SC_SelectColour::avatar_id() const {
  return avatar_id_;
}
inline void Avatar_SC_SelectColour::set_avatar_id(::google::protobuf::int32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
}

// optional int32 colour_id = 3;
inline bool Avatar_SC_SelectColour::has_colour_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Avatar_SC_SelectColour::set_has_colour_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Avatar_SC_SelectColour::clear_has_colour_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Avatar_SC_SelectColour::clear_colour_id() {
  colour_id_ = 0;
  clear_has_colour_id();
}
inline ::google::protobuf::int32 Avatar_SC_SelectColour::colour_id() const {
  return colour_id_;
}
inline void Avatar_SC_SelectColour::set_colour_id(::google::protobuf::int32 value) {
  set_has_colour_id();
  colour_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_avatar_2eproto__INCLUDED
