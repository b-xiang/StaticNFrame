// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quest.proto

#ifndef PROTOBUF_quest_2eproto__INCLUDED
#define PROTOBUF_quest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_quest_2eproto();
void protobuf_AssignDesc_quest_2eproto();
void protobuf_ShutdownFile_quest_2eproto();

class ProtoQuestMain;
class ProtoQuestActive;
class ProtoQuestFuben;
class ProtoQuestDailyKillMonster;
class SingleQuestBranch;
class ProtoQuestBranch;
class ProtoQuestCycle;
class Quest_SC_UpdateLoopQuestData;
class ProtoQuestData;
class Quest_CS_GetQuestInfo;
class Quest_SC_GetQuestInfo;
class Quest_CS_GetQuestData;
class Quest_SC_GetQuestData;
class Quest_CS_AddQuest;
class Quest_SC_AddQuest;
class Quest_CS_FinishQuest;
class Quest_SC_FinishQuest;
class Quest_CS_QuitQuest;
class Quest_SC_QuitQuest;
class Quest_CS_QuestFinishList;
class Quest_SC_QuestFinishList;
class Quest_CS_QuestGotoMap;
class Quest_SC_QuestGotoMap;
class Quest_SC_UpdateQuestInfo;
class Quest_SC_UpdateAutoFinishQuest;
class Quest_SC_UpdateAutoNewQuest;
class ProtoQuestItem;
class Quest_SC_UpdateQuestAward;
class Quest_SC_AfterLoopQuestAllAward;
class Quest_SC_UpdateQuestData;
class Quest_CS_PublishHelpItem;
class Quest_SC_PublishHelpItem;
class Quest_CS_HelpOtherItem;
class Quest_SC_HelpOtherItem;
class Quest_SC_DelHelpItem;

// ===================================================================

class ProtoQuestMain : public ::google::protobuf::Message {
 public:
  ProtoQuestMain();
  virtual ~ProtoQuestMain();

  ProtoQuestMain(const ProtoQuestMain& from);

  inline ProtoQuestMain& operator=(const ProtoQuestMain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestMain& default_instance();

  void Swap(ProtoQuestMain* other);

  // implements Message ----------------------------------------------

  ProtoQuestMain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestMain& from);
  void MergeFrom(const ProtoQuestMain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 curQuestId = 1;
  inline int curquestid_size() const;
  inline void clear_curquestid();
  static const int kCurQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 curquestid(int index) const;
  inline void set_curquestid(int index, ::google::protobuf::int32 value);
  inline void add_curquestid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      curquestid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_curquestid();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestMain)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > curquestid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestMain* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestActive : public ::google::protobuf::Message {
 public:
  ProtoQuestActive();
  virtual ~ProtoQuestActive();

  ProtoQuestActive(const ProtoQuestActive& from);

  inline ProtoQuestActive& operator=(const ProtoQuestActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestActive& default_instance();

  void Swap(ProtoQuestActive* other);

  // implements Message ----------------------------------------------

  ProtoQuestActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestActive& from);
  void MergeFrom(const ProtoQuestActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 curQuestId = 1;
  inline int curquestid_size() const;
  inline void clear_curquestid();
  static const int kCurQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 curquestid(int index) const;
  inline void set_curquestid(int index, ::google::protobuf::int32 value);
  inline void add_curquestid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      curquestid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_curquestid();

  // required int32 lastGiveUp = 2;
  inline bool has_lastgiveup() const;
  inline void clear_lastgiveup();
  static const int kLastGiveUpFieldNumber = 2;
  inline ::google::protobuf::int32 lastgiveup() const;
  inline void set_lastgiveup(::google::protobuf::int32 value);

  // required int32 awardCount = 3;
  inline bool has_awardcount() const;
  inline void clear_awardcount();
  static const int kAwardCountFieldNumber = 3;
  inline ::google::protobuf::int32 awardcount() const;
  inline void set_awardcount(::google::protobuf::int32 value);

  // optional int64 receiveTime = 4;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 4;
  inline ::google::protobuf::int64 receivetime() const;
  inline void set_receivetime(::google::protobuf::int64 value);

  // optional int64 cleanTime = 5;
  inline bool has_cleantime() const;
  inline void clear_cleantime();
  static const int kCleanTimeFieldNumber = 5;
  inline ::google::protobuf::int64 cleantime() const;
  inline void set_cleantime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestActive)
 private:
  inline void set_has_lastgiveup();
  inline void clear_has_lastgiveup();
  inline void set_has_awardcount();
  inline void clear_has_awardcount();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();
  inline void set_has_cleantime();
  inline void clear_has_cleantime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > curquestid_;
  ::google::protobuf::int32 lastgiveup_;
  ::google::protobuf::int32 awardcount_;
  ::google::protobuf::int64 receivetime_;
  ::google::protobuf::int64 cleantime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestActive* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestFuben : public ::google::protobuf::Message {
 public:
  ProtoQuestFuben();
  virtual ~ProtoQuestFuben();

  ProtoQuestFuben(const ProtoQuestFuben& from);

  inline ProtoQuestFuben& operator=(const ProtoQuestFuben& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestFuben& default_instance();

  void Swap(ProtoQuestFuben* other);

  // implements Message ----------------------------------------------

  ProtoQuestFuben* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestFuben& from);
  void MergeFrom(const ProtoQuestFuben& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 curQuestId = 1;
  inline int curquestid_size() const;
  inline void clear_curquestid();
  static const int kCurQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 curquestid(int index) const;
  inline void set_curquestid(int index, ::google::protobuf::int32 value);
  inline void add_curquestid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      curquestid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_curquestid();

  // required int32 awardCount = 2;
  inline bool has_awardcount() const;
  inline void clear_awardcount();
  static const int kAwardCountFieldNumber = 2;
  inline ::google::protobuf::int32 awardcount() const;
  inline void set_awardcount(::google::protobuf::int32 value);

  // optional int64 cleanTime = 3;
  inline bool has_cleantime() const;
  inline void clear_cleantime();
  static const int kCleanTimeFieldNumber = 3;
  inline ::google::protobuf::int64 cleantime() const;
  inline void set_cleantime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestFuben)
 private:
  inline void set_has_awardcount();
  inline void clear_has_awardcount();
  inline void set_has_cleantime();
  inline void clear_has_cleantime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > curquestid_;
  ::google::protobuf::int64 cleantime_;
  ::google::protobuf::int32 awardcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestFuben* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestDailyKillMonster : public ::google::protobuf::Message {
 public:
  ProtoQuestDailyKillMonster();
  virtual ~ProtoQuestDailyKillMonster();

  ProtoQuestDailyKillMonster(const ProtoQuestDailyKillMonster& from);

  inline ProtoQuestDailyKillMonster& operator=(const ProtoQuestDailyKillMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestDailyKillMonster& default_instance();

  void Swap(ProtoQuestDailyKillMonster* other);

  // implements Message ----------------------------------------------

  ProtoQuestDailyKillMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestDailyKillMonster& from);
  void MergeFrom(const ProtoQuestDailyKillMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 curQuestId = 1;
  inline int curquestid_size() const;
  inline void clear_curquestid();
  static const int kCurQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 curquestid(int index) const;
  inline void set_curquestid(int index, ::google::protobuf::int32 value);
  inline void add_curquestid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      curquestid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_curquestid();

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 cleanTime = 3;
  inline bool has_cleantime() const;
  inline void clear_cleantime();
  static const int kCleanTimeFieldNumber = 3;
  inline ::google::protobuf::int64 cleantime() const;
  inline void set_cleantime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestDailyKillMonster)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_cleantime();
  inline void clear_has_cleantime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > curquestid_;
  ::google::protobuf::int64 cleantime_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestDailyKillMonster* default_instance_;
};
// -------------------------------------------------------------------

class SingleQuestBranch : public ::google::protobuf::Message {
 public:
  SingleQuestBranch();
  virtual ~SingleQuestBranch();

  SingleQuestBranch(const SingleQuestBranch& from);

  inline SingleQuestBranch& operator=(const SingleQuestBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleQuestBranch& default_instance();

  void Swap(SingleQuestBranch* other);

  // implements Message ----------------------------------------------

  SingleQuestBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleQuestBranch& from);
  void MergeFrom(const SingleQuestBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 curQuestId = 1;
  inline bool has_curquestid() const;
  inline void clear_curquestid();
  static const int kCurQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 curquestid() const;
  inline void set_curquestid(::google::protobuf::int32 value);

  // optional uint64 nProgress = 2;
  inline bool has_nprogress() const;
  inline void clear_nprogress();
  static const int kNProgressFieldNumber = 2;
  inline ::google::protobuf::uint64 nprogress() const;
  inline void set_nprogress(::google::protobuf::uint64 value);

  // optional bool isDone = 3;
  inline bool has_isdone() const;
  inline void clear_isdone();
  static const int kIsDoneFieldNumber = 3;
  inline bool isdone() const;
  inline void set_isdone(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.SingleQuestBranch)
 private:
  inline void set_has_curquestid();
  inline void clear_has_curquestid();
  inline void set_has_nprogress();
  inline void clear_has_nprogress();
  inline void set_has_isdone();
  inline void clear_has_isdone();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nprogress_;
  ::google::protobuf::int32 curquestid_;
  bool isdone_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static SingleQuestBranch* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestBranch : public ::google::protobuf::Message {
 public:
  ProtoQuestBranch();
  virtual ~ProtoQuestBranch();

  ProtoQuestBranch(const ProtoQuestBranch& from);

  inline ProtoQuestBranch& operator=(const ProtoQuestBranch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestBranch& default_instance();

  void Swap(ProtoQuestBranch* other);

  // implements Message ----------------------------------------------

  ProtoQuestBranch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestBranch& from);
  void MergeFrom(const ProtoQuestBranch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.SingleQuestBranch curQuest = 1;
  inline int curquest_size() const;
  inline void clear_curquest();
  static const int kCurQuestFieldNumber = 1;
  inline const ::proto::message::SingleQuestBranch& curquest(int index) const;
  inline ::proto::message::SingleQuestBranch* mutable_curquest(int index);
  inline ::proto::message::SingleQuestBranch* add_curquest();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SingleQuestBranch >&
      curquest() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::SingleQuestBranch >*
      mutable_curquest();

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestBranch)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::SingleQuestBranch > curquest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestBranch* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestCycle : public ::google::protobuf::Message {
 public:
  ProtoQuestCycle();
  virtual ~ProtoQuestCycle();

  ProtoQuestCycle(const ProtoQuestCycle& from);

  inline ProtoQuestCycle& operator=(const ProtoQuestCycle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestCycle& default_instance();

  void Swap(ProtoQuestCycle* other);

  // implements Message ----------------------------------------------

  ProtoQuestCycle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestCycle& from);
  void MergeFrom(const ProtoQuestCycle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // required int32 curQuestId = 2;
  inline bool has_curquestid() const;
  inline void clear_curquestid();
  static const int kCurQuestIdFieldNumber = 2;
  inline ::google::protobuf::int32 curquestid() const;
  inline void set_curquestid(::google::protobuf::int32 value);

  // required int32 roundNum = 3;
  inline bool has_roundnum() const;
  inline void clear_roundnum();
  static const int kRoundNumFieldNumber = 3;
  inline ::google::protobuf::int32 roundnum() const;
  inline void set_roundnum(::google::protobuf::int32 value);

  // required int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 receiveTime = 5;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 5;
  inline ::google::protobuf::int64 receivetime() const;
  inline void set_receivetime(::google::protobuf::int64 value);

  // optional int64 cleanTime = 6;
  inline bool has_cleantime() const;
  inline void clear_cleantime();
  static const int kCleanTimeFieldNumber = 6;
  inline ::google::protobuf::int64 cleantime() const;
  inline void set_cleantime(::google::protobuf::int64 value);

  // optional int32 dayNum = 7;
  inline bool has_daynum() const;
  inline void clear_daynum();
  static const int kDayNumFieldNumber = 7;
  inline ::google::protobuf::int32 daynum() const;
  inline void set_daynum(::google::protobuf::int32 value);

  // optional int32 progressNum = 8;
  inline bool has_progressnum() const;
  inline void clear_progressnum();
  static const int kProgressNumFieldNumber = 8;
  inline ::google::protobuf::int32 progressnum() const;
  inline void set_progressnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestCycle)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_curquestid();
  inline void clear_has_curquestid();
  inline void set_has_roundnum();
  inline void clear_has_roundnum();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();
  inline void set_has_cleantime();
  inline void clear_has_cleantime();
  inline void set_has_daynum();
  inline void clear_has_daynum();
  inline void set_has_progressnum();
  inline void clear_has_progressnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 curquestid_;
  ::google::protobuf::int32 roundnum_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int64 receivetime_;
  ::google::protobuf::int64 cleantime_;
  ::google::protobuf::int32 daynum_;
  ::google::protobuf::int32 progressnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestCycle* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_UpdateLoopQuestData : public ::google::protobuf::Message {
 public:
  Quest_SC_UpdateLoopQuestData();
  virtual ~Quest_SC_UpdateLoopQuestData();

  Quest_SC_UpdateLoopQuestData(const Quest_SC_UpdateLoopQuestData& from);

  inline Quest_SC_UpdateLoopQuestData& operator=(const Quest_SC_UpdateLoopQuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_UpdateLoopQuestData& default_instance();

  void Swap(Quest_SC_UpdateLoopQuestData* other);

  // implements Message ----------------------------------------------

  Quest_SC_UpdateLoopQuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_UpdateLoopQuestData& from);
  void MergeFrom(const Quest_SC_UpdateLoopQuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoQuestCycle questCycle = 1;
  inline bool has_questcycle() const;
  inline void clear_questcycle();
  static const int kQuestCycleFieldNumber = 1;
  inline const ::proto::message::ProtoQuestCycle& questcycle() const;
  inline ::proto::message::ProtoQuestCycle* mutable_questcycle();
  inline ::proto::message::ProtoQuestCycle* release_questcycle();
  inline void set_allocated_questcycle(::proto::message::ProtoQuestCycle* questcycle);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_UpdateLoopQuestData)
 private:
  inline void set_has_questcycle();
  inline void clear_has_questcycle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoQuestCycle* questcycle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_UpdateLoopQuestData* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestData : public ::google::protobuf::Message {
 public:
  ProtoQuestData();
  virtual ~ProtoQuestData();

  ProtoQuestData(const ProtoQuestData& from);

  inline ProtoQuestData& operator=(const ProtoQuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestData& default_instance();

  void Swap(ProtoQuestData* other);

  // implements Message ----------------------------------------------

  ProtoQuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestData& from);
  void MergeFrom(const ProtoQuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // required int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional uint64 nProgress = 4;
  inline bool has_nprogress() const;
  inline void clear_nprogress();
  static const int kNProgressFieldNumber = 4;
  inline ::google::protobuf::uint64 nprogress() const;
  inline void set_nprogress(::google::protobuf::uint64 value);

  // optional bool isDone = 5;
  inline bool has_isdone() const;
  inline void clear_isdone();
  static const int kIsDoneFieldNumber = 5;
  inline bool isdone() const;
  inline void set_isdone(bool value);

  // optional uint64 nInitProgress = 6;
  inline bool has_ninitprogress() const;
  inline void clear_ninitprogress();
  static const int kNInitProgressFieldNumber = 6;
  inline ::google::protobuf::uint64 ninitprogress() const;
  inline void set_ninitprogress(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_nprogress();
  inline void clear_has_nprogress();
  inline void set_has_isdone();
  inline void clear_has_isdone();
  inline void set_has_ninitprogress();
  inline void clear_has_ninitprogress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::uint64 nprogress_;
  ::google::protobuf::int32 count_;
  bool isdone_;
  ::google::protobuf::uint64 ninitprogress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestData* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_GetQuestInfo : public ::google::protobuf::Message {
 public:
  Quest_CS_GetQuestInfo();
  virtual ~Quest_CS_GetQuestInfo();

  Quest_CS_GetQuestInfo(const Quest_CS_GetQuestInfo& from);

  inline Quest_CS_GetQuestInfo& operator=(const Quest_CS_GetQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_GetQuestInfo& default_instance();

  void Swap(Quest_CS_GetQuestInfo* other);

  // implements Message ----------------------------------------------

  Quest_CS_GetQuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_GetQuestInfo& from);
  void MergeFrom(const Quest_CS_GetQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_GetQuestInfo)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_GetQuestInfo* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_GetQuestInfo : public ::google::protobuf::Message {
 public:
  Quest_SC_GetQuestInfo();
  virtual ~Quest_SC_GetQuestInfo();

  Quest_SC_GetQuestInfo(const Quest_SC_GetQuestInfo& from);

  inline Quest_SC_GetQuestInfo& operator=(const Quest_SC_GetQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_GetQuestInfo& default_instance();

  void Swap(Quest_SC_GetQuestInfo* other);

  // implements Message ----------------------------------------------

  Quest_SC_GetQuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_GetQuestInfo& from);
  void MergeFrom(const Quest_SC_GetQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional .proto.message.ProtoQuestMain questMain = 3;
  inline bool has_questmain() const;
  inline void clear_questmain();
  static const int kQuestMainFieldNumber = 3;
  inline const ::proto::message::ProtoQuestMain& questmain() const;
  inline ::proto::message::ProtoQuestMain* mutable_questmain();
  inline ::proto::message::ProtoQuestMain* release_questmain();
  inline void set_allocated_questmain(::proto::message::ProtoQuestMain* questmain);

  // optional .proto.message.ProtoQuestActive questActive = 4;
  inline bool has_questactive() const;
  inline void clear_questactive();
  static const int kQuestActiveFieldNumber = 4;
  inline const ::proto::message::ProtoQuestActive& questactive() const;
  inline ::proto::message::ProtoQuestActive* mutable_questactive();
  inline ::proto::message::ProtoQuestActive* release_questactive();
  inline void set_allocated_questactive(::proto::message::ProtoQuestActive* questactive);

  // optional .proto.message.ProtoQuestFuben questFuben = 5;
  inline bool has_questfuben() const;
  inline void clear_questfuben();
  static const int kQuestFubenFieldNumber = 5;
  inline const ::proto::message::ProtoQuestFuben& questfuben() const;
  inline ::proto::message::ProtoQuestFuben* mutable_questfuben();
  inline ::proto::message::ProtoQuestFuben* release_questfuben();
  inline void set_allocated_questfuben(::proto::message::ProtoQuestFuben* questfuben);

  // optional .proto.message.ProtoQuestDailyKillMonster questDailyKillMonster = 6;
  inline bool has_questdailykillmonster() const;
  inline void clear_questdailykillmonster();
  static const int kQuestDailyKillMonsterFieldNumber = 6;
  inline const ::proto::message::ProtoQuestDailyKillMonster& questdailykillmonster() const;
  inline ::proto::message::ProtoQuestDailyKillMonster* mutable_questdailykillmonster();
  inline ::proto::message::ProtoQuestDailyKillMonster* release_questdailykillmonster();
  inline void set_allocated_questdailykillmonster(::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster);

  // optional .proto.message.ProtoQuestBranch questBranch = 7;
  inline bool has_questbranch() const;
  inline void clear_questbranch();
  static const int kQuestBranchFieldNumber = 7;
  inline const ::proto::message::ProtoQuestBranch& questbranch() const;
  inline ::proto::message::ProtoQuestBranch* mutable_questbranch();
  inline ::proto::message::ProtoQuestBranch* release_questbranch();
  inline void set_allocated_questbranch(::proto::message::ProtoQuestBranch* questbranch);

  // optional .proto.message.ProtoQuestCycle questCycle = 8;
  inline bool has_questcycle() const;
  inline void clear_questcycle();
  static const int kQuestCycleFieldNumber = 8;
  inline const ::proto::message::ProtoQuestCycle& questcycle() const;
  inline ::proto::message::ProtoQuestCycle* mutable_questcycle();
  inline ::proto::message::ProtoQuestCycle* release_questcycle();
  inline void set_allocated_questcycle(::proto::message::ProtoQuestCycle* questcycle);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_GetQuestInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_questmain();
  inline void clear_has_questmain();
  inline void set_has_questactive();
  inline void clear_has_questactive();
  inline void set_has_questfuben();
  inline void clear_has_questfuben();
  inline void set_has_questdailykillmonster();
  inline void clear_has_questdailykillmonster();
  inline void set_has_questbranch();
  inline void clear_has_questbranch();
  inline void set_has_questcycle();
  inline void clear_has_questcycle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 kind_;
  ::proto::message::ProtoQuestMain* questmain_;
  ::proto::message::ProtoQuestActive* questactive_;
  ::proto::message::ProtoQuestFuben* questfuben_;
  ::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster_;
  ::proto::message::ProtoQuestBranch* questbranch_;
  ::proto::message::ProtoQuestCycle* questcycle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_GetQuestInfo* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_GetQuestData : public ::google::protobuf::Message {
 public:
  Quest_CS_GetQuestData();
  virtual ~Quest_CS_GetQuestData();

  Quest_CS_GetQuestData(const Quest_CS_GetQuestData& from);

  inline Quest_CS_GetQuestData& operator=(const Quest_CS_GetQuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_GetQuestData& default_instance();

  void Swap(Quest_CS_GetQuestData* other);

  // implements Message ----------------------------------------------

  Quest_CS_GetQuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_GetQuestData& from);
  void MergeFrom(const Quest_CS_GetQuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_GetQuestData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_GetQuestData* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_GetQuestData : public ::google::protobuf::Message {
 public:
  Quest_SC_GetQuestData();
  virtual ~Quest_SC_GetQuestData();

  Quest_SC_GetQuestData(const Quest_SC_GetQuestData& from);

  inline Quest_SC_GetQuestData& operator=(const Quest_SC_GetQuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_GetQuestData& default_instance();

  void Swap(Quest_SC_GetQuestData* other);

  // implements Message ----------------------------------------------

  Quest_SC_GetQuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_GetQuestData& from);
  void MergeFrom(const Quest_SC_GetQuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto.message.ProtoQuestData questData = 2;
  inline bool has_questdata() const;
  inline void clear_questdata();
  static const int kQuestDataFieldNumber = 2;
  inline const ::proto::message::ProtoQuestData& questdata() const;
  inline ::proto::message::ProtoQuestData* mutable_questdata();
  inline ::proto::message::ProtoQuestData* release_questdata();
  inline void set_allocated_questdata(::proto::message::ProtoQuestData* questdata);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_GetQuestData)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_questdata();
  inline void clear_has_questdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoQuestData* questdata_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_GetQuestData* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_AddQuest : public ::google::protobuf::Message {
 public:
  Quest_CS_AddQuest();
  virtual ~Quest_CS_AddQuest();

  Quest_CS_AddQuest(const Quest_CS_AddQuest& from);

  inline Quest_CS_AddQuest& operator=(const Quest_CS_AddQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_AddQuest& default_instance();

  void Swap(Quest_CS_AddQuest* other);

  // implements Message ----------------------------------------------

  Quest_CS_AddQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_AddQuest& from);
  void MergeFrom(const Quest_CS_AddQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_AddQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_AddQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_AddQuest : public ::google::protobuf::Message {
 public:
  Quest_SC_AddQuest();
  virtual ~Quest_SC_AddQuest();

  Quest_SC_AddQuest(const Quest_SC_AddQuest& from);

  inline Quest_SC_AddQuest& operator=(const Quest_SC_AddQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_AddQuest& default_instance();

  void Swap(Quest_SC_AddQuest* other);

  // implements Message ----------------------------------------------

  Quest_SC_AddQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_AddQuest& from);
  void MergeFrom(const Quest_SC_AddQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 kind = 3;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 3;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_AddQuest)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_AddQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_FinishQuest : public ::google::protobuf::Message {
 public:
  Quest_CS_FinishQuest();
  virtual ~Quest_CS_FinishQuest();

  Quest_CS_FinishQuest(const Quest_CS_FinishQuest& from);

  inline Quest_CS_FinishQuest& operator=(const Quest_CS_FinishQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_FinishQuest& default_instance();

  void Swap(Quest_CS_FinishQuest* other);

  // implements Message ----------------------------------------------

  Quest_CS_FinishQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_FinishQuest& from);
  void MergeFrom(const Quest_CS_FinishQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional uint64 arg = 3;
  inline bool has_arg() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 3;
  inline ::google::protobuf::uint64 arg() const;
  inline void set_arg(::google::protobuf::uint64 value);

  // optional int32 questresult = 4;
  inline bool has_questresult() const;
  inline void clear_questresult();
  static const int kQuestresultFieldNumber = 4;
  inline ::google::protobuf::int32 questresult() const;
  inline void set_questresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_FinishQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_arg();
  inline void clear_has_arg();
  inline void set_has_questresult();
  inline void clear_has_questresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::uint64 arg_;
  ::google::protobuf::int32 questresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_FinishQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_FinishQuest : public ::google::protobuf::Message {
 public:
  Quest_SC_FinishQuest();
  virtual ~Quest_SC_FinishQuest();

  Quest_SC_FinishQuest(const Quest_SC_FinishQuest& from);

  inline Quest_SC_FinishQuest& operator=(const Quest_SC_FinishQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_FinishQuest& default_instance();

  void Swap(Quest_SC_FinishQuest* other);

  // implements Message ----------------------------------------------

  Quest_SC_FinishQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_FinishQuest& from);
  void MergeFrom(const Quest_SC_FinishQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 kind = 3;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 3;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional int32 questresult = 4;
  inline bool has_questresult() const;
  inline void clear_questresult();
  static const int kQuestresultFieldNumber = 4;
  inline ::google::protobuf::int32 questresult() const;
  inline void set_questresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_FinishQuest)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_questresult();
  inline void clear_has_questresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 questresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_FinishQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_QuitQuest : public ::google::protobuf::Message {
 public:
  Quest_CS_QuitQuest();
  virtual ~Quest_CS_QuitQuest();

  Quest_CS_QuitQuest(const Quest_CS_QuitQuest& from);

  inline Quest_CS_QuitQuest& operator=(const Quest_CS_QuitQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_QuitQuest& default_instance();

  void Swap(Quest_CS_QuitQuest* other);

  // implements Message ----------------------------------------------

  Quest_CS_QuitQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_QuitQuest& from);
  void MergeFrom(const Quest_CS_QuitQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_QuitQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_QuitQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_QuitQuest : public ::google::protobuf::Message {
 public:
  Quest_SC_QuitQuest();
  virtual ~Quest_SC_QuitQuest();

  Quest_SC_QuitQuest(const Quest_SC_QuitQuest& from);

  inline Quest_SC_QuitQuest& operator=(const Quest_SC_QuitQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_QuitQuest& default_instance();

  void Swap(Quest_SC_QuitQuest* other);

  // implements Message ----------------------------------------------

  Quest_SC_QuitQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_QuitQuest& from);
  void MergeFrom(const Quest_SC_QuitQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 kind = 3;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 3;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional int32 isauto = 4;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsautoFieldNumber = 4;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_QuitQuest)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_isauto();
  inline void clear_has_isauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 isauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_QuitQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_QuestFinishList : public ::google::protobuf::Message {
 public:
  Quest_CS_QuestFinishList();
  virtual ~Quest_CS_QuestFinishList();

  Quest_CS_QuestFinishList(const Quest_CS_QuestFinishList& from);

  inline Quest_CS_QuestFinishList& operator=(const Quest_CS_QuestFinishList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_QuestFinishList& default_instance();

  void Swap(Quest_CS_QuestFinishList* other);

  // implements Message ----------------------------------------------

  Quest_CS_QuestFinishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_QuestFinishList& from);
  void MergeFrom(const Quest_CS_QuestFinishList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_QuestFinishList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_QuestFinishList* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_QuestFinishList : public ::google::protobuf::Message {
 public:
  Quest_SC_QuestFinishList();
  virtual ~Quest_SC_QuestFinishList();

  Quest_SC_QuestFinishList(const Quest_SC_QuestFinishList& from);

  inline Quest_SC_QuestFinishList& operator=(const Quest_SC_QuestFinishList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_QuestFinishList& default_instance();

  void Swap(Quest_SC_QuestFinishList* other);

  // implements Message ----------------------------------------------

  Quest_SC_QuestFinishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_QuestFinishList& from);
  void MergeFrom(const Quest_SC_QuestFinishList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_QuestFinishList)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_QuestFinishList* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_QuestGotoMap : public ::google::protobuf::Message {
 public:
  Quest_CS_QuestGotoMap();
  virtual ~Quest_CS_QuestGotoMap();

  Quest_CS_QuestGotoMap(const Quest_CS_QuestGotoMap& from);

  inline Quest_CS_QuestGotoMap& operator=(const Quest_CS_QuestGotoMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_QuestGotoMap& default_instance();

  void Swap(Quest_CS_QuestGotoMap* other);

  // implements Message ----------------------------------------------

  Quest_CS_QuestGotoMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_QuestGotoMap& from);
  void MergeFrom(const Quest_CS_QuestGotoMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_QuestGotoMap)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_QuestGotoMap* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_QuestGotoMap : public ::google::protobuf::Message {
 public:
  Quest_SC_QuestGotoMap();
  virtual ~Quest_SC_QuestGotoMap();

  Quest_SC_QuestGotoMap(const Quest_SC_QuestGotoMap& from);

  inline Quest_SC_QuestGotoMap& operator=(const Quest_SC_QuestGotoMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_QuestGotoMap& default_instance();

  void Swap(Quest_SC_QuestGotoMap* other);

  // implements Message ----------------------------------------------

  Quest_SC_QuestGotoMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_QuestGotoMap& from);
  void MergeFrom(const Quest_SC_QuestGotoMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_QuestGotoMap)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_QuestGotoMap* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_UpdateQuestInfo : public ::google::protobuf::Message {
 public:
  Quest_SC_UpdateQuestInfo();
  virtual ~Quest_SC_UpdateQuestInfo();

  Quest_SC_UpdateQuestInfo(const Quest_SC_UpdateQuestInfo& from);

  inline Quest_SC_UpdateQuestInfo& operator=(const Quest_SC_UpdateQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_UpdateQuestInfo& default_instance();

  void Swap(Quest_SC_UpdateQuestInfo* other);

  // implements Message ----------------------------------------------

  Quest_SC_UpdateQuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_UpdateQuestInfo& from);
  void MergeFrom(const Quest_SC_UpdateQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoQuestMain questMain = 1;
  inline bool has_questmain() const;
  inline void clear_questmain();
  static const int kQuestMainFieldNumber = 1;
  inline const ::proto::message::ProtoQuestMain& questmain() const;
  inline ::proto::message::ProtoQuestMain* mutable_questmain();
  inline ::proto::message::ProtoQuestMain* release_questmain();
  inline void set_allocated_questmain(::proto::message::ProtoQuestMain* questmain);

  // optional .proto.message.ProtoQuestActive questActive = 2;
  inline bool has_questactive() const;
  inline void clear_questactive();
  static const int kQuestActiveFieldNumber = 2;
  inline const ::proto::message::ProtoQuestActive& questactive() const;
  inline ::proto::message::ProtoQuestActive* mutable_questactive();
  inline ::proto::message::ProtoQuestActive* release_questactive();
  inline void set_allocated_questactive(::proto::message::ProtoQuestActive* questactive);

  // optional .proto.message.ProtoQuestFuben questFuben = 3;
  inline bool has_questfuben() const;
  inline void clear_questfuben();
  static const int kQuestFubenFieldNumber = 3;
  inline const ::proto::message::ProtoQuestFuben& questfuben() const;
  inline ::proto::message::ProtoQuestFuben* mutable_questfuben();
  inline ::proto::message::ProtoQuestFuben* release_questfuben();
  inline void set_allocated_questfuben(::proto::message::ProtoQuestFuben* questfuben);

  // optional .proto.message.ProtoQuestDailyKillMonster questDailyKillMonster = 4;
  inline bool has_questdailykillmonster() const;
  inline void clear_questdailykillmonster();
  static const int kQuestDailyKillMonsterFieldNumber = 4;
  inline const ::proto::message::ProtoQuestDailyKillMonster& questdailykillmonster() const;
  inline ::proto::message::ProtoQuestDailyKillMonster* mutable_questdailykillmonster();
  inline ::proto::message::ProtoQuestDailyKillMonster* release_questdailykillmonster();
  inline void set_allocated_questdailykillmonster(::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster);

  // optional .proto.message.ProtoQuestBranch questBranch = 5;
  inline bool has_questbranch() const;
  inline void clear_questbranch();
  static const int kQuestBranchFieldNumber = 5;
  inline const ::proto::message::ProtoQuestBranch& questbranch() const;
  inline ::proto::message::ProtoQuestBranch* mutable_questbranch();
  inline ::proto::message::ProtoQuestBranch* release_questbranch();
  inline void set_allocated_questbranch(::proto::message::ProtoQuestBranch* questbranch);

  // repeated .proto.message.ProtoQuestCycle questCycle = 6;
  inline int questcycle_size() const;
  inline void clear_questcycle();
  static const int kQuestCycleFieldNumber = 6;
  inline const ::proto::message::ProtoQuestCycle& questcycle(int index) const;
  inline ::proto::message::ProtoQuestCycle* mutable_questcycle(int index);
  inline ::proto::message::ProtoQuestCycle* add_questcycle();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >&
      questcycle() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >*
      mutable_questcycle();

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_UpdateQuestInfo)
 private:
  inline void set_has_questmain();
  inline void clear_has_questmain();
  inline void set_has_questactive();
  inline void clear_has_questactive();
  inline void set_has_questfuben();
  inline void clear_has_questfuben();
  inline void set_has_questdailykillmonster();
  inline void clear_has_questdailykillmonster();
  inline void set_has_questbranch();
  inline void clear_has_questbranch();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoQuestMain* questmain_;
  ::proto::message::ProtoQuestActive* questactive_;
  ::proto::message::ProtoQuestFuben* questfuben_;
  ::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster_;
  ::proto::message::ProtoQuestBranch* questbranch_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle > questcycle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_UpdateQuestInfo* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_UpdateAutoFinishQuest : public ::google::protobuf::Message {
 public:
  Quest_SC_UpdateAutoFinishQuest();
  virtual ~Quest_SC_UpdateAutoFinishQuest();

  Quest_SC_UpdateAutoFinishQuest(const Quest_SC_UpdateAutoFinishQuest& from);

  inline Quest_SC_UpdateAutoFinishQuest& operator=(const Quest_SC_UpdateAutoFinishQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_UpdateAutoFinishQuest& default_instance();

  void Swap(Quest_SC_UpdateAutoFinishQuest* other);

  // implements Message ----------------------------------------------

  Quest_SC_UpdateAutoFinishQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_UpdateAutoFinishQuest& from);
  void MergeFrom(const Quest_SC_UpdateAutoFinishQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional int32 questresult = 3;
  inline bool has_questresult() const;
  inline void clear_questresult();
  static const int kQuestresultFieldNumber = 3;
  inline ::google::protobuf::int32 questresult() const;
  inline void set_questresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_UpdateAutoFinishQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_questresult();
  inline void clear_has_questresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 questresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_UpdateAutoFinishQuest* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_UpdateAutoNewQuest : public ::google::protobuf::Message {
 public:
  Quest_SC_UpdateAutoNewQuest();
  virtual ~Quest_SC_UpdateAutoNewQuest();

  Quest_SC_UpdateAutoNewQuest(const Quest_SC_UpdateAutoNewQuest& from);

  inline Quest_SC_UpdateAutoNewQuest& operator=(const Quest_SC_UpdateAutoNewQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_UpdateAutoNewQuest& default_instance();

  void Swap(Quest_SC_UpdateAutoNewQuest* other);

  // implements Message ----------------------------------------------

  Quest_SC_UpdateAutoNewQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_UpdateAutoNewQuest& from);
  void MergeFrom(const Quest_SC_UpdateAutoNewQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_UpdateAutoNewQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_UpdateAutoNewQuest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoQuestItem : public ::google::protobuf::Message {
 public:
  ProtoQuestItem();
  virtual ~ProtoQuestItem();

  ProtoQuestItem(const ProtoQuestItem& from);

  inline ProtoQuestItem& operator=(const ProtoQuestItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoQuestItem& default_instance();

  void Swap(ProtoQuestItem* other);

  // implements Message ----------------------------------------------

  ProtoQuestItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoQuestItem& from);
  void MergeFrom(const ProtoQuestItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline ::google::protobuf::int32 item() const;
  inline void set_item(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoQuestItem)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 item_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static ProtoQuestItem* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_UpdateQuestAward : public ::google::protobuf::Message {
 public:
  Quest_SC_UpdateQuestAward();
  virtual ~Quest_SC_UpdateQuestAward();

  Quest_SC_UpdateQuestAward(const Quest_SC_UpdateQuestAward& from);

  inline Quest_SC_UpdateQuestAward& operator=(const Quest_SC_UpdateQuestAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_UpdateQuestAward& default_instance();

  void Swap(Quest_SC_UpdateQuestAward* other);

  // implements Message ----------------------------------------------

  Quest_SC_UpdateQuestAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_UpdateQuestAward& from);
  void MergeFrom(const Quest_SC_UpdateQuestAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 silver = 2;
  inline bool has_silver() const;
  inline void clear_silver();
  static const int kSilverFieldNumber = 2;
  inline ::google::protobuf::int32 silver() const;
  inline void set_silver(::google::protobuf::int32 value);

  // optional int32 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 cropsValue = 4;
  inline bool has_cropsvalue() const;
  inline void clear_cropsvalue();
  static const int kCropsValueFieldNumber = 4;
  inline ::google::protobuf::int32 cropsvalue() const;
  inline void set_cropsvalue(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoQuestItem items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::proto::message::ProtoQuestItem& items(int index) const;
  inline ::proto::message::ProtoQuestItem* mutable_items(int index);
  inline ::proto::message::ProtoQuestItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_UpdateQuestAward)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_silver();
  inline void clear_has_silver();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_cropsvalue();
  inline void clear_has_cropsvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 silver_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 cropsvalue_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_UpdateQuestAward* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_AfterLoopQuestAllAward : public ::google::protobuf::Message {
 public:
  Quest_SC_AfterLoopQuestAllAward();
  virtual ~Quest_SC_AfterLoopQuestAllAward();

  Quest_SC_AfterLoopQuestAllAward(const Quest_SC_AfterLoopQuestAllAward& from);

  inline Quest_SC_AfterLoopQuestAllAward& operator=(const Quest_SC_AfterLoopQuestAllAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_AfterLoopQuestAllAward& default_instance();

  void Swap(Quest_SC_AfterLoopQuestAllAward* other);

  // implements Message ----------------------------------------------

  Quest_SC_AfterLoopQuestAllAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_AfterLoopQuestAllAward& from);
  void MergeFrom(const Quest_SC_AfterLoopQuestAllAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 silver = 3;
  inline bool has_silver() const;
  inline void clear_silver();
  static const int kSilverFieldNumber = 3;
  inline ::google::protobuf::int32 silver() const;
  inline void set_silver(::google::protobuf::int32 value);

  // optional int32 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 cropsValue = 5;
  inline bool has_cropsvalue() const;
  inline void clear_cropsvalue();
  static const int kCropsValueFieldNumber = 5;
  inline ::google::protobuf::int32 cropsvalue() const;
  inline void set_cropsvalue(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoQuestItem items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::proto::message::ProtoQuestItem& items(int index) const;
  inline ::proto::message::ProtoQuestItem* mutable_items(int index);
  inline ::proto::message::ProtoQuestItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >*
      mutable_items();

  // optional bool isOverTime = 7;
  inline bool has_isovertime() const;
  inline void clear_isovertime();
  static const int kIsOverTimeFieldNumber = 7;
  inline bool isovertime() const;
  inline void set_isovertime(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_AfterLoopQuestAllAward)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_silver();
  inline void clear_has_silver();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_cropsvalue();
  inline void clear_has_cropsvalue();
  inline void set_has_isovertime();
  inline void clear_has_isovertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 silver_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem > items_;
  ::google::protobuf::int32 cropsvalue_;
  bool isovertime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_AfterLoopQuestAllAward* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_UpdateQuestData : public ::google::protobuf::Message {
 public:
  Quest_SC_UpdateQuestData();
  virtual ~Quest_SC_UpdateQuestData();

  Quest_SC_UpdateQuestData(const Quest_SC_UpdateQuestData& from);

  inline Quest_SC_UpdateQuestData& operator=(const Quest_SC_UpdateQuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_UpdateQuestData& default_instance();

  void Swap(Quest_SC_UpdateQuestData* other);

  // implements Message ----------------------------------------------

  Quest_SC_UpdateQuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_UpdateQuestData& from);
  void MergeFrom(const Quest_SC_UpdateQuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoQuestData questData = 1;
  inline int questdata_size() const;
  inline void clear_questdata();
  static const int kQuestDataFieldNumber = 1;
  inline const ::proto::message::ProtoQuestData& questdata(int index) const;
  inline ::proto::message::ProtoQuestData* mutable_questdata(int index);
  inline ::proto::message::ProtoQuestData* add_questdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >&
      questdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >*
      mutable_questdata();

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_UpdateQuestData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData > questdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_UpdateQuestData* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_PublishHelpItem : public ::google::protobuf::Message {
 public:
  Quest_CS_PublishHelpItem();
  virtual ~Quest_CS_PublishHelpItem();

  Quest_CS_PublishHelpItem(const Quest_CS_PublishHelpItem& from);

  inline Quest_CS_PublishHelpItem& operator=(const Quest_CS_PublishHelpItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_PublishHelpItem& default_instance();

  void Swap(Quest_CS_PublishHelpItem* other);

  // implements Message ----------------------------------------------

  Quest_CS_PublishHelpItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_PublishHelpItem& from);
  void MergeFrom(const Quest_CS_PublishHelpItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_PublishHelpItem)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_PublishHelpItem* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_PublishHelpItem : public ::google::protobuf::Message {
 public:
  Quest_SC_PublishHelpItem();
  virtual ~Quest_SC_PublishHelpItem();

  Quest_SC_PublishHelpItem(const Quest_SC_PublishHelpItem& from);

  inline Quest_SC_PublishHelpItem& operator=(const Quest_SC_PublishHelpItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_PublishHelpItem& default_instance();

  void Swap(Quest_SC_PublishHelpItem* other);

  // implements Message ----------------------------------------------

  Quest_SC_PublishHelpItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_PublishHelpItem& from);
  void MergeFrom(const Quest_SC_PublishHelpItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_PublishHelpItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_PublishHelpItem* default_instance_;
};
// -------------------------------------------------------------------

class Quest_CS_HelpOtherItem : public ::google::protobuf::Message {
 public:
  Quest_CS_HelpOtherItem();
  virtual ~Quest_CS_HelpOtherItem();

  Quest_CS_HelpOtherItem(const Quest_CS_HelpOtherItem& from);

  inline Quest_CS_HelpOtherItem& operator=(const Quest_CS_HelpOtherItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_CS_HelpOtherItem& default_instance();

  void Swap(Quest_CS_HelpOtherItem* other);

  // implements Message ----------------------------------------------

  Quest_CS_HelpOtherItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_CS_HelpOtherItem& from);
  void MergeFrom(const Quest_CS_HelpOtherItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required uint64 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // required int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required uint64 arg = 4;
  inline bool has_arg() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 4;
  inline ::google::protobuf::uint64 arg() const;
  inline void set_arg(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_CS_HelpOtherItem)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_arg();
  inline void clear_has_arg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 arg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_CS_HelpOtherItem* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_HelpOtherItem : public ::google::protobuf::Message {
 public:
  Quest_SC_HelpOtherItem();
  virtual ~Quest_SC_HelpOtherItem();

  Quest_SC_HelpOtherItem(const Quest_SC_HelpOtherItem& from);

  inline Quest_SC_HelpOtherItem& operator=(const Quest_SC_HelpOtherItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_HelpOtherItem& default_instance();

  void Swap(Quest_SC_HelpOtherItem* other);

  // implements Message ----------------------------------------------

  Quest_SC_HelpOtherItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_HelpOtherItem& from);
  void MergeFrom(const Quest_SC_HelpOtherItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_HelpOtherItem)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_HelpOtherItem* default_instance_;
};
// -------------------------------------------------------------------

class Quest_SC_DelHelpItem : public ::google::protobuf::Message {
 public:
  Quest_SC_DelHelpItem();
  virtual ~Quest_SC_DelHelpItem();

  Quest_SC_DelHelpItem(const Quest_SC_DelHelpItem& from);

  inline Quest_SC_DelHelpItem& operator=(const Quest_SC_DelHelpItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest_SC_DelHelpItem& default_instance();

  void Swap(Quest_SC_DelHelpItem* other);

  // implements Message ----------------------------------------------

  Quest_SC_DelHelpItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quest_SC_DelHelpItem& from);
  void MergeFrom(const Quest_SC_DelHelpItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required uint64 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Quest_SC_DelHelpItem)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_quest_2eproto();
  friend void protobuf_AssignDesc_quest_2eproto();
  friend void protobuf_ShutdownFile_quest_2eproto();

  void InitAsDefaultInstance();
  static Quest_SC_DelHelpItem* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoQuestMain

// repeated int32 curQuestId = 1;
inline int ProtoQuestMain::curquestid_size() const {
  return curquestid_.size();
}
inline void ProtoQuestMain::clear_curquestid() {
  curquestid_.Clear();
}
inline ::google::protobuf::int32 ProtoQuestMain::curquestid(int index) const {
  return curquestid_.Get(index);
}
inline void ProtoQuestMain::set_curquestid(int index, ::google::protobuf::int32 value) {
  curquestid_.Set(index, value);
}
inline void ProtoQuestMain::add_curquestid(::google::protobuf::int32 value) {
  curquestid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoQuestMain::curquestid() const {
  return curquestid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoQuestMain::mutable_curquestid() {
  return &curquestid_;
}

// -------------------------------------------------------------------

// ProtoQuestActive

// repeated int32 curQuestId = 1;
inline int ProtoQuestActive::curquestid_size() const {
  return curquestid_.size();
}
inline void ProtoQuestActive::clear_curquestid() {
  curquestid_.Clear();
}
inline ::google::protobuf::int32 ProtoQuestActive::curquestid(int index) const {
  return curquestid_.Get(index);
}
inline void ProtoQuestActive::set_curquestid(int index, ::google::protobuf::int32 value) {
  curquestid_.Set(index, value);
}
inline void ProtoQuestActive::add_curquestid(::google::protobuf::int32 value) {
  curquestid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoQuestActive::curquestid() const {
  return curquestid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoQuestActive::mutable_curquestid() {
  return &curquestid_;
}

// required int32 lastGiveUp = 2;
inline bool ProtoQuestActive::has_lastgiveup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoQuestActive::set_has_lastgiveup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoQuestActive::clear_has_lastgiveup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoQuestActive::clear_lastgiveup() {
  lastgiveup_ = 0;
  clear_has_lastgiveup();
}
inline ::google::protobuf::int32 ProtoQuestActive::lastgiveup() const {
  return lastgiveup_;
}
inline void ProtoQuestActive::set_lastgiveup(::google::protobuf::int32 value) {
  set_has_lastgiveup();
  lastgiveup_ = value;
}

// required int32 awardCount = 3;
inline bool ProtoQuestActive::has_awardcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoQuestActive::set_has_awardcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoQuestActive::clear_has_awardcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoQuestActive::clear_awardcount() {
  awardcount_ = 0;
  clear_has_awardcount();
}
inline ::google::protobuf::int32 ProtoQuestActive::awardcount() const {
  return awardcount_;
}
inline void ProtoQuestActive::set_awardcount(::google::protobuf::int32 value) {
  set_has_awardcount();
  awardcount_ = value;
}

// optional int64 receiveTime = 4;
inline bool ProtoQuestActive::has_receivetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoQuestActive::set_has_receivetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoQuestActive::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoQuestActive::clear_receivetime() {
  receivetime_ = GOOGLE_LONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::int64 ProtoQuestActive::receivetime() const {
  return receivetime_;
}
inline void ProtoQuestActive::set_receivetime(::google::protobuf::int64 value) {
  set_has_receivetime();
  receivetime_ = value;
}

// optional int64 cleanTime = 5;
inline bool ProtoQuestActive::has_cleantime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoQuestActive::set_has_cleantime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoQuestActive::clear_has_cleantime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoQuestActive::clear_cleantime() {
  cleantime_ = GOOGLE_LONGLONG(0);
  clear_has_cleantime();
}
inline ::google::protobuf::int64 ProtoQuestActive::cleantime() const {
  return cleantime_;
}
inline void ProtoQuestActive::set_cleantime(::google::protobuf::int64 value) {
  set_has_cleantime();
  cleantime_ = value;
}

// -------------------------------------------------------------------

// ProtoQuestFuben

// repeated int32 curQuestId = 1;
inline int ProtoQuestFuben::curquestid_size() const {
  return curquestid_.size();
}
inline void ProtoQuestFuben::clear_curquestid() {
  curquestid_.Clear();
}
inline ::google::protobuf::int32 ProtoQuestFuben::curquestid(int index) const {
  return curquestid_.Get(index);
}
inline void ProtoQuestFuben::set_curquestid(int index, ::google::protobuf::int32 value) {
  curquestid_.Set(index, value);
}
inline void ProtoQuestFuben::add_curquestid(::google::protobuf::int32 value) {
  curquestid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoQuestFuben::curquestid() const {
  return curquestid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoQuestFuben::mutable_curquestid() {
  return &curquestid_;
}

// required int32 awardCount = 2;
inline bool ProtoQuestFuben::has_awardcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoQuestFuben::set_has_awardcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoQuestFuben::clear_has_awardcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoQuestFuben::clear_awardcount() {
  awardcount_ = 0;
  clear_has_awardcount();
}
inline ::google::protobuf::int32 ProtoQuestFuben::awardcount() const {
  return awardcount_;
}
inline void ProtoQuestFuben::set_awardcount(::google::protobuf::int32 value) {
  set_has_awardcount();
  awardcount_ = value;
}

// optional int64 cleanTime = 3;
inline bool ProtoQuestFuben::has_cleantime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoQuestFuben::set_has_cleantime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoQuestFuben::clear_has_cleantime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoQuestFuben::clear_cleantime() {
  cleantime_ = GOOGLE_LONGLONG(0);
  clear_has_cleantime();
}
inline ::google::protobuf::int64 ProtoQuestFuben::cleantime() const {
  return cleantime_;
}
inline void ProtoQuestFuben::set_cleantime(::google::protobuf::int64 value) {
  set_has_cleantime();
  cleantime_ = value;
}

// -------------------------------------------------------------------

// ProtoQuestDailyKillMonster

// repeated int32 curQuestId = 1;
inline int ProtoQuestDailyKillMonster::curquestid_size() const {
  return curquestid_.size();
}
inline void ProtoQuestDailyKillMonster::clear_curquestid() {
  curquestid_.Clear();
}
inline ::google::protobuf::int32 ProtoQuestDailyKillMonster::curquestid(int index) const {
  return curquestid_.Get(index);
}
inline void ProtoQuestDailyKillMonster::set_curquestid(int index, ::google::protobuf::int32 value) {
  curquestid_.Set(index, value);
}
inline void ProtoQuestDailyKillMonster::add_curquestid(::google::protobuf::int32 value) {
  curquestid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoQuestDailyKillMonster::curquestid() const {
  return curquestid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoQuestDailyKillMonster::mutable_curquestid() {
  return &curquestid_;
}

// required int32 num = 2;
inline bool ProtoQuestDailyKillMonster::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoQuestDailyKillMonster::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoQuestDailyKillMonster::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoQuestDailyKillMonster::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ProtoQuestDailyKillMonster::num() const {
  return num_;
}
inline void ProtoQuestDailyKillMonster::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 cleanTime = 3;
inline bool ProtoQuestDailyKillMonster::has_cleantime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoQuestDailyKillMonster::set_has_cleantime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoQuestDailyKillMonster::clear_has_cleantime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoQuestDailyKillMonster::clear_cleantime() {
  cleantime_ = GOOGLE_LONGLONG(0);
  clear_has_cleantime();
}
inline ::google::protobuf::int64 ProtoQuestDailyKillMonster::cleantime() const {
  return cleantime_;
}
inline void ProtoQuestDailyKillMonster::set_cleantime(::google::protobuf::int64 value) {
  set_has_cleantime();
  cleantime_ = value;
}

// -------------------------------------------------------------------

// SingleQuestBranch

// optional int32 curQuestId = 1;
inline bool SingleQuestBranch::has_curquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleQuestBranch::set_has_curquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleQuestBranch::clear_has_curquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleQuestBranch::clear_curquestid() {
  curquestid_ = 0;
  clear_has_curquestid();
}
inline ::google::protobuf::int32 SingleQuestBranch::curquestid() const {
  return curquestid_;
}
inline void SingleQuestBranch::set_curquestid(::google::protobuf::int32 value) {
  set_has_curquestid();
  curquestid_ = value;
}

// optional uint64 nProgress = 2;
inline bool SingleQuestBranch::has_nprogress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleQuestBranch::set_has_nprogress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleQuestBranch::clear_has_nprogress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleQuestBranch::clear_nprogress() {
  nprogress_ = GOOGLE_ULONGLONG(0);
  clear_has_nprogress();
}
inline ::google::protobuf::uint64 SingleQuestBranch::nprogress() const {
  return nprogress_;
}
inline void SingleQuestBranch::set_nprogress(::google::protobuf::uint64 value) {
  set_has_nprogress();
  nprogress_ = value;
}

// optional bool isDone = 3;
inline bool SingleQuestBranch::has_isdone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleQuestBranch::set_has_isdone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleQuestBranch::clear_has_isdone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleQuestBranch::clear_isdone() {
  isdone_ = false;
  clear_has_isdone();
}
inline bool SingleQuestBranch::isdone() const {
  return isdone_;
}
inline void SingleQuestBranch::set_isdone(bool value) {
  set_has_isdone();
  isdone_ = value;
}

// -------------------------------------------------------------------

// ProtoQuestBranch

// repeated .proto.message.SingleQuestBranch curQuest = 1;
inline int ProtoQuestBranch::curquest_size() const {
  return curquest_.size();
}
inline void ProtoQuestBranch::clear_curquest() {
  curquest_.Clear();
}
inline const ::proto::message::SingleQuestBranch& ProtoQuestBranch::curquest(int index) const {
  return curquest_.Get(index);
}
inline ::proto::message::SingleQuestBranch* ProtoQuestBranch::mutable_curquest(int index) {
  return curquest_.Mutable(index);
}
inline ::proto::message::SingleQuestBranch* ProtoQuestBranch::add_curquest() {
  return curquest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::SingleQuestBranch >&
ProtoQuestBranch::curquest() const {
  return curquest_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::SingleQuestBranch >*
ProtoQuestBranch::mutable_curquest() {
  return &curquest_;
}

// -------------------------------------------------------------------

// ProtoQuestCycle

// required int32 kind = 1;
inline bool ProtoQuestCycle::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoQuestCycle::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoQuestCycle::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoQuestCycle::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 ProtoQuestCycle::kind() const {
  return kind_;
}
inline void ProtoQuestCycle::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// required int32 curQuestId = 2;
inline bool ProtoQuestCycle::has_curquestid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoQuestCycle::set_has_curquestid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoQuestCycle::clear_has_curquestid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoQuestCycle::clear_curquestid() {
  curquestid_ = 0;
  clear_has_curquestid();
}
inline ::google::protobuf::int32 ProtoQuestCycle::curquestid() const {
  return curquestid_;
}
inline void ProtoQuestCycle::set_curquestid(::google::protobuf::int32 value) {
  set_has_curquestid();
  curquestid_ = value;
}

// required int32 roundNum = 3;
inline bool ProtoQuestCycle::has_roundnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoQuestCycle::set_has_roundnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoQuestCycle::clear_has_roundnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoQuestCycle::clear_roundnum() {
  roundnum_ = 0;
  clear_has_roundnum();
}
inline ::google::protobuf::int32 ProtoQuestCycle::roundnum() const {
  return roundnum_;
}
inline void ProtoQuestCycle::set_roundnum(::google::protobuf::int32 value) {
  set_has_roundnum();
  roundnum_ = value;
}

// required int32 num = 4;
inline bool ProtoQuestCycle::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoQuestCycle::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoQuestCycle::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoQuestCycle::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ProtoQuestCycle::num() const {
  return num_;
}
inline void ProtoQuestCycle::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 receiveTime = 5;
inline bool ProtoQuestCycle::has_receivetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoQuestCycle::set_has_receivetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoQuestCycle::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoQuestCycle::clear_receivetime() {
  receivetime_ = GOOGLE_LONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::int64 ProtoQuestCycle::receivetime() const {
  return receivetime_;
}
inline void ProtoQuestCycle::set_receivetime(::google::protobuf::int64 value) {
  set_has_receivetime();
  receivetime_ = value;
}

// optional int64 cleanTime = 6;
inline bool ProtoQuestCycle::has_cleantime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoQuestCycle::set_has_cleantime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoQuestCycle::clear_has_cleantime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoQuestCycle::clear_cleantime() {
  cleantime_ = GOOGLE_LONGLONG(0);
  clear_has_cleantime();
}
inline ::google::protobuf::int64 ProtoQuestCycle::cleantime() const {
  return cleantime_;
}
inline void ProtoQuestCycle::set_cleantime(::google::protobuf::int64 value) {
  set_has_cleantime();
  cleantime_ = value;
}

// optional int32 dayNum = 7;
inline bool ProtoQuestCycle::has_daynum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoQuestCycle::set_has_daynum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoQuestCycle::clear_has_daynum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoQuestCycle::clear_daynum() {
  daynum_ = 0;
  clear_has_daynum();
}
inline ::google::protobuf::int32 ProtoQuestCycle::daynum() const {
  return daynum_;
}
inline void ProtoQuestCycle::set_daynum(::google::protobuf::int32 value) {
  set_has_daynum();
  daynum_ = value;
}

// optional int32 progressNum = 8;
inline bool ProtoQuestCycle::has_progressnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoQuestCycle::set_has_progressnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoQuestCycle::clear_has_progressnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoQuestCycle::clear_progressnum() {
  progressnum_ = 0;
  clear_has_progressnum();
}
inline ::google::protobuf::int32 ProtoQuestCycle::progressnum() const {
  return progressnum_;
}
inline void ProtoQuestCycle::set_progressnum(::google::protobuf::int32 value) {
  set_has_progressnum();
  progressnum_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_UpdateLoopQuestData

// optional .proto.message.ProtoQuestCycle questCycle = 1;
inline bool Quest_SC_UpdateLoopQuestData::has_questcycle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_UpdateLoopQuestData::set_has_questcycle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_UpdateLoopQuestData::clear_has_questcycle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_UpdateLoopQuestData::clear_questcycle() {
  if (questcycle_ != NULL) questcycle_->::proto::message::ProtoQuestCycle::Clear();
  clear_has_questcycle();
}
inline const ::proto::message::ProtoQuestCycle& Quest_SC_UpdateLoopQuestData::questcycle() const {
  return questcycle_ != NULL ? *questcycle_ : *default_instance_->questcycle_;
}
inline ::proto::message::ProtoQuestCycle* Quest_SC_UpdateLoopQuestData::mutable_questcycle() {
  set_has_questcycle();
  if (questcycle_ == NULL) questcycle_ = new ::proto::message::ProtoQuestCycle;
  return questcycle_;
}
inline ::proto::message::ProtoQuestCycle* Quest_SC_UpdateLoopQuestData::release_questcycle() {
  clear_has_questcycle();
  ::proto::message::ProtoQuestCycle* temp = questcycle_;
  questcycle_ = NULL;
  return temp;
}
inline void Quest_SC_UpdateLoopQuestData::set_allocated_questcycle(::proto::message::ProtoQuestCycle* questcycle) {
  delete questcycle_;
  questcycle_ = questcycle;
  if (questcycle) {
    set_has_questcycle();
  } else {
    clear_has_questcycle();
  }
}

// -------------------------------------------------------------------

// ProtoQuestData

// required int32 id = 1;
inline bool ProtoQuestData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoQuestData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoQuestData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoQuestData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ProtoQuestData::id() const {
  return id_;
}
inline void ProtoQuestData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 kind = 2;
inline bool ProtoQuestData::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoQuestData::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoQuestData::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoQuestData::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 ProtoQuestData::kind() const {
  return kind_;
}
inline void ProtoQuestData::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// required int32 count = 3;
inline bool ProtoQuestData::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoQuestData::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoQuestData::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoQuestData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ProtoQuestData::count() const {
  return count_;
}
inline void ProtoQuestData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional uint64 nProgress = 4;
inline bool ProtoQuestData::has_nprogress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoQuestData::set_has_nprogress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoQuestData::clear_has_nprogress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoQuestData::clear_nprogress() {
  nprogress_ = GOOGLE_ULONGLONG(0);
  clear_has_nprogress();
}
inline ::google::protobuf::uint64 ProtoQuestData::nprogress() const {
  return nprogress_;
}
inline void ProtoQuestData::set_nprogress(::google::protobuf::uint64 value) {
  set_has_nprogress();
  nprogress_ = value;
}

// optional bool isDone = 5;
inline bool ProtoQuestData::has_isdone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoQuestData::set_has_isdone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoQuestData::clear_has_isdone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoQuestData::clear_isdone() {
  isdone_ = false;
  clear_has_isdone();
}
inline bool ProtoQuestData::isdone() const {
  return isdone_;
}
inline void ProtoQuestData::set_isdone(bool value) {
  set_has_isdone();
  isdone_ = value;
}

// optional uint64 nInitProgress = 6;
inline bool ProtoQuestData::has_ninitprogress() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoQuestData::set_has_ninitprogress() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoQuestData::clear_has_ninitprogress() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoQuestData::clear_ninitprogress() {
  ninitprogress_ = GOOGLE_ULONGLONG(0);
  clear_has_ninitprogress();
}
inline ::google::protobuf::uint64 ProtoQuestData::ninitprogress() const {
  return ninitprogress_;
}
inline void ProtoQuestData::set_ninitprogress(::google::protobuf::uint64 value) {
  set_has_ninitprogress();
  ninitprogress_ = value;
}

// -------------------------------------------------------------------

// Quest_CS_GetQuestInfo

// required int32 kind = 1;
inline bool Quest_CS_GetQuestInfo::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_GetQuestInfo::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_GetQuestInfo::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_GetQuestInfo::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_CS_GetQuestInfo::kind() const {
  return kind_;
}
inline void Quest_CS_GetQuestInfo::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_GetQuestInfo

// required int32 result = 1;
inline bool Quest_SC_GetQuestInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_GetQuestInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_GetQuestInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_GetQuestInfo::result() const {
  return result_;
}
inline void Quest_SC_GetQuestInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 kind = 2;
inline bool Quest_SC_GetQuestInfo::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_GetQuestInfo::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_GetQuestInfo::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_GetQuestInfo::kind() const {
  return kind_;
}
inline void Quest_SC_GetQuestInfo::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional .proto.message.ProtoQuestMain questMain = 3;
inline bool Quest_SC_GetQuestInfo::has_questmain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_questmain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_GetQuestInfo::clear_has_questmain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_GetQuestInfo::clear_questmain() {
  if (questmain_ != NULL) questmain_->::proto::message::ProtoQuestMain::Clear();
  clear_has_questmain();
}
inline const ::proto::message::ProtoQuestMain& Quest_SC_GetQuestInfo::questmain() const {
  return questmain_ != NULL ? *questmain_ : *default_instance_->questmain_;
}
inline ::proto::message::ProtoQuestMain* Quest_SC_GetQuestInfo::mutable_questmain() {
  set_has_questmain();
  if (questmain_ == NULL) questmain_ = new ::proto::message::ProtoQuestMain;
  return questmain_;
}
inline ::proto::message::ProtoQuestMain* Quest_SC_GetQuestInfo::release_questmain() {
  clear_has_questmain();
  ::proto::message::ProtoQuestMain* temp = questmain_;
  questmain_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestInfo::set_allocated_questmain(::proto::message::ProtoQuestMain* questmain) {
  delete questmain_;
  questmain_ = questmain;
  if (questmain) {
    set_has_questmain();
  } else {
    clear_has_questmain();
  }
}

// optional .proto.message.ProtoQuestActive questActive = 4;
inline bool Quest_SC_GetQuestInfo::has_questactive() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_questactive() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_SC_GetQuestInfo::clear_has_questactive() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_SC_GetQuestInfo::clear_questactive() {
  if (questactive_ != NULL) questactive_->::proto::message::ProtoQuestActive::Clear();
  clear_has_questactive();
}
inline const ::proto::message::ProtoQuestActive& Quest_SC_GetQuestInfo::questactive() const {
  return questactive_ != NULL ? *questactive_ : *default_instance_->questactive_;
}
inline ::proto::message::ProtoQuestActive* Quest_SC_GetQuestInfo::mutable_questactive() {
  set_has_questactive();
  if (questactive_ == NULL) questactive_ = new ::proto::message::ProtoQuestActive;
  return questactive_;
}
inline ::proto::message::ProtoQuestActive* Quest_SC_GetQuestInfo::release_questactive() {
  clear_has_questactive();
  ::proto::message::ProtoQuestActive* temp = questactive_;
  questactive_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestInfo::set_allocated_questactive(::proto::message::ProtoQuestActive* questactive) {
  delete questactive_;
  questactive_ = questactive;
  if (questactive) {
    set_has_questactive();
  } else {
    clear_has_questactive();
  }
}

// optional .proto.message.ProtoQuestFuben questFuben = 5;
inline bool Quest_SC_GetQuestInfo::has_questfuben() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_questfuben() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Quest_SC_GetQuestInfo::clear_has_questfuben() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Quest_SC_GetQuestInfo::clear_questfuben() {
  if (questfuben_ != NULL) questfuben_->::proto::message::ProtoQuestFuben::Clear();
  clear_has_questfuben();
}
inline const ::proto::message::ProtoQuestFuben& Quest_SC_GetQuestInfo::questfuben() const {
  return questfuben_ != NULL ? *questfuben_ : *default_instance_->questfuben_;
}
inline ::proto::message::ProtoQuestFuben* Quest_SC_GetQuestInfo::mutable_questfuben() {
  set_has_questfuben();
  if (questfuben_ == NULL) questfuben_ = new ::proto::message::ProtoQuestFuben;
  return questfuben_;
}
inline ::proto::message::ProtoQuestFuben* Quest_SC_GetQuestInfo::release_questfuben() {
  clear_has_questfuben();
  ::proto::message::ProtoQuestFuben* temp = questfuben_;
  questfuben_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestInfo::set_allocated_questfuben(::proto::message::ProtoQuestFuben* questfuben) {
  delete questfuben_;
  questfuben_ = questfuben;
  if (questfuben) {
    set_has_questfuben();
  } else {
    clear_has_questfuben();
  }
}

// optional .proto.message.ProtoQuestDailyKillMonster questDailyKillMonster = 6;
inline bool Quest_SC_GetQuestInfo::has_questdailykillmonster() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_questdailykillmonster() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Quest_SC_GetQuestInfo::clear_has_questdailykillmonster() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Quest_SC_GetQuestInfo::clear_questdailykillmonster() {
  if (questdailykillmonster_ != NULL) questdailykillmonster_->::proto::message::ProtoQuestDailyKillMonster::Clear();
  clear_has_questdailykillmonster();
}
inline const ::proto::message::ProtoQuestDailyKillMonster& Quest_SC_GetQuestInfo::questdailykillmonster() const {
  return questdailykillmonster_ != NULL ? *questdailykillmonster_ : *default_instance_->questdailykillmonster_;
}
inline ::proto::message::ProtoQuestDailyKillMonster* Quest_SC_GetQuestInfo::mutable_questdailykillmonster() {
  set_has_questdailykillmonster();
  if (questdailykillmonster_ == NULL) questdailykillmonster_ = new ::proto::message::ProtoQuestDailyKillMonster;
  return questdailykillmonster_;
}
inline ::proto::message::ProtoQuestDailyKillMonster* Quest_SC_GetQuestInfo::release_questdailykillmonster() {
  clear_has_questdailykillmonster();
  ::proto::message::ProtoQuestDailyKillMonster* temp = questdailykillmonster_;
  questdailykillmonster_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestInfo::set_allocated_questdailykillmonster(::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster) {
  delete questdailykillmonster_;
  questdailykillmonster_ = questdailykillmonster;
  if (questdailykillmonster) {
    set_has_questdailykillmonster();
  } else {
    clear_has_questdailykillmonster();
  }
}

// optional .proto.message.ProtoQuestBranch questBranch = 7;
inline bool Quest_SC_GetQuestInfo::has_questbranch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_questbranch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Quest_SC_GetQuestInfo::clear_has_questbranch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Quest_SC_GetQuestInfo::clear_questbranch() {
  if (questbranch_ != NULL) questbranch_->::proto::message::ProtoQuestBranch::Clear();
  clear_has_questbranch();
}
inline const ::proto::message::ProtoQuestBranch& Quest_SC_GetQuestInfo::questbranch() const {
  return questbranch_ != NULL ? *questbranch_ : *default_instance_->questbranch_;
}
inline ::proto::message::ProtoQuestBranch* Quest_SC_GetQuestInfo::mutable_questbranch() {
  set_has_questbranch();
  if (questbranch_ == NULL) questbranch_ = new ::proto::message::ProtoQuestBranch;
  return questbranch_;
}
inline ::proto::message::ProtoQuestBranch* Quest_SC_GetQuestInfo::release_questbranch() {
  clear_has_questbranch();
  ::proto::message::ProtoQuestBranch* temp = questbranch_;
  questbranch_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestInfo::set_allocated_questbranch(::proto::message::ProtoQuestBranch* questbranch) {
  delete questbranch_;
  questbranch_ = questbranch;
  if (questbranch) {
    set_has_questbranch();
  } else {
    clear_has_questbranch();
  }
}

// optional .proto.message.ProtoQuestCycle questCycle = 8;
inline bool Quest_SC_GetQuestInfo::has_questcycle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Quest_SC_GetQuestInfo::set_has_questcycle() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Quest_SC_GetQuestInfo::clear_has_questcycle() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Quest_SC_GetQuestInfo::clear_questcycle() {
  if (questcycle_ != NULL) questcycle_->::proto::message::ProtoQuestCycle::Clear();
  clear_has_questcycle();
}
inline const ::proto::message::ProtoQuestCycle& Quest_SC_GetQuestInfo::questcycle() const {
  return questcycle_ != NULL ? *questcycle_ : *default_instance_->questcycle_;
}
inline ::proto::message::ProtoQuestCycle* Quest_SC_GetQuestInfo::mutable_questcycle() {
  set_has_questcycle();
  if (questcycle_ == NULL) questcycle_ = new ::proto::message::ProtoQuestCycle;
  return questcycle_;
}
inline ::proto::message::ProtoQuestCycle* Quest_SC_GetQuestInfo::release_questcycle() {
  clear_has_questcycle();
  ::proto::message::ProtoQuestCycle* temp = questcycle_;
  questcycle_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestInfo::set_allocated_questcycle(::proto::message::ProtoQuestCycle* questcycle) {
  delete questcycle_;
  questcycle_ = questcycle;
  if (questcycle) {
    set_has_questcycle();
  } else {
    clear_has_questcycle();
  }
}

// -------------------------------------------------------------------

// Quest_CS_GetQuestData

// required int32 id = 1;
inline bool Quest_CS_GetQuestData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_GetQuestData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_GetQuestData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_GetQuestData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Quest_CS_GetQuestData::id() const {
  return id_;
}
inline void Quest_CS_GetQuestData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 kind = 2;
inline bool Quest_CS_GetQuestData::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_CS_GetQuestData::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_CS_GetQuestData::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_CS_GetQuestData::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_CS_GetQuestData::kind() const {
  return kind_;
}
inline void Quest_CS_GetQuestData::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_GetQuestData

// required int32 result = 1;
inline bool Quest_SC_GetQuestData::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_GetQuestData::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_GetQuestData::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_GetQuestData::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_GetQuestData::result() const {
  return result_;
}
inline void Quest_SC_GetQuestData::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto.message.ProtoQuestData questData = 2;
inline bool Quest_SC_GetQuestData::has_questdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_GetQuestData::set_has_questdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_GetQuestData::clear_has_questdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_GetQuestData::clear_questdata() {
  if (questdata_ != NULL) questdata_->::proto::message::ProtoQuestData::Clear();
  clear_has_questdata();
}
inline const ::proto::message::ProtoQuestData& Quest_SC_GetQuestData::questdata() const {
  return questdata_ != NULL ? *questdata_ : *default_instance_->questdata_;
}
inline ::proto::message::ProtoQuestData* Quest_SC_GetQuestData::mutable_questdata() {
  set_has_questdata();
  if (questdata_ == NULL) questdata_ = new ::proto::message::ProtoQuestData;
  return questdata_;
}
inline ::proto::message::ProtoQuestData* Quest_SC_GetQuestData::release_questdata() {
  clear_has_questdata();
  ::proto::message::ProtoQuestData* temp = questdata_;
  questdata_ = NULL;
  return temp;
}
inline void Quest_SC_GetQuestData::set_allocated_questdata(::proto::message::ProtoQuestData* questdata) {
  delete questdata_;
  questdata_ = questdata;
  if (questdata) {
    set_has_questdata();
  } else {
    clear_has_questdata();
  }
}

// -------------------------------------------------------------------

// Quest_CS_AddQuest

// required int32 questId = 1;
inline bool Quest_CS_AddQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_AddQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_AddQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_AddQuest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_CS_AddQuest::questid() const {
  return questid_;
}
inline void Quest_CS_AddQuest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 kind = 2;
inline bool Quest_CS_AddQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_CS_AddQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_CS_AddQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_CS_AddQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_CS_AddQuest::kind() const {
  return kind_;
}
inline void Quest_CS_AddQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_AddQuest

// required int32 result = 1;
inline bool Quest_SC_AddQuest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_AddQuest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_AddQuest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_AddQuest::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_AddQuest::result() const {
  return result_;
}
inline void Quest_SC_AddQuest::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 id = 2;
inline bool Quest_SC_AddQuest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_AddQuest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_AddQuest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_AddQuest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Quest_SC_AddQuest::id() const {
  return id_;
}
inline void Quest_SC_AddQuest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 kind = 3;
inline bool Quest_SC_AddQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_AddQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_AddQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_AddQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_AddQuest::kind() const {
  return kind_;
}
inline void Quest_SC_AddQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// Quest_CS_FinishQuest

// required int32 questId = 1;
inline bool Quest_CS_FinishQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_FinishQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_FinishQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_FinishQuest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_CS_FinishQuest::questid() const {
  return questid_;
}
inline void Quest_CS_FinishQuest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 kind = 2;
inline bool Quest_CS_FinishQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_CS_FinishQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_CS_FinishQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_CS_FinishQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_CS_FinishQuest::kind() const {
  return kind_;
}
inline void Quest_CS_FinishQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional uint64 arg = 3;
inline bool Quest_CS_FinishQuest::has_arg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_CS_FinishQuest::set_has_arg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_CS_FinishQuest::clear_has_arg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_CS_FinishQuest::clear_arg() {
  arg_ = GOOGLE_ULONGLONG(0);
  clear_has_arg();
}
inline ::google::protobuf::uint64 Quest_CS_FinishQuest::arg() const {
  return arg_;
}
inline void Quest_CS_FinishQuest::set_arg(::google::protobuf::uint64 value) {
  set_has_arg();
  arg_ = value;
}

// optional int32 questresult = 4;
inline bool Quest_CS_FinishQuest::has_questresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_CS_FinishQuest::set_has_questresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_CS_FinishQuest::clear_has_questresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_CS_FinishQuest::clear_questresult() {
  questresult_ = 0;
  clear_has_questresult();
}
inline ::google::protobuf::int32 Quest_CS_FinishQuest::questresult() const {
  return questresult_;
}
inline void Quest_CS_FinishQuest::set_questresult(::google::protobuf::int32 value) {
  set_has_questresult();
  questresult_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_FinishQuest

// required int32 result = 1;
inline bool Quest_SC_FinishQuest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_FinishQuest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_FinishQuest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_FinishQuest::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_FinishQuest::result() const {
  return result_;
}
inline void Quest_SC_FinishQuest::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 id = 2;
inline bool Quest_SC_FinishQuest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_FinishQuest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_FinishQuest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_FinishQuest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Quest_SC_FinishQuest::id() const {
  return id_;
}
inline void Quest_SC_FinishQuest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 kind = 3;
inline bool Quest_SC_FinishQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_FinishQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_FinishQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_FinishQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_FinishQuest::kind() const {
  return kind_;
}
inline void Quest_SC_FinishQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int32 questresult = 4;
inline bool Quest_SC_FinishQuest::has_questresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_SC_FinishQuest::set_has_questresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_SC_FinishQuest::clear_has_questresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_SC_FinishQuest::clear_questresult() {
  questresult_ = 0;
  clear_has_questresult();
}
inline ::google::protobuf::int32 Quest_SC_FinishQuest::questresult() const {
  return questresult_;
}
inline void Quest_SC_FinishQuest::set_questresult(::google::protobuf::int32 value) {
  set_has_questresult();
  questresult_ = value;
}

// -------------------------------------------------------------------

// Quest_CS_QuitQuest

// required int32 questId = 1;
inline bool Quest_CS_QuitQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_QuitQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_QuitQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_QuitQuest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_CS_QuitQuest::questid() const {
  return questid_;
}
inline void Quest_CS_QuitQuest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 kind = 2;
inline bool Quest_CS_QuitQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_CS_QuitQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_CS_QuitQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_CS_QuitQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_CS_QuitQuest::kind() const {
  return kind_;
}
inline void Quest_CS_QuitQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_QuitQuest

// required int32 result = 1;
inline bool Quest_SC_QuitQuest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_QuitQuest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_QuitQuest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_QuitQuest::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_QuitQuest::result() const {
  return result_;
}
inline void Quest_SC_QuitQuest::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 id = 2;
inline bool Quest_SC_QuitQuest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_QuitQuest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_QuitQuest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_QuitQuest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Quest_SC_QuitQuest::id() const {
  return id_;
}
inline void Quest_SC_QuitQuest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 kind = 3;
inline bool Quest_SC_QuitQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_QuitQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_QuitQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_QuitQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_QuitQuest::kind() const {
  return kind_;
}
inline void Quest_SC_QuitQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int32 isauto = 4;
inline bool Quest_SC_QuitQuest::has_isauto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_SC_QuitQuest::set_has_isauto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_SC_QuitQuest::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_SC_QuitQuest::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Quest_SC_QuitQuest::isauto() const {
  return isauto_;
}
inline void Quest_SC_QuitQuest::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// -------------------------------------------------------------------

// Quest_CS_QuestFinishList

// -------------------------------------------------------------------

// Quest_SC_QuestFinishList

// required int32 questId = 1;
inline bool Quest_SC_QuestFinishList::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_QuestFinishList::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_QuestFinishList::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_QuestFinishList::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_SC_QuestFinishList::questid() const {
  return questid_;
}
inline void Quest_SC_QuestFinishList::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// -------------------------------------------------------------------

// Quest_CS_QuestGotoMap

// required int32 questId = 1;
inline bool Quest_CS_QuestGotoMap::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_QuestGotoMap::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_QuestGotoMap::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_QuestGotoMap::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_CS_QuestGotoMap::questid() const {
  return questid_;
}
inline void Quest_CS_QuestGotoMap::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_QuestGotoMap

// -------------------------------------------------------------------

// Quest_SC_UpdateQuestInfo

// optional .proto.message.ProtoQuestMain questMain = 1;
inline bool Quest_SC_UpdateQuestInfo::has_questmain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_UpdateQuestInfo::set_has_questmain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_UpdateQuestInfo::clear_has_questmain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_UpdateQuestInfo::clear_questmain() {
  if (questmain_ != NULL) questmain_->::proto::message::ProtoQuestMain::Clear();
  clear_has_questmain();
}
inline const ::proto::message::ProtoQuestMain& Quest_SC_UpdateQuestInfo::questmain() const {
  return questmain_ != NULL ? *questmain_ : *default_instance_->questmain_;
}
inline ::proto::message::ProtoQuestMain* Quest_SC_UpdateQuestInfo::mutable_questmain() {
  set_has_questmain();
  if (questmain_ == NULL) questmain_ = new ::proto::message::ProtoQuestMain;
  return questmain_;
}
inline ::proto::message::ProtoQuestMain* Quest_SC_UpdateQuestInfo::release_questmain() {
  clear_has_questmain();
  ::proto::message::ProtoQuestMain* temp = questmain_;
  questmain_ = NULL;
  return temp;
}
inline void Quest_SC_UpdateQuestInfo::set_allocated_questmain(::proto::message::ProtoQuestMain* questmain) {
  delete questmain_;
  questmain_ = questmain;
  if (questmain) {
    set_has_questmain();
  } else {
    clear_has_questmain();
  }
}

// optional .proto.message.ProtoQuestActive questActive = 2;
inline bool Quest_SC_UpdateQuestInfo::has_questactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_UpdateQuestInfo::set_has_questactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_UpdateQuestInfo::clear_has_questactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_UpdateQuestInfo::clear_questactive() {
  if (questactive_ != NULL) questactive_->::proto::message::ProtoQuestActive::Clear();
  clear_has_questactive();
}
inline const ::proto::message::ProtoQuestActive& Quest_SC_UpdateQuestInfo::questactive() const {
  return questactive_ != NULL ? *questactive_ : *default_instance_->questactive_;
}
inline ::proto::message::ProtoQuestActive* Quest_SC_UpdateQuestInfo::mutable_questactive() {
  set_has_questactive();
  if (questactive_ == NULL) questactive_ = new ::proto::message::ProtoQuestActive;
  return questactive_;
}
inline ::proto::message::ProtoQuestActive* Quest_SC_UpdateQuestInfo::release_questactive() {
  clear_has_questactive();
  ::proto::message::ProtoQuestActive* temp = questactive_;
  questactive_ = NULL;
  return temp;
}
inline void Quest_SC_UpdateQuestInfo::set_allocated_questactive(::proto::message::ProtoQuestActive* questactive) {
  delete questactive_;
  questactive_ = questactive;
  if (questactive) {
    set_has_questactive();
  } else {
    clear_has_questactive();
  }
}

// optional .proto.message.ProtoQuestFuben questFuben = 3;
inline bool Quest_SC_UpdateQuestInfo::has_questfuben() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_UpdateQuestInfo::set_has_questfuben() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_UpdateQuestInfo::clear_has_questfuben() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_UpdateQuestInfo::clear_questfuben() {
  if (questfuben_ != NULL) questfuben_->::proto::message::ProtoQuestFuben::Clear();
  clear_has_questfuben();
}
inline const ::proto::message::ProtoQuestFuben& Quest_SC_UpdateQuestInfo::questfuben() const {
  return questfuben_ != NULL ? *questfuben_ : *default_instance_->questfuben_;
}
inline ::proto::message::ProtoQuestFuben* Quest_SC_UpdateQuestInfo::mutable_questfuben() {
  set_has_questfuben();
  if (questfuben_ == NULL) questfuben_ = new ::proto::message::ProtoQuestFuben;
  return questfuben_;
}
inline ::proto::message::ProtoQuestFuben* Quest_SC_UpdateQuestInfo::release_questfuben() {
  clear_has_questfuben();
  ::proto::message::ProtoQuestFuben* temp = questfuben_;
  questfuben_ = NULL;
  return temp;
}
inline void Quest_SC_UpdateQuestInfo::set_allocated_questfuben(::proto::message::ProtoQuestFuben* questfuben) {
  delete questfuben_;
  questfuben_ = questfuben;
  if (questfuben) {
    set_has_questfuben();
  } else {
    clear_has_questfuben();
  }
}

// optional .proto.message.ProtoQuestDailyKillMonster questDailyKillMonster = 4;
inline bool Quest_SC_UpdateQuestInfo::has_questdailykillmonster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_SC_UpdateQuestInfo::set_has_questdailykillmonster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_SC_UpdateQuestInfo::clear_has_questdailykillmonster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_SC_UpdateQuestInfo::clear_questdailykillmonster() {
  if (questdailykillmonster_ != NULL) questdailykillmonster_->::proto::message::ProtoQuestDailyKillMonster::Clear();
  clear_has_questdailykillmonster();
}
inline const ::proto::message::ProtoQuestDailyKillMonster& Quest_SC_UpdateQuestInfo::questdailykillmonster() const {
  return questdailykillmonster_ != NULL ? *questdailykillmonster_ : *default_instance_->questdailykillmonster_;
}
inline ::proto::message::ProtoQuestDailyKillMonster* Quest_SC_UpdateQuestInfo::mutable_questdailykillmonster() {
  set_has_questdailykillmonster();
  if (questdailykillmonster_ == NULL) questdailykillmonster_ = new ::proto::message::ProtoQuestDailyKillMonster;
  return questdailykillmonster_;
}
inline ::proto::message::ProtoQuestDailyKillMonster* Quest_SC_UpdateQuestInfo::release_questdailykillmonster() {
  clear_has_questdailykillmonster();
  ::proto::message::ProtoQuestDailyKillMonster* temp = questdailykillmonster_;
  questdailykillmonster_ = NULL;
  return temp;
}
inline void Quest_SC_UpdateQuestInfo::set_allocated_questdailykillmonster(::proto::message::ProtoQuestDailyKillMonster* questdailykillmonster) {
  delete questdailykillmonster_;
  questdailykillmonster_ = questdailykillmonster;
  if (questdailykillmonster) {
    set_has_questdailykillmonster();
  } else {
    clear_has_questdailykillmonster();
  }
}

// optional .proto.message.ProtoQuestBranch questBranch = 5;
inline bool Quest_SC_UpdateQuestInfo::has_questbranch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Quest_SC_UpdateQuestInfo::set_has_questbranch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Quest_SC_UpdateQuestInfo::clear_has_questbranch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Quest_SC_UpdateQuestInfo::clear_questbranch() {
  if (questbranch_ != NULL) questbranch_->::proto::message::ProtoQuestBranch::Clear();
  clear_has_questbranch();
}
inline const ::proto::message::ProtoQuestBranch& Quest_SC_UpdateQuestInfo::questbranch() const {
  return questbranch_ != NULL ? *questbranch_ : *default_instance_->questbranch_;
}
inline ::proto::message::ProtoQuestBranch* Quest_SC_UpdateQuestInfo::mutable_questbranch() {
  set_has_questbranch();
  if (questbranch_ == NULL) questbranch_ = new ::proto::message::ProtoQuestBranch;
  return questbranch_;
}
inline ::proto::message::ProtoQuestBranch* Quest_SC_UpdateQuestInfo::release_questbranch() {
  clear_has_questbranch();
  ::proto::message::ProtoQuestBranch* temp = questbranch_;
  questbranch_ = NULL;
  return temp;
}
inline void Quest_SC_UpdateQuestInfo::set_allocated_questbranch(::proto::message::ProtoQuestBranch* questbranch) {
  delete questbranch_;
  questbranch_ = questbranch;
  if (questbranch) {
    set_has_questbranch();
  } else {
    clear_has_questbranch();
  }
}

// repeated .proto.message.ProtoQuestCycle questCycle = 6;
inline int Quest_SC_UpdateQuestInfo::questcycle_size() const {
  return questcycle_.size();
}
inline void Quest_SC_UpdateQuestInfo::clear_questcycle() {
  questcycle_.Clear();
}
inline const ::proto::message::ProtoQuestCycle& Quest_SC_UpdateQuestInfo::questcycle(int index) const {
  return questcycle_.Get(index);
}
inline ::proto::message::ProtoQuestCycle* Quest_SC_UpdateQuestInfo::mutable_questcycle(int index) {
  return questcycle_.Mutable(index);
}
inline ::proto::message::ProtoQuestCycle* Quest_SC_UpdateQuestInfo::add_questcycle() {
  return questcycle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >&
Quest_SC_UpdateQuestInfo::questcycle() const {
  return questcycle_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestCycle >*
Quest_SC_UpdateQuestInfo::mutable_questcycle() {
  return &questcycle_;
}

// -------------------------------------------------------------------

// Quest_SC_UpdateAutoFinishQuest

// required int32 questId = 1;
inline bool Quest_SC_UpdateAutoFinishQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_UpdateAutoFinishQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_UpdateAutoFinishQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_UpdateAutoFinishQuest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_SC_UpdateAutoFinishQuest::questid() const {
  return questid_;
}
inline void Quest_SC_UpdateAutoFinishQuest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 kind = 2;
inline bool Quest_SC_UpdateAutoFinishQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_UpdateAutoFinishQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_UpdateAutoFinishQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_UpdateAutoFinishQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_UpdateAutoFinishQuest::kind() const {
  return kind_;
}
inline void Quest_SC_UpdateAutoFinishQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int32 questresult = 3;
inline bool Quest_SC_UpdateAutoFinishQuest::has_questresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_UpdateAutoFinishQuest::set_has_questresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_UpdateAutoFinishQuest::clear_has_questresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_UpdateAutoFinishQuest::clear_questresult() {
  questresult_ = 0;
  clear_has_questresult();
}
inline ::google::protobuf::int32 Quest_SC_UpdateAutoFinishQuest::questresult() const {
  return questresult_;
}
inline void Quest_SC_UpdateAutoFinishQuest::set_questresult(::google::protobuf::int32 value) {
  set_has_questresult();
  questresult_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_UpdateAutoNewQuest

// required int32 questId = 1;
inline bool Quest_SC_UpdateAutoNewQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_UpdateAutoNewQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_UpdateAutoNewQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_UpdateAutoNewQuest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_SC_UpdateAutoNewQuest::questid() const {
  return questid_;
}
inline void Quest_SC_UpdateAutoNewQuest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 kind = 2;
inline bool Quest_SC_UpdateAutoNewQuest::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_UpdateAutoNewQuest::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_UpdateAutoNewQuest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_UpdateAutoNewQuest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_UpdateAutoNewQuest::kind() const {
  return kind_;
}
inline void Quest_SC_UpdateAutoNewQuest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// ProtoQuestItem

// required int32 item = 1;
inline bool ProtoQuestItem::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoQuestItem::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoQuestItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoQuestItem::clear_item() {
  item_ = 0;
  clear_has_item();
}
inline ::google::protobuf::int32 ProtoQuestItem::item() const {
  return item_;
}
inline void ProtoQuestItem::set_item(::google::protobuf::int32 value) {
  set_has_item();
  item_ = value;
}

// required int32 num = 2;
inline bool ProtoQuestItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoQuestItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoQuestItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoQuestItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ProtoQuestItem::num() const {
  return num_;
}
inline void ProtoQuestItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_UpdateQuestAward

// optional int32 exp = 1;
inline bool Quest_SC_UpdateQuestAward::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_UpdateQuestAward::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_UpdateQuestAward::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_UpdateQuestAward::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Quest_SC_UpdateQuestAward::exp() const {
  return exp_;
}
inline void Quest_SC_UpdateQuestAward::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 silver = 2;
inline bool Quest_SC_UpdateQuestAward::has_silver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_UpdateQuestAward::set_has_silver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_UpdateQuestAward::clear_has_silver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_UpdateQuestAward::clear_silver() {
  silver_ = 0;
  clear_has_silver();
}
inline ::google::protobuf::int32 Quest_SC_UpdateQuestAward::silver() const {
  return silver_;
}
inline void Quest_SC_UpdateQuestAward::set_silver(::google::protobuf::int32 value) {
  set_has_silver();
  silver_ = value;
}

// optional int32 gold = 3;
inline bool Quest_SC_UpdateQuestAward::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_UpdateQuestAward::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_UpdateQuestAward::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_UpdateQuestAward::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Quest_SC_UpdateQuestAward::gold() const {
  return gold_;
}
inline void Quest_SC_UpdateQuestAward::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 cropsValue = 4;
inline bool Quest_SC_UpdateQuestAward::has_cropsvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_SC_UpdateQuestAward::set_has_cropsvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_SC_UpdateQuestAward::clear_has_cropsvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_SC_UpdateQuestAward::clear_cropsvalue() {
  cropsvalue_ = 0;
  clear_has_cropsvalue();
}
inline ::google::protobuf::int32 Quest_SC_UpdateQuestAward::cropsvalue() const {
  return cropsvalue_;
}
inline void Quest_SC_UpdateQuestAward::set_cropsvalue(::google::protobuf::int32 value) {
  set_has_cropsvalue();
  cropsvalue_ = value;
}

// repeated .proto.message.ProtoQuestItem items = 5;
inline int Quest_SC_UpdateQuestAward::items_size() const {
  return items_.size();
}
inline void Quest_SC_UpdateQuestAward::clear_items() {
  items_.Clear();
}
inline const ::proto::message::ProtoQuestItem& Quest_SC_UpdateQuestAward::items(int index) const {
  return items_.Get(index);
}
inline ::proto::message::ProtoQuestItem* Quest_SC_UpdateQuestAward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto::message::ProtoQuestItem* Quest_SC_UpdateQuestAward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >&
Quest_SC_UpdateQuestAward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >*
Quest_SC_UpdateQuestAward::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// Quest_SC_AfterLoopQuestAllAward

// optional int32 kind = 1;
inline bool Quest_SC_AfterLoopQuestAllAward::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Quest_SC_AfterLoopQuestAllAward::kind() const {
  return kind_;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int32 exp = 2;
inline bool Quest_SC_AfterLoopQuestAllAward::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Quest_SC_AfterLoopQuestAllAward::exp() const {
  return exp_;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 silver = 3;
inline bool Quest_SC_AfterLoopQuestAllAward::has_silver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_has_silver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_has_silver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_silver() {
  silver_ = 0;
  clear_has_silver();
}
inline ::google::protobuf::int32 Quest_SC_AfterLoopQuestAllAward::silver() const {
  return silver_;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_silver(::google::protobuf::int32 value) {
  set_has_silver();
  silver_ = value;
}

// optional int32 gold = 4;
inline bool Quest_SC_AfterLoopQuestAllAward::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Quest_SC_AfterLoopQuestAllAward::gold() const {
  return gold_;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 cropsValue = 5;
inline bool Quest_SC_AfterLoopQuestAllAward::has_cropsvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_has_cropsvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_has_cropsvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_cropsvalue() {
  cropsvalue_ = 0;
  clear_has_cropsvalue();
}
inline ::google::protobuf::int32 Quest_SC_AfterLoopQuestAllAward::cropsvalue() const {
  return cropsvalue_;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_cropsvalue(::google::protobuf::int32 value) {
  set_has_cropsvalue();
  cropsvalue_ = value;
}

// repeated .proto.message.ProtoQuestItem items = 6;
inline int Quest_SC_AfterLoopQuestAllAward::items_size() const {
  return items_.size();
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_items() {
  items_.Clear();
}
inline const ::proto::message::ProtoQuestItem& Quest_SC_AfterLoopQuestAllAward::items(int index) const {
  return items_.Get(index);
}
inline ::proto::message::ProtoQuestItem* Quest_SC_AfterLoopQuestAllAward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto::message::ProtoQuestItem* Quest_SC_AfterLoopQuestAllAward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >&
Quest_SC_AfterLoopQuestAllAward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestItem >*
Quest_SC_AfterLoopQuestAllAward::mutable_items() {
  return &items_;
}

// optional bool isOverTime = 7;
inline bool Quest_SC_AfterLoopQuestAllAward::has_isovertime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_has_isovertime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_has_isovertime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Quest_SC_AfterLoopQuestAllAward::clear_isovertime() {
  isovertime_ = false;
  clear_has_isovertime();
}
inline bool Quest_SC_AfterLoopQuestAllAward::isovertime() const {
  return isovertime_;
}
inline void Quest_SC_AfterLoopQuestAllAward::set_isovertime(bool value) {
  set_has_isovertime();
  isovertime_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_UpdateQuestData

// repeated .proto.message.ProtoQuestData questData = 1;
inline int Quest_SC_UpdateQuestData::questdata_size() const {
  return questdata_.size();
}
inline void Quest_SC_UpdateQuestData::clear_questdata() {
  questdata_.Clear();
}
inline const ::proto::message::ProtoQuestData& Quest_SC_UpdateQuestData::questdata(int index) const {
  return questdata_.Get(index);
}
inline ::proto::message::ProtoQuestData* Quest_SC_UpdateQuestData::mutable_questdata(int index) {
  return questdata_.Mutable(index);
}
inline ::proto::message::ProtoQuestData* Quest_SC_UpdateQuestData::add_questdata() {
  return questdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >&
Quest_SC_UpdateQuestData::questdata() const {
  return questdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoQuestData >*
Quest_SC_UpdateQuestData::mutable_questdata() {
  return &questdata_;
}

// -------------------------------------------------------------------

// Quest_CS_PublishHelpItem

// required int32 questid = 1;
inline bool Quest_CS_PublishHelpItem::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_PublishHelpItem::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_PublishHelpItem::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_PublishHelpItem::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_CS_PublishHelpItem::questid() const {
  return questid_;
}
inline void Quest_CS_PublishHelpItem::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 num = 2;
inline bool Quest_CS_PublishHelpItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_CS_PublishHelpItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_CS_PublishHelpItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_CS_PublishHelpItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Quest_CS_PublishHelpItem::num() const {
  return num_;
}
inline void Quest_CS_PublishHelpItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_PublishHelpItem

// required int32 result = 1;
inline bool Quest_SC_PublishHelpItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_PublishHelpItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_PublishHelpItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_PublishHelpItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_PublishHelpItem::result() const {
  return result_;
}
inline void Quest_SC_PublishHelpItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Quest_CS_HelpOtherItem

// required int32 questid = 1;
inline bool Quest_CS_HelpOtherItem::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_CS_HelpOtherItem::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_CS_HelpOtherItem::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_CS_HelpOtherItem::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_CS_HelpOtherItem::questid() const {
  return questid_;
}
inline void Quest_CS_HelpOtherItem::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required uint64 playerid = 2;
inline bool Quest_CS_HelpOtherItem::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_CS_HelpOtherItem::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_CS_HelpOtherItem::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_CS_HelpOtherItem::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 Quest_CS_HelpOtherItem::playerid() const {
  return playerid_;
}
inline void Quest_CS_HelpOtherItem::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// required int32 num = 3;
inline bool Quest_CS_HelpOtherItem::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_CS_HelpOtherItem::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_CS_HelpOtherItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_CS_HelpOtherItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Quest_CS_HelpOtherItem::num() const {
  return num_;
}
inline void Quest_CS_HelpOtherItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required uint64 arg = 4;
inline bool Quest_CS_HelpOtherItem::has_arg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quest_CS_HelpOtherItem::set_has_arg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quest_CS_HelpOtherItem::clear_has_arg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quest_CS_HelpOtherItem::clear_arg() {
  arg_ = GOOGLE_ULONGLONG(0);
  clear_has_arg();
}
inline ::google::protobuf::uint64 Quest_CS_HelpOtherItem::arg() const {
  return arg_;
}
inline void Quest_CS_HelpOtherItem::set_arg(::google::protobuf::uint64 value) {
  set_has_arg();
  arg_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_HelpOtherItem

// required int32 result = 1;
inline bool Quest_SC_HelpOtherItem::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_HelpOtherItem::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_HelpOtherItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_HelpOtherItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Quest_SC_HelpOtherItem::result() const {
  return result_;
}
inline void Quest_SC_HelpOtherItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Quest_SC_DelHelpItem

// required int32 questid = 1;
inline bool Quest_SC_DelHelpItem::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quest_SC_DelHelpItem::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quest_SC_DelHelpItem::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quest_SC_DelHelpItem::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 Quest_SC_DelHelpItem::questid() const {
  return questid_;
}
inline void Quest_SC_DelHelpItem::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 num = 2;
inline bool Quest_SC_DelHelpItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quest_SC_DelHelpItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quest_SC_DelHelpItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quest_SC_DelHelpItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Quest_SC_DelHelpItem::num() const {
  return num_;
}
inline void Quest_SC_DelHelpItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required uint64 playerid = 3;
inline bool Quest_SC_DelHelpItem::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quest_SC_DelHelpItem::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quest_SC_DelHelpItem::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quest_SC_DelHelpItem::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 Quest_SC_DelHelpItem::playerid() const {
  return playerid_;
}
inline void Quest_SC_DelHelpItem::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_quest_2eproto__INCLUDED
