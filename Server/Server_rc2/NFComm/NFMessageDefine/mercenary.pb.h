// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mercenary.proto

#ifndef PROTOBUF_mercenary_2eproto__INCLUDED
#define PROTOBUF_mercenary_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "skill.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mercenary_2eproto();
void protobuf_AssignDesc_mercenary_2eproto();
void protobuf_ShutdownFile_mercenary_2eproto();

class ProtoMerEquipCell;
class ProtoMerCellInfo;
class ProtoMerAllCellInfo;
class Mercenary_SC_MercenaryDead;
class Mercenary_CS_GetMerInfo;
class Mercenary_SC_GetMerInfo;
class Mercenary_SC_UpdateSingleMerInfo;
class Mercenary_CS_OperaCell;
class Mercenary_SC_OperaCell;
class Mercenary_CS_PutOnMerEquip;
class Mercenary_SC_PutOnMerEquip;
class Mercenary_CS_GetOffMerEquip;
class Mercenary_SC_GetOffMerEquip;
class Mercenary_CS_UpgSkill;
class Mercenary_SC_UpgSkill;
class Mercenary_CS_ChangeAI;
class Mercenary_SC_ChangeAI;

// ===================================================================

class ProtoMerEquipCell : public ::google::protobuf::Message {
 public:
  ProtoMerEquipCell();
  virtual ~ProtoMerEquipCell();

  ProtoMerEquipCell(const ProtoMerEquipCell& from);

  inline ProtoMerEquipCell& operator=(const ProtoMerEquipCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMerEquipCell& default_instance();

  void Swap(ProtoMerEquipCell* other);

  // implements Message ----------------------------------------------

  ProtoMerEquipCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMerEquipCell& from);
  void MergeFrom(const ProtoMerEquipCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 equipid = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 1;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // required bool isOpen = 2;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 2;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoMerEquipCell)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_isopen();
  inline void clear_has_isopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 equipid_;
  bool isopen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static ProtoMerEquipCell* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMerCellInfo : public ::google::protobuf::Message {
 public:
  ProtoMerCellInfo();
  virtual ~ProtoMerCellInfo();

  ProtoMerCellInfo(const ProtoMerCellInfo& from);

  inline ProtoMerCellInfo& operator=(const ProtoMerCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMerCellInfo& default_instance();

  void Swap(ProtoMerCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoMerCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMerCellInfo& from);
  void MergeFrom(const ProtoMerCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // optional bool isActive = 2;
  inline bool has_isactive() const;
  inline void clear_isactive();
  static const int kIsActiveFieldNumber = 2;
  inline bool isactive() const;
  inline void set_isactive(bool value);

  // optional bool isUse = 3;
  inline bool has_isuse() const;
  inline void clear_isuse();
  static const int kIsUseFieldNumber = 3;
  inline bool isuse() const;
  inline void set_isuse(bool value);

  // optional uint32 mercenaryId = 4;
  inline bool has_mercenaryid() const;
  inline void clear_mercenaryid();
  static const int kMercenaryIdFieldNumber = 4;
  inline ::google::protobuf::uint32 mercenaryid() const;
  inline void set_mercenaryid(::google::protobuf::uint32 value);

  // optional uint32 strLv = 5;
  inline bool has_strlv() const;
  inline void clear_strlv();
  static const int kStrLvFieldNumber = 5;
  inline ::google::protobuf::uint32 strlv() const;
  inline void set_strlv(::google::protobuf::uint32 value);

  // optional uint32 luckyValue = 6;
  inline bool has_luckyvalue() const;
  inline void clear_luckyvalue();
  static const int kLuckyValueFieldNumber = 6;
  inline ::google::protobuf::uint32 luckyvalue() const;
  inline void set_luckyvalue(::google::protobuf::uint32 value);

  // repeated uint32 activeSkills = 7;
  inline int activeskills_size() const;
  inline void clear_activeskills();
  static const int kActiveSkillsFieldNumber = 7;
  inline ::google::protobuf::uint32 activeskills(int index) const;
  inline void set_activeskills(int index, ::google::protobuf::uint32 value);
  inline void add_activeskills(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activeskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activeskills();

  // repeated uint32 passSkills = 8;
  inline int passskills_size() const;
  inline void clear_passskills();
  static const int kPassSkillsFieldNumber = 8;
  inline ::google::protobuf::uint32 passskills(int index) const;
  inline void set_passskills(int index, ::google::protobuf::uint32 value);
  inline void add_passskills(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      passskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_passskills();

  // optional uint32 activeType = 9;
  inline bool has_activetype() const;
  inline void clear_activetype();
  static const int kActiveTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 activetype() const;
  inline void set_activetype(::google::protobuf::uint32 value);

  // optional uint32 activeNowValue = 10;
  inline bool has_activenowvalue() const;
  inline void clear_activenowvalue();
  static const int kActiveNowValueFieldNumber = 10;
  inline ::google::protobuf::uint32 activenowvalue() const;
  inline void set_activenowvalue(::google::protobuf::uint32 value);

  // repeated .proto.message.ProtoMerEquipCell equips = 11;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 11;
  inline const ::proto::message::ProtoMerEquipCell& equips(int index) const;
  inline ::proto::message::ProtoMerEquipCell* mutable_equips(int index);
  inline ::proto::message::ProtoMerEquipCell* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerEquipCell >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerEquipCell >*
      mutable_equips();

  // repeated .proto.message.Equip merequipgird_list = 12;
  inline int merequipgird_list_size() const;
  inline void clear_merequipgird_list();
  static const int kMerequipgirdListFieldNumber = 12;
  inline const ::proto::message::Equip& merequipgird_list(int index) const;
  inline ::proto::message::Equip* mutable_merequipgird_list(int index);
  inline ::proto::message::Equip* add_merequipgird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      merequipgird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_merequipgird_list();

  // optional bool isDead = 13;
  inline bool has_isdead() const;
  inline void clear_isdead();
  static const int kIsDeadFieldNumber = 13;
  inline bool isdead() const;
  inline void set_isdead(bool value);

  // optional int64 ReliveTick = 14;
  inline bool has_relivetick() const;
  inline void clear_relivetick();
  static const int kReliveTickFieldNumber = 14;
  inline ::google::protobuf::int64 relivetick() const;
  inline void set_relivetick(::google::protobuf::int64 value);

  // optional int32 HpRate = 15;
  inline bool has_hprate() const;
  inline void clear_hprate();
  static const int kHpRateFieldNumber = 15;
  inline ::google::protobuf::int32 hprate() const;
  inline void set_hprate(::google::protobuf::int32 value);

  // optional uint32 eatFoodId = 16;
  inline bool has_eatfoodid() const;
  inline void clear_eatfoodid();
  static const int kEatFoodIdFieldNumber = 16;
  inline ::google::protobuf::uint32 eatfoodid() const;
  inline void set_eatfoodid(::google::protobuf::uint32 value);

  // optional uint32 eatFoodNum = 17;
  inline bool has_eatfoodnum() const;
  inline void clear_eatfoodnum();
  static const int kEatFoodNumFieldNumber = 17;
  inline ::google::protobuf::uint32 eatfoodnum() const;
  inline void set_eatfoodnum(::google::protobuf::uint32 value);

  // repeated uint32 skillbooks = 18;
  inline int skillbooks_size() const;
  inline void clear_skillbooks();
  static const int kSkillbooksFieldNumber = 18;
  inline ::google::protobuf::uint32 skillbooks(int index) const;
  inline void set_skillbooks(int index, ::google::protobuf::uint32 value);
  inline void add_skillbooks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillbooks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillbooks();

  // optional uint32 ranking = 19;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 19;
  inline ::google::protobuf::uint32 ranking() const;
  inline void set_ranking(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoMerCellInfo)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_isactive();
  inline void clear_has_isactive();
  inline void set_has_isuse();
  inline void clear_has_isuse();
  inline void set_has_mercenaryid();
  inline void clear_has_mercenaryid();
  inline void set_has_strlv();
  inline void clear_has_strlv();
  inline void set_has_luckyvalue();
  inline void clear_has_luckyvalue();
  inline void set_has_activetype();
  inline void clear_has_activetype();
  inline void set_has_activenowvalue();
  inline void clear_has_activenowvalue();
  inline void set_has_isdead();
  inline void clear_has_isdead();
  inline void set_has_relivetick();
  inline void clear_has_relivetick();
  inline void set_has_hprate();
  inline void clear_has_hprate();
  inline void set_has_eatfoodid();
  inline void clear_has_eatfoodid();
  inline void set_has_eatfoodnum();
  inline void clear_has_eatfoodnum();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 mercenaryid_;
  ::google::protobuf::uint32 strlv_;
  ::google::protobuf::uint32 luckyvalue_;
  bool isactive_;
  bool isuse_;
  bool isdead_;
  ::google::protobuf::uint32 activetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activeskills_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > passskills_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerEquipCell > equips_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > merequipgird_list_;
  ::google::protobuf::uint32 activenowvalue_;
  ::google::protobuf::int32 hprate_;
  ::google::protobuf::int64 relivetick_;
  ::google::protobuf::uint32 eatfoodid_;
  ::google::protobuf::uint32 eatfoodnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillbooks_;
  ::google::protobuf::uint32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static ProtoMerCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoMerAllCellInfo : public ::google::protobuf::Message {
 public:
  ProtoMerAllCellInfo();
  virtual ~ProtoMerAllCellInfo();

  ProtoMerAllCellInfo(const ProtoMerAllCellInfo& from);

  inline ProtoMerAllCellInfo& operator=(const ProtoMerAllCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoMerAllCellInfo& default_instance();

  void Swap(ProtoMerAllCellInfo* other);

  // implements Message ----------------------------------------------

  ProtoMerAllCellInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoMerAllCellInfo& from);
  void MergeFrom(const ProtoMerAllCellInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoMerCellInfo allInfo = 1;
  inline int allinfo_size() const;
  inline void clear_allinfo();
  static const int kAllInfoFieldNumber = 1;
  inline const ::proto::message::ProtoMerCellInfo& allinfo(int index) const;
  inline ::proto::message::ProtoMerCellInfo* mutable_allinfo(int index);
  inline ::proto::message::ProtoMerCellInfo* add_allinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >&
      allinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >*
      mutable_allinfo();

  // optional uint32 AIStatus = 2;
  inline bool has_aistatus() const;
  inline void clear_aistatus();
  static const int kAIStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 aistatus() const;
  inline void set_aistatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoMerAllCellInfo)
 private:
  inline void set_has_aistatus();
  inline void clear_has_aistatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo > allinfo_;
  ::google::protobuf::uint32 aistatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static ProtoMerAllCellInfo* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_MercenaryDead : public ::google::protobuf::Message {
 public:
  Mercenary_SC_MercenaryDead();
  virtual ~Mercenary_SC_MercenaryDead();

  Mercenary_SC_MercenaryDead(const Mercenary_SC_MercenaryDead& from);

  inline Mercenary_SC_MercenaryDead& operator=(const Mercenary_SC_MercenaryDead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_MercenaryDead& default_instance();

  void Swap(Mercenary_SC_MercenaryDead* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_MercenaryDead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_MercenaryDead& from);
  void MergeFrom(const Mercenary_SC_MercenaryDead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // optional int64 ReliveTick = 2;
  inline bool has_relivetick() const;
  inline void clear_relivetick();
  static const int kReliveTickFieldNumber = 2;
  inline ::google::protobuf::int64 relivetick() const;
  inline void set_relivetick(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_MercenaryDead)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_relivetick();
  inline void clear_has_relivetick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 relivetick_;
  ::google::protobuf::uint32 cellid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_MercenaryDead* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_CS_GetMerInfo : public ::google::protobuf::Message {
 public:
  Mercenary_CS_GetMerInfo();
  virtual ~Mercenary_CS_GetMerInfo();

  Mercenary_CS_GetMerInfo(const Mercenary_CS_GetMerInfo& from);

  inline Mercenary_CS_GetMerInfo& operator=(const Mercenary_CS_GetMerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_CS_GetMerInfo& default_instance();

  void Swap(Mercenary_CS_GetMerInfo* other);

  // implements Message ----------------------------------------------

  Mercenary_CS_GetMerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_CS_GetMerInfo& from);
  void MergeFrom(const Mercenary_CS_GetMerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_CS_GetMerInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_CS_GetMerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_GetMerInfo : public ::google::protobuf::Message {
 public:
  Mercenary_SC_GetMerInfo();
  virtual ~Mercenary_SC_GetMerInfo();

  Mercenary_SC_GetMerInfo(const Mercenary_SC_GetMerInfo& from);

  inline Mercenary_SC_GetMerInfo& operator=(const Mercenary_SC_GetMerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_GetMerInfo& default_instance();

  void Swap(Mercenary_SC_GetMerInfo* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_GetMerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_GetMerInfo& from);
  void MergeFrom(const Mercenary_SC_GetMerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoMerCellInfo infoList = 1;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 1;
  inline const ::proto::message::ProtoMerCellInfo& infolist(int index) const;
  inline ::proto::message::ProtoMerCellInfo* mutable_infolist(int index);
  inline ::proto::message::ProtoMerCellInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >*
      mutable_infolist();

  // repeated int32 generalSkills = 2;
  inline int generalskills_size() const;
  inline void clear_generalskills();
  static const int kGeneralSkillsFieldNumber = 2;
  inline ::google::protobuf::int32 generalskills(int index) const;
  inline void set_generalskills(int index, ::google::protobuf::int32 value);
  inline void add_generalskills(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      generalskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_generalskills();

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_GetMerInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo > infolist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > generalskills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_GetMerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_UpdateSingleMerInfo : public ::google::protobuf::Message {
 public:
  Mercenary_SC_UpdateSingleMerInfo();
  virtual ~Mercenary_SC_UpdateSingleMerInfo();

  Mercenary_SC_UpdateSingleMerInfo(const Mercenary_SC_UpdateSingleMerInfo& from);

  inline Mercenary_SC_UpdateSingleMerInfo& operator=(const Mercenary_SC_UpdateSingleMerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_UpdateSingleMerInfo& default_instance();

  void Swap(Mercenary_SC_UpdateSingleMerInfo* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_UpdateSingleMerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_UpdateSingleMerInfo& from);
  void MergeFrom(const Mercenary_SC_UpdateSingleMerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoMerCellInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto::message::ProtoMerCellInfo& info() const;
  inline ::proto::message::ProtoMerCellInfo* mutable_info();
  inline ::proto::message::ProtoMerCellInfo* release_info();
  inline void set_allocated_info(::proto::message::ProtoMerCellInfo* info);

  // repeated int32 generalSkills = 2;
  inline int generalskills_size() const;
  inline void clear_generalskills();
  static const int kGeneralSkillsFieldNumber = 2;
  inline ::google::protobuf::int32 generalskills(int index) const;
  inline void set_generalskills(int index, ::google::protobuf::int32 value);
  inline void add_generalskills(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      generalskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_generalskills();

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_UpdateSingleMerInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoMerCellInfo* info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > generalskills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_UpdateSingleMerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_CS_OperaCell : public ::google::protobuf::Message {
 public:
  Mercenary_CS_OperaCell();
  virtual ~Mercenary_CS_OperaCell();

  Mercenary_CS_OperaCell(const Mercenary_CS_OperaCell& from);

  inline Mercenary_CS_OperaCell& operator=(const Mercenary_CS_OperaCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_CS_OperaCell& default_instance();

  void Swap(Mercenary_CS_OperaCell* other);

  // implements Message ----------------------------------------------

  Mercenary_CS_OperaCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_CS_OperaCell& from);
  void MergeFrom(const Mercenary_CS_OperaCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint32 operaType = 2;
  inline bool has_operatype() const;
  inline void clear_operatype();
  static const int kOperaTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 operatype() const;
  inline void set_operatype(::google::protobuf::uint32 value);

  // optional uint32 param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_CS_OperaCell)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_operatype();
  inline void clear_has_operatype();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 operatype_;
  ::google::protobuf::uint32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_CS_OperaCell* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_OperaCell : public ::google::protobuf::Message {
 public:
  Mercenary_SC_OperaCell();
  virtual ~Mercenary_SC_OperaCell();

  Mercenary_SC_OperaCell(const Mercenary_SC_OperaCell& from);

  inline Mercenary_SC_OperaCell& operator=(const Mercenary_SC_OperaCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_OperaCell& default_instance();

  void Swap(Mercenary_SC_OperaCell* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_OperaCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_OperaCell& from);
  void MergeFrom(const Mercenary_SC_OperaCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_OperaCell)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_OperaCell* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_CS_PutOnMerEquip : public ::google::protobuf::Message {
 public:
  Mercenary_CS_PutOnMerEquip();
  virtual ~Mercenary_CS_PutOnMerEquip();

  Mercenary_CS_PutOnMerEquip(const Mercenary_CS_PutOnMerEquip& from);

  inline Mercenary_CS_PutOnMerEquip& operator=(const Mercenary_CS_PutOnMerEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_CS_PutOnMerEquip& default_instance();

  void Swap(Mercenary_CS_PutOnMerEquip* other);

  // implements Message ----------------------------------------------

  Mercenary_CS_PutOnMerEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_CS_PutOnMerEquip& from);
  void MergeFrom(const Mercenary_CS_PutOnMerEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellId = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_CS_PutOnMerEquip)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint32 cellid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_CS_PutOnMerEquip* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_PutOnMerEquip : public ::google::protobuf::Message {
 public:
  Mercenary_SC_PutOnMerEquip();
  virtual ~Mercenary_SC_PutOnMerEquip();

  Mercenary_SC_PutOnMerEquip(const Mercenary_SC_PutOnMerEquip& from);

  inline Mercenary_SC_PutOnMerEquip& operator=(const Mercenary_SC_PutOnMerEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_PutOnMerEquip& default_instance();

  void Swap(Mercenary_SC_PutOnMerEquip* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_PutOnMerEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_PutOnMerEquip& from);
  void MergeFrom(const Mercenary_SC_PutOnMerEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 merCellId = 2;
  inline bool has_mercellid() const;
  inline void clear_mercellid();
  static const int kMerCellIdFieldNumber = 2;
  inline ::google::protobuf::int32 mercellid() const;
  inline void set_mercellid(::google::protobuf::int32 value);

  // repeated .proto.message.Equip equip_list = 3;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 3;
  inline const ::proto::message::Equip& equip_list(int index) const;
  inline ::proto::message::Equip* mutable_equip_list(int index);
  inline ::proto::message::Equip* add_equip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
      equip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
      mutable_equip_list();

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_PutOnMerEquip)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_mercellid();
  inline void clear_has_mercellid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 mercellid_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::Equip > equip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_PutOnMerEquip* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_CS_GetOffMerEquip : public ::google::protobuf::Message {
 public:
  Mercenary_CS_GetOffMerEquip();
  virtual ~Mercenary_CS_GetOffMerEquip();

  Mercenary_CS_GetOffMerEquip(const Mercenary_CS_GetOffMerEquip& from);

  inline Mercenary_CS_GetOffMerEquip& operator=(const Mercenary_CS_GetOffMerEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_CS_GetOffMerEquip& default_instance();

  void Swap(Mercenary_CS_GetOffMerEquip* other);

  // implements Message ----------------------------------------------

  Mercenary_CS_GetOffMerEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_CS_GetOffMerEquip& from);
  void MergeFrom(const Mercenary_CS_GetOffMerEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cellID = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIDFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint64 uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline ::google::protobuf::uint64 uuid() const;
  inline void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_CS_GetOffMerEquip)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint32 cellid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_CS_GetOffMerEquip* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_GetOffMerEquip : public ::google::protobuf::Message {
 public:
  Mercenary_SC_GetOffMerEquip();
  virtual ~Mercenary_SC_GetOffMerEquip();

  Mercenary_SC_GetOffMerEquip(const Mercenary_SC_GetOffMerEquip& from);

  inline Mercenary_SC_GetOffMerEquip& operator=(const Mercenary_SC_GetOffMerEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_GetOffMerEquip& default_instance();

  void Swap(Mercenary_SC_GetOffMerEquip* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_GetOffMerEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_GetOffMerEquip& from);
  void MergeFrom(const Mercenary_SC_GetOffMerEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 merCellId = 2;
  inline bool has_mercellid() const;
  inline void clear_mercellid();
  static const int kMerCellIdFieldNumber = 2;
  inline ::google::protobuf::int32 mercellid() const;
  inline void set_mercellid(::google::protobuf::int32 value);

  // optional .proto.message.Equip equip_list = 3;
  inline bool has_equip_list() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 3;
  inline const ::proto::message::Equip& equip_list() const;
  inline ::proto::message::Equip* mutable_equip_list();
  inline ::proto::message::Equip* release_equip_list();
  inline void set_allocated_equip_list(::proto::message::Equip* equip_list);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_GetOffMerEquip)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_mercellid();
  inline void clear_has_mercellid();
  inline void set_has_equip_list();
  inline void clear_has_equip_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 mercellid_;
  ::proto::message::Equip* equip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_GetOffMerEquip* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_CS_UpgSkill : public ::google::protobuf::Message {
 public:
  Mercenary_CS_UpgSkill();
  virtual ~Mercenary_CS_UpgSkill();

  Mercenary_CS_UpgSkill(const Mercenary_CS_UpgSkill& from);

  inline Mercenary_CS_UpgSkill& operator=(const Mercenary_CS_UpgSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_CS_UpgSkill& default_instance();

  void Swap(Mercenary_CS_UpgSkill* other);

  // implements Message ----------------------------------------------

  Mercenary_CS_UpgSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_CS_UpgSkill& from);
  void MergeFrom(const Mercenary_CS_UpgSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_CS_UpgSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_CS_UpgSkill* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_UpgSkill : public ::google::protobuf::Message {
 public:
  Mercenary_SC_UpgSkill();
  virtual ~Mercenary_SC_UpgSkill();

  Mercenary_SC_UpgSkill(const Mercenary_SC_UpgSkill& from);

  inline Mercenary_SC_UpgSkill& operator=(const Mercenary_SC_UpgSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_UpgSkill& default_instance();

  void Swap(Mercenary_SC_UpgSkill* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_UpgSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_UpgSkill& from);
  void MergeFrom(const Mercenary_SC_UpgSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_UpgSkill)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_UpgSkill* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_CS_ChangeAI : public ::google::protobuf::Message {
 public:
  Mercenary_CS_ChangeAI();
  virtual ~Mercenary_CS_ChangeAI();

  Mercenary_CS_ChangeAI(const Mercenary_CS_ChangeAI& from);

  inline Mercenary_CS_ChangeAI& operator=(const Mercenary_CS_ChangeAI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_CS_ChangeAI& default_instance();

  void Swap(Mercenary_CS_ChangeAI* other);

  // implements Message ----------------------------------------------

  Mercenary_CS_ChangeAI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_CS_ChangeAI& from);
  void MergeFrom(const Mercenary_CS_ChangeAI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_CS_ChangeAI)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_CS_ChangeAI* default_instance_;
};
// -------------------------------------------------------------------

class Mercenary_SC_ChangeAI : public ::google::protobuf::Message {
 public:
  Mercenary_SC_ChangeAI();
  virtual ~Mercenary_SC_ChangeAI();

  Mercenary_SC_ChangeAI(const Mercenary_SC_ChangeAI& from);

  inline Mercenary_SC_ChangeAI& operator=(const Mercenary_SC_ChangeAI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mercenary_SC_ChangeAI& default_instance();

  void Swap(Mercenary_SC_ChangeAI* other);

  // implements Message ----------------------------------------------

  Mercenary_SC_ChangeAI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mercenary_SC_ChangeAI& from);
  void MergeFrom(const Mercenary_SC_ChangeAI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Mercenary_SC_ChangeAI)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mercenary_2eproto();
  friend void protobuf_AssignDesc_mercenary_2eproto();
  friend void protobuf_ShutdownFile_mercenary_2eproto();

  void InitAsDefaultInstance();
  static Mercenary_SC_ChangeAI* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoMerEquipCell

// required uint32 equipid = 1;
inline bool ProtoMerEquipCell::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMerEquipCell::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMerEquipCell::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMerEquipCell::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 ProtoMerEquipCell::equipid() const {
  return equipid_;
}
inline void ProtoMerEquipCell::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
}

// required bool isOpen = 2;
inline bool ProtoMerEquipCell::has_isopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMerEquipCell::set_has_isopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMerEquipCell::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMerEquipCell::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool ProtoMerEquipCell::isopen() const {
  return isopen_;
}
inline void ProtoMerEquipCell::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// ProtoMerCellInfo

// required uint32 cellId = 1;
inline bool ProtoMerCellInfo::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoMerCellInfo::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoMerCellInfo::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoMerCellInfo::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::cellid() const {
  return cellid_;
}
inline void ProtoMerCellInfo::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional bool isActive = 2;
inline bool ProtoMerCellInfo::has_isactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMerCellInfo::set_has_isactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMerCellInfo::clear_has_isactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMerCellInfo::clear_isactive() {
  isactive_ = false;
  clear_has_isactive();
}
inline bool ProtoMerCellInfo::isactive() const {
  return isactive_;
}
inline void ProtoMerCellInfo::set_isactive(bool value) {
  set_has_isactive();
  isactive_ = value;
}

// optional bool isUse = 3;
inline bool ProtoMerCellInfo::has_isuse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoMerCellInfo::set_has_isuse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoMerCellInfo::clear_has_isuse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoMerCellInfo::clear_isuse() {
  isuse_ = false;
  clear_has_isuse();
}
inline bool ProtoMerCellInfo::isuse() const {
  return isuse_;
}
inline void ProtoMerCellInfo::set_isuse(bool value) {
  set_has_isuse();
  isuse_ = value;
}

// optional uint32 mercenaryId = 4;
inline bool ProtoMerCellInfo::has_mercenaryid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoMerCellInfo::set_has_mercenaryid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoMerCellInfo::clear_has_mercenaryid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoMerCellInfo::clear_mercenaryid() {
  mercenaryid_ = 0u;
  clear_has_mercenaryid();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::mercenaryid() const {
  return mercenaryid_;
}
inline void ProtoMerCellInfo::set_mercenaryid(::google::protobuf::uint32 value) {
  set_has_mercenaryid();
  mercenaryid_ = value;
}

// optional uint32 strLv = 5;
inline bool ProtoMerCellInfo::has_strlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoMerCellInfo::set_has_strlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoMerCellInfo::clear_has_strlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoMerCellInfo::clear_strlv() {
  strlv_ = 0u;
  clear_has_strlv();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::strlv() const {
  return strlv_;
}
inline void ProtoMerCellInfo::set_strlv(::google::protobuf::uint32 value) {
  set_has_strlv();
  strlv_ = value;
}

// optional uint32 luckyValue = 6;
inline bool ProtoMerCellInfo::has_luckyvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoMerCellInfo::set_has_luckyvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoMerCellInfo::clear_has_luckyvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoMerCellInfo::clear_luckyvalue() {
  luckyvalue_ = 0u;
  clear_has_luckyvalue();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::luckyvalue() const {
  return luckyvalue_;
}
inline void ProtoMerCellInfo::set_luckyvalue(::google::protobuf::uint32 value) {
  set_has_luckyvalue();
  luckyvalue_ = value;
}

// repeated uint32 activeSkills = 7;
inline int ProtoMerCellInfo::activeskills_size() const {
  return activeskills_.size();
}
inline void ProtoMerCellInfo::clear_activeskills() {
  activeskills_.Clear();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::activeskills(int index) const {
  return activeskills_.Get(index);
}
inline void ProtoMerCellInfo::set_activeskills(int index, ::google::protobuf::uint32 value) {
  activeskills_.Set(index, value);
}
inline void ProtoMerCellInfo::add_activeskills(::google::protobuf::uint32 value) {
  activeskills_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoMerCellInfo::activeskills() const {
  return activeskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoMerCellInfo::mutable_activeskills() {
  return &activeskills_;
}

// repeated uint32 passSkills = 8;
inline int ProtoMerCellInfo::passskills_size() const {
  return passskills_.size();
}
inline void ProtoMerCellInfo::clear_passskills() {
  passskills_.Clear();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::passskills(int index) const {
  return passskills_.Get(index);
}
inline void ProtoMerCellInfo::set_passskills(int index, ::google::protobuf::uint32 value) {
  passskills_.Set(index, value);
}
inline void ProtoMerCellInfo::add_passskills(::google::protobuf::uint32 value) {
  passskills_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoMerCellInfo::passskills() const {
  return passskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoMerCellInfo::mutable_passskills() {
  return &passskills_;
}

// optional uint32 activeType = 9;
inline bool ProtoMerCellInfo::has_activetype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoMerCellInfo::set_has_activetype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoMerCellInfo::clear_has_activetype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoMerCellInfo::clear_activetype() {
  activetype_ = 0u;
  clear_has_activetype();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::activetype() const {
  return activetype_;
}
inline void ProtoMerCellInfo::set_activetype(::google::protobuf::uint32 value) {
  set_has_activetype();
  activetype_ = value;
}

// optional uint32 activeNowValue = 10;
inline bool ProtoMerCellInfo::has_activenowvalue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoMerCellInfo::set_has_activenowvalue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoMerCellInfo::clear_has_activenowvalue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoMerCellInfo::clear_activenowvalue() {
  activenowvalue_ = 0u;
  clear_has_activenowvalue();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::activenowvalue() const {
  return activenowvalue_;
}
inline void ProtoMerCellInfo::set_activenowvalue(::google::protobuf::uint32 value) {
  set_has_activenowvalue();
  activenowvalue_ = value;
}

// repeated .proto.message.ProtoMerEquipCell equips = 11;
inline int ProtoMerCellInfo::equips_size() const {
  return equips_.size();
}
inline void ProtoMerCellInfo::clear_equips() {
  equips_.Clear();
}
inline const ::proto::message::ProtoMerEquipCell& ProtoMerCellInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::proto::message::ProtoMerEquipCell* ProtoMerCellInfo::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::proto::message::ProtoMerEquipCell* ProtoMerCellInfo::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerEquipCell >&
ProtoMerCellInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerEquipCell >*
ProtoMerCellInfo::mutable_equips() {
  return &equips_;
}

// repeated .proto.message.Equip merequipgird_list = 12;
inline int ProtoMerCellInfo::merequipgird_list_size() const {
  return merequipgird_list_.size();
}
inline void ProtoMerCellInfo::clear_merequipgird_list() {
  merequipgird_list_.Clear();
}
inline const ::proto::message::Equip& ProtoMerCellInfo::merequipgird_list(int index) const {
  return merequipgird_list_.Get(index);
}
inline ::proto::message::Equip* ProtoMerCellInfo::mutable_merequipgird_list(int index) {
  return merequipgird_list_.Mutable(index);
}
inline ::proto::message::Equip* ProtoMerCellInfo::add_merequipgird_list() {
  return merequipgird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
ProtoMerCellInfo::merequipgird_list() const {
  return merequipgird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
ProtoMerCellInfo::mutable_merequipgird_list() {
  return &merequipgird_list_;
}

// optional bool isDead = 13;
inline bool ProtoMerCellInfo::has_isdead() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProtoMerCellInfo::set_has_isdead() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProtoMerCellInfo::clear_has_isdead() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProtoMerCellInfo::clear_isdead() {
  isdead_ = false;
  clear_has_isdead();
}
inline bool ProtoMerCellInfo::isdead() const {
  return isdead_;
}
inline void ProtoMerCellInfo::set_isdead(bool value) {
  set_has_isdead();
  isdead_ = value;
}

// optional int64 ReliveTick = 14;
inline bool ProtoMerCellInfo::has_relivetick() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProtoMerCellInfo::set_has_relivetick() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProtoMerCellInfo::clear_has_relivetick() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProtoMerCellInfo::clear_relivetick() {
  relivetick_ = GOOGLE_LONGLONG(0);
  clear_has_relivetick();
}
inline ::google::protobuf::int64 ProtoMerCellInfo::relivetick() const {
  return relivetick_;
}
inline void ProtoMerCellInfo::set_relivetick(::google::protobuf::int64 value) {
  set_has_relivetick();
  relivetick_ = value;
}

// optional int32 HpRate = 15;
inline bool ProtoMerCellInfo::has_hprate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProtoMerCellInfo::set_has_hprate() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProtoMerCellInfo::clear_has_hprate() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProtoMerCellInfo::clear_hprate() {
  hprate_ = 0;
  clear_has_hprate();
}
inline ::google::protobuf::int32 ProtoMerCellInfo::hprate() const {
  return hprate_;
}
inline void ProtoMerCellInfo::set_hprate(::google::protobuf::int32 value) {
  set_has_hprate();
  hprate_ = value;
}

// optional uint32 eatFoodId = 16;
inline bool ProtoMerCellInfo::has_eatfoodid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ProtoMerCellInfo::set_has_eatfoodid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ProtoMerCellInfo::clear_has_eatfoodid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ProtoMerCellInfo::clear_eatfoodid() {
  eatfoodid_ = 0u;
  clear_has_eatfoodid();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::eatfoodid() const {
  return eatfoodid_;
}
inline void ProtoMerCellInfo::set_eatfoodid(::google::protobuf::uint32 value) {
  set_has_eatfoodid();
  eatfoodid_ = value;
}

// optional uint32 eatFoodNum = 17;
inline bool ProtoMerCellInfo::has_eatfoodnum() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProtoMerCellInfo::set_has_eatfoodnum() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProtoMerCellInfo::clear_has_eatfoodnum() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProtoMerCellInfo::clear_eatfoodnum() {
  eatfoodnum_ = 0u;
  clear_has_eatfoodnum();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::eatfoodnum() const {
  return eatfoodnum_;
}
inline void ProtoMerCellInfo::set_eatfoodnum(::google::protobuf::uint32 value) {
  set_has_eatfoodnum();
  eatfoodnum_ = value;
}

// repeated uint32 skillbooks = 18;
inline int ProtoMerCellInfo::skillbooks_size() const {
  return skillbooks_.size();
}
inline void ProtoMerCellInfo::clear_skillbooks() {
  skillbooks_.Clear();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::skillbooks(int index) const {
  return skillbooks_.Get(index);
}
inline void ProtoMerCellInfo::set_skillbooks(int index, ::google::protobuf::uint32 value) {
  skillbooks_.Set(index, value);
}
inline void ProtoMerCellInfo::add_skillbooks(::google::protobuf::uint32 value) {
  skillbooks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoMerCellInfo::skillbooks() const {
  return skillbooks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoMerCellInfo::mutable_skillbooks() {
  return &skillbooks_;
}

// optional uint32 ranking = 19;
inline bool ProtoMerCellInfo::has_ranking() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ProtoMerCellInfo::set_has_ranking() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ProtoMerCellInfo::clear_has_ranking() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ProtoMerCellInfo::clear_ranking() {
  ranking_ = 0u;
  clear_has_ranking();
}
inline ::google::protobuf::uint32 ProtoMerCellInfo::ranking() const {
  return ranking_;
}
inline void ProtoMerCellInfo::set_ranking(::google::protobuf::uint32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// ProtoMerAllCellInfo

// repeated .proto.message.ProtoMerCellInfo allInfo = 1;
inline int ProtoMerAllCellInfo::allinfo_size() const {
  return allinfo_.size();
}
inline void ProtoMerAllCellInfo::clear_allinfo() {
  allinfo_.Clear();
}
inline const ::proto::message::ProtoMerCellInfo& ProtoMerAllCellInfo::allinfo(int index) const {
  return allinfo_.Get(index);
}
inline ::proto::message::ProtoMerCellInfo* ProtoMerAllCellInfo::mutable_allinfo(int index) {
  return allinfo_.Mutable(index);
}
inline ::proto::message::ProtoMerCellInfo* ProtoMerAllCellInfo::add_allinfo() {
  return allinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >&
ProtoMerAllCellInfo::allinfo() const {
  return allinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >*
ProtoMerAllCellInfo::mutable_allinfo() {
  return &allinfo_;
}

// optional uint32 AIStatus = 2;
inline bool ProtoMerAllCellInfo::has_aistatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoMerAllCellInfo::set_has_aistatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoMerAllCellInfo::clear_has_aistatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoMerAllCellInfo::clear_aistatus() {
  aistatus_ = 0u;
  clear_has_aistatus();
}
inline ::google::protobuf::uint32 ProtoMerAllCellInfo::aistatus() const {
  return aistatus_;
}
inline void ProtoMerAllCellInfo::set_aistatus(::google::protobuf::uint32 value) {
  set_has_aistatus();
  aistatus_ = value;
}

// -------------------------------------------------------------------

// Mercenary_SC_MercenaryDead

// required uint32 cellId = 1;
inline bool Mercenary_SC_MercenaryDead::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_MercenaryDead::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_MercenaryDead::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_MercenaryDead::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Mercenary_SC_MercenaryDead::cellid() const {
  return cellid_;
}
inline void Mercenary_SC_MercenaryDead::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional int64 ReliveTick = 2;
inline bool Mercenary_SC_MercenaryDead::has_relivetick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_SC_MercenaryDead::set_has_relivetick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_SC_MercenaryDead::clear_has_relivetick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_SC_MercenaryDead::clear_relivetick() {
  relivetick_ = GOOGLE_LONGLONG(0);
  clear_has_relivetick();
}
inline ::google::protobuf::int64 Mercenary_SC_MercenaryDead::relivetick() const {
  return relivetick_;
}
inline void Mercenary_SC_MercenaryDead::set_relivetick(::google::protobuf::int64 value) {
  set_has_relivetick();
  relivetick_ = value;
}

// -------------------------------------------------------------------

// Mercenary_CS_GetMerInfo

// -------------------------------------------------------------------

// Mercenary_SC_GetMerInfo

// repeated .proto.message.ProtoMerCellInfo infoList = 1;
inline int Mercenary_SC_GetMerInfo::infolist_size() const {
  return infolist_.size();
}
inline void Mercenary_SC_GetMerInfo::clear_infolist() {
  infolist_.Clear();
}
inline const ::proto::message::ProtoMerCellInfo& Mercenary_SC_GetMerInfo::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::proto::message::ProtoMerCellInfo* Mercenary_SC_GetMerInfo::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::proto::message::ProtoMerCellInfo* Mercenary_SC_GetMerInfo::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >&
Mercenary_SC_GetMerInfo::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoMerCellInfo >*
Mercenary_SC_GetMerInfo::mutable_infolist() {
  return &infolist_;
}

// repeated int32 generalSkills = 2;
inline int Mercenary_SC_GetMerInfo::generalskills_size() const {
  return generalskills_.size();
}
inline void Mercenary_SC_GetMerInfo::clear_generalskills() {
  generalskills_.Clear();
}
inline ::google::protobuf::int32 Mercenary_SC_GetMerInfo::generalskills(int index) const {
  return generalskills_.Get(index);
}
inline void Mercenary_SC_GetMerInfo::set_generalskills(int index, ::google::protobuf::int32 value) {
  generalskills_.Set(index, value);
}
inline void Mercenary_SC_GetMerInfo::add_generalskills(::google::protobuf::int32 value) {
  generalskills_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Mercenary_SC_GetMerInfo::generalskills() const {
  return generalskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Mercenary_SC_GetMerInfo::mutable_generalskills() {
  return &generalskills_;
}

// -------------------------------------------------------------------

// Mercenary_SC_UpdateSingleMerInfo

// optional .proto.message.ProtoMerCellInfo info = 1;
inline bool Mercenary_SC_UpdateSingleMerInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_UpdateSingleMerInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_UpdateSingleMerInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_UpdateSingleMerInfo::clear_info() {
  if (info_ != NULL) info_->::proto::message::ProtoMerCellInfo::Clear();
  clear_has_info();
}
inline const ::proto::message::ProtoMerCellInfo& Mercenary_SC_UpdateSingleMerInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto::message::ProtoMerCellInfo* Mercenary_SC_UpdateSingleMerInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto::message::ProtoMerCellInfo;
  return info_;
}
inline ::proto::message::ProtoMerCellInfo* Mercenary_SC_UpdateSingleMerInfo::release_info() {
  clear_has_info();
  ::proto::message::ProtoMerCellInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void Mercenary_SC_UpdateSingleMerInfo::set_allocated_info(::proto::message::ProtoMerCellInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// repeated int32 generalSkills = 2;
inline int Mercenary_SC_UpdateSingleMerInfo::generalskills_size() const {
  return generalskills_.size();
}
inline void Mercenary_SC_UpdateSingleMerInfo::clear_generalskills() {
  generalskills_.Clear();
}
inline ::google::protobuf::int32 Mercenary_SC_UpdateSingleMerInfo::generalskills(int index) const {
  return generalskills_.Get(index);
}
inline void Mercenary_SC_UpdateSingleMerInfo::set_generalskills(int index, ::google::protobuf::int32 value) {
  generalskills_.Set(index, value);
}
inline void Mercenary_SC_UpdateSingleMerInfo::add_generalskills(::google::protobuf::int32 value) {
  generalskills_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Mercenary_SC_UpdateSingleMerInfo::generalskills() const {
  return generalskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Mercenary_SC_UpdateSingleMerInfo::mutable_generalskills() {
  return &generalskills_;
}

// -------------------------------------------------------------------

// Mercenary_CS_OperaCell

// required uint32 cellId = 1;
inline bool Mercenary_CS_OperaCell::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_CS_OperaCell::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_CS_OperaCell::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_CS_OperaCell::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Mercenary_CS_OperaCell::cellid() const {
  return cellid_;
}
inline void Mercenary_CS_OperaCell::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint32 operaType = 2;
inline bool Mercenary_CS_OperaCell::has_operatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_CS_OperaCell::set_has_operatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_CS_OperaCell::clear_has_operatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_CS_OperaCell::clear_operatype() {
  operatype_ = 0u;
  clear_has_operatype();
}
inline ::google::protobuf::uint32 Mercenary_CS_OperaCell::operatype() const {
  return operatype_;
}
inline void Mercenary_CS_OperaCell::set_operatype(::google::protobuf::uint32 value) {
  set_has_operatype();
  operatype_ = value;
}

// optional uint32 param = 3;
inline bool Mercenary_CS_OperaCell::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mercenary_CS_OperaCell::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mercenary_CS_OperaCell::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mercenary_CS_OperaCell::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 Mercenary_CS_OperaCell::param() const {
  return param_;
}
inline void Mercenary_CS_OperaCell::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// Mercenary_SC_OperaCell

// required int32 ret = 1;
inline bool Mercenary_SC_OperaCell::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_OperaCell::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_OperaCell::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_OperaCell::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Mercenary_SC_OperaCell::ret() const {
  return ret_;
}
inline void Mercenary_SC_OperaCell::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Mercenary_CS_PutOnMerEquip

// required uint32 cellId = 1;
inline bool Mercenary_CS_PutOnMerEquip::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_CS_PutOnMerEquip::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_CS_PutOnMerEquip::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_CS_PutOnMerEquip::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Mercenary_CS_PutOnMerEquip::cellid() const {
  return cellid_;
}
inline void Mercenary_CS_PutOnMerEquip::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint64 uuid = 2;
inline bool Mercenary_CS_PutOnMerEquip::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_CS_PutOnMerEquip::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_CS_PutOnMerEquip::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_CS_PutOnMerEquip::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Mercenary_CS_PutOnMerEquip::uuid() const {
  return uuid_;
}
inline void Mercenary_CS_PutOnMerEquip::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Mercenary_SC_PutOnMerEquip

// optional int32 result = 1;
inline bool Mercenary_SC_PutOnMerEquip::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_PutOnMerEquip::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_PutOnMerEquip::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_PutOnMerEquip::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Mercenary_SC_PutOnMerEquip::result() const {
  return result_;
}
inline void Mercenary_SC_PutOnMerEquip::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 merCellId = 2;
inline bool Mercenary_SC_PutOnMerEquip::has_mercellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_SC_PutOnMerEquip::set_has_mercellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_SC_PutOnMerEquip::clear_has_mercellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_SC_PutOnMerEquip::clear_mercellid() {
  mercellid_ = 0;
  clear_has_mercellid();
}
inline ::google::protobuf::int32 Mercenary_SC_PutOnMerEquip::mercellid() const {
  return mercellid_;
}
inline void Mercenary_SC_PutOnMerEquip::set_mercellid(::google::protobuf::int32 value) {
  set_has_mercellid();
  mercellid_ = value;
}

// repeated .proto.message.Equip equip_list = 3;
inline int Mercenary_SC_PutOnMerEquip::equip_list_size() const {
  return equip_list_.size();
}
inline void Mercenary_SC_PutOnMerEquip::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::message::Equip& Mercenary_SC_PutOnMerEquip::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline ::proto::message::Equip* Mercenary_SC_PutOnMerEquip::mutable_equip_list(int index) {
  return equip_list_.Mutable(index);
}
inline ::proto::message::Equip* Mercenary_SC_PutOnMerEquip::add_equip_list() {
  return equip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >&
Mercenary_SC_PutOnMerEquip::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::Equip >*
Mercenary_SC_PutOnMerEquip::mutable_equip_list() {
  return &equip_list_;
}

// -------------------------------------------------------------------

// Mercenary_CS_GetOffMerEquip

// optional uint32 cellID = 1;
inline bool Mercenary_CS_GetOffMerEquip::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_CS_GetOffMerEquip::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_CS_GetOffMerEquip::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_CS_GetOffMerEquip::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 Mercenary_CS_GetOffMerEquip::cellid() const {
  return cellid_;
}
inline void Mercenary_CS_GetOffMerEquip::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint64 uuid = 2;
inline bool Mercenary_CS_GetOffMerEquip::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_CS_GetOffMerEquip::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_CS_GetOffMerEquip::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_CS_GetOffMerEquip::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::uint64 Mercenary_CS_GetOffMerEquip::uuid() const {
  return uuid_;
}
inline void Mercenary_CS_GetOffMerEquip::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
}

// -------------------------------------------------------------------

// Mercenary_SC_GetOffMerEquip

// optional int32 result = 1;
inline bool Mercenary_SC_GetOffMerEquip::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_GetOffMerEquip::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_GetOffMerEquip::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_GetOffMerEquip::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Mercenary_SC_GetOffMerEquip::result() const {
  return result_;
}
inline void Mercenary_SC_GetOffMerEquip::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 merCellId = 2;
inline bool Mercenary_SC_GetOffMerEquip::has_mercellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_SC_GetOffMerEquip::set_has_mercellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_SC_GetOffMerEquip::clear_has_mercellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_SC_GetOffMerEquip::clear_mercellid() {
  mercellid_ = 0;
  clear_has_mercellid();
}
inline ::google::protobuf::int32 Mercenary_SC_GetOffMerEquip::mercellid() const {
  return mercellid_;
}
inline void Mercenary_SC_GetOffMerEquip::set_mercellid(::google::protobuf::int32 value) {
  set_has_mercellid();
  mercellid_ = value;
}

// optional .proto.message.Equip equip_list = 3;
inline bool Mercenary_SC_GetOffMerEquip::has_equip_list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mercenary_SC_GetOffMerEquip::set_has_equip_list() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mercenary_SC_GetOffMerEquip::clear_has_equip_list() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mercenary_SC_GetOffMerEquip::clear_equip_list() {
  if (equip_list_ != NULL) equip_list_->::proto::message::Equip::Clear();
  clear_has_equip_list();
}
inline const ::proto::message::Equip& Mercenary_SC_GetOffMerEquip::equip_list() const {
  return equip_list_ != NULL ? *equip_list_ : *default_instance_->equip_list_;
}
inline ::proto::message::Equip* Mercenary_SC_GetOffMerEquip::mutable_equip_list() {
  set_has_equip_list();
  if (equip_list_ == NULL) equip_list_ = new ::proto::message::Equip;
  return equip_list_;
}
inline ::proto::message::Equip* Mercenary_SC_GetOffMerEquip::release_equip_list() {
  clear_has_equip_list();
  ::proto::message::Equip* temp = equip_list_;
  equip_list_ = NULL;
  return temp;
}
inline void Mercenary_SC_GetOffMerEquip::set_allocated_equip_list(::proto::message::Equip* equip_list) {
  delete equip_list_;
  equip_list_ = equip_list;
  if (equip_list) {
    set_has_equip_list();
  } else {
    clear_has_equip_list();
  }
}

// -------------------------------------------------------------------

// Mercenary_CS_UpgSkill

// required int32 skillid = 1;
inline bool Mercenary_CS_UpgSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_CS_UpgSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_CS_UpgSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_CS_UpgSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 Mercenary_CS_UpgSkill::skillid() const {
  return skillid_;
}
inline void Mercenary_CS_UpgSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// Mercenary_SC_UpgSkill

// required int32 ret = 1;
inline bool Mercenary_SC_UpgSkill::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_UpgSkill::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_UpgSkill::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_UpgSkill::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Mercenary_SC_UpgSkill::ret() const {
  return ret_;
}
inline void Mercenary_SC_UpgSkill::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Mercenary_CS_ChangeAI

// required int32 status = 1;
inline bool Mercenary_CS_ChangeAI::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_CS_ChangeAI::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_CS_ChangeAI::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_CS_ChangeAI::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Mercenary_CS_ChangeAI::status() const {
  return status_;
}
inline void Mercenary_CS_ChangeAI::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Mercenary_SC_ChangeAI

// required int32 ret = 1;
inline bool Mercenary_SC_ChangeAI::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mercenary_SC_ChangeAI::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mercenary_SC_ChangeAI::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mercenary_SC_ChangeAI::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Mercenary_SC_ChangeAI::ret() const {
  return ret_;
}
inline void Mercenary_SC_ChangeAI::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required int32 status = 2;
inline bool Mercenary_SC_ChangeAI::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mercenary_SC_ChangeAI::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mercenary_SC_ChangeAI::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mercenary_SC_ChangeAI::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Mercenary_SC_ChangeAI::status() const {
  return status_;
}
inline void Mercenary_SC_ChangeAI::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mercenary_2eproto__INCLUDED
