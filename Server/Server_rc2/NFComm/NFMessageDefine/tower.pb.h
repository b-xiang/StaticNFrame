// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tower.proto

#ifndef PROTOBUF_tower_2eproto__INCLUDED
#define PROTOBUF_tower_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "dungeon.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tower_2eproto();
void protobuf_AssignDesc_tower_2eproto();
void protobuf_ShutdownFile_tower_2eproto();

class TowerRecord;
class Tower_CS_EnterTowerOk;
class Tower_SC_EnterTower;
class Tower_CS_UserBuffer;
class Tower_SC_AddTowerBuffer;
class Tower_SC_DelTowerBuffer;
class Tower_SC_NewFloor;
class Tower_CS_LeaveTower;
class Tower_SC_EndTower;
class Tower_CS_ReqEnterTower;
class Tower_CS_GetTowerInfo;
class Tower_SC_GetTowerInfo;
class Tower_CS_GetTowerRankTime;
class Tower_SC_GetTowerRankTime;

// ===================================================================

class TowerRecord : public ::google::protobuf::Message {
 public:
  TowerRecord();
  virtual ~TowerRecord();

  TowerRecord(const TowerRecord& from);

  inline TowerRecord& operator=(const TowerRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerRecord& default_instance();

  void Swap(TowerRecord* other);

  // implements Message ----------------------------------------------

  TowerRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerRecord& from);
  void MergeFrom(const TowerRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 floor = 1;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 1;
  inline ::google::protobuf::int32 floor() const;
  inline void set_floor(::google::protobuf::int32 value);

  // optional int32 pass_time = 2;
  inline bool has_pass_time() const;
  inline void clear_pass_time();
  static const int kPassTimeFieldNumber = 2;
  inline ::google::protobuf::int32 pass_time() const;
  inline void set_pass_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.TowerRecord)
 private:
  inline void set_has_floor();
  inline void clear_has_floor();
  inline void set_has_pass_time();
  inline void clear_has_pass_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 floor_;
  ::google::protobuf::int32 pass_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static TowerRecord* default_instance_;
};
// -------------------------------------------------------------------

class Tower_CS_EnterTowerOk : public ::google::protobuf::Message {
 public:
  Tower_CS_EnterTowerOk();
  virtual ~Tower_CS_EnterTowerOk();

  Tower_CS_EnterTowerOk(const Tower_CS_EnterTowerOk& from);

  inline Tower_CS_EnterTowerOk& operator=(const Tower_CS_EnterTowerOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_CS_EnterTowerOk& default_instance();

  void Swap(Tower_CS_EnterTowerOk* other);

  // implements Message ----------------------------------------------

  Tower_CS_EnterTowerOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_CS_EnterTowerOk& from);
  void MergeFrom(const Tower_CS_EnterTowerOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Tower_CS_EnterTowerOk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_CS_EnterTowerOk* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_EnterTower : public ::google::protobuf::Message {
 public:
  Tower_SC_EnterTower();
  virtual ~Tower_SC_EnterTower();

  Tower_SC_EnterTower(const Tower_SC_EnterTower& from);

  inline Tower_SC_EnterTower& operator=(const Tower_SC_EnterTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_EnterTower& default_instance();

  void Swap(Tower_SC_EnterTower* other);

  // implements Message ----------------------------------------------

  Tower_SC_EnterTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_EnterTower& from);
  void MergeFrom(const Tower_SC_EnterTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional .proto.message.Point3D pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 team = 5;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 5;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_EnterTower)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::Point3D* pt_;
  ::google::protobuf::uint32 mapid_;
  float dir_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_EnterTower* default_instance_;
};
// -------------------------------------------------------------------

class Tower_CS_UserBuffer : public ::google::protobuf::Message {
 public:
  Tower_CS_UserBuffer();
  virtual ~Tower_CS_UserBuffer();

  Tower_CS_UserBuffer(const Tower_CS_UserBuffer& from);

  inline Tower_CS_UserBuffer& operator=(const Tower_CS_UserBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_CS_UserBuffer& default_instance();

  void Swap(Tower_CS_UserBuffer* other);

  // implements Message ----------------------------------------------

  Tower_CS_UserBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_CS_UserBuffer& from);
  void MergeFrom(const Tower_CS_UserBuffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bufferId = 1;
  inline bool has_bufferid() const;
  inline void clear_bufferid();
  static const int kBufferIdFieldNumber = 1;
  inline ::google::protobuf::uint32 bufferid() const;
  inline void set_bufferid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_CS_UserBuffer)
 private:
  inline void set_has_bufferid();
  inline void clear_has_bufferid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bufferid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_CS_UserBuffer* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_AddTowerBuffer : public ::google::protobuf::Message {
 public:
  Tower_SC_AddTowerBuffer();
  virtual ~Tower_SC_AddTowerBuffer();

  Tower_SC_AddTowerBuffer(const Tower_SC_AddTowerBuffer& from);

  inline Tower_SC_AddTowerBuffer& operator=(const Tower_SC_AddTowerBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_AddTowerBuffer& default_instance();

  void Swap(Tower_SC_AddTowerBuffer* other);

  // implements Message ----------------------------------------------

  Tower_SC_AddTowerBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_AddTowerBuffer& from);
  void MergeFrom(const Tower_SC_AddTowerBuffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bufferId = 1;
  inline bool has_bufferid() const;
  inline void clear_bufferid();
  static const int kBufferIdFieldNumber = 1;
  inline ::google::protobuf::uint32 bufferid() const;
  inline void set_bufferid(::google::protobuf::uint32 value);

  // required uint32 bufferProId = 2;
  inline bool has_bufferproid() const;
  inline void clear_bufferproid();
  static const int kBufferProIdFieldNumber = 2;
  inline ::google::protobuf::uint32 bufferproid() const;
  inline void set_bufferproid(::google::protobuf::uint32 value);

  // optional .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // optional float dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline float dir() const;
  inline void set_dir(float value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_AddTowerBuffer)
 private:
  inline void set_has_bufferid();
  inline void clear_has_bufferid();
  inline void set_has_bufferproid();
  inline void clear_has_bufferproid();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bufferid_;
  ::google::protobuf::uint32 bufferproid_;
  ::proto::message::Point3D* pt_;
  float dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_AddTowerBuffer* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_DelTowerBuffer : public ::google::protobuf::Message {
 public:
  Tower_SC_DelTowerBuffer();
  virtual ~Tower_SC_DelTowerBuffer();

  Tower_SC_DelTowerBuffer(const Tower_SC_DelTowerBuffer& from);

  inline Tower_SC_DelTowerBuffer& operator=(const Tower_SC_DelTowerBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_DelTowerBuffer& default_instance();

  void Swap(Tower_SC_DelTowerBuffer* other);

  // implements Message ----------------------------------------------

  Tower_SC_DelTowerBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_DelTowerBuffer& from);
  void MergeFrom(const Tower_SC_DelTowerBuffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bufferId = 1;
  inline bool has_bufferid() const;
  inline void clear_bufferid();
  static const int kBufferIdFieldNumber = 1;
  inline ::google::protobuf::uint32 bufferid() const;
  inline void set_bufferid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_DelTowerBuffer)
 private:
  inline void set_has_bufferid();
  inline void clear_has_bufferid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bufferid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_DelTowerBuffer* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_NewFloor : public ::google::protobuf::Message {
 public:
  Tower_SC_NewFloor();
  virtual ~Tower_SC_NewFloor();

  Tower_SC_NewFloor(const Tower_SC_NewFloor& from);

  inline Tower_SC_NewFloor& operator=(const Tower_SC_NewFloor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_NewFloor& default_instance();

  void Swap(Tower_SC_NewFloor* other);

  // implements Message ----------------------------------------------

  Tower_SC_NewFloor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_NewFloor& from);
  void MergeFrom(const Tower_SC_NewFloor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 curFloor = 1;
  inline bool has_curfloor() const;
  inline void clear_curfloor();
  static const int kCurFloorFieldNumber = 1;
  inline ::google::protobuf::int32 curfloor() const;
  inline void set_curfloor(::google::protobuf::int32 value);

  // required int32 nPassTime = 2;
  inline bool has_npasstime() const;
  inline void clear_npasstime();
  static const int kNPassTimeFieldNumber = 2;
  inline ::google::protobuf::int32 npasstime() const;
  inline void set_npasstime(::google::protobuf::int32 value);

  // required int32 nBestTime = 3;
  inline bool has_nbesttime() const;
  inline void clear_nbesttime();
  static const int kNBestTimeFieldNumber = 3;
  inline ::google::protobuf::int32 nbesttime() const;
  inline void set_nbesttime(::google::protobuf::int32 value);

  // optional int32 floor_id = 4;
  inline bool has_floor_id() const;
  inline void clear_floor_id();
  static const int kFloorIdFieldNumber = 4;
  inline ::google::protobuf::int32 floor_id() const;
  inline void set_floor_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_NewFloor)
 private:
  inline void set_has_curfloor();
  inline void clear_has_curfloor();
  inline void set_has_npasstime();
  inline void clear_has_npasstime();
  inline void set_has_nbesttime();
  inline void clear_has_nbesttime();
  inline void set_has_floor_id();
  inline void clear_has_floor_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 curfloor_;
  ::google::protobuf::int32 npasstime_;
  ::google::protobuf::int32 nbesttime_;
  ::google::protobuf::int32 floor_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_NewFloor* default_instance_;
};
// -------------------------------------------------------------------

class Tower_CS_LeaveTower : public ::google::protobuf::Message {
 public:
  Tower_CS_LeaveTower();
  virtual ~Tower_CS_LeaveTower();

  Tower_CS_LeaveTower(const Tower_CS_LeaveTower& from);

  inline Tower_CS_LeaveTower& operator=(const Tower_CS_LeaveTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_CS_LeaveTower& default_instance();

  void Swap(Tower_CS_LeaveTower* other);

  // implements Message ----------------------------------------------

  Tower_CS_LeaveTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_CS_LeaveTower& from);
  void MergeFrom(const Tower_CS_LeaveTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Tower_CS_LeaveTower)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_CS_LeaveTower* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_EndTower : public ::google::protobuf::Message {
 public:
  Tower_SC_EndTower();
  virtual ~Tower_SC_EndTower();

  Tower_SC_EndTower(const Tower_SC_EndTower& from);

  inline Tower_SC_EndTower& operator=(const Tower_SC_EndTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_EndTower& default_instance();

  void Swap(Tower_SC_EndTower* other);

  // implements Message ----------------------------------------------

  Tower_SC_EndTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_EndTower& from);
  void MergeFrom(const Tower_SC_EndTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rt = 1;
  inline bool has_rt() const;
  inline void clear_rt();
  static const int kRtFieldNumber = 1;
  inline ::google::protobuf::int32 rt() const;
  inline void set_rt(::google::protobuf::int32 value);

  // optional int32 pass_time = 2;
  inline bool has_pass_time() const;
  inline void clear_pass_time();
  static const int kPassTimeFieldNumber = 2;
  inline ::google::protobuf::int32 pass_time() const;
  inline void set_pass_time(::google::protobuf::int32 value);

  // optional int32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 times = 4;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 4;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // optional int32 floor = 5;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 5;
  inline ::google::protobuf::int32 floor() const;
  inline void set_floor(::google::protobuf::int32 value);

  // optional int32 new_record = 6;
  inline bool has_new_record() const;
  inline void clear_new_record();
  static const int kNewRecordFieldNumber = 6;
  inline ::google::protobuf::int32 new_record() const;
  inline void set_new_record(::google::protobuf::int32 value);

  // repeated .proto.message.RewardItem item_list = 7;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 7;
  inline const ::proto::message::RewardItem& item_list(int index) const;
  inline ::proto::message::RewardItem* mutable_item_list(int index);
  inline ::proto::message::RewardItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RewardItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::RewardItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_EndTower)
 private:
  inline void set_has_rt();
  inline void clear_has_rt();
  inline void set_has_pass_time();
  inline void clear_has_pass_time();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_floor();
  inline void clear_has_floor();
  inline void set_has_new_record();
  inline void clear_has_new_record();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rt_;
  ::google::protobuf::int32 pass_time_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 times_;
  ::google::protobuf::int32 floor_;
  ::google::protobuf::int32 new_record_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::RewardItem > item_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_EndTower* default_instance_;
};
// -------------------------------------------------------------------

class Tower_CS_ReqEnterTower : public ::google::protobuf::Message {
 public:
  Tower_CS_ReqEnterTower();
  virtual ~Tower_CS_ReqEnterTower();

  Tower_CS_ReqEnterTower(const Tower_CS_ReqEnterTower& from);

  inline Tower_CS_ReqEnterTower& operator=(const Tower_CS_ReqEnterTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_CS_ReqEnterTower& default_instance();

  void Swap(Tower_CS_ReqEnterTower* other);

  // implements Message ----------------------------------------------

  Tower_CS_ReqEnterTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_CS_ReqEnterTower& from);
  void MergeFrom(const Tower_CS_ReqEnterTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 activityid = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityidFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // optional int32 nfloor = 2;
  inline bool has_nfloor() const;
  inline void clear_nfloor();
  static const int kNfloorFieldNumber = 2;
  inline ::google::protobuf::int32 nfloor() const;
  inline void set_nfloor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_CS_ReqEnterTower)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_nfloor();
  inline void clear_has_nfloor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 nfloor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_CS_ReqEnterTower* default_instance_;
};
// -------------------------------------------------------------------

class Tower_CS_GetTowerInfo : public ::google::protobuf::Message {
 public:
  Tower_CS_GetTowerInfo();
  virtual ~Tower_CS_GetTowerInfo();

  Tower_CS_GetTowerInfo(const Tower_CS_GetTowerInfo& from);

  inline Tower_CS_GetTowerInfo& operator=(const Tower_CS_GetTowerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_CS_GetTowerInfo& default_instance();

  void Swap(Tower_CS_GetTowerInfo* other);

  // implements Message ----------------------------------------------

  Tower_CS_GetTowerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_CS_GetTowerInfo& from);
  void MergeFrom(const Tower_CS_GetTowerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usual_id = 1;
  inline bool has_usual_id() const;
  inline void clear_usual_id();
  static const int kUsualIdFieldNumber = 1;
  inline ::google::protobuf::int32 usual_id() const;
  inline void set_usual_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_CS_GetTowerInfo)
 private:
  inline void set_has_usual_id();
  inline void clear_has_usual_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usual_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_CS_GetTowerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_GetTowerInfo : public ::google::protobuf::Message {
 public:
  Tower_SC_GetTowerInfo();
  virtual ~Tower_SC_GetTowerInfo();

  Tower_SC_GetTowerInfo(const Tower_SC_GetTowerInfo& from);

  inline Tower_SC_GetTowerInfo& operator=(const Tower_SC_GetTowerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_GetTowerInfo& default_instance();

  void Swap(Tower_SC_GetTowerInfo* other);

  // implements Message ----------------------------------------------

  Tower_SC_GetTowerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_GetTowerInfo& from);
  void MergeFrom(const Tower_SC_GetTowerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usual_id = 1;
  inline bool has_usual_id() const;
  inline void clear_usual_id();
  static const int kUsualIdFieldNumber = 1;
  inline ::google::protobuf::int32 usual_id() const;
  inline void set_usual_id(::google::protobuf::int32 value);

  // repeated .proto.message.TowerRecord tower_list = 2;
  inline int tower_list_size() const;
  inline void clear_tower_list();
  static const int kTowerListFieldNumber = 2;
  inline const ::proto::message::TowerRecord& tower_list(int index) const;
  inline ::proto::message::TowerRecord* mutable_tower_list(int index);
  inline ::proto::message::TowerRecord* add_tower_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TowerRecord >&
      tower_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::TowerRecord >*
      mutable_tower_list();

  // optional int32 times = 3;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_GetTowerInfo)
 private:
  inline void set_has_usual_id();
  inline void clear_has_usual_id();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::TowerRecord > tower_list_;
  ::google::protobuf::int32 usual_id_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_GetTowerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Tower_CS_GetTowerRankTime : public ::google::protobuf::Message {
 public:
  Tower_CS_GetTowerRankTime();
  virtual ~Tower_CS_GetTowerRankTime();

  Tower_CS_GetTowerRankTime(const Tower_CS_GetTowerRankTime& from);

  inline Tower_CS_GetTowerRankTime& operator=(const Tower_CS_GetTowerRankTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_CS_GetTowerRankTime& default_instance();

  void Swap(Tower_CS_GetTowerRankTime* other);

  // implements Message ----------------------------------------------

  Tower_CS_GetTowerRankTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_CS_GetTowerRankTime& from);
  void MergeFrom(const Tower_CS_GetTowerRankTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usual_id = 1;
  inline bool has_usual_id() const;
  inline void clear_usual_id();
  static const int kUsualIdFieldNumber = 1;
  inline ::google::protobuf::int32 usual_id() const;
  inline void set_usual_id(::google::protobuf::int32 value);

  // optional int32 floor = 2;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 2;
  inline ::google::protobuf::int32 floor() const;
  inline void set_floor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_CS_GetTowerRankTime)
 private:
  inline void set_has_usual_id();
  inline void clear_has_usual_id();
  inline void set_has_floor();
  inline void clear_has_floor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usual_id_;
  ::google::protobuf::int32 floor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_CS_GetTowerRankTime* default_instance_;
};
// -------------------------------------------------------------------

class Tower_SC_GetTowerRankTime : public ::google::protobuf::Message {
 public:
  Tower_SC_GetTowerRankTime();
  virtual ~Tower_SC_GetTowerRankTime();

  Tower_SC_GetTowerRankTime(const Tower_SC_GetTowerRankTime& from);

  inline Tower_SC_GetTowerRankTime& operator=(const Tower_SC_GetTowerRankTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tower_SC_GetTowerRankTime& default_instance();

  void Swap(Tower_SC_GetTowerRankTime* other);

  // implements Message ----------------------------------------------

  Tower_SC_GetTowerRankTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tower_SC_GetTowerRankTime& from);
  void MergeFrom(const Tower_SC_GetTowerRankTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usual_id = 1;
  inline bool has_usual_id() const;
  inline void clear_usual_id();
  static const int kUsualIdFieldNumber = 1;
  inline ::google::protobuf::int32 usual_id() const;
  inline void set_usual_id(::google::protobuf::int32 value);

  // optional int32 floor = 2;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 2;
  inline ::google::protobuf::int32 floor() const;
  inline void set_floor(::google::protobuf::int32 value);

  // optional int32 pass_time = 3;
  inline bool has_pass_time() const;
  inline void clear_pass_time();
  static const int kPassTimeFieldNumber = 3;
  inline ::google::protobuf::int32 pass_time() const;
  inline void set_pass_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Tower_SC_GetTowerRankTime)
 private:
  inline void set_has_usual_id();
  inline void clear_has_usual_id();
  inline void set_has_floor();
  inline void clear_has_floor();
  inline void set_has_pass_time();
  inline void clear_has_pass_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usual_id_;
  ::google::protobuf::int32 floor_;
  ::google::protobuf::int32 pass_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static Tower_SC_GetTowerRankTime* default_instance_;
};
// ===================================================================


// ===================================================================

// TowerRecord

// optional int32 floor = 1;
inline bool TowerRecord::has_floor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerRecord::set_has_floor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerRecord::clear_has_floor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerRecord::clear_floor() {
  floor_ = 0;
  clear_has_floor();
}
inline ::google::protobuf::int32 TowerRecord::floor() const {
  return floor_;
}
inline void TowerRecord::set_floor(::google::protobuf::int32 value) {
  set_has_floor();
  floor_ = value;
}

// optional int32 pass_time = 2;
inline bool TowerRecord::has_pass_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerRecord::set_has_pass_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerRecord::clear_has_pass_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerRecord::clear_pass_time() {
  pass_time_ = 0;
  clear_has_pass_time();
}
inline ::google::protobuf::int32 TowerRecord::pass_time() const {
  return pass_time_;
}
inline void TowerRecord::set_pass_time(::google::protobuf::int32 value) {
  set_has_pass_time();
  pass_time_ = value;
}

// -------------------------------------------------------------------

// Tower_CS_EnterTowerOk

// -------------------------------------------------------------------

// Tower_SC_EnterTower

// required uint32 mapid = 1;
inline bool Tower_SC_EnterTower::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_EnterTower::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_EnterTower::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_EnterTower::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 Tower_SC_EnterTower::mapid() const {
  return mapid_;
}
inline void Tower_SC_EnterTower::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto.message.Point3D pt = 2;
inline bool Tower_SC_EnterTower::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_SC_EnterTower::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_SC_EnterTower::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_SC_EnterTower::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Tower_SC_EnterTower::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Tower_SC_EnterTower::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Tower_SC_EnterTower::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Tower_SC_EnterTower::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float dir = 3;
inline bool Tower_SC_EnterTower::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tower_SC_EnterTower::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tower_SC_EnterTower::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tower_SC_EnterTower::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Tower_SC_EnterTower::dir() const {
  return dir_;
}
inline void Tower_SC_EnterTower::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 layer = 4;
inline bool Tower_SC_EnterTower::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Tower_SC_EnterTower::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Tower_SC_EnterTower::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Tower_SC_EnterTower::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 Tower_SC_EnterTower::layer() const {
  return layer_;
}
inline void Tower_SC_EnterTower::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 team = 5;
inline bool Tower_SC_EnterTower::has_team() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Tower_SC_EnterTower::set_has_team() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Tower_SC_EnterTower::clear_has_team() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Tower_SC_EnterTower::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 Tower_SC_EnterTower::team() const {
  return team_;
}
inline void Tower_SC_EnterTower::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// Tower_CS_UserBuffer

// required uint32 bufferId = 1;
inline bool Tower_CS_UserBuffer::has_bufferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_CS_UserBuffer::set_has_bufferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_CS_UserBuffer::clear_has_bufferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_CS_UserBuffer::clear_bufferid() {
  bufferid_ = 0u;
  clear_has_bufferid();
}
inline ::google::protobuf::uint32 Tower_CS_UserBuffer::bufferid() const {
  return bufferid_;
}
inline void Tower_CS_UserBuffer::set_bufferid(::google::protobuf::uint32 value) {
  set_has_bufferid();
  bufferid_ = value;
}

// -------------------------------------------------------------------

// Tower_SC_AddTowerBuffer

// required uint32 bufferId = 1;
inline bool Tower_SC_AddTowerBuffer::has_bufferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_AddTowerBuffer::set_has_bufferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_AddTowerBuffer::clear_has_bufferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_AddTowerBuffer::clear_bufferid() {
  bufferid_ = 0u;
  clear_has_bufferid();
}
inline ::google::protobuf::uint32 Tower_SC_AddTowerBuffer::bufferid() const {
  return bufferid_;
}
inline void Tower_SC_AddTowerBuffer::set_bufferid(::google::protobuf::uint32 value) {
  set_has_bufferid();
  bufferid_ = value;
}

// required uint32 bufferProId = 2;
inline bool Tower_SC_AddTowerBuffer::has_bufferproid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_SC_AddTowerBuffer::set_has_bufferproid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_SC_AddTowerBuffer::clear_has_bufferproid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_SC_AddTowerBuffer::clear_bufferproid() {
  bufferproid_ = 0u;
  clear_has_bufferproid();
}
inline ::google::protobuf::uint32 Tower_SC_AddTowerBuffer::bufferproid() const {
  return bufferproid_;
}
inline void Tower_SC_AddTowerBuffer::set_bufferproid(::google::protobuf::uint32 value) {
  set_has_bufferproid();
  bufferproid_ = value;
}

// optional .proto.message.Point3D pt = 3;
inline bool Tower_SC_AddTowerBuffer::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tower_SC_AddTowerBuffer::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tower_SC_AddTowerBuffer::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tower_SC_AddTowerBuffer::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Tower_SC_AddTowerBuffer::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Tower_SC_AddTowerBuffer::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Tower_SC_AddTowerBuffer::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Tower_SC_AddTowerBuffer::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// optional float dir = 4;
inline bool Tower_SC_AddTowerBuffer::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Tower_SC_AddTowerBuffer::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Tower_SC_AddTowerBuffer::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Tower_SC_AddTowerBuffer::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Tower_SC_AddTowerBuffer::dir() const {
  return dir_;
}
inline void Tower_SC_AddTowerBuffer::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// Tower_SC_DelTowerBuffer

// required uint32 bufferId = 1;
inline bool Tower_SC_DelTowerBuffer::has_bufferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_DelTowerBuffer::set_has_bufferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_DelTowerBuffer::clear_has_bufferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_DelTowerBuffer::clear_bufferid() {
  bufferid_ = 0u;
  clear_has_bufferid();
}
inline ::google::protobuf::uint32 Tower_SC_DelTowerBuffer::bufferid() const {
  return bufferid_;
}
inline void Tower_SC_DelTowerBuffer::set_bufferid(::google::protobuf::uint32 value) {
  set_has_bufferid();
  bufferid_ = value;
}

// -------------------------------------------------------------------

// Tower_SC_NewFloor

// required int32 curFloor = 1;
inline bool Tower_SC_NewFloor::has_curfloor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_NewFloor::set_has_curfloor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_NewFloor::clear_has_curfloor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_NewFloor::clear_curfloor() {
  curfloor_ = 0;
  clear_has_curfloor();
}
inline ::google::protobuf::int32 Tower_SC_NewFloor::curfloor() const {
  return curfloor_;
}
inline void Tower_SC_NewFloor::set_curfloor(::google::protobuf::int32 value) {
  set_has_curfloor();
  curfloor_ = value;
}

// required int32 nPassTime = 2;
inline bool Tower_SC_NewFloor::has_npasstime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_SC_NewFloor::set_has_npasstime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_SC_NewFloor::clear_has_npasstime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_SC_NewFloor::clear_npasstime() {
  npasstime_ = 0;
  clear_has_npasstime();
}
inline ::google::protobuf::int32 Tower_SC_NewFloor::npasstime() const {
  return npasstime_;
}
inline void Tower_SC_NewFloor::set_npasstime(::google::protobuf::int32 value) {
  set_has_npasstime();
  npasstime_ = value;
}

// required int32 nBestTime = 3;
inline bool Tower_SC_NewFloor::has_nbesttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tower_SC_NewFloor::set_has_nbesttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tower_SC_NewFloor::clear_has_nbesttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tower_SC_NewFloor::clear_nbesttime() {
  nbesttime_ = 0;
  clear_has_nbesttime();
}
inline ::google::protobuf::int32 Tower_SC_NewFloor::nbesttime() const {
  return nbesttime_;
}
inline void Tower_SC_NewFloor::set_nbesttime(::google::protobuf::int32 value) {
  set_has_nbesttime();
  nbesttime_ = value;
}

// optional int32 floor_id = 4;
inline bool Tower_SC_NewFloor::has_floor_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Tower_SC_NewFloor::set_has_floor_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Tower_SC_NewFloor::clear_has_floor_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Tower_SC_NewFloor::clear_floor_id() {
  floor_id_ = 0;
  clear_has_floor_id();
}
inline ::google::protobuf::int32 Tower_SC_NewFloor::floor_id() const {
  return floor_id_;
}
inline void Tower_SC_NewFloor::set_floor_id(::google::protobuf::int32 value) {
  set_has_floor_id();
  floor_id_ = value;
}

// -------------------------------------------------------------------

// Tower_CS_LeaveTower

// -------------------------------------------------------------------

// Tower_SC_EndTower

// required int32 rt = 1;
inline bool Tower_SC_EndTower::has_rt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_EndTower::set_has_rt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_EndTower::clear_has_rt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_EndTower::clear_rt() {
  rt_ = 0;
  clear_has_rt();
}
inline ::google::protobuf::int32 Tower_SC_EndTower::rt() const {
  return rt_;
}
inline void Tower_SC_EndTower::set_rt(::google::protobuf::int32 value) {
  set_has_rt();
  rt_ = value;
}

// optional int32 pass_time = 2;
inline bool Tower_SC_EndTower::has_pass_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_SC_EndTower::set_has_pass_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_SC_EndTower::clear_has_pass_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_SC_EndTower::clear_pass_time() {
  pass_time_ = 0;
  clear_has_pass_time();
}
inline ::google::protobuf::int32 Tower_SC_EndTower::pass_time() const {
  return pass_time_;
}
inline void Tower_SC_EndTower::set_pass_time(::google::protobuf::int32 value) {
  set_has_pass_time();
  pass_time_ = value;
}

// optional int32 rank = 3;
inline bool Tower_SC_EndTower::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tower_SC_EndTower::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tower_SC_EndTower::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tower_SC_EndTower::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 Tower_SC_EndTower::rank() const {
  return rank_;
}
inline void Tower_SC_EndTower::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 times = 4;
inline bool Tower_SC_EndTower::has_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Tower_SC_EndTower::set_has_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Tower_SC_EndTower::clear_has_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Tower_SC_EndTower::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 Tower_SC_EndTower::times() const {
  return times_;
}
inline void Tower_SC_EndTower::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// optional int32 floor = 5;
inline bool Tower_SC_EndTower::has_floor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Tower_SC_EndTower::set_has_floor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Tower_SC_EndTower::clear_has_floor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Tower_SC_EndTower::clear_floor() {
  floor_ = 0;
  clear_has_floor();
}
inline ::google::protobuf::int32 Tower_SC_EndTower::floor() const {
  return floor_;
}
inline void Tower_SC_EndTower::set_floor(::google::protobuf::int32 value) {
  set_has_floor();
  floor_ = value;
}

// optional int32 new_record = 6;
inline bool Tower_SC_EndTower::has_new_record() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Tower_SC_EndTower::set_has_new_record() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Tower_SC_EndTower::clear_has_new_record() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Tower_SC_EndTower::clear_new_record() {
  new_record_ = 0;
  clear_has_new_record();
}
inline ::google::protobuf::int32 Tower_SC_EndTower::new_record() const {
  return new_record_;
}
inline void Tower_SC_EndTower::set_new_record(::google::protobuf::int32 value) {
  set_has_new_record();
  new_record_ = value;
}

// repeated .proto.message.RewardItem item_list = 7;
inline int Tower_SC_EndTower::item_list_size() const {
  return item_list_.size();
}
inline void Tower_SC_EndTower::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::message::RewardItem& Tower_SC_EndTower::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::proto::message::RewardItem* Tower_SC_EndTower::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::proto::message::RewardItem* Tower_SC_EndTower::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::RewardItem >&
Tower_SC_EndTower::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::RewardItem >*
Tower_SC_EndTower::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// Tower_CS_ReqEnterTower

// optional int32 activityid = 1;
inline bool Tower_CS_ReqEnterTower::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_CS_ReqEnterTower::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_CS_ReqEnterTower::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_CS_ReqEnterTower::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 Tower_CS_ReqEnterTower::activityid() const {
  return activityid_;
}
inline void Tower_CS_ReqEnterTower::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// optional int32 nfloor = 2;
inline bool Tower_CS_ReqEnterTower::has_nfloor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_CS_ReqEnterTower::set_has_nfloor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_CS_ReqEnterTower::clear_has_nfloor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_CS_ReqEnterTower::clear_nfloor() {
  nfloor_ = 0;
  clear_has_nfloor();
}
inline ::google::protobuf::int32 Tower_CS_ReqEnterTower::nfloor() const {
  return nfloor_;
}
inline void Tower_CS_ReqEnterTower::set_nfloor(::google::protobuf::int32 value) {
  set_has_nfloor();
  nfloor_ = value;
}

// -------------------------------------------------------------------

// Tower_CS_GetTowerInfo

// optional int32 usual_id = 1;
inline bool Tower_CS_GetTowerInfo::has_usual_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_CS_GetTowerInfo::set_has_usual_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_CS_GetTowerInfo::clear_has_usual_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_CS_GetTowerInfo::clear_usual_id() {
  usual_id_ = 0;
  clear_has_usual_id();
}
inline ::google::protobuf::int32 Tower_CS_GetTowerInfo::usual_id() const {
  return usual_id_;
}
inline void Tower_CS_GetTowerInfo::set_usual_id(::google::protobuf::int32 value) {
  set_has_usual_id();
  usual_id_ = value;
}

// -------------------------------------------------------------------

// Tower_SC_GetTowerInfo

// optional int32 usual_id = 1;
inline bool Tower_SC_GetTowerInfo::has_usual_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_GetTowerInfo::set_has_usual_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_GetTowerInfo::clear_has_usual_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_GetTowerInfo::clear_usual_id() {
  usual_id_ = 0;
  clear_has_usual_id();
}
inline ::google::protobuf::int32 Tower_SC_GetTowerInfo::usual_id() const {
  return usual_id_;
}
inline void Tower_SC_GetTowerInfo::set_usual_id(::google::protobuf::int32 value) {
  set_has_usual_id();
  usual_id_ = value;
}

// repeated .proto.message.TowerRecord tower_list = 2;
inline int Tower_SC_GetTowerInfo::tower_list_size() const {
  return tower_list_.size();
}
inline void Tower_SC_GetTowerInfo::clear_tower_list() {
  tower_list_.Clear();
}
inline const ::proto::message::TowerRecord& Tower_SC_GetTowerInfo::tower_list(int index) const {
  return tower_list_.Get(index);
}
inline ::proto::message::TowerRecord* Tower_SC_GetTowerInfo::mutable_tower_list(int index) {
  return tower_list_.Mutable(index);
}
inline ::proto::message::TowerRecord* Tower_SC_GetTowerInfo::add_tower_list() {
  return tower_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::TowerRecord >&
Tower_SC_GetTowerInfo::tower_list() const {
  return tower_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::TowerRecord >*
Tower_SC_GetTowerInfo::mutable_tower_list() {
  return &tower_list_;
}

// optional int32 times = 3;
inline bool Tower_SC_GetTowerInfo::has_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tower_SC_GetTowerInfo::set_has_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tower_SC_GetTowerInfo::clear_has_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tower_SC_GetTowerInfo::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 Tower_SC_GetTowerInfo::times() const {
  return times_;
}
inline void Tower_SC_GetTowerInfo::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// Tower_CS_GetTowerRankTime

// optional int32 usual_id = 1;
inline bool Tower_CS_GetTowerRankTime::has_usual_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_CS_GetTowerRankTime::set_has_usual_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_CS_GetTowerRankTime::clear_has_usual_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_CS_GetTowerRankTime::clear_usual_id() {
  usual_id_ = 0;
  clear_has_usual_id();
}
inline ::google::protobuf::int32 Tower_CS_GetTowerRankTime::usual_id() const {
  return usual_id_;
}
inline void Tower_CS_GetTowerRankTime::set_usual_id(::google::protobuf::int32 value) {
  set_has_usual_id();
  usual_id_ = value;
}

// optional int32 floor = 2;
inline bool Tower_CS_GetTowerRankTime::has_floor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_CS_GetTowerRankTime::set_has_floor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_CS_GetTowerRankTime::clear_has_floor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_CS_GetTowerRankTime::clear_floor() {
  floor_ = 0;
  clear_has_floor();
}
inline ::google::protobuf::int32 Tower_CS_GetTowerRankTime::floor() const {
  return floor_;
}
inline void Tower_CS_GetTowerRankTime::set_floor(::google::protobuf::int32 value) {
  set_has_floor();
  floor_ = value;
}

// -------------------------------------------------------------------

// Tower_SC_GetTowerRankTime

// optional int32 usual_id = 1;
inline bool Tower_SC_GetTowerRankTime::has_usual_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tower_SC_GetTowerRankTime::set_has_usual_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tower_SC_GetTowerRankTime::clear_has_usual_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tower_SC_GetTowerRankTime::clear_usual_id() {
  usual_id_ = 0;
  clear_has_usual_id();
}
inline ::google::protobuf::int32 Tower_SC_GetTowerRankTime::usual_id() const {
  return usual_id_;
}
inline void Tower_SC_GetTowerRankTime::set_usual_id(::google::protobuf::int32 value) {
  set_has_usual_id();
  usual_id_ = value;
}

// optional int32 floor = 2;
inline bool Tower_SC_GetTowerRankTime::has_floor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tower_SC_GetTowerRankTime::set_has_floor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tower_SC_GetTowerRankTime::clear_has_floor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tower_SC_GetTowerRankTime::clear_floor() {
  floor_ = 0;
  clear_has_floor();
}
inline ::google::protobuf::int32 Tower_SC_GetTowerRankTime::floor() const {
  return floor_;
}
inline void Tower_SC_GetTowerRankTime::set_floor(::google::protobuf::int32 value) {
  set_has_floor();
  floor_ = value;
}

// optional int32 pass_time = 3;
inline bool Tower_SC_GetTowerRankTime::has_pass_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tower_SC_GetTowerRankTime::set_has_pass_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tower_SC_GetTowerRankTime::clear_has_pass_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tower_SC_GetTowerRankTime::clear_pass_time() {
  pass_time_ = 0;
  clear_has_pass_time();
}
inline ::google::protobuf::int32 Tower_SC_GetTowerRankTime::pass_time() const {
  return pass_time_;
}
inline void Tower_SC_GetTowerRankTime::set_pass_time(::google::protobuf::int32 value) {
  set_has_pass_time();
  pass_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tower_2eproto__INCLUDED
