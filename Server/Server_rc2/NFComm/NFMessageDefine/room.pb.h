// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#ifndef PROTOBUF_room_2eproto__INCLUDED
#define PROTOBUF_room_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_room_2eproto();
void protobuf_AssignDesc_room_2eproto();
void protobuf_ShutdownFile_room_2eproto();

class ProtoRoomManInfo;
class ProtoRoomInfo;
class Room_SC_UpdateRoomLevelInfo;
class ProtoRoomListRoomInfo;
class ProtoRoomOutObj;
class Room_CS_SetRoomOutObj;
class Room_SC_SetRoomOutObj;
class Room_CS_MatchingQueueInfo;
class Room_SC_MatchingQueueInfo;
class Room_CS_GetRoomList;
class Room_SC_GetRoomList;
class Room_CS_CreateRoom;
class Room_SC_CreateRoom;
class Room_CS_ApplyRoom;
class Room_SC_ApplyRoom;
class Room_CS_RoomQuit;
class Room_SC_RoomQuit;
class Room_CS_RoomAppoint;
class Room_SC_RoomAppoint;
class Room_CS_RoomKick;
class Room_SC_RoomKick;
class Room_CS_TempLeave;
class Room_SC_TempLeave;
class Room_CS_RoomAuto;
class Room_SC_RoomAuto;
class Room_CS_MemberAuto;
class Room_SC_MemberAuto;
class Room_CS_RoomInvite;
class Room_SC_RoomInvite;
class Room_CS_SetRoomBeInvite;
class Room_SC_SetRoomBeInvite;
class Room_CS_SetRoomAllow;
class Room_SC_SetRoomAllow;
class Room_CS_SetRoomAllowOneTime;
class Room_SC_SetRoomAllowOneTime;
class Room_CS_UpdateRoomInfo;
class Room_SC_UpdateRoomInfo;
class Room_SC_UpdateRoomBeInvite;
class Room_SC_UpdateApplyList;
class Room_SC_UpdateRoomMemberTick;
class Room_CS_FollowLeader;
class Room_SC_FollowLeader;
class Room_CS_SummonFollower;
class Room_SC_SummonFollower;
class Room_SC_LeaderSummon;
class Room_CS_SetIgnoreRoomInvite;
class Room_SC_SetIgnoreRoomInvite;
class Room_CS_QueryIgnoreRoomInvite;
class Room_SC_QueryIgnoreRoomInvite;
class Room_SC_ErrorInfo;
class ProtoRoomManHPInfo;
class Room_SC_UpdateCurrentHp;
class Room_CS_RoomReady;
class Room_SC_RoomReady;
class Battle2Game_GetRoomList;

// ===================================================================

class ProtoRoomManInfo : public ::google::protobuf::Message {
 public:
  ProtoRoomManInfo();
  virtual ~ProtoRoomManInfo();

  ProtoRoomManInfo(const ProtoRoomManInfo& from);

  inline ProtoRoomManInfo& operator=(const ProtoRoomManInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRoomManInfo& default_instance();

  void Swap(ProtoRoomManInfo* other);

  // implements Message ----------------------------------------------

  ProtoRoomManInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRoomManInfo& from);
  void MergeFrom(const ProtoRoomManInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required int32 job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline ::google::protobuf::int32 job() const;
  inline void set_job(::google::protobuf::int32 value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated int32 equipID_list = 6;
  inline int equipid_list_size() const;
  inline void clear_equipid_list();
  static const int kEquipIDListFieldNumber = 6;
  inline ::google::protobuf::int32 equipid_list(int index) const;
  inline void set_equipid_list(int index, ::google::protobuf::int32 value);
  inline void add_equipid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equipid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equipid_list();

  // optional uint64 plyuuid = 7;
  inline bool has_plyuuid() const;
  inline void clear_plyuuid();
  static const int kPlyuuidFieldNumber = 7;
  inline ::google::protobuf::uint64 plyuuid() const;
  inline void set_plyuuid(::google::protobuf::uint64 value);

  // optional int32 identity = 8;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 8;
  inline ::google::protobuf::int32 identity() const;
  inline void set_identity(::google::protobuf::int32 value);

  // optional int32 combat = 9;
  inline bool has_combat() const;
  inline void clear_combat();
  static const int kCombatFieldNumber = 9;
  inline ::google::protobuf::int32 combat() const;
  inline void set_combat(::google::protobuf::int32 value);

  // optional bool isReady = 10;
  inline bool has_isready() const;
  inline void clear_isready();
  static const int kIsReadyFieldNumber = 10;
  inline bool isready() const;
  inline void set_isready(bool value);

  // optional int32 Demonhunterlevel = 11;
  inline bool has_demonhunterlevel() const;
  inline void clear_demonhunterlevel();
  static const int kDemonhunterlevelFieldNumber = 11;
  inline ::google::protobuf::int32 demonhunterlevel() const;
  inline void set_demonhunterlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRoomManInfo)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_plyuuid();
  inline void clear_has_plyuuid();
  inline void set_has_identity();
  inline void clear_has_identity();
  inline void set_has_combat();
  inline void clear_has_combat();
  inline void set_has_isready();
  inline void clear_has_isready();
  inline void set_has_demonhunterlevel();
  inline void clear_has_demonhunterlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::int32 job_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 status_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipid_list_;
  ::google::protobuf::uint64 plyuuid_;
  ::google::protobuf::int32 identity_;
  ::google::protobuf::int32 combat_;
  bool isready_;
  ::google::protobuf::int32 demonhunterlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static ProtoRoomManInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRoomInfo : public ::google::protobuf::Message {
 public:
  ProtoRoomInfo();
  virtual ~ProtoRoomInfo();

  ProtoRoomInfo(const ProtoRoomInfo& from);

  inline ProtoRoomInfo& operator=(const ProtoRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRoomInfo& default_instance();

  void Swap(ProtoRoomInfo* other);

  // implements Message ----------------------------------------------

  ProtoRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRoomInfo& from);
  void MergeFrom(const ProtoRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // required int32 numLimit = 2;
  inline bool has_numlimit() const;
  inline void clear_numlimit();
  static const int kNumLimitFieldNumber = 2;
  inline ::google::protobuf::int32 numlimit() const;
  inline void set_numlimit(::google::protobuf::int32 value);

  // optional uint32 leaderId = 3;
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderIdFieldNumber = 3;
  inline ::google::protobuf::uint32 leaderid() const;
  inline void set_leaderid(::google::protobuf::uint32 value);

  // required int32 roomAuto = 4;
  inline bool has_roomauto() const;
  inline void clear_roomauto();
  static const int kRoomAutoFieldNumber = 4;
  inline ::google::protobuf::int32 roomauto() const;
  inline void set_roomauto(::google::protobuf::int32 value);

  // optional .proto.message.ProtoRoomOutObj roomOutObj = 5;
  inline bool has_roomoutobj() const;
  inline void clear_roomoutobj();
  static const int kRoomOutObjFieldNumber = 5;
  inline const ::proto::message::ProtoRoomOutObj& roomoutobj() const;
  inline ::proto::message::ProtoRoomOutObj* mutable_roomoutobj();
  inline ::proto::message::ProtoRoomOutObj* release_roomoutobj();
  inline void set_allocated_roomoutobj(::proto::message::ProtoRoomOutObj* roomoutobj);

  // repeated .proto.message.ProtoRoomManInfo roomManList = 6;
  inline int roommanlist_size() const;
  inline void clear_roommanlist();
  static const int kRoomManListFieldNumber = 6;
  inline const ::proto::message::ProtoRoomManInfo& roommanlist(int index) const;
  inline ::proto::message::ProtoRoomManInfo* mutable_roommanlist(int index);
  inline ::proto::message::ProtoRoomManInfo* add_roommanlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >&
      roommanlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >*
      mutable_roommanlist();

  // optional int32 needCombat = 7;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedCombatFieldNumber = 7;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_numlimit();
  inline void clear_has_numlimit();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_roomauto();
  inline void clear_has_roomauto();
  inline void set_has_roomoutobj();
  inline void clear_has_roomoutobj();
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 numlimit_;
  ::google::protobuf::uint32 leaderid_;
  ::google::protobuf::int32 roomauto_;
  ::proto::message::ProtoRoomOutObj* roomoutobj_;
  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo > roommanlist_;
  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static ProtoRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_UpdateRoomLevelInfo : public ::google::protobuf::Message {
 public:
  Room_SC_UpdateRoomLevelInfo();
  virtual ~Room_SC_UpdateRoomLevelInfo();

  Room_SC_UpdateRoomLevelInfo(const Room_SC_UpdateRoomLevelInfo& from);

  inline Room_SC_UpdateRoomLevelInfo& operator=(const Room_SC_UpdateRoomLevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_UpdateRoomLevelInfo& default_instance();

  void Swap(Room_SC_UpdateRoomLevelInfo* other);

  // implements Message ----------------------------------------------

  Room_SC_UpdateRoomLevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_UpdateRoomLevelInfo& from);
  void MergeFrom(const Room_SC_UpdateRoomLevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::int32 plyid() const;
  inline void set_plyid(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_UpdateRoomLevelInfo)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 plyid_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_UpdateRoomLevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRoomListRoomInfo : public ::google::protobuf::Message {
 public:
  ProtoRoomListRoomInfo();
  virtual ~ProtoRoomListRoomInfo();

  ProtoRoomListRoomInfo(const ProtoRoomListRoomInfo& from);

  inline ProtoRoomListRoomInfo& operator=(const ProtoRoomListRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRoomListRoomInfo& default_instance();

  void Swap(ProtoRoomListRoomInfo* other);

  // implements Message ----------------------------------------------

  ProtoRoomListRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRoomListRoomInfo& from);
  void MergeFrom(const ProtoRoomListRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // required int32 peopleNum = 2;
  inline bool has_peoplenum() const;
  inline void clear_peoplenum();
  static const int kPeopleNumFieldNumber = 2;
  inline ::google::protobuf::int32 peoplenum() const;
  inline void set_peoplenum(::google::protobuf::int32 value);

  // required int32 numLimit = 3;
  inline bool has_numlimit() const;
  inline void clear_numlimit();
  static const int kNumLimitFieldNumber = 3;
  inline ::google::protobuf::int32 numlimit() const;
  inline void set_numlimit(::google::protobuf::int32 value);

  // optional .proto.message.ProtoRoomManInfo leaderInfo = 4;
  inline bool has_leaderinfo() const;
  inline void clear_leaderinfo();
  static const int kLeaderInfoFieldNumber = 4;
  inline const ::proto::message::ProtoRoomManInfo& leaderinfo() const;
  inline ::proto::message::ProtoRoomManInfo* mutable_leaderinfo();
  inline ::proto::message::ProtoRoomManInfo* release_leaderinfo();
  inline void set_allocated_leaderinfo(::proto::message::ProtoRoomManInfo* leaderinfo);

  // optional .proto.message.ProtoRoomOutObj roomOutObj = 5;
  inline bool has_roomoutobj() const;
  inline void clear_roomoutobj();
  static const int kRoomOutObjFieldNumber = 5;
  inline const ::proto::message::ProtoRoomOutObj& roomoutobj() const;
  inline ::proto::message::ProtoRoomOutObj* mutable_roomoutobj();
  inline ::proto::message::ProtoRoomOutObj* release_roomoutobj();
  inline void set_allocated_roomoutobj(::proto::message::ProtoRoomOutObj* roomoutobj);

  // optional int32 totalCombat = 6;
  inline bool has_totalcombat() const;
  inline void clear_totalcombat();
  static const int kTotalCombatFieldNumber = 6;
  inline ::google::protobuf::int32 totalcombat() const;
  inline void set_totalcombat(::google::protobuf::int32 value);

  // optional int32 leaderCombat = 7;
  inline bool has_leadercombat() const;
  inline void clear_leadercombat();
  static const int kLeaderCombatFieldNumber = 7;
  inline ::google::protobuf::int32 leadercombat() const;
  inline void set_leadercombat(::google::protobuf::int32 value);

  // optional int32 needCombat = 8;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedCombatFieldNumber = 8;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRoomListRoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_peoplenum();
  inline void clear_has_peoplenum();
  inline void set_has_numlimit();
  inline void clear_has_numlimit();
  inline void set_has_leaderinfo();
  inline void clear_has_leaderinfo();
  inline void set_has_roomoutobj();
  inline void clear_has_roomoutobj();
  inline void set_has_totalcombat();
  inline void clear_has_totalcombat();
  inline void set_has_leadercombat();
  inline void clear_has_leadercombat();
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 peoplenum_;
  ::proto::message::ProtoRoomManInfo* leaderinfo_;
  ::google::protobuf::int32 numlimit_;
  ::google::protobuf::int32 totalcombat_;
  ::proto::message::ProtoRoomOutObj* roomoutobj_;
  ::google::protobuf::int32 leadercombat_;
  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static ProtoRoomListRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRoomOutObj : public ::google::protobuf::Message {
 public:
  ProtoRoomOutObj();
  virtual ~ProtoRoomOutObj();

  ProtoRoomOutObj(const ProtoRoomOutObj& from);

  inline ProtoRoomOutObj& operator=(const ProtoRoomOutObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRoomOutObj& default_instance();

  void Swap(ProtoRoomOutObj* other);

  // implements Message ----------------------------------------------

  ProtoRoomOutObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRoomOutObj& from);
  void MergeFrom(const ProtoRoomOutObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // required int32 levelMin = 2;
  inline bool has_levelmin() const;
  inline void clear_levelmin();
  static const int kLevelMinFieldNumber = 2;
  inline ::google::protobuf::int32 levelmin() const;
  inline void set_levelmin(::google::protobuf::int32 value);

  // required int32 levelMax = 3;
  inline bool has_levelmax() const;
  inline void clear_levelmax();
  static const int kLevelMaxFieldNumber = 3;
  inline ::google::protobuf::int32 levelmax() const;
  inline void set_levelmax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRoomOutObj)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();
  inline void set_has_levelmin();
  inline void clear_has_levelmin();
  inline void set_has_levelmax();
  inline void clear_has_levelmax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obj_;
  ::google::protobuf::int32 levelmin_;
  ::google::protobuf::int32 levelmax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static ProtoRoomOutObj* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_SetRoomOutObj : public ::google::protobuf::Message {
 public:
  Room_CS_SetRoomOutObj();
  virtual ~Room_CS_SetRoomOutObj();

  Room_CS_SetRoomOutObj(const Room_CS_SetRoomOutObj& from);

  inline Room_CS_SetRoomOutObj& operator=(const Room_CS_SetRoomOutObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_SetRoomOutObj& default_instance();

  void Swap(Room_CS_SetRoomOutObj* other);

  // implements Message ----------------------------------------------

  Room_CS_SetRoomOutObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_SetRoomOutObj& from);
  void MergeFrom(const Room_CS_SetRoomOutObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.message.ProtoRoomOutObj obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline const ::proto::message::ProtoRoomOutObj& obj() const;
  inline ::proto::message::ProtoRoomOutObj* mutable_obj();
  inline ::proto::message::ProtoRoomOutObj* release_obj();
  inline void set_allocated_obj(::proto::message::ProtoRoomOutObj* obj);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_SetRoomOutObj)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoRoomOutObj* obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_SetRoomOutObj* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_SetRoomOutObj : public ::google::protobuf::Message {
 public:
  Room_SC_SetRoomOutObj();
  virtual ~Room_SC_SetRoomOutObj();

  Room_SC_SetRoomOutObj(const Room_SC_SetRoomOutObj& from);

  inline Room_SC_SetRoomOutObj& operator=(const Room_SC_SetRoomOutObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_SetRoomOutObj& default_instance();

  void Swap(Room_SC_SetRoomOutObj* other);

  // implements Message ----------------------------------------------

  Room_SC_SetRoomOutObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_SetRoomOutObj& from);
  void MergeFrom(const Room_SC_SetRoomOutObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_SetRoomOutObj)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_SetRoomOutObj* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_MatchingQueueInfo : public ::google::protobuf::Message {
 public:
  Room_CS_MatchingQueueInfo();
  virtual ~Room_CS_MatchingQueueInfo();

  Room_CS_MatchingQueueInfo(const Room_CS_MatchingQueueInfo& from);

  inline Room_CS_MatchingQueueInfo& operator=(const Room_CS_MatchingQueueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_MatchingQueueInfo& default_instance();

  void Swap(Room_CS_MatchingQueueInfo* other);

  // implements Message ----------------------------------------------

  Room_CS_MatchingQueueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_MatchingQueueInfo& from);
  void MergeFrom(const Room_CS_MatchingQueueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_MatchingQueueInfo)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_MatchingQueueInfo* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_MatchingQueueInfo : public ::google::protobuf::Message {
 public:
  Room_SC_MatchingQueueInfo();
  virtual ~Room_SC_MatchingQueueInfo();

  Room_SC_MatchingQueueInfo(const Room_SC_MatchingQueueInfo& from);

  inline Room_SC_MatchingQueueInfo& operator=(const Room_SC_MatchingQueueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_MatchingQueueInfo& default_instance();

  void Swap(Room_SC_MatchingQueueInfo* other);

  // implements Message ----------------------------------------------

  Room_SC_MatchingQueueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_MatchingQueueInfo& from);
  void MergeFrom(const Room_SC_MatchingQueueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nRoomNum = 1;
  inline bool has_nroomnum() const;
  inline void clear_nroomnum();
  static const int kNRoomNumFieldNumber = 1;
  inline ::google::protobuf::int32 nroomnum() const;
  inline void set_nroomnum(::google::protobuf::int32 value);

  // required int32 nSingleNum = 2;
  inline bool has_nsinglenum() const;
  inline void clear_nsinglenum();
  static const int kNSingleNumFieldNumber = 2;
  inline ::google::protobuf::int32 nsinglenum() const;
  inline void set_nsinglenum(::google::protobuf::int32 value);

  // required int32 obj = 3;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 3;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_MatchingQueueInfo)
 private:
  inline void set_has_nroomnum();
  inline void clear_has_nroomnum();
  inline void set_has_nsinglenum();
  inline void clear_has_nsinglenum();
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nroomnum_;
  ::google::protobuf::int32 nsinglenum_;
  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_MatchingQueueInfo* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_GetRoomList : public ::google::protobuf::Message {
 public:
  Room_CS_GetRoomList();
  virtual ~Room_CS_GetRoomList();

  Room_CS_GetRoomList(const Room_CS_GetRoomList& from);

  inline Room_CS_GetRoomList& operator=(const Room_CS_GetRoomList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_GetRoomList& default_instance();

  void Swap(Room_CS_GetRoomList* other);

  // implements Message ----------------------------------------------

  Room_CS_GetRoomList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_GetRoomList& from);
  void MergeFrom(const Room_CS_GetRoomList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obj = 1;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 1;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_GetRoomList)
 private:
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_GetRoomList* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_GetRoomList : public ::google::protobuf::Message {
 public:
  Room_SC_GetRoomList();
  virtual ~Room_SC_GetRoomList();

  Room_SC_GetRoomList(const Room_SC_GetRoomList& from);

  inline Room_SC_GetRoomList& operator=(const Room_SC_GetRoomList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_GetRoomList& default_instance();

  void Swap(Room_SC_GetRoomList* other);

  // implements Message ----------------------------------------------

  Room_SC_GetRoomList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_GetRoomList& from);
  void MergeFrom(const Room_SC_GetRoomList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoRoomListRoomInfo roomInfo = 2;
  inline int roominfo_size() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 2;
  inline const ::proto::message::ProtoRoomListRoomInfo& roominfo(int index) const;
  inline ::proto::message::ProtoRoomListRoomInfo* mutable_roominfo(int index);
  inline ::proto::message::ProtoRoomListRoomInfo* add_roominfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >&
      roominfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >*
      mutable_roominfo();

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_GetRoomList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo > roominfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_GetRoomList* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_CreateRoom : public ::google::protobuf::Message {
 public:
  Room_CS_CreateRoom();
  virtual ~Room_CS_CreateRoom();

  Room_CS_CreateRoom(const Room_CS_CreateRoom& from);

  inline Room_CS_CreateRoom& operator=(const Room_CS_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_CreateRoom& default_instance();

  void Swap(Room_CS_CreateRoom* other);

  // implements Message ----------------------------------------------

  Room_CS_CreateRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_CreateRoom& from);
  void MergeFrom(const Room_CS_CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 needCombat = 1;
  inline bool has_needcombat() const;
  inline void clear_needcombat();
  static const int kNeedCombatFieldNumber = 1;
  inline ::google::protobuf::int32 needcombat() const;
  inline void set_needcombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_CreateRoom)
 private:
  inline void set_has_needcombat();
  inline void clear_has_needcombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 needcombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_CreateRoom* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_CreateRoom : public ::google::protobuf::Message {
 public:
  Room_SC_CreateRoom();
  virtual ~Room_SC_CreateRoom();

  Room_SC_CreateRoom(const Room_SC_CreateRoom& from);

  inline Room_SC_CreateRoom& operator=(const Room_SC_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_CreateRoom& default_instance();

  void Swap(Room_SC_CreateRoom* other);

  // implements Message ----------------------------------------------

  Room_SC_CreateRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_CreateRoom& from);
  void MergeFrom(const Room_SC_CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_CreateRoom)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_CreateRoom* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_ApplyRoom : public ::google::protobuf::Message {
 public:
  Room_CS_ApplyRoom();
  virtual ~Room_CS_ApplyRoom();

  Room_CS_ApplyRoom(const Room_CS_ApplyRoom& from);

  inline Room_CS_ApplyRoom& operator=(const Room_CS_ApplyRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_ApplyRoom& default_instance();

  void Swap(Room_CS_ApplyRoom* other);

  // implements Message ----------------------------------------------

  Room_CS_ApplyRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_ApplyRoom& from);
  void MergeFrom(const Room_CS_ApplyRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_ApplyRoom)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_ApplyRoom* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_ApplyRoom : public ::google::protobuf::Message {
 public:
  Room_SC_ApplyRoom();
  virtual ~Room_SC_ApplyRoom();

  Room_SC_ApplyRoom(const Room_SC_ApplyRoom& from);

  inline Room_SC_ApplyRoom& operator=(const Room_SC_ApplyRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_ApplyRoom& default_instance();

  void Swap(Room_SC_ApplyRoom* other);

  // implements Message ----------------------------------------------

  Room_SC_ApplyRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_ApplyRoom& from);
  void MergeFrom(const Room_SC_ApplyRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_ApplyRoom)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_ApplyRoom* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_RoomQuit : public ::google::protobuf::Message {
 public:
  Room_CS_RoomQuit();
  virtual ~Room_CS_RoomQuit();

  Room_CS_RoomQuit(const Room_CS_RoomQuit& from);

  inline Room_CS_RoomQuit& operator=(const Room_CS_RoomQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_RoomQuit& default_instance();

  void Swap(Room_CS_RoomQuit* other);

  // implements Message ----------------------------------------------

  Room_CS_RoomQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_RoomQuit& from);
  void MergeFrom(const Room_CS_RoomQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_RoomQuit)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_RoomQuit* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_RoomQuit : public ::google::protobuf::Message {
 public:
  Room_SC_RoomQuit();
  virtual ~Room_SC_RoomQuit();

  Room_SC_RoomQuit(const Room_SC_RoomQuit& from);

  inline Room_SC_RoomQuit& operator=(const Room_SC_RoomQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_RoomQuit& default_instance();

  void Swap(Room_SC_RoomQuit* other);

  // implements Message ----------------------------------------------

  Room_SC_RoomQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_RoomQuit& from);
  void MergeFrom(const Room_SC_RoomQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_RoomQuit)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_RoomQuit* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_RoomAppoint : public ::google::protobuf::Message {
 public:
  Room_CS_RoomAppoint();
  virtual ~Room_CS_RoomAppoint();

  Room_CS_RoomAppoint(const Room_CS_RoomAppoint& from);

  inline Room_CS_RoomAppoint& operator=(const Room_CS_RoomAppoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_RoomAppoint& default_instance();

  void Swap(Room_CS_RoomAppoint* other);

  // implements Message ----------------------------------------------

  Room_CS_RoomAppoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_RoomAppoint& from);
  void MergeFrom(const Room_CS_RoomAppoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required int32 appoint = 2;
  inline bool has_appoint() const;
  inline void clear_appoint();
  static const int kAppointFieldNumber = 2;
  inline ::google::protobuf::int32 appoint() const;
  inline void set_appoint(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_RoomAppoint)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_appoint();
  inline void clear_has_appoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::int32 appoint_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_RoomAppoint* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_RoomAppoint : public ::google::protobuf::Message {
 public:
  Room_SC_RoomAppoint();
  virtual ~Room_SC_RoomAppoint();

  Room_SC_RoomAppoint(const Room_SC_RoomAppoint& from);

  inline Room_SC_RoomAppoint& operator=(const Room_SC_RoomAppoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_RoomAppoint& default_instance();

  void Swap(Room_SC_RoomAppoint* other);

  // implements Message ----------------------------------------------

  Room_SC_RoomAppoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_RoomAppoint& from);
  void MergeFrom(const Room_SC_RoomAppoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_RoomAppoint)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_RoomAppoint* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_RoomKick : public ::google::protobuf::Message {
 public:
  Room_CS_RoomKick();
  virtual ~Room_CS_RoomKick();

  Room_CS_RoomKick(const Room_CS_RoomKick& from);

  inline Room_CS_RoomKick& operator=(const Room_CS_RoomKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_RoomKick& default_instance();

  void Swap(Room_CS_RoomKick* other);

  // implements Message ----------------------------------------------

  Room_CS_RoomKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_RoomKick& from);
  void MergeFrom(const Room_CS_RoomKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_RoomKick)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_RoomKick* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_RoomKick : public ::google::protobuf::Message {
 public:
  Room_SC_RoomKick();
  virtual ~Room_SC_RoomKick();

  Room_SC_RoomKick(const Room_SC_RoomKick& from);

  inline Room_SC_RoomKick& operator=(const Room_SC_RoomKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_RoomKick& default_instance();

  void Swap(Room_SC_RoomKick* other);

  // implements Message ----------------------------------------------

  Room_SC_RoomKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_RoomKick& from);
  void MergeFrom(const Room_SC_RoomKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string beKickName = 2;
  inline bool has_bekickname() const;
  inline void clear_bekickname();
  static const int kBeKickNameFieldNumber = 2;
  inline const ::std::string& bekickname() const;
  inline void set_bekickname(const ::std::string& value);
  inline void set_bekickname(const char* value);
  inline void set_bekickname(const char* value, size_t size);
  inline ::std::string* mutable_bekickname();
  inline ::std::string* release_bekickname();
  inline void set_allocated_bekickname(::std::string* bekickname);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_RoomKick)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_bekickname();
  inline void clear_has_bekickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* bekickname_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_RoomKick* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_TempLeave : public ::google::protobuf::Message {
 public:
  Room_CS_TempLeave();
  virtual ~Room_CS_TempLeave();

  Room_CS_TempLeave(const Room_CS_TempLeave& from);

  inline Room_CS_TempLeave& operator=(const Room_CS_TempLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_TempLeave& default_instance();

  void Swap(Room_CS_TempLeave* other);

  // implements Message ----------------------------------------------

  Room_CS_TempLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_TempLeave& from);
  void MergeFrom(const Room_CS_TempLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_TempLeave)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_TempLeave* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_TempLeave : public ::google::protobuf::Message {
 public:
  Room_SC_TempLeave();
  virtual ~Room_SC_TempLeave();

  Room_SC_TempLeave(const Room_SC_TempLeave& from);

  inline Room_SC_TempLeave& operator=(const Room_SC_TempLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_TempLeave& default_instance();

  void Swap(Room_SC_TempLeave* other);

  // implements Message ----------------------------------------------

  Room_SC_TempLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_TempLeave& from);
  void MergeFrom(const Room_SC_TempLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_TempLeave)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_TempLeave* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_RoomAuto : public ::google::protobuf::Message {
 public:
  Room_CS_RoomAuto();
  virtual ~Room_CS_RoomAuto();

  Room_CS_RoomAuto(const Room_CS_RoomAuto& from);

  inline Room_CS_RoomAuto& operator=(const Room_CS_RoomAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_RoomAuto& default_instance();

  void Swap(Room_CS_RoomAuto* other);

  // implements Message ----------------------------------------------

  Room_CS_RoomAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_RoomAuto& from);
  void MergeFrom(const Room_CS_RoomAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isAuto = 1;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsAutoFieldNumber = 1;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_RoomAuto)
 private:
  inline void set_has_isauto();
  inline void clear_has_isauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_RoomAuto* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_RoomAuto : public ::google::protobuf::Message {
 public:
  Room_SC_RoomAuto();
  virtual ~Room_SC_RoomAuto();

  Room_SC_RoomAuto(const Room_SC_RoomAuto& from);

  inline Room_SC_RoomAuto& operator=(const Room_SC_RoomAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_RoomAuto& default_instance();

  void Swap(Room_SC_RoomAuto* other);

  // implements Message ----------------------------------------------

  Room_SC_RoomAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_RoomAuto& from);
  void MergeFrom(const Room_SC_RoomAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_RoomAuto)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_RoomAuto* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_MemberAuto : public ::google::protobuf::Message {
 public:
  Room_CS_MemberAuto();
  virtual ~Room_CS_MemberAuto();

  Room_CS_MemberAuto(const Room_CS_MemberAuto& from);

  inline Room_CS_MemberAuto& operator=(const Room_CS_MemberAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_MemberAuto& default_instance();

  void Swap(Room_CS_MemberAuto* other);

  // implements Message ----------------------------------------------

  Room_CS_MemberAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_MemberAuto& from);
  void MergeFrom(const Room_CS_MemberAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isAuto = 1;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsAutoFieldNumber = 1;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // required int32 obj = 2;
  inline bool has_obj() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 2;
  inline ::google::protobuf::int32 obj() const;
  inline void set_obj(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_MemberAuto)
 private:
  inline void set_has_isauto();
  inline void clear_has_isauto();
  inline void set_has_obj();
  inline void clear_has_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isauto_;
  ::google::protobuf::int32 obj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_MemberAuto* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_MemberAuto : public ::google::protobuf::Message {
 public:
  Room_SC_MemberAuto();
  virtual ~Room_SC_MemberAuto();

  Room_SC_MemberAuto(const Room_SC_MemberAuto& from);

  inline Room_SC_MemberAuto& operator=(const Room_SC_MemberAuto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_MemberAuto& default_instance();

  void Swap(Room_SC_MemberAuto* other);

  // implements Message ----------------------------------------------

  Room_SC_MemberAuto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_MemberAuto& from);
  void MergeFrom(const Room_SC_MemberAuto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 isAuto = 2;
  inline bool has_isauto() const;
  inline void clear_isauto();
  static const int kIsAutoFieldNumber = 2;
  inline ::google::protobuf::int32 isauto() const;
  inline void set_isauto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_MemberAuto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_isauto();
  inline void clear_has_isauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 isauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_MemberAuto* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_RoomInvite : public ::google::protobuf::Message {
 public:
  Room_CS_RoomInvite();
  virtual ~Room_CS_RoomInvite();

  Room_CS_RoomInvite(const Room_CS_RoomInvite& from);

  inline Room_CS_RoomInvite& operator=(const Room_CS_RoomInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_RoomInvite& default_instance();

  void Swap(Room_CS_RoomInvite* other);

  // implements Message ----------------------------------------------

  Room_CS_RoomInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_RoomInvite& from);
  void MergeFrom(const Room_CS_RoomInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 plyid() const;
  inline void set_plyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_RoomInvite)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 plyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_RoomInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_RoomInvite : public ::google::protobuf::Message {
 public:
  Room_SC_RoomInvite();
  virtual ~Room_SC_RoomInvite();

  Room_SC_RoomInvite(const Room_SC_RoomInvite& from);

  inline Room_SC_RoomInvite& operator=(const Room_SC_RoomInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_RoomInvite& default_instance();

  void Swap(Room_SC_RoomInvite* other);

  // implements Message ----------------------------------------------

  Room_SC_RoomInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_RoomInvite& from);
  void MergeFrom(const Room_SC_RoomInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_RoomInvite)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_RoomInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_SetRoomBeInvite : public ::google::protobuf::Message {
 public:
  Room_CS_SetRoomBeInvite();
  virtual ~Room_CS_SetRoomBeInvite();

  Room_CS_SetRoomBeInvite(const Room_CS_SetRoomBeInvite& from);

  inline Room_CS_SetRoomBeInvite& operator=(const Room_CS_SetRoomBeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_SetRoomBeInvite& default_instance();

  void Swap(Room_CS_SetRoomBeInvite* other);

  // implements Message ----------------------------------------------

  Room_CS_SetRoomBeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_SetRoomBeInvite& from);
  void MergeFrom(const Room_CS_SetRoomBeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // required int32 roomId = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_SetRoomBeInvite)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_SetRoomBeInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_SetRoomBeInvite : public ::google::protobuf::Message {
 public:
  Room_SC_SetRoomBeInvite();
  virtual ~Room_SC_SetRoomBeInvite();

  Room_SC_SetRoomBeInvite(const Room_SC_SetRoomBeInvite& from);

  inline Room_SC_SetRoomBeInvite& operator=(const Room_SC_SetRoomBeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_SetRoomBeInvite& default_instance();

  void Swap(Room_SC_SetRoomBeInvite* other);

  // implements Message ----------------------------------------------

  Room_SC_SetRoomBeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_SetRoomBeInvite& from);
  void MergeFrom(const Room_SC_SetRoomBeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_SetRoomBeInvite)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_SetRoomBeInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_SetRoomAllow : public ::google::protobuf::Message {
 public:
  Room_CS_SetRoomAllow();
  virtual ~Room_CS_SetRoomAllow();

  Room_CS_SetRoomAllow(const Room_CS_SetRoomAllow& from);

  inline Room_CS_SetRoomAllow& operator=(const Room_CS_SetRoomAllow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_SetRoomAllow& default_instance();

  void Swap(Room_CS_SetRoomAllow* other);

  // implements Message ----------------------------------------------

  Room_CS_SetRoomAllow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_SetRoomAllow& from);
  void MergeFrom(const Room_CS_SetRoomAllow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required bool allow = 2;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 2;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_SetRoomAllow)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_SetRoomAllow* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_SetRoomAllow : public ::google::protobuf::Message {
 public:
  Room_SC_SetRoomAllow();
  virtual ~Room_SC_SetRoomAllow();

  Room_SC_SetRoomAllow(const Room_SC_SetRoomAllow& from);

  inline Room_SC_SetRoomAllow& operator=(const Room_SC_SetRoomAllow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_SetRoomAllow& default_instance();

  void Swap(Room_SC_SetRoomAllow* other);

  // implements Message ----------------------------------------------

  Room_SC_SetRoomAllow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_SetRoomAllow& from);
  void MergeFrom(const Room_SC_SetRoomAllow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_SetRoomAllow)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_SetRoomAllow* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_SetRoomAllowOneTime : public ::google::protobuf::Message {
 public:
  Room_CS_SetRoomAllowOneTime();
  virtual ~Room_CS_SetRoomAllowOneTime();

  Room_CS_SetRoomAllowOneTime(const Room_CS_SetRoomAllowOneTime& from);

  inline Room_CS_SetRoomAllowOneTime& operator=(const Room_CS_SetRoomAllowOneTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_SetRoomAllowOneTime& default_instance();

  void Swap(Room_CS_SetRoomAllowOneTime* other);

  // implements Message ----------------------------------------------

  Room_CS_SetRoomAllowOneTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_SetRoomAllowOneTime& from);
  void MergeFrom(const Room_CS_SetRoomAllowOneTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_SetRoomAllowOneTime)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_SetRoomAllowOneTime* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_SetRoomAllowOneTime : public ::google::protobuf::Message {
 public:
  Room_SC_SetRoomAllowOneTime();
  virtual ~Room_SC_SetRoomAllowOneTime();

  Room_SC_SetRoomAllowOneTime(const Room_SC_SetRoomAllowOneTime& from);

  inline Room_SC_SetRoomAllowOneTime& operator=(const Room_SC_SetRoomAllowOneTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_SetRoomAllowOneTime& default_instance();

  void Swap(Room_SC_SetRoomAllowOneTime* other);

  // implements Message ----------------------------------------------

  Room_SC_SetRoomAllowOneTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_SetRoomAllowOneTime& from);
  void MergeFrom(const Room_SC_SetRoomAllowOneTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_SetRoomAllowOneTime)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_SetRoomAllowOneTime* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_UpdateRoomInfo : public ::google::protobuf::Message {
 public:
  Room_CS_UpdateRoomInfo();
  virtual ~Room_CS_UpdateRoomInfo();

  Room_CS_UpdateRoomInfo(const Room_CS_UpdateRoomInfo& from);

  inline Room_CS_UpdateRoomInfo& operator=(const Room_CS_UpdateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_UpdateRoomInfo& default_instance();

  void Swap(Room_CS_UpdateRoomInfo* other);

  // implements Message ----------------------------------------------

  Room_CS_UpdateRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_UpdateRoomInfo& from);
  void MergeFrom(const Room_CS_UpdateRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_UpdateRoomInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_UpdateRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_UpdateRoomInfo : public ::google::protobuf::Message {
 public:
  Room_SC_UpdateRoomInfo();
  virtual ~Room_SC_UpdateRoomInfo();

  Room_SC_UpdateRoomInfo(const Room_SC_UpdateRoomInfo& from);

  inline Room_SC_UpdateRoomInfo& operator=(const Room_SC_UpdateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_UpdateRoomInfo& default_instance();

  void Swap(Room_SC_UpdateRoomInfo* other);

  // implements Message ----------------------------------------------

  Room_SC_UpdateRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_UpdateRoomInfo& from);
  void MergeFrom(const Room_SC_UpdateRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.ProtoRoomInfo roomInfo = 1;
  inline bool has_roominfo() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::proto::message::ProtoRoomInfo& roominfo() const;
  inline ::proto::message::ProtoRoomInfo* mutable_roominfo();
  inline ::proto::message::ProtoRoomInfo* release_roominfo();
  inline void set_allocated_roominfo(::proto::message::ProtoRoomInfo* roominfo);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_UpdateRoomInfo)
 private:
  inline void set_has_roominfo();
  inline void clear_has_roominfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::message::ProtoRoomInfo* roominfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_UpdateRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_UpdateRoomBeInvite : public ::google::protobuf::Message {
 public:
  Room_SC_UpdateRoomBeInvite();
  virtual ~Room_SC_UpdateRoomBeInvite();

  Room_SC_UpdateRoomBeInvite(const Room_SC_UpdateRoomBeInvite& from);

  inline Room_SC_UpdateRoomBeInvite& operator=(const Room_SC_UpdateRoomBeInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_UpdateRoomBeInvite& default_instance();

  void Swap(Room_SC_UpdateRoomBeInvite* other);

  // implements Message ----------------------------------------------

  Room_SC_UpdateRoomBeInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_UpdateRoomBeInvite& from);
  void MergeFrom(const Room_SC_UpdateRoomBeInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_UpdateRoomBeInvite)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_UpdateRoomBeInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_UpdateApplyList : public ::google::protobuf::Message {
 public:
  Room_SC_UpdateApplyList();
  virtual ~Room_SC_UpdateApplyList();

  Room_SC_UpdateApplyList(const Room_SC_UpdateApplyList& from);

  inline Room_SC_UpdateApplyList& operator=(const Room_SC_UpdateApplyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_UpdateApplyList& default_instance();

  void Swap(Room_SC_UpdateApplyList* other);

  // implements Message ----------------------------------------------

  Room_SC_UpdateApplyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_UpdateApplyList& from);
  void MergeFrom(const Room_SC_UpdateApplyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoRoomManInfo roomManList = 1;
  inline int roommanlist_size() const;
  inline void clear_roommanlist();
  static const int kRoomManListFieldNumber = 1;
  inline const ::proto::message::ProtoRoomManInfo& roommanlist(int index) const;
  inline ::proto::message::ProtoRoomManInfo* mutable_roommanlist(int index);
  inline ::proto::message::ProtoRoomManInfo* add_roommanlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >&
      roommanlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >*
      mutable_roommanlist();

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_UpdateApplyList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo > roommanlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_UpdateApplyList* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_UpdateRoomMemberTick : public ::google::protobuf::Message {
 public:
  Room_SC_UpdateRoomMemberTick();
  virtual ~Room_SC_UpdateRoomMemberTick();

  Room_SC_UpdateRoomMemberTick(const Room_SC_UpdateRoomMemberTick& from);

  inline Room_SC_UpdateRoomMemberTick& operator=(const Room_SC_UpdateRoomMemberTick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_UpdateRoomMemberTick& default_instance();

  void Swap(Room_SC_UpdateRoomMemberTick* other);

  // implements Message ----------------------------------------------

  Room_SC_UpdateRoomMemberTick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_UpdateRoomMemberTick& from);
  void MergeFrom(const Room_SC_UpdateRoomMemberTick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_UpdateRoomMemberTick)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_UpdateRoomMemberTick* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_FollowLeader : public ::google::protobuf::Message {
 public:
  Room_CS_FollowLeader();
  virtual ~Room_CS_FollowLeader();

  Room_CS_FollowLeader(const Room_CS_FollowLeader& from);

  inline Room_CS_FollowLeader& operator=(const Room_CS_FollowLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_FollowLeader& default_instance();

  void Swap(Room_CS_FollowLeader* other);

  // implements Message ----------------------------------------------

  Room_CS_FollowLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_FollowLeader& from);
  void MergeFrom(const Room_CS_FollowLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_FollowLeader)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_FollowLeader* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_FollowLeader : public ::google::protobuf::Message {
 public:
  Room_SC_FollowLeader();
  virtual ~Room_SC_FollowLeader();

  Room_SC_FollowLeader(const Room_SC_FollowLeader& from);

  inline Room_SC_FollowLeader& operator=(const Room_SC_FollowLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_FollowLeader& default_instance();

  void Swap(Room_SC_FollowLeader* other);

  // implements Message ----------------------------------------------

  Room_SC_FollowLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_FollowLeader& from);
  void MergeFrom(const Room_SC_FollowLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bool changeMap = 2;
  inline bool has_changemap() const;
  inline void clear_changemap();
  static const int kChangeMapFieldNumber = 2;
  inline bool changemap() const;
  inline void set_changemap(bool value);

  // optional .proto.message.Point3D pt = 3;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 3;
  inline const ::proto::message::Point3D& pt() const;
  inline ::proto::message::Point3D* mutable_pt();
  inline ::proto::message::Point3D* release_pt();
  inline void set_allocated_pt(::proto::message::Point3D* pt);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_FollowLeader)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_changemap();
  inline void clear_has_changemap();
  inline void set_has_pt();
  inline void clear_has_pt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  bool changemap_;
  ::proto::message::Point3D* pt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_FollowLeader* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_SummonFollower : public ::google::protobuf::Message {
 public:
  Room_CS_SummonFollower();
  virtual ~Room_CS_SummonFollower();

  Room_CS_SummonFollower(const Room_CS_SummonFollower& from);

  inline Room_CS_SummonFollower& operator=(const Room_CS_SummonFollower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_SummonFollower& default_instance();

  void Swap(Room_CS_SummonFollower* other);

  // implements Message ----------------------------------------------

  Room_CS_SummonFollower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_SummonFollower& from);
  void MergeFrom(const Room_CS_SummonFollower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_SummonFollower)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_SummonFollower* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_SummonFollower : public ::google::protobuf::Message {
 public:
  Room_SC_SummonFollower();
  virtual ~Room_SC_SummonFollower();

  Room_SC_SummonFollower(const Room_SC_SummonFollower& from);

  inline Room_SC_SummonFollower& operator=(const Room_SC_SummonFollower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_SummonFollower& default_instance();

  void Swap(Room_SC_SummonFollower* other);

  // implements Message ----------------------------------------------

  Room_SC_SummonFollower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_SummonFollower& from);
  void MergeFrom(const Room_SC_SummonFollower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_SummonFollower)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_SummonFollower* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_LeaderSummon : public ::google::protobuf::Message {
 public:
  Room_SC_LeaderSummon();
  virtual ~Room_SC_LeaderSummon();

  Room_SC_LeaderSummon(const Room_SC_LeaderSummon& from);

  inline Room_SC_LeaderSummon& operator=(const Room_SC_LeaderSummon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_LeaderSummon& default_instance();

  void Swap(Room_SC_LeaderSummon* other);

  // implements Message ----------------------------------------------

  Room_SC_LeaderSummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_LeaderSummon& from);
  void MergeFrom(const Room_SC_LeaderSummon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_LeaderSummon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_LeaderSummon* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_SetIgnoreRoomInvite : public ::google::protobuf::Message {
 public:
  Room_CS_SetIgnoreRoomInvite();
  virtual ~Room_CS_SetIgnoreRoomInvite();

  Room_CS_SetIgnoreRoomInvite(const Room_CS_SetIgnoreRoomInvite& from);

  inline Room_CS_SetIgnoreRoomInvite& operator=(const Room_CS_SetIgnoreRoomInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_SetIgnoreRoomInvite& default_instance();

  void Swap(Room_CS_SetIgnoreRoomInvite* other);

  // implements Message ----------------------------------------------

  Room_CS_SetIgnoreRoomInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_SetIgnoreRoomInvite& from);
  void MergeFrom(const Room_CS_SetIgnoreRoomInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_SetIgnoreRoomInvite)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_SetIgnoreRoomInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_SetIgnoreRoomInvite : public ::google::protobuf::Message {
 public:
  Room_SC_SetIgnoreRoomInvite();
  virtual ~Room_SC_SetIgnoreRoomInvite();

  Room_SC_SetIgnoreRoomInvite(const Room_SC_SetIgnoreRoomInvite& from);

  inline Room_SC_SetIgnoreRoomInvite& operator=(const Room_SC_SetIgnoreRoomInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_SetIgnoreRoomInvite& default_instance();

  void Swap(Room_SC_SetIgnoreRoomInvite* other);

  // implements Message ----------------------------------------------

  Room_SC_SetIgnoreRoomInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_SetIgnoreRoomInvite& from);
  void MergeFrom(const Room_SC_SetIgnoreRoomInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_SetIgnoreRoomInvite)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_SetIgnoreRoomInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_QueryIgnoreRoomInvite : public ::google::protobuf::Message {
 public:
  Room_CS_QueryIgnoreRoomInvite();
  virtual ~Room_CS_QueryIgnoreRoomInvite();

  Room_CS_QueryIgnoreRoomInvite(const Room_CS_QueryIgnoreRoomInvite& from);

  inline Room_CS_QueryIgnoreRoomInvite& operator=(const Room_CS_QueryIgnoreRoomInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_QueryIgnoreRoomInvite& default_instance();

  void Swap(Room_CS_QueryIgnoreRoomInvite* other);

  // implements Message ----------------------------------------------

  Room_CS_QueryIgnoreRoomInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_QueryIgnoreRoomInvite& from);
  void MergeFrom(const Room_CS_QueryIgnoreRoomInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_QueryIgnoreRoomInvite)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_QueryIgnoreRoomInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_QueryIgnoreRoomInvite : public ::google::protobuf::Message {
 public:
  Room_SC_QueryIgnoreRoomInvite();
  virtual ~Room_SC_QueryIgnoreRoomInvite();

  Room_SC_QueryIgnoreRoomInvite(const Room_SC_QueryIgnoreRoomInvite& from);

  inline Room_SC_QueryIgnoreRoomInvite& operator=(const Room_SC_QueryIgnoreRoomInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_QueryIgnoreRoomInvite& default_instance();

  void Swap(Room_SC_QueryIgnoreRoomInvite* other);

  // implements Message ----------------------------------------------

  Room_SC_QueryIgnoreRoomInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_QueryIgnoreRoomInvite& from);
  void MergeFrom(const Room_SC_QueryIgnoreRoomInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool allow = 1;
  inline bool has_allow() const;
  inline void clear_allow();
  static const int kAllowFieldNumber = 1;
  inline bool allow() const;
  inline void set_allow(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_QueryIgnoreRoomInvite)
 private:
  inline void set_has_allow();
  inline void clear_has_allow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool allow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_QueryIgnoreRoomInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_ErrorInfo : public ::google::protobuf::Message {
 public:
  Room_SC_ErrorInfo();
  virtual ~Room_SC_ErrorInfo();

  Room_SC_ErrorInfo(const Room_SC_ErrorInfo& from);

  inline Room_SC_ErrorInfo& operator=(const Room_SC_ErrorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_ErrorInfo& default_instance();

  void Swap(Room_SC_ErrorInfo* other);

  // implements Message ----------------------------------------------

  Room_SC_ErrorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_ErrorInfo& from);
  void MergeFrom(const Room_SC_ErrorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_ErrorInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_ErrorInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRoomManHPInfo : public ::google::protobuf::Message {
 public:
  ProtoRoomManHPInfo();
  virtual ~ProtoRoomManHPInfo();

  ProtoRoomManHPInfo(const ProtoRoomManHPInfo& from);

  inline ProtoRoomManHPInfo& operator=(const ProtoRoomManHPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRoomManHPInfo& default_instance();

  void Swap(ProtoRoomManHPInfo* other);

  // implements Message ----------------------------------------------

  ProtoRoomManHPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRoomManHPInfo& from);
  void MergeFrom(const ProtoRoomManHPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plyId = 1;
  inline bool has_plyid() const;
  inline void clear_plyid();
  static const int kPlyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plyid() const;
  inline void set_plyid(::google::protobuf::uint32 value);

  // required uint32 maxHp = 2;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxHpFieldNumber = 2;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // required uint32 Hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.ProtoRoomManHPInfo)
 private:
  inline void set_has_plyid();
  inline void clear_has_plyid();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plyid_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static ProtoRoomManHPInfo* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_UpdateCurrentHp : public ::google::protobuf::Message {
 public:
  Room_SC_UpdateCurrentHp();
  virtual ~Room_SC_UpdateCurrentHp();

  Room_SC_UpdateCurrentHp(const Room_SC_UpdateCurrentHp& from);

  inline Room_SC_UpdateCurrentHp& operator=(const Room_SC_UpdateCurrentHp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_UpdateCurrentHp& default_instance();

  void Swap(Room_SC_UpdateCurrentHp* other);

  // implements Message ----------------------------------------------

  Room_SC_UpdateCurrentHp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_UpdateCurrentHp& from);
  void MergeFrom(const Room_SC_UpdateCurrentHp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.message.ProtoRoomManHPInfo HpList = 1;
  inline int hplist_size() const;
  inline void clear_hplist();
  static const int kHpListFieldNumber = 1;
  inline const ::proto::message::ProtoRoomManHPInfo& hplist(int index) const;
  inline ::proto::message::ProtoRoomManHPInfo* mutable_hplist(int index);
  inline ::proto::message::ProtoRoomManHPInfo* add_hplist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManHPInfo >&
      hplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManHPInfo >*
      mutable_hplist();

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_UpdateCurrentHp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManHPInfo > hplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_UpdateCurrentHp* default_instance_;
};
// -------------------------------------------------------------------

class Room_CS_RoomReady : public ::google::protobuf::Message {
 public:
  Room_CS_RoomReady();
  virtual ~Room_CS_RoomReady();

  Room_CS_RoomReady(const Room_CS_RoomReady& from);

  inline Room_CS_RoomReady& operator=(const Room_CS_RoomReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CS_RoomReady& default_instance();

  void Swap(Room_CS_RoomReady* other);

  // implements Message ----------------------------------------------

  Room_CS_RoomReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CS_RoomReady& from);
  void MergeFrom(const Room_CS_RoomReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline bool status() const;
  inline void set_status(bool value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_CS_RoomReady)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_CS_RoomReady* default_instance_;
};
// -------------------------------------------------------------------

class Room_SC_RoomReady : public ::google::protobuf::Message {
 public:
  Room_SC_RoomReady();
  virtual ~Room_SC_RoomReady();

  Room_SC_RoomReady(const Room_SC_RoomReady& from);

  inline Room_SC_RoomReady& operator=(const Room_SC_RoomReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SC_RoomReady& default_instance();

  void Swap(Room_SC_RoomReady* other);

  // implements Message ----------------------------------------------

  Room_SC_RoomReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SC_RoomReady& from);
  void MergeFrom(const Room_SC_RoomReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.message.Room_SC_RoomReady)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Room_SC_RoomReady* default_instance_;
};
// -------------------------------------------------------------------

class Battle2Game_GetRoomList : public ::google::protobuf::Message {
 public:
  Battle2Game_GetRoomList();
  virtual ~Battle2Game_GetRoomList();

  Battle2Game_GetRoomList(const Battle2Game_GetRoomList& from);

  inline Battle2Game_GetRoomList& operator=(const Battle2Game_GetRoomList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle2Game_GetRoomList& default_instance();

  void Swap(Battle2Game_GetRoomList* other);

  // implements Message ----------------------------------------------

  Battle2Game_GetRoomList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle2Game_GetRoomList& from);
  void MergeFrom(const Battle2Game_GetRoomList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto.message.ProtoRoomListRoomInfo roomInfo = 2;
  inline int roominfo_size() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 2;
  inline const ::proto::message::ProtoRoomListRoomInfo& roominfo(int index) const;
  inline ::proto::message::ProtoRoomListRoomInfo* mutable_roominfo(int index);
  inline ::proto::message::ProtoRoomListRoomInfo* add_roominfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >&
      roominfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >*
      mutable_roominfo();

  // @@protoc_insertion_point(class_scope:proto.message.Battle2Game_GetRoomList)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo > roominfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Battle2Game_GetRoomList* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoRoomManInfo

// required uint32 plyId = 1;
inline bool ProtoRoomManInfo::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRoomManInfo::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRoomManInfo::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRoomManInfo::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 ProtoRoomManInfo::plyid() const {
  return plyid_;
}
inline void ProtoRoomManInfo::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 job = 2;
inline bool ProtoRoomManInfo::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRoomManInfo::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRoomManInfo::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRoomManInfo::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::job() const {
  return job_;
}
inline void ProtoRoomManInfo::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
}

// required int32 level = 3;
inline bool ProtoRoomManInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoRoomManInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoRoomManInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoRoomManInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::level() const {
  return level_;
}
inline void ProtoRoomManInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 status = 4;
inline bool ProtoRoomManInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoRoomManInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoRoomManInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoRoomManInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::status() const {
  return status_;
}
inline void ProtoRoomManInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required string name = 5;
inline bool ProtoRoomManInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoRoomManInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoRoomManInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoRoomManInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtoRoomManInfo::name() const {
  return *name_;
}
inline void ProtoRoomManInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoRoomManInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtoRoomManInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRoomManInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtoRoomManInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtoRoomManInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 equipID_list = 6;
inline int ProtoRoomManInfo::equipid_list_size() const {
  return equipid_list_.size();
}
inline void ProtoRoomManInfo::clear_equipid_list() {
  equipid_list_.Clear();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::equipid_list(int index) const {
  return equipid_list_.Get(index);
}
inline void ProtoRoomManInfo::set_equipid_list(int index, ::google::protobuf::int32 value) {
  equipid_list_.Set(index, value);
}
inline void ProtoRoomManInfo::add_equipid_list(::google::protobuf::int32 value) {
  equipid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoRoomManInfo::equipid_list() const {
  return equipid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoRoomManInfo::mutable_equipid_list() {
  return &equipid_list_;
}

// optional uint64 plyuuid = 7;
inline bool ProtoRoomManInfo::has_plyuuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoRoomManInfo::set_has_plyuuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoRoomManInfo::clear_has_plyuuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoRoomManInfo::clear_plyuuid() {
  plyuuid_ = GOOGLE_ULONGLONG(0);
  clear_has_plyuuid();
}
inline ::google::protobuf::uint64 ProtoRoomManInfo::plyuuid() const {
  return plyuuid_;
}
inline void ProtoRoomManInfo::set_plyuuid(::google::protobuf::uint64 value) {
  set_has_plyuuid();
  plyuuid_ = value;
}

// optional int32 identity = 8;
inline bool ProtoRoomManInfo::has_identity() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoRoomManInfo::set_has_identity() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoRoomManInfo::clear_has_identity() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoRoomManInfo::clear_identity() {
  identity_ = 0;
  clear_has_identity();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::identity() const {
  return identity_;
}
inline void ProtoRoomManInfo::set_identity(::google::protobuf::int32 value) {
  set_has_identity();
  identity_ = value;
}

// optional int32 combat = 9;
inline bool ProtoRoomManInfo::has_combat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoRoomManInfo::set_has_combat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoRoomManInfo::clear_has_combat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoRoomManInfo::clear_combat() {
  combat_ = 0;
  clear_has_combat();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::combat() const {
  return combat_;
}
inline void ProtoRoomManInfo::set_combat(::google::protobuf::int32 value) {
  set_has_combat();
  combat_ = value;
}

// optional bool isReady = 10;
inline bool ProtoRoomManInfo::has_isready() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoRoomManInfo::set_has_isready() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoRoomManInfo::clear_has_isready() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoRoomManInfo::clear_isready() {
  isready_ = false;
  clear_has_isready();
}
inline bool ProtoRoomManInfo::isready() const {
  return isready_;
}
inline void ProtoRoomManInfo::set_isready(bool value) {
  set_has_isready();
  isready_ = value;
}

// optional int32 Demonhunterlevel = 11;
inline bool ProtoRoomManInfo::has_demonhunterlevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoRoomManInfo::set_has_demonhunterlevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoRoomManInfo::clear_has_demonhunterlevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoRoomManInfo::clear_demonhunterlevel() {
  demonhunterlevel_ = 0;
  clear_has_demonhunterlevel();
}
inline ::google::protobuf::int32 ProtoRoomManInfo::demonhunterlevel() const {
  return demonhunterlevel_;
}
inline void ProtoRoomManInfo::set_demonhunterlevel(::google::protobuf::int32 value) {
  set_has_demonhunterlevel();
  demonhunterlevel_ = value;
}

// -------------------------------------------------------------------

// ProtoRoomInfo

// required int32 roomId = 1;
inline bool ProtoRoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 ProtoRoomInfo::roomid() const {
  return roomid_;
}
inline void ProtoRoomInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// required int32 numLimit = 2;
inline bool ProtoRoomInfo::has_numlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRoomInfo::set_has_numlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRoomInfo::clear_has_numlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRoomInfo::clear_numlimit() {
  numlimit_ = 0;
  clear_has_numlimit();
}
inline ::google::protobuf::int32 ProtoRoomInfo::numlimit() const {
  return numlimit_;
}
inline void ProtoRoomInfo::set_numlimit(::google::protobuf::int32 value) {
  set_has_numlimit();
  numlimit_ = value;
}

// optional uint32 leaderId = 3;
inline bool ProtoRoomInfo::has_leaderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoRoomInfo::set_has_leaderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoRoomInfo::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoRoomInfo::clear_leaderid() {
  leaderid_ = 0u;
  clear_has_leaderid();
}
inline ::google::protobuf::uint32 ProtoRoomInfo::leaderid() const {
  return leaderid_;
}
inline void ProtoRoomInfo::set_leaderid(::google::protobuf::uint32 value) {
  set_has_leaderid();
  leaderid_ = value;
}

// required int32 roomAuto = 4;
inline bool ProtoRoomInfo::has_roomauto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoRoomInfo::set_has_roomauto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoRoomInfo::clear_has_roomauto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoRoomInfo::clear_roomauto() {
  roomauto_ = 0;
  clear_has_roomauto();
}
inline ::google::protobuf::int32 ProtoRoomInfo::roomauto() const {
  return roomauto_;
}
inline void ProtoRoomInfo::set_roomauto(::google::protobuf::int32 value) {
  set_has_roomauto();
  roomauto_ = value;
}

// optional .proto.message.ProtoRoomOutObj roomOutObj = 5;
inline bool ProtoRoomInfo::has_roomoutobj() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoRoomInfo::set_has_roomoutobj() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoRoomInfo::clear_has_roomoutobj() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoRoomInfo::clear_roomoutobj() {
  if (roomoutobj_ != NULL) roomoutobj_->::proto::message::ProtoRoomOutObj::Clear();
  clear_has_roomoutobj();
}
inline const ::proto::message::ProtoRoomOutObj& ProtoRoomInfo::roomoutobj() const {
  return roomoutobj_ != NULL ? *roomoutobj_ : *default_instance_->roomoutobj_;
}
inline ::proto::message::ProtoRoomOutObj* ProtoRoomInfo::mutable_roomoutobj() {
  set_has_roomoutobj();
  if (roomoutobj_ == NULL) roomoutobj_ = new ::proto::message::ProtoRoomOutObj;
  return roomoutobj_;
}
inline ::proto::message::ProtoRoomOutObj* ProtoRoomInfo::release_roomoutobj() {
  clear_has_roomoutobj();
  ::proto::message::ProtoRoomOutObj* temp = roomoutobj_;
  roomoutobj_ = NULL;
  return temp;
}
inline void ProtoRoomInfo::set_allocated_roomoutobj(::proto::message::ProtoRoomOutObj* roomoutobj) {
  delete roomoutobj_;
  roomoutobj_ = roomoutobj;
  if (roomoutobj) {
    set_has_roomoutobj();
  } else {
    clear_has_roomoutobj();
  }
}

// repeated .proto.message.ProtoRoomManInfo roomManList = 6;
inline int ProtoRoomInfo::roommanlist_size() const {
  return roommanlist_.size();
}
inline void ProtoRoomInfo::clear_roommanlist() {
  roommanlist_.Clear();
}
inline const ::proto::message::ProtoRoomManInfo& ProtoRoomInfo::roommanlist(int index) const {
  return roommanlist_.Get(index);
}
inline ::proto::message::ProtoRoomManInfo* ProtoRoomInfo::mutable_roommanlist(int index) {
  return roommanlist_.Mutable(index);
}
inline ::proto::message::ProtoRoomManInfo* ProtoRoomInfo::add_roommanlist() {
  return roommanlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >&
ProtoRoomInfo::roommanlist() const {
  return roommanlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >*
ProtoRoomInfo::mutable_roommanlist() {
  return &roommanlist_;
}

// optional int32 needCombat = 7;
inline bool ProtoRoomInfo::has_needcombat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoRoomInfo::set_has_needcombat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoRoomInfo::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoRoomInfo::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 ProtoRoomInfo::needcombat() const {
  return needcombat_;
}
inline void ProtoRoomInfo::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// Room_SC_UpdateRoomLevelInfo

// required int32 plyId = 1;
inline bool Room_SC_UpdateRoomLevelInfo::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_UpdateRoomLevelInfo::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_UpdateRoomLevelInfo::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_UpdateRoomLevelInfo::clear_plyid() {
  plyid_ = 0;
  clear_has_plyid();
}
inline ::google::protobuf::int32 Room_SC_UpdateRoomLevelInfo::plyid() const {
  return plyid_;
}
inline void Room_SC_UpdateRoomLevelInfo::set_plyid(::google::protobuf::int32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 level = 2;
inline bool Room_SC_UpdateRoomLevelInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_UpdateRoomLevelInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_UpdateRoomLevelInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_UpdateRoomLevelInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Room_SC_UpdateRoomLevelInfo::level() const {
  return level_;
}
inline void Room_SC_UpdateRoomLevelInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// ProtoRoomListRoomInfo

// required int32 roomId = 1;
inline bool ProtoRoomListRoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRoomListRoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRoomListRoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 ProtoRoomListRoomInfo::roomid() const {
  return roomid_;
}
inline void ProtoRoomListRoomInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// required int32 peopleNum = 2;
inline bool ProtoRoomListRoomInfo::has_peoplenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_peoplenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRoomListRoomInfo::clear_has_peoplenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRoomListRoomInfo::clear_peoplenum() {
  peoplenum_ = 0;
  clear_has_peoplenum();
}
inline ::google::protobuf::int32 ProtoRoomListRoomInfo::peoplenum() const {
  return peoplenum_;
}
inline void ProtoRoomListRoomInfo::set_peoplenum(::google::protobuf::int32 value) {
  set_has_peoplenum();
  peoplenum_ = value;
}

// required int32 numLimit = 3;
inline bool ProtoRoomListRoomInfo::has_numlimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_numlimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoRoomListRoomInfo::clear_has_numlimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoRoomListRoomInfo::clear_numlimit() {
  numlimit_ = 0;
  clear_has_numlimit();
}
inline ::google::protobuf::int32 ProtoRoomListRoomInfo::numlimit() const {
  return numlimit_;
}
inline void ProtoRoomListRoomInfo::set_numlimit(::google::protobuf::int32 value) {
  set_has_numlimit();
  numlimit_ = value;
}

// optional .proto.message.ProtoRoomManInfo leaderInfo = 4;
inline bool ProtoRoomListRoomInfo::has_leaderinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_leaderinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoRoomListRoomInfo::clear_has_leaderinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoRoomListRoomInfo::clear_leaderinfo() {
  if (leaderinfo_ != NULL) leaderinfo_->::proto::message::ProtoRoomManInfo::Clear();
  clear_has_leaderinfo();
}
inline const ::proto::message::ProtoRoomManInfo& ProtoRoomListRoomInfo::leaderinfo() const {
  return leaderinfo_ != NULL ? *leaderinfo_ : *default_instance_->leaderinfo_;
}
inline ::proto::message::ProtoRoomManInfo* ProtoRoomListRoomInfo::mutable_leaderinfo() {
  set_has_leaderinfo();
  if (leaderinfo_ == NULL) leaderinfo_ = new ::proto::message::ProtoRoomManInfo;
  return leaderinfo_;
}
inline ::proto::message::ProtoRoomManInfo* ProtoRoomListRoomInfo::release_leaderinfo() {
  clear_has_leaderinfo();
  ::proto::message::ProtoRoomManInfo* temp = leaderinfo_;
  leaderinfo_ = NULL;
  return temp;
}
inline void ProtoRoomListRoomInfo::set_allocated_leaderinfo(::proto::message::ProtoRoomManInfo* leaderinfo) {
  delete leaderinfo_;
  leaderinfo_ = leaderinfo;
  if (leaderinfo) {
    set_has_leaderinfo();
  } else {
    clear_has_leaderinfo();
  }
}

// optional .proto.message.ProtoRoomOutObj roomOutObj = 5;
inline bool ProtoRoomListRoomInfo::has_roomoutobj() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_roomoutobj() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoRoomListRoomInfo::clear_has_roomoutobj() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoRoomListRoomInfo::clear_roomoutobj() {
  if (roomoutobj_ != NULL) roomoutobj_->::proto::message::ProtoRoomOutObj::Clear();
  clear_has_roomoutobj();
}
inline const ::proto::message::ProtoRoomOutObj& ProtoRoomListRoomInfo::roomoutobj() const {
  return roomoutobj_ != NULL ? *roomoutobj_ : *default_instance_->roomoutobj_;
}
inline ::proto::message::ProtoRoomOutObj* ProtoRoomListRoomInfo::mutable_roomoutobj() {
  set_has_roomoutobj();
  if (roomoutobj_ == NULL) roomoutobj_ = new ::proto::message::ProtoRoomOutObj;
  return roomoutobj_;
}
inline ::proto::message::ProtoRoomOutObj* ProtoRoomListRoomInfo::release_roomoutobj() {
  clear_has_roomoutobj();
  ::proto::message::ProtoRoomOutObj* temp = roomoutobj_;
  roomoutobj_ = NULL;
  return temp;
}
inline void ProtoRoomListRoomInfo::set_allocated_roomoutobj(::proto::message::ProtoRoomOutObj* roomoutobj) {
  delete roomoutobj_;
  roomoutobj_ = roomoutobj;
  if (roomoutobj) {
    set_has_roomoutobj();
  } else {
    clear_has_roomoutobj();
  }
}

// optional int32 totalCombat = 6;
inline bool ProtoRoomListRoomInfo::has_totalcombat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_totalcombat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoRoomListRoomInfo::clear_has_totalcombat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoRoomListRoomInfo::clear_totalcombat() {
  totalcombat_ = 0;
  clear_has_totalcombat();
}
inline ::google::protobuf::int32 ProtoRoomListRoomInfo::totalcombat() const {
  return totalcombat_;
}
inline void ProtoRoomListRoomInfo::set_totalcombat(::google::protobuf::int32 value) {
  set_has_totalcombat();
  totalcombat_ = value;
}

// optional int32 leaderCombat = 7;
inline bool ProtoRoomListRoomInfo::has_leadercombat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_leadercombat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoRoomListRoomInfo::clear_has_leadercombat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoRoomListRoomInfo::clear_leadercombat() {
  leadercombat_ = 0;
  clear_has_leadercombat();
}
inline ::google::protobuf::int32 ProtoRoomListRoomInfo::leadercombat() const {
  return leadercombat_;
}
inline void ProtoRoomListRoomInfo::set_leadercombat(::google::protobuf::int32 value) {
  set_has_leadercombat();
  leadercombat_ = value;
}

// optional int32 needCombat = 8;
inline bool ProtoRoomListRoomInfo::has_needcombat() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoRoomListRoomInfo::set_has_needcombat() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoRoomListRoomInfo::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoRoomListRoomInfo::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 ProtoRoomListRoomInfo::needcombat() const {
  return needcombat_;
}
inline void ProtoRoomListRoomInfo::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// ProtoRoomOutObj

// required int32 obj = 1;
inline bool ProtoRoomOutObj::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRoomOutObj::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRoomOutObj::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRoomOutObj::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 ProtoRoomOutObj::obj() const {
  return obj_;
}
inline void ProtoRoomOutObj::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// required int32 levelMin = 2;
inline bool ProtoRoomOutObj::has_levelmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRoomOutObj::set_has_levelmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRoomOutObj::clear_has_levelmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRoomOutObj::clear_levelmin() {
  levelmin_ = 0;
  clear_has_levelmin();
}
inline ::google::protobuf::int32 ProtoRoomOutObj::levelmin() const {
  return levelmin_;
}
inline void ProtoRoomOutObj::set_levelmin(::google::protobuf::int32 value) {
  set_has_levelmin();
  levelmin_ = value;
}

// required int32 levelMax = 3;
inline bool ProtoRoomOutObj::has_levelmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoRoomOutObj::set_has_levelmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoRoomOutObj::clear_has_levelmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoRoomOutObj::clear_levelmax() {
  levelmax_ = 0;
  clear_has_levelmax();
}
inline ::google::protobuf::int32 ProtoRoomOutObj::levelmax() const {
  return levelmax_;
}
inline void ProtoRoomOutObj::set_levelmax(::google::protobuf::int32 value) {
  set_has_levelmax();
  levelmax_ = value;
}

// -------------------------------------------------------------------

// Room_CS_SetRoomOutObj

// required .proto.message.ProtoRoomOutObj obj = 1;
inline bool Room_CS_SetRoomOutObj::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_SetRoomOutObj::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_SetRoomOutObj::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_SetRoomOutObj::clear_obj() {
  if (obj_ != NULL) obj_->::proto::message::ProtoRoomOutObj::Clear();
  clear_has_obj();
}
inline const ::proto::message::ProtoRoomOutObj& Room_CS_SetRoomOutObj::obj() const {
  return obj_ != NULL ? *obj_ : *default_instance_->obj_;
}
inline ::proto::message::ProtoRoomOutObj* Room_CS_SetRoomOutObj::mutable_obj() {
  set_has_obj();
  if (obj_ == NULL) obj_ = new ::proto::message::ProtoRoomOutObj;
  return obj_;
}
inline ::proto::message::ProtoRoomOutObj* Room_CS_SetRoomOutObj::release_obj() {
  clear_has_obj();
  ::proto::message::ProtoRoomOutObj* temp = obj_;
  obj_ = NULL;
  return temp;
}
inline void Room_CS_SetRoomOutObj::set_allocated_obj(::proto::message::ProtoRoomOutObj* obj) {
  delete obj_;
  obj_ = obj;
  if (obj) {
    set_has_obj();
  } else {
    clear_has_obj();
  }
}

// -------------------------------------------------------------------

// Room_SC_SetRoomOutObj

// required int32 result = 1;
inline bool Room_SC_SetRoomOutObj::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_SetRoomOutObj::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_SetRoomOutObj::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_SetRoomOutObj::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_SetRoomOutObj::result() const {
  return result_;
}
inline void Room_SC_SetRoomOutObj::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_MatchingQueueInfo

// required int32 obj = 1;
inline bool Room_CS_MatchingQueueInfo::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_MatchingQueueInfo::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_MatchingQueueInfo::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_MatchingQueueInfo::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Room_CS_MatchingQueueInfo::obj() const {
  return obj_;
}
inline void Room_CS_MatchingQueueInfo::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Room_SC_MatchingQueueInfo

// required int32 nRoomNum = 1;
inline bool Room_SC_MatchingQueueInfo::has_nroomnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_MatchingQueueInfo::set_has_nroomnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_MatchingQueueInfo::clear_has_nroomnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_MatchingQueueInfo::clear_nroomnum() {
  nroomnum_ = 0;
  clear_has_nroomnum();
}
inline ::google::protobuf::int32 Room_SC_MatchingQueueInfo::nroomnum() const {
  return nroomnum_;
}
inline void Room_SC_MatchingQueueInfo::set_nroomnum(::google::protobuf::int32 value) {
  set_has_nroomnum();
  nroomnum_ = value;
}

// required int32 nSingleNum = 2;
inline bool Room_SC_MatchingQueueInfo::has_nsinglenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_MatchingQueueInfo::set_has_nsinglenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_MatchingQueueInfo::clear_has_nsinglenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_MatchingQueueInfo::clear_nsinglenum() {
  nsinglenum_ = 0;
  clear_has_nsinglenum();
}
inline ::google::protobuf::int32 Room_SC_MatchingQueueInfo::nsinglenum() const {
  return nsinglenum_;
}
inline void Room_SC_MatchingQueueInfo::set_nsinglenum(::google::protobuf::int32 value) {
  set_has_nsinglenum();
  nsinglenum_ = value;
}

// required int32 obj = 3;
inline bool Room_SC_MatchingQueueInfo::has_obj() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Room_SC_MatchingQueueInfo::set_has_obj() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Room_SC_MatchingQueueInfo::clear_has_obj() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Room_SC_MatchingQueueInfo::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Room_SC_MatchingQueueInfo::obj() const {
  return obj_;
}
inline void Room_SC_MatchingQueueInfo::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Room_CS_GetRoomList

// required int32 obj = 1;
inline bool Room_CS_GetRoomList::has_obj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_GetRoomList::set_has_obj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_GetRoomList::clear_has_obj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_GetRoomList::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Room_CS_GetRoomList::obj() const {
  return obj_;
}
inline void Room_CS_GetRoomList::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Room_SC_GetRoomList

// required int32 result = 1;
inline bool Room_SC_GetRoomList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_GetRoomList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_GetRoomList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_GetRoomList::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_GetRoomList::result() const {
  return result_;
}
inline void Room_SC_GetRoomList::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.ProtoRoomListRoomInfo roomInfo = 2;
inline int Room_SC_GetRoomList::roominfo_size() const {
  return roominfo_.size();
}
inline void Room_SC_GetRoomList::clear_roominfo() {
  roominfo_.Clear();
}
inline const ::proto::message::ProtoRoomListRoomInfo& Room_SC_GetRoomList::roominfo(int index) const {
  return roominfo_.Get(index);
}
inline ::proto::message::ProtoRoomListRoomInfo* Room_SC_GetRoomList::mutable_roominfo(int index) {
  return roominfo_.Mutable(index);
}
inline ::proto::message::ProtoRoomListRoomInfo* Room_SC_GetRoomList::add_roominfo() {
  return roominfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >&
Room_SC_GetRoomList::roominfo() const {
  return roominfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >*
Room_SC_GetRoomList::mutable_roominfo() {
  return &roominfo_;
}

// -------------------------------------------------------------------

// Room_CS_CreateRoom

// optional int32 needCombat = 1;
inline bool Room_CS_CreateRoom::has_needcombat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_CreateRoom::set_has_needcombat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_CreateRoom::clear_has_needcombat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_CreateRoom::clear_needcombat() {
  needcombat_ = 0;
  clear_has_needcombat();
}
inline ::google::protobuf::int32 Room_CS_CreateRoom::needcombat() const {
  return needcombat_;
}
inline void Room_CS_CreateRoom::set_needcombat(::google::protobuf::int32 value) {
  set_has_needcombat();
  needcombat_ = value;
}

// -------------------------------------------------------------------

// Room_SC_CreateRoom

// required int32 result = 1;
inline bool Room_SC_CreateRoom::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_CreateRoom::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_CreateRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_CreateRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_CreateRoom::result() const {
  return result_;
}
inline void Room_SC_CreateRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_ApplyRoom

// required int32 roomId = 1;
inline bool Room_CS_ApplyRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_ApplyRoom::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_ApplyRoom::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_ApplyRoom::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Room_CS_ApplyRoom::roomid() const {
  return roomid_;
}
inline void Room_CS_ApplyRoom::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// Room_SC_ApplyRoom

// required int32 result = 1;
inline bool Room_SC_ApplyRoom::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_ApplyRoom::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_ApplyRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_ApplyRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_ApplyRoom::result() const {
  return result_;
}
inline void Room_SC_ApplyRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 roomId = 2;
inline bool Room_SC_ApplyRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_ApplyRoom::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_ApplyRoom::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_ApplyRoom::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Room_SC_ApplyRoom::roomid() const {
  return roomid_;
}
inline void Room_SC_ApplyRoom::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// Room_CS_RoomQuit

// required int32 roomId = 1;
inline bool Room_CS_RoomQuit::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_RoomQuit::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_RoomQuit::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_RoomQuit::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Room_CS_RoomQuit::roomid() const {
  return roomid_;
}
inline void Room_CS_RoomQuit::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// Room_SC_RoomQuit

// required int32 result = 1;
inline bool Room_SC_RoomQuit::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_RoomQuit::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_RoomQuit::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_RoomQuit::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_RoomQuit::result() const {
  return result_;
}
inline void Room_SC_RoomQuit::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_RoomAppoint

// required uint32 plyId = 1;
inline bool Room_CS_RoomAppoint::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_RoomAppoint::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_RoomAppoint::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_RoomAppoint::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Room_CS_RoomAppoint::plyid() const {
  return plyid_;
}
inline void Room_CS_RoomAppoint::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 appoint = 2;
inline bool Room_CS_RoomAppoint::has_appoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_CS_RoomAppoint::set_has_appoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_CS_RoomAppoint::clear_has_appoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_CS_RoomAppoint::clear_appoint() {
  appoint_ = 0;
  clear_has_appoint();
}
inline ::google::protobuf::int32 Room_CS_RoomAppoint::appoint() const {
  return appoint_;
}
inline void Room_CS_RoomAppoint::set_appoint(::google::protobuf::int32 value) {
  set_has_appoint();
  appoint_ = value;
}

// -------------------------------------------------------------------

// Room_SC_RoomAppoint

// required int32 result = 1;
inline bool Room_SC_RoomAppoint::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_RoomAppoint::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_RoomAppoint::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_RoomAppoint::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_RoomAppoint::result() const {
  return result_;
}
inline void Room_SC_RoomAppoint::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_RoomKick

// required uint32 plyId = 1;
inline bool Room_CS_RoomKick::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_RoomKick::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_RoomKick::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_RoomKick::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Room_CS_RoomKick::plyid() const {
  return plyid_;
}
inline void Room_CS_RoomKick::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// -------------------------------------------------------------------

// Room_SC_RoomKick

// required int32 result = 1;
inline bool Room_SC_RoomKick::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_RoomKick::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_RoomKick::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_RoomKick::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_RoomKick::result() const {
  return result_;
}
inline void Room_SC_RoomKick::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string beKickName = 2;
inline bool Room_SC_RoomKick::has_bekickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_RoomKick::set_has_bekickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_RoomKick::clear_has_bekickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_RoomKick::clear_bekickname() {
  if (bekickname_ != &::google::protobuf::internal::kEmptyString) {
    bekickname_->clear();
  }
  clear_has_bekickname();
}
inline const ::std::string& Room_SC_RoomKick::bekickname() const {
  return *bekickname_;
}
inline void Room_SC_RoomKick::set_bekickname(const ::std::string& value) {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  bekickname_->assign(value);
}
inline void Room_SC_RoomKick::set_bekickname(const char* value) {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  bekickname_->assign(value);
}
inline void Room_SC_RoomKick::set_bekickname(const char* value, size_t size) {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  bekickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Room_SC_RoomKick::mutable_bekickname() {
  set_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    bekickname_ = new ::std::string;
  }
  return bekickname_;
}
inline ::std::string* Room_SC_RoomKick::release_bekickname() {
  clear_has_bekickname();
  if (bekickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bekickname_;
    bekickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Room_SC_RoomKick::set_allocated_bekickname(::std::string* bekickname) {
  if (bekickname_ != &::google::protobuf::internal::kEmptyString) {
    delete bekickname_;
  }
  if (bekickname) {
    set_has_bekickname();
    bekickname_ = bekickname;
  } else {
    clear_has_bekickname();
    bekickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Room_CS_TempLeave

// required uint32 plyId = 1;
inline bool Room_CS_TempLeave::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_TempLeave::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_TempLeave::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_TempLeave::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Room_CS_TempLeave::plyid() const {
  return plyid_;
}
inline void Room_CS_TempLeave::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required int32 status = 2;
inline bool Room_CS_TempLeave::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_CS_TempLeave::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_CS_TempLeave::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_CS_TempLeave::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Room_CS_TempLeave::status() const {
  return status_;
}
inline void Room_CS_TempLeave::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Room_SC_TempLeave

// required int32 result = 1;
inline bool Room_SC_TempLeave::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_TempLeave::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_TempLeave::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_TempLeave::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_TempLeave::result() const {
  return result_;
}
inline void Room_SC_TempLeave::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_RoomAuto

// required int32 isAuto = 1;
inline bool Room_CS_RoomAuto::has_isauto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_RoomAuto::set_has_isauto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_RoomAuto::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_RoomAuto::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Room_CS_RoomAuto::isauto() const {
  return isauto_;
}
inline void Room_CS_RoomAuto::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// -------------------------------------------------------------------

// Room_SC_RoomAuto

// required int32 result = 1;
inline bool Room_SC_RoomAuto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_RoomAuto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_RoomAuto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_RoomAuto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_RoomAuto::result() const {
  return result_;
}
inline void Room_SC_RoomAuto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_MemberAuto

// required int32 isAuto = 1;
inline bool Room_CS_MemberAuto::has_isauto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_MemberAuto::set_has_isauto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_MemberAuto::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_MemberAuto::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Room_CS_MemberAuto::isauto() const {
  return isauto_;
}
inline void Room_CS_MemberAuto::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// required int32 obj = 2;
inline bool Room_CS_MemberAuto::has_obj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_CS_MemberAuto::set_has_obj() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_CS_MemberAuto::clear_has_obj() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_CS_MemberAuto::clear_obj() {
  obj_ = 0;
  clear_has_obj();
}
inline ::google::protobuf::int32 Room_CS_MemberAuto::obj() const {
  return obj_;
}
inline void Room_CS_MemberAuto::set_obj(::google::protobuf::int32 value) {
  set_has_obj();
  obj_ = value;
}

// -------------------------------------------------------------------

// Room_SC_MemberAuto

// required int32 result = 1;
inline bool Room_SC_MemberAuto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_MemberAuto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_MemberAuto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_MemberAuto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_MemberAuto::result() const {
  return result_;
}
inline void Room_SC_MemberAuto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 isAuto = 2;
inline bool Room_SC_MemberAuto::has_isauto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_MemberAuto::set_has_isauto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_MemberAuto::clear_has_isauto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_MemberAuto::clear_isauto() {
  isauto_ = 0;
  clear_has_isauto();
}
inline ::google::protobuf::int32 Room_SC_MemberAuto::isauto() const {
  return isauto_;
}
inline void Room_SC_MemberAuto::set_isauto(::google::protobuf::int32 value) {
  set_has_isauto();
  isauto_ = value;
}

// -------------------------------------------------------------------

// Room_CS_RoomInvite

// required uint64 plyId = 1;
inline bool Room_CS_RoomInvite::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_RoomInvite::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_RoomInvite::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_RoomInvite::clear_plyid() {
  plyid_ = GOOGLE_ULONGLONG(0);
  clear_has_plyid();
}
inline ::google::protobuf::uint64 Room_CS_RoomInvite::plyid() const {
  return plyid_;
}
inline void Room_CS_RoomInvite::set_plyid(::google::protobuf::uint64 value) {
  set_has_plyid();
  plyid_ = value;
}

// -------------------------------------------------------------------

// Room_SC_RoomInvite

// required int32 result = 1;
inline bool Room_SC_RoomInvite::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_RoomInvite::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_RoomInvite::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_RoomInvite::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_RoomInvite::result() const {
  return result_;
}
inline void Room_SC_RoomInvite::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_SetRoomBeInvite

// required bool allow = 1;
inline bool Room_CS_SetRoomBeInvite::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_SetRoomBeInvite::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_SetRoomBeInvite::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_SetRoomBeInvite::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Room_CS_SetRoomBeInvite::allow() const {
  return allow_;
}
inline void Room_CS_SetRoomBeInvite::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// required int32 roomId = 2;
inline bool Room_CS_SetRoomBeInvite::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_CS_SetRoomBeInvite::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_CS_SetRoomBeInvite::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_CS_SetRoomBeInvite::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Room_CS_SetRoomBeInvite::roomid() const {
  return roomid_;
}
inline void Room_CS_SetRoomBeInvite::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// Room_SC_SetRoomBeInvite

// required int32 result = 1;
inline bool Room_SC_SetRoomBeInvite::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_SetRoomBeInvite::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_SetRoomBeInvite::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_SetRoomBeInvite::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_SetRoomBeInvite::result() const {
  return result_;
}
inline void Room_SC_SetRoomBeInvite::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_SetRoomAllow

// required uint32 plyId = 1;
inline bool Room_CS_SetRoomAllow::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_SetRoomAllow::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_SetRoomAllow::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_SetRoomAllow::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 Room_CS_SetRoomAllow::plyid() const {
  return plyid_;
}
inline void Room_CS_SetRoomAllow::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required bool allow = 2;
inline bool Room_CS_SetRoomAllow::has_allow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_CS_SetRoomAllow::set_has_allow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_CS_SetRoomAllow::clear_has_allow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_CS_SetRoomAllow::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Room_CS_SetRoomAllow::allow() const {
  return allow_;
}
inline void Room_CS_SetRoomAllow::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Room_SC_SetRoomAllow

// required int32 result = 1;
inline bool Room_SC_SetRoomAllow::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_SetRoomAllow::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_SetRoomAllow::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_SetRoomAllow::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_SetRoomAllow::result() const {
  return result_;
}
inline void Room_SC_SetRoomAllow::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_SetRoomAllowOneTime

// required bool allow = 1;
inline bool Room_CS_SetRoomAllowOneTime::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_SetRoomAllowOneTime::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_SetRoomAllowOneTime::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_SetRoomAllowOneTime::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Room_CS_SetRoomAllowOneTime::allow() const {
  return allow_;
}
inline void Room_CS_SetRoomAllowOneTime::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Room_SC_SetRoomAllowOneTime

// required int32 result = 1;
inline bool Room_SC_SetRoomAllowOneTime::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_SetRoomAllowOneTime::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_SetRoomAllowOneTime::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_SetRoomAllowOneTime::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_SetRoomAllowOneTime::result() const {
  return result_;
}
inline void Room_SC_SetRoomAllowOneTime::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_UpdateRoomInfo

// -------------------------------------------------------------------

// Room_SC_UpdateRoomInfo

// optional .proto.message.ProtoRoomInfo roomInfo = 1;
inline bool Room_SC_UpdateRoomInfo::has_roominfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_UpdateRoomInfo::set_has_roominfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_UpdateRoomInfo::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_UpdateRoomInfo::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::proto::message::ProtoRoomInfo::Clear();
  clear_has_roominfo();
}
inline const ::proto::message::ProtoRoomInfo& Room_SC_UpdateRoomInfo::roominfo() const {
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
inline ::proto::message::ProtoRoomInfo* Room_SC_UpdateRoomInfo::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) roominfo_ = new ::proto::message::ProtoRoomInfo;
  return roominfo_;
}
inline ::proto::message::ProtoRoomInfo* Room_SC_UpdateRoomInfo::release_roominfo() {
  clear_has_roominfo();
  ::proto::message::ProtoRoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
inline void Room_SC_UpdateRoomInfo::set_allocated_roominfo(::proto::message::ProtoRoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
}

// -------------------------------------------------------------------

// Room_SC_UpdateRoomBeInvite

// required int32 roomId = 1;
inline bool Room_SC_UpdateRoomBeInvite::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_UpdateRoomBeInvite::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_UpdateRoomBeInvite::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_UpdateRoomBeInvite::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Room_SC_UpdateRoomBeInvite::roomid() const {
  return roomid_;
}
inline void Room_SC_UpdateRoomBeInvite::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// optional string name = 2;
inline bool Room_SC_UpdateRoomBeInvite::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_UpdateRoomBeInvite::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_UpdateRoomBeInvite::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_UpdateRoomBeInvite::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Room_SC_UpdateRoomBeInvite::name() const {
  return *name_;
}
inline void Room_SC_UpdateRoomBeInvite::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Room_SC_UpdateRoomBeInvite::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Room_SC_UpdateRoomBeInvite::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Room_SC_UpdateRoomBeInvite::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Room_SC_UpdateRoomBeInvite::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Room_SC_UpdateRoomBeInvite::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Room_SC_UpdateApplyList

// repeated .proto.message.ProtoRoomManInfo roomManList = 1;
inline int Room_SC_UpdateApplyList::roommanlist_size() const {
  return roommanlist_.size();
}
inline void Room_SC_UpdateApplyList::clear_roommanlist() {
  roommanlist_.Clear();
}
inline const ::proto::message::ProtoRoomManInfo& Room_SC_UpdateApplyList::roommanlist(int index) const {
  return roommanlist_.Get(index);
}
inline ::proto::message::ProtoRoomManInfo* Room_SC_UpdateApplyList::mutable_roommanlist(int index) {
  return roommanlist_.Mutable(index);
}
inline ::proto::message::ProtoRoomManInfo* Room_SC_UpdateApplyList::add_roommanlist() {
  return roommanlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >&
Room_SC_UpdateApplyList::roommanlist() const {
  return roommanlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManInfo >*
Room_SC_UpdateApplyList::mutable_roommanlist() {
  return &roommanlist_;
}

// -------------------------------------------------------------------

// Room_SC_UpdateRoomMemberTick

// optional string name = 1;
inline bool Room_SC_UpdateRoomMemberTick::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_UpdateRoomMemberTick::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_UpdateRoomMemberTick::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_UpdateRoomMemberTick::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Room_SC_UpdateRoomMemberTick::name() const {
  return *name_;
}
inline void Room_SC_UpdateRoomMemberTick::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Room_SC_UpdateRoomMemberTick::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Room_SC_UpdateRoomMemberTick::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Room_SC_UpdateRoomMemberTick::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Room_SC_UpdateRoomMemberTick::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Room_SC_UpdateRoomMemberTick::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Room_CS_FollowLeader

// -------------------------------------------------------------------

// Room_SC_FollowLeader

// required int32 result = 1;
inline bool Room_SC_FollowLeader::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_FollowLeader::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_FollowLeader::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_FollowLeader::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_FollowLeader::result() const {
  return result_;
}
inline void Room_SC_FollowLeader::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bool changeMap = 2;
inline bool Room_SC_FollowLeader::has_changemap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SC_FollowLeader::set_has_changemap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SC_FollowLeader::clear_has_changemap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SC_FollowLeader::clear_changemap() {
  changemap_ = false;
  clear_has_changemap();
}
inline bool Room_SC_FollowLeader::changemap() const {
  return changemap_;
}
inline void Room_SC_FollowLeader::set_changemap(bool value) {
  set_has_changemap();
  changemap_ = value;
}

// optional .proto.message.Point3D pt = 3;
inline bool Room_SC_FollowLeader::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Room_SC_FollowLeader::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Room_SC_FollowLeader::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Room_SC_FollowLeader::clear_pt() {
  if (pt_ != NULL) pt_->::proto::message::Point3D::Clear();
  clear_has_pt();
}
inline const ::proto::message::Point3D& Room_SC_FollowLeader::pt() const {
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::proto::message::Point3D* Room_SC_FollowLeader::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::proto::message::Point3D;
  return pt_;
}
inline ::proto::message::Point3D* Room_SC_FollowLeader::release_pt() {
  clear_has_pt();
  ::proto::message::Point3D* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void Room_SC_FollowLeader::set_allocated_pt(::proto::message::Point3D* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
}

// -------------------------------------------------------------------

// Room_CS_SummonFollower

// -------------------------------------------------------------------

// Room_SC_SummonFollower

// required int32 result = 1;
inline bool Room_SC_SummonFollower::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_SummonFollower::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_SummonFollower::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_SummonFollower::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_SummonFollower::result() const {
  return result_;
}
inline void Room_SC_SummonFollower::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_SC_LeaderSummon

// -------------------------------------------------------------------

// Room_CS_SetIgnoreRoomInvite

// required bool allow = 1;
inline bool Room_CS_SetIgnoreRoomInvite::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_SetIgnoreRoomInvite::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_SetIgnoreRoomInvite::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_SetIgnoreRoomInvite::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Room_CS_SetIgnoreRoomInvite::allow() const {
  return allow_;
}
inline void Room_CS_SetIgnoreRoomInvite::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Room_SC_SetIgnoreRoomInvite

// required int32 result = 1;
inline bool Room_SC_SetIgnoreRoomInvite::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_SetIgnoreRoomInvite::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_SetIgnoreRoomInvite::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_SetIgnoreRoomInvite::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_SetIgnoreRoomInvite::result() const {
  return result_;
}
inline void Room_SC_SetIgnoreRoomInvite::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Room_CS_QueryIgnoreRoomInvite

// -------------------------------------------------------------------

// Room_SC_QueryIgnoreRoomInvite

// required bool allow = 1;
inline bool Room_SC_QueryIgnoreRoomInvite::has_allow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_QueryIgnoreRoomInvite::set_has_allow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_QueryIgnoreRoomInvite::clear_has_allow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_QueryIgnoreRoomInvite::clear_allow() {
  allow_ = false;
  clear_has_allow();
}
inline bool Room_SC_QueryIgnoreRoomInvite::allow() const {
  return allow_;
}
inline void Room_SC_QueryIgnoreRoomInvite::set_allow(bool value) {
  set_has_allow();
  allow_ = value;
}

// -------------------------------------------------------------------

// Room_SC_ErrorInfo

// required int32 result = 1;
inline bool Room_SC_ErrorInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_ErrorInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_ErrorInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_ErrorInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_ErrorInfo::result() const {
  return result_;
}
inline void Room_SC_ErrorInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProtoRoomManHPInfo

// required uint32 plyId = 1;
inline bool ProtoRoomManHPInfo::has_plyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRoomManHPInfo::set_has_plyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRoomManHPInfo::clear_has_plyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRoomManHPInfo::clear_plyid() {
  plyid_ = 0u;
  clear_has_plyid();
}
inline ::google::protobuf::uint32 ProtoRoomManHPInfo::plyid() const {
  return plyid_;
}
inline void ProtoRoomManHPInfo::set_plyid(::google::protobuf::uint32 value) {
  set_has_plyid();
  plyid_ = value;
}

// required uint32 maxHp = 2;
inline bool ProtoRoomManHPInfo::has_maxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRoomManHPInfo::set_has_maxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRoomManHPInfo::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRoomManHPInfo::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 ProtoRoomManHPInfo::maxhp() const {
  return maxhp_;
}
inline void ProtoRoomManHPInfo::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// required uint32 Hp = 3;
inline bool ProtoRoomManHPInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoRoomManHPInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoRoomManHPInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoRoomManHPInfo::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ProtoRoomManHPInfo::hp() const {
  return hp_;
}
inline void ProtoRoomManHPInfo::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// Room_SC_UpdateCurrentHp

// repeated .proto.message.ProtoRoomManHPInfo HpList = 1;
inline int Room_SC_UpdateCurrentHp::hplist_size() const {
  return hplist_.size();
}
inline void Room_SC_UpdateCurrentHp::clear_hplist() {
  hplist_.Clear();
}
inline const ::proto::message::ProtoRoomManHPInfo& Room_SC_UpdateCurrentHp::hplist(int index) const {
  return hplist_.Get(index);
}
inline ::proto::message::ProtoRoomManHPInfo* Room_SC_UpdateCurrentHp::mutable_hplist(int index) {
  return hplist_.Mutable(index);
}
inline ::proto::message::ProtoRoomManHPInfo* Room_SC_UpdateCurrentHp::add_hplist() {
  return hplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManHPInfo >&
Room_SC_UpdateCurrentHp::hplist() const {
  return hplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomManHPInfo >*
Room_SC_UpdateCurrentHp::mutable_hplist() {
  return &hplist_;
}

// -------------------------------------------------------------------

// Room_CS_RoomReady

// required bool status = 1;
inline bool Room_CS_RoomReady::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CS_RoomReady::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CS_RoomReady::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CS_RoomReady::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool Room_CS_RoomReady::status() const {
  return status_;
}
inline void Room_CS_RoomReady::set_status(bool value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// Room_SC_RoomReady

// required int32 result = 1;
inline bool Room_SC_RoomReady::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SC_RoomReady::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SC_RoomReady::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SC_RoomReady::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Room_SC_RoomReady::result() const {
  return result_;
}
inline void Room_SC_RoomReady::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Battle2Game_GetRoomList

// required int32 result = 1;
inline bool Battle2Game_GetRoomList::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle2Game_GetRoomList::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle2Game_GetRoomList::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle2Game_GetRoomList::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Battle2Game_GetRoomList::result() const {
  return result_;
}
inline void Battle2Game_GetRoomList::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto.message.ProtoRoomListRoomInfo roomInfo = 2;
inline int Battle2Game_GetRoomList::roominfo_size() const {
  return roominfo_.size();
}
inline void Battle2Game_GetRoomList::clear_roominfo() {
  roominfo_.Clear();
}
inline const ::proto::message::ProtoRoomListRoomInfo& Battle2Game_GetRoomList::roominfo(int index) const {
  return roominfo_.Get(index);
}
inline ::proto::message::ProtoRoomListRoomInfo* Battle2Game_GetRoomList::mutable_roominfo(int index) {
  return roominfo_.Mutable(index);
}
inline ::proto::message::ProtoRoomListRoomInfo* Battle2Game_GetRoomList::add_roominfo() {
  return roominfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >&
Battle2Game_GetRoomList::roominfo() const {
  return roominfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::message::ProtoRoomListRoomInfo >*
Battle2Game_GetRoomList::mutable_roominfo() {
  return &roominfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_room_2eproto__INCLUDED
