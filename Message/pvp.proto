package proto.message;
import "common.proto";
/*
enum PVP_CS_MsgID
{
	PVP_CP_NoticeConnectOK		= 5400,
	PVP_CP_LeaveAttack			= 5401,
	PVP_CP_LoadBattleOk     	= 5402,				//通知加载场景OK
	PVP_CP_DoPVPBuffer			= 5403,				//触发PVP buffer
	PVP_CP_CaptureFlag			= 5404,             //拔旗子
	PVP_CP_SubmitFlag			= 5405,				//提交旗子
	PVP_CP_PVPSurrender			= 5406,				//竞技场投降
	
}
    
enum PVP_SC_MsgID  
{
    PVP_PC_SyncOnePlayer 	= 6700,               	//同步多个玩家
	PVP_PC_SyncMultiPlayer 	= 6701,             	//同步一个玩家
	PVP_PC_RemovePlayer     = 6702,					//删除一个玩家
	PVP_PC_LoadBattle     	= 6703,					//通知加载场景
	PVP_PC_LoadPVPBuffer    = 6704,                //加载事件
	PVP_PC_AddPVPBuffer     = 6705,                //加载事件
	PVP_PC_DelPVPBuffer     = 6706,                //加载事件
	PVP_PC_LoadPVPFlagEvent = 6707,					//加载旗子
	PVP_PC_AddFlag			= 6708,					//增加一个旗子
	PVP_PC_DelFlag			= 6709,					//删除旗子
	PVP_PC_DesFlag			= 6710,					//旗子的目标
	PVP_PC_AttackEnd		= 6711,					//战斗结束
	PVP_PC_KillRanking		= 6712,					//击杀排行榜
	PVP_PC_IntegralRanking	= 6713,					//积分排行榜
	PVP_PC_BattleBegin		= 6714,					//战斗开始
}   
*/  


message PVPSyncPlayerInfo 
{
	required uint32 nPlayerId 	= 1;	//玩家Id
	required Point3D pt 		= 2;	//坐标
	required float 	dir 		= 3;	//朝向
	optional string Name 		= 4;    //名字
	optional int32 	MaxHP       = 5;    //最大血量
	optional int32 	CurHP       = 6;    //当前血量
	optional int32 	Level       = 7;    //等级
	repeated int32 	Mod 		= 8; 	//装备列表
	optional int32 	career 		= 9; 	//职业
	optional int32 	Velocity    = 10;   //移动速度
	optional int32 	camp    	= 11;   //阵容
	repeated uint32 bufferID	= 12;   //buffer
	optional uint64 Status      = 13;   //玩家状态
	repeated int32 skill_id_list= 14; 	//玩家技能ID列表
	optional int32 FlagCamp      = 15;   //身上的旗子阵营, -1：没有旗子；0：中立；1：正义；2：邪恶
}

message PVP_CP_NoticeConnectOK
{
    required uint64 	CharId 	= 1; 	//玩家唯一ID
}

message PVP_PC_SyncOnePlayer
{
    required PVPSyncPlayerInfo 	data 	= 1; 		//玩家同步数据
}

message PVP_PC_SyncMultiPlayer
{
   repeated PVPSyncPlayerInfo 	data_list 	= 1; 	//玩家同步数据列表
}

message PVP_PC_RemovePlayer
{
   required uint32 PlyId 	= 1;	//玩家Id
}

message PVP_CP_LeaveAttack
{
}

message PVP_PC_LoadBattle
{
	optional uint32 	player_id 	= 1; 	//玩家ID
	required uint32 	BattleId 	= 2;	//战场ID
	optional Point3D 	pt 			= 3;	//坐标
	optional float 		Dir			= 4;    //朝上
	optional int32      camp        = 5;    //阵容
	optional int32      Layer       = 6;    //层级
	optional int32 		SurplusTime = 7;    //剩余时间
}

message PVP_CP_LoadBattleOk
{

}


message PVPBuffer 
{
	required uint32 	EventId 	= 1;	//事件Id
	optional Point3D 	pt 			= 2;	//坐标
	optional float		Dir     	= 3;	//朝上
	optional float		Radius  	= 4;    //半径
	optional int32      nBufferId 	= 5;	//bufferID
}

message PVP_PC_LoadPVPBuffer 
{
	repeated PVPBuffer event_list = 1;    		//事件列表
}

message PVP_PC_AddPVPBuffer
{
	required PVPBuffer event = 1;             	//事件
}
	
message PVP_PC_DelPVPBuffer
{
	required uint32 	EventId 	= 1;		//事件Id
}     

message PVP_CP_DoPVPBuffer
{
	required uint32 	EventId 	= 1;		//事件Id
}   

message PVPFlagEvent 
{
	required uint32 	EventId 	= 1;	//事件Id
	optional Point3D 	pt 			= 2;	//坐标
	optional float		Dir     	= 3;	//朝上
	optional float		Radius  	= 4;    //半径
	optional int32      nBufferId 	= 5;	//bufferID
	optional int32      camp 		= 6;	//旗子阵容
}

message PVP_PC_LoadPVPFlagEvent 
{
	repeated PVPFlagEvent flag_list = 1;    	//事件列表
}

message PVP_CP_CaptureFlag
{
	required uint32 	EventId 	= 1;		//事件Id
}   

message PVP_PC_DelFlag
{
	required uint32 	EventId 	= 1;		//事件Id
} 

message PVP_CP_SubmitFlag
{
	required uint32 	EventId 	= 1;		//事件Id
}
	
    
message PVP_PC_AddFlag
{
	required PVPFlagEvent 	flag  = 1;		//事件Id
}   

message PVP_PC_DesFlag
{
	optional Point3D 	pt 			= 1;	//坐标
	optional float		Radius  	= 2;    //半径
}  

message PVP_PC_AttackEnd
{
	required int32 	winCmap  = 1;		//胜利阵容
}

message KillRanking
{
	required int32 	PlyID  	= 1;		//玩家ID
	optional int32  KillNum = 2;   		//击杀数
	optional int32  DieNum 	= 3;    	//死亡数
}


message PVP_PC_KillRanking
{
	repeated KillRanking 	list  = 1;		//击杀列表
}

message IntegralRanking
{
	required int32 	PlyID  		= 1;			//玩家ID
	optional int32  Integral 	= 2;   			//积分数
	optional int32  flagNum 	= 3;   			//旗子数
}

message PVP_PC_IntegralRanking
{
	repeated IntegralRanking 	list  = 1;		//积分列表
}

message PVP_PC_Dismiss
{
}

message PVP_CP_PVPSurrender
{
}

message PVP_PC_BattleBegin
{	
	optional uint32 battletype = 1;  // 1天梯赛 其他往后扩展
	optional uint64 starttime =2;	 //开战时间
}



