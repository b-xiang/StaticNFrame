option java_package = "proto.message";
package proto.message;

import "common.proto";

import "item.proto";

/*
enum Auction_CS_MsgID
{
	Auction_CS_GetAuctionInfo		= 3150, //获取自己拍卖的物品
	Auction_CS_AuctionItem 			= 3151, //拍卖物品
	Auction_CS_AuctionItemAgain 	= 3152, //重新上架物品
	Auction_CS_RemoveItem			= 3153, //取下物品
	Auction_CS_SearchItem			= 3154, //搜索物品
	Auction_CS_BrowseItem 			= 3155, //浏览物品
	Auction_CS_BuyItem 				= 3156, //购买物品
	Auction_CS_GetAttentionInfo 	= 3157, //获取关注信息
	Auction_CS_AttentionItem 		= 3158, //关注物品
	Auction_CS_CancelAttentionItem 	= 3159, //取消关注物品
	Auction_CS_GetCaseInfo 			= 3160, //获取拍卖案例
	Auction_CS_GetAuctionItemNum 	= 3161, //获取拍卖物品的数量
	Auction_CS_GetAuctionItem 		= 3162, //获取拍卖物品
}

enum Auction_SC_MsgID
{
	Auction_SC_GetAuctionInfo 		= 3150, //获取自己拍卖的物品
	Auction_SC_AuctionItem 			= 3151, //拍卖物品
	Auction_SC_AuctionItemAgain 	= 3152, //重新上架物品
	Auction_SC_RemoveItem			= 3153, //取下物品
	Auction_SC_SearchItem			= 3154, //搜索物品
	Auction_SC_BrowseItem 			= 3155, //浏览物品
	Auction_SC_BuyItem 				= 3156, //购买物品
	Auction_SC_GetAttentionInfo 	= 3157, //获取关注信息
	Auction_SC_AttentionItem 		= 3158, //关注物品
	Auction_SC_CancelAttentionItem 	= 3159, //取消关注物品
	Auction_SC_GetCaseInfo 			= 3160, //获取拍卖案例
	Auction_SC_GetAuctionItemNum 	= 3161, //获取拍卖物品的数量
	Auction_SC_GetAuctionItem 		= 3162, //获取拍卖物品

	Auction_SC_OtherBuy 			= 3170, //上架的物品被其他人购买
}
*/

//拍卖物品
message AuctionItem
{
	optional uint64 uuid 			= 1; //物品唯一ID
	optional int32 id 				= 2; //物品ID
	optional uint64 charid 			= 3; //所属玩家
	optional int32 status 			= 4; //状态(0:公示中 1:拍卖中 2:已被购买 3:已领取金币 4:到期)
	optional int32 gold 			= 5; //金币数
	optional int32 time 			= 6; //到期时间/已被购买记录购买时间
	optional int32 att_persons 		= 7; //关注人数

	optional Item item_info 		= 8; //物品信息
	optional Equip equip_info 		= 9; //装备信息
}

message Auction_CS_GetAuctionInfo
{
	
}

message Auction_SC_GetAuctionInfo
{
	optional int32 rate  			= 1; //利率(增加了10000倍需除以10000)
	repeated AuctionItem item_list 	= 2; //物品列表
}

message Auction_CS_AuctionItem
{
	optional uint64 uuid 			= 1; //物品唯一ID
	optional int32 num 				= 2; //物品数量
	optional int32 gold 			= 3; //拍卖金币数
}

message Auction_SC_AuctionItem
{
	optional int32 result 			= 1; //结果
	optional AuctionItem item_info 	= 2; //物品
}

message Auction_CS_AuctionItemAgain
{
	optional uint64 uuid 			= 1; //物品唯一ID 
}

message Auction_SC_AuctionItemAgain
{
	optional int32 result 			= 1; //结果
	optional AuctionItem item_info 	= 2; //物品
}

message Auction_CS_RemoveItem
{
	optional uint64 uuid 			= 1; //物品唯一ID
}

message Auction_SC_RemoveItem
{
	optional int32 result 			= 1; //结果
	optional uint64 uuid 			= 2; //物品唯一ID
}

message Auction_CS_SearchItem
{
	optional int32 is_again 		= 1; //是否是重新输入条件搜索(1:是 0:否)
	optional int32 is_auction 		= 2; //是否拍卖(1:拍卖物品 0:公示物品)
	optional int32 pro_id 			= 3; //business 表格ID
	repeated int32 item_id_list 	= 4; //物品ID列表(输入条件限制时筛选)
	optional int32 combat_min 		= 5; //最低战力
	optional int32 sort_type 		= 6; //排序规则(0:默认升序，1:降序)
	optional int32 price_min 		= 7; //最低价格
	optional int32 price_max 		= 8; //最高价格
	optional int32 quality_min 		= 9; //最小品质
	optional int32 quality_max 		= 10; //最大品质

	optional int32 start_index 		= 11; //开始索引(从0开始)
	optional int32 end_index 		= 12; //结束索引
}

message Auction_SC_SearchItem
{
	optional int32 total_num 		= 1; //符合条件的总数
	optional int32 start_index 		= 2; //开始索引(从0开始)
	optional int32 end_index 		= 3; //结束索引
	repeated AuctionItem item_list 	= 4; //物品列表
}

message Auction_CS_BrowseItem
{
	optional int32 is_again 		= 1; //是否是重新输入条件浏览(1:是 0:否)
	optional int32 is_auction 		= 2; //是否拍卖(1:拍卖物品 0:公示物品)
	optional int32 pro_id 			= 3; //business 表格ID
	repeated int32 item_id_list 	= 4; //物品ID列表(输入条件限制时筛选)
	optional int32 stren_lv 		= 5; //强化等级(0:无条件)
	optional int32 sort_type 		= 6; //排序规则(0:默认升序，1:降序)
	optional int32 quality_min 		= 7; //最小品质
	optional int32 quality_max 		= 8; //最大品质

	optional int32 start_index 		= 9; //开始索引(从0开始)
	optional int32 end_index 		= 10; //结束索引
}

message Auction_SC_BrowseItem
{
	optional int32 total_num 		= 1; //符合条件的总数
	optional int32 start_index 		= 2; //开始索引(从0开始)
	optional int32 end_index 		= 3; //结束索引
	repeated AuctionItem item_list 	= 4; //物品列表  
}

message Auction_CS_BuyItem
{
	optional uint64 uuid 			= 1; //物品唯一ID
	optional int32 buy_num 			= 2; //购买数量
}

message Auction_SC_BuyItem
{
	optional int32 result 			= 1; //结果
	optional uint64 uuid 			= 2; //物品唯一ID
	optional int32 buy_num 			= 3; //购买数量
	optional int32 remain_num 		= 4; //剩余数量
}

message Auction_CS_GetAttentionInfo
{
	optional int32 is_auction 		= 1; //是否拍卖(1:拍卖物品 0:公示物品)
}

message Auction_SC_GetAttentionInfo
{
	optional int32 is_auction 		= 1; //是否拍卖(1:拍卖物品 0:公示物品)
	repeated AuctionItem item_list 	= 2; //物品列表 
}

message Auction_CS_AttentionItem
{
	optional uint64 uuid 			= 1; //物品唯一ID
}

message Auction_SC_AttentionItem
{
	optional int32 result 			= 1; //结果
	optional uint64 uuid 			= 2; //物品唯一ID
	optional int32 att_persons 		= 3; //关注人数
}

message Auction_CS_CancelAttentionItem
{
	optional uint64 uuid 			= 1; //物品唯一ID
}

message Auction_SC_CancelAttentionItem
{
	optional int32 result 			= 1; //结果
	optional uint64 uuid 			= 2; //物品唯一ID
}

message Auction_CS_GetCaseInfo
{
	optional int32 id 				= 1; //物品ID
}

message Auction_SC_GetCaseInfo
{
	optional int32 recommend_price 	= 1; //推荐价格
	repeated AuctionItem item_list 	= 2; //物品列表
}

message Auction_CS_GetAuctionItemNum
{
	optional int32 is_auction 		= 1; //是否拍卖(1:拍卖物品 0:公示物品)
	repeated int32 pro_id_list 		= 2; //business 表格ID列表
}

message Auction_SC_GetAuctionItemNum
{
	optional int32 is_auction 		= 1; //是否拍卖(1:拍卖物品 0:公示物品)
	repeated IDNum id_num_list 		= 2; //ID数量列表
}

message Auction_CS_GetAuctionItem
{
	optional uint64 item_uuid 		= 1; //物品唯一ID(查询唯一的一个拍卖行物品)
	optional int32 item_id 			= 2; //物品表格ID(查询这个物品ID所有买卖的物品)
	optional int32 start_index 		= 3; //开始索引(从0开始)
	optional int32 end_index 		= 4; //结束索引
}

message Auction_SC_GetAuctionItem
{
	optional int32 total_num 		= 1; //符合条件的总数
	optional int32 start_index 		= 2; //开始索引(从0开始)
	optional int32 end_index 		= 3; //结束索引
	repeated AuctionItem item_list 	= 4; //物品列表
}

message Auction_SC_OtherBuy
{
	optional AuctionItem item 		= 1; //物品
}