package proto.message;

import "common.proto";

/*
enum Team_CS_MsgID
{
    Team_CS_SetTeamOutObj = 3300,               // 设置队伍目标
    Team_CS_GetTeamList = 3301,                 // 获取队伍列表
    Team_CS_CreateTeam = 3302,                  // 创建队伍
    Team_CS_ApplyTeam = 3303,                   // 加入队伍
    Team_CS_TeamQuit = 3304,                    // 退出队伍
    Team_CS_TeamAppoint = 3305,                 // 任命队长
    Team_CS_TeamKick = 3306,                    // 踢出队伍
    Team_CS_TempLeave = 3307,                   // 暂离队伍
    Team_CS_TeamAuto = 3308,                    // 设置队伍自动匹配
    Team_CS_MemberAuto = 3309,                  // 设置队员自动匹配
    Team_CS_TeamInvite = 3310,                  // 邀请玩家
    Team_CS_SetTeamBeInvite = 3311,             // 同意/拒绝被邀请加入队伍
    Team_CS_SetTeamAllow = 3313,                // 是否同意申请
    Team_CS_SetTeamAllowOneTime = 3314,         // 一键是否同意申请
    Team_CS_MatchingQueueInfo = 3315,         	// 请求获取匹配队列信息
    Team_CS_UpdateTeamInfo = 3316,         	// 请求同步队伍信息
    Team_CS_FollowLeader = 3317,		// 请求跟随队长
    Team_CS_SummonFollower = 3325,           	//队长召唤所有队员到身边来

    Team_CS_SetIgnoreTeamInvite = 3327,           	//设置屏蔽或取消屏蔽组队信息
    Team_CS_QueryIgnoreTeamInvite = 3328,           	//请求屏蔽状态
    Team_CS_TeamReady = 3333,           	//准备状态
}
    
enum Team_SC_MsgID  
{
    Team_SC_SetTeamOutObj = 3300,               // 设置队伍目标
    Team_SC_GetTeamList = 3301,                 // 获取队伍列表
    Team_SC_CreateTeam = 3302,                  // 创建队伍
    Team_SC_ApplyTeam = 3303,                   // 加入队伍
    Team_SC_TeamQuit = 3304,                    // 退出队伍
    Team_SC_TeamAppoint = 3305,                 // 任命队长
    Team_SC_TeamKick = 3306,                    // 踢出队伍
    Team_SC_TempLeave = 3307,                   // 暂离队伍
    Team_SC_TeamAuto = 3308,                    // 设置队伍自动匹配
    Team_SC_MemberAuto = 3309,                  // 设置队员自动匹配
    Team_SC_TeamInvite = 3310,                  // 邀请玩家
    Team_SC_SetTeamAllow = 3313,                // 是否同意申请
    Team_SC_SetTeamAllowOneTime = 3314,         // 一键是否同意申请
    Team_SC_MatchingQueueInfo = 3315,         	// 返回请求获取匹配队列信息
    Team_SC_UpdateTeamInfo = 3316,              // 同步队伍信息
    Team_SC_FollowLeader = 3317,		// 跟随队长

    Team_SC_UpdateTeamBeInvite = 3321,          // 通知玩家被邀请加入队伍
    Team_SC_UpdateApplyList = 3322,             // 主动同步申请列表
    Team_SC_UpdateTeamMemberTick = 3323,        // 同步队伍成员被踢除信息
    Team_SC_UpdateTeamLevelInfo = 3324,         // 主动同步队伍成员等级信息
    Team_SC_SummonFollower = 3325,           	//队长召唤所有队员到身边来
    Team_SC_LeaderSummon = 3326,           	//队长召唤信息同步给所有队员
    Team_SC_SetIgnoreTeamInvite = 3327,           	//设置屏蔽或取消屏蔽组队信息
    Team_SC_QueryIgnoreTeamInvite = 3328,           	//请求屏蔽状态
    Team_SC_ErrorInfo = 3330,           	//主动推送给客户端一些组队或多人任务相关的错误码
    Team_SC_UpdateCurrentHp = 3331,           	//主动推送给客户端队伍中玩家血量信息
    Team_SC_TeamReady = 3333,           	//准备状态
}   
*/  

// 队员信息
message ProtoTeamManInfo    
{
    required uint32 plyId = 1;                  // id
    required int32 job = 2;                     // 职业
    required int32 level = 3;                   // 等级
    optional int32 status = 4;                  // 入队状态 (1:跟随 2:暂离)
    required string name = 5;                   // 名字
    repeated int32 equipID_list = 6; 			// 穿戴的装备ID列表
    optional uint64 plyuuid = 7;                   // uuid
    optional int32 identity = 8;                 // 身份
    optional int32 combat = 9; //战力 
    optional bool isReady = 10; // 是否准备
    optional int32 Demonhunterlevel = 11;//猎魔人等级
	optional uint32 suit_id = 12; //套装
}

// 队伍信息
message ProtoTeamInfo
{
    required int32 teamId = 1;                  // 队伍id
	required int32 numLimit = 2;                // 人数上限
    optional uint32 leaderId = 3;               // 队长id
	required int32 teamAuto = 4;                // 是否自动匹配
    optional ProtoTeamOutObj teamOutObj = 5;    // 队伍目标信息
    repeated ProtoTeamManInfo teamManList = 6;  // 队员列表
	optional int32 needCombat = 7; // 需求战力
}

// 主动同步队伍成员等级信息
message Team_SC_UpdateTeamLevelInfo
{
	required int32 plyId = 1;					// id
    required int32 level = 2;                   // 等级
}

// 队伍列表
message ProtoTeamListTeamInfo
{
    required int32 teamId = 1;                  // 队伍id
	required int32 peopleNum = 2;               // 当前人数
	required int32 numLimit = 3;                // 人数上限
    optional ProtoTeamManInfo leaderInfo = 4;   // 队长信息
    optional ProtoTeamOutObj teamOutObj = 5;    // 队伍目标信息
	optional int32 totalCombat = 6;// 总战力	
	optional int32 leaderCombat = 7; // 队长战力
	optional int32 needCombat = 8; // 需求战力
}

// 队伍目标信息
message ProtoTeamOutObj
{   
    required int32 obj = 1;                     // 任务目标
    required int32 levelMin = 2;                // 最低等级
    required int32 levelMax = 3;                // 最高等级
    required int32 needComBat = 4;		// 需求战力
}   
    
// 设置队伍目标   
message Team_CS_SetTeamOutObj   
{       
    required ProtoTeamOutObj obj = 1;           // 队伍目标
}   
    
// 返回设置队伍目标 
message Team_SC_SetTeamOutObj   
{   
	required int32 result = 1;  
}   

// 请求获取匹配队列信息
message Team_CS_MatchingQueueInfo
{
    required int32 obj = 1;           			// 任务目标
}

// 返回匹配队列信息
message Team_SC_MatchingQueueInfo
{
	required int32 nTeamNum = 1;				// 队伍数量
	required int32 nSingleNum = 2;				// 单人匹配数量
	required int32 obj = 3;           			// 任务目标
}
    
// 获取队伍列表   
message Team_CS_GetTeamList 
{   
    required int32 obj = 1;                     // 任务目标
}

// 返回获取队伍列表
message Team_SC_GetTeamList
{
    required int32 result = 1;
    repeated ProtoTeamListTeamInfo teamInfo = 2;
}

// 创建队伍
message Team_CS_CreateTeam
{
	optional int32 needCombat = 1;	 //需求战力
}

// 返回创建队伍
message Team_SC_CreateTeam
{
	required int32 result = 1;
}

// 加入队伍
message Team_CS_ApplyTeam
{
    required int32 teamId = 1;             // 队伍id
}

// 返回加入队伍
message Team_SC_ApplyTeam
{
	required int32 result = 1;
    optional int32 teamId = 2;             // 队伍id
}

// 退出队伍
message Team_CS_TeamQuit
{
    required int32 teamId = 1;             // 队伍id
}

// 返回退出队伍
message Team_SC_TeamQuit
{
	required int32 result = 1;
}

// 任命队长
message Team_CS_TeamAppoint
{
    required uint32 plyId = 1;
    required int32 appoint = 2;             // 1:任命 2:取消
}

// 返回任命队长
message Team_SC_TeamAppoint
{
	required int32 result = 1;
}

// 踢出队伍
message Team_CS_TeamKick
{
    required uint32 plyId = 1;
}

// 返回踢出队伍
message Team_SC_TeamKick
{
	required int32 result = 1;
    optional string beKickName = 2; // 被踢出的玩家名字
}

// 暂离队伍
message Team_CS_TempLeave
{
    required uint32 plyId = 1;
    required int32 status = 2;                // 1:回归 2:暂离
}

// 返回暂离队伍
message Team_SC_TempLeave
{
	required int32 result = 1;
}

// 设置队伍自动匹配
message Team_CS_TeamAuto
{
	required int32 isAuto = 1;             // 1:自动 0:取消自动
}

// 返回设置队伍自动匹配
message Team_SC_TeamAuto
{
	required int32 result = 1;
}

// 设置队员自动匹配
message Team_CS_MemberAuto
{
	required int32 isAuto = 1;             // 1:自动 0:取消自动
	required int32 obj = 2;                // 任务目标
}

// 返回设置队员自动匹配
message Team_SC_MemberAuto
{
	required int32 result = 1;
	required int32 isAuto = 2;             // 1:自动 0:取消自动
}

// 邀请玩家
message Team_CS_TeamInvite
{
    required uint64 plyId = 1;
}

// 返回邀请玩家
message Team_SC_TeamInvite
{
	required int32 result = 1;
}

// 同意/拒绝被邀请加入队伍
message Team_CS_SetTeamBeInvite
{
    required bool allow = 1;                // 1:允许 0:拒绝
    required int32 teamId = 2;              // 队伍id
}

// 返回同意/拒绝被邀请加入队伍
message Team_SC_SetTeamBeInvite
{
	required int32 result = 1;
}

// 是否同意申请
message Team_CS_SetTeamAllow
{
    required uint32 plyId = 1;
    required bool allow = 2;                 // 1:允许 0:拒绝
}

// 返回是否同意申请
message Team_SC_SetTeamAllow
{
	required int32 result = 1;
}

// 一键是否同意申请
message Team_CS_SetTeamAllowOneTime
{   
    required bool allow = 1;                 // 1:允许 0:拒绝
}

// 返回一键是否同意申请
message Team_SC_SetTeamAllowOneTime
{
	required int32 result = 1;
}

// 请求同步队伍信息
message Team_CS_UpdateTeamInfo
{

}

// 主动同步队伍信息
message Team_SC_UpdateTeamInfo
{
    optional ProtoTeamInfo teamInfo = 1;
}

// 主动通知玩家被邀请加入队伍
message Team_SC_UpdateTeamBeInvite
{
    required int32 teamId = 1;              // 队伍id
	optional string name = 2;				// 邀请者名字
	optional int32 obj = 3;                // 任务目标
	optional int32 teamnum = 4;                // 队伍人数
}

// 主动同步申请列表
message Team_SC_UpdateApplyList
{
    repeated ProtoTeamManInfo teamManList = 1;
}

// 同步队伍成员被踢除信息
message Team_SC_UpdateTeamMemberTick
{
    optional string name = 1; // 队长名字
}

// 请求跟随队长
message Team_CS_FollowLeader
{
	
}

// 返回跟随队长
message Team_SC_FollowLeader
{
	required int32 result = 1;
	optional bool changeMap = 2;		// 是否跳转地图
	optional Point3D pt = 3;			// 队长位置
}
message Team_CS_SummonFollower
{
}
message	Team_SC_SummonFollower
{
	required int32 result = 1;
}
message	Team_SC_LeaderSummon
{
}
message Team_CS_SetIgnoreTeamInvite
{
    required bool allow = 1;                 // 1:允许 0:拒绝
}
message Team_SC_SetIgnoreTeamInvite
{
    required int32 result = 1;
}
message Team_CS_QueryIgnoreTeamInvite
{
}
message Team_SC_QueryIgnoreTeamInvite
{
    required bool allow = 1;                 // 1:允许 0:拒绝
}
message Team_SC_ErrorInfo           	//主动推送给客户端一些组队或多人任务相关的错误码
{
    required int32 result = 1;
}
message ProtoTeamManHPInfo
{
    required uint32 plyId = 1;                  // id
    required uint32 maxHp = 2;			// 最大HP
    required uint32 Hp = 3;			//当前HP
}
message Team_SC_UpdateCurrentHp
{
    repeated ProtoTeamManHPInfo HpList = 1;  //队伍中血量信息
}
message Team_CS_TeamReady
{
     required bool status = 1;// false 不准备 true 准备
}
message Team_SC_TeamReady
{
    required int32 result = 1;
}
