option java_package = "proto.message";
package proto.message;
import "common.proto";

/*
enum Match_CS_MsgID
{

	Match_CS_PVPMatch 			= 3700, //PVP匹配请求
	Match_CS_CancelPVPMatch 	= 3701, //取消PVP匹配请求

	
	//获取数据

	Match_CS_GetPVPInfo 		= 3720, //获取PVP战斗信息
	Match_CS_GetPVPReward 		= 3721, //领取PVP战斗奖励

	Match_CS_GetArenaInfo 		= 3722, //获取竞技场信息
	Match_CS_GetArenaReward 	= 3723, //领取竞技场战斗奖励
	
	Match_CS_GetBoatPVPInfo 	= 3724, //获取海战PVP信息
	Match_CS_GetBoatPVPReward 	= 3725, //领取海战PVP奖励
}

enum Match_SC_MsgID
{
	Match_SC_PVPMatch 			= 3700, //PVP匹配请求
	Match_SC_CancelPVPMatch 	= 3701, //取消PVP匹配请求
	
	Match_SC_PVPResult 			= 3702, //PVP结算结果
	Match_SC_ArenaResult 		= 3703, //竞技场结算结果
	Match_SC_ContinueWinNum 	= 3704, //推送连续胜场信息
	Match_SC_ArenaMatchResult	= 3705, //竞技场匹配结果
	
	Match_SC_NotifyOtherMatch	= 3706, //通知其他人匹配(组队时使用)


	//获取数据

	Match_SC_GetPVPInfo 		= 3720, //获取PVP战斗信息
	Match_SC_GetPVPReward 		= 3721, //领取PVP战斗奖励

	Match_SC_GetArenaInfo 		= 3722, //获取竞技场信息
	Match_SC_GetArenaReward 	= 3723, //领取竞技场战斗奖励
	
	Match_SC_GetBoatPVPInfo 	= 3724, //获取海战PVP信息
	Match_SC_GetBoatPVPReward 	= 3725, //领取海战PVP奖励
}
*/

//PVP战斗信息
message PVPInfo
{
	optional int32 score 			= 1; //积分
	optional int32 win_num 			= 2; //胜场
	optional int32 total_num 		= 3; //总场
	optional int32 continue_num 	= 4; //连胜场数
	optional int32 first_reward 	= 5; //首胜奖励状态(0:未完成 1:已完成 2:已领取)
	optional int32 three_reward 	= 6; //三场奖励状态(0:未完成 1:已完成 2:已领取)
	optional int32 three_win_reward = 7; //三胜奖励状态(0:未完成 1:已完成 2:已领取)
}

//竞技场战斗信息
message ArenaInfo
{
	optional int32 score 			= 1; //积分
	optional int32 stage 			= 2; //段位
	optional int32 win_num 			= 3; //胜场
	optional int32 total_num 		= 4; //总场
	optional int32 continue_num 	= 5; //连胜场数
	repeated int32 rewardlist 		= 6; //已经领取的奖励
}

message Match_CS_PVPMatch
{
	optional int32 usual_id 	= 1; //活动表格ID
}

message Match_SC_PVPMatch
{
	optional int32 result 		= 1; //结果
	optional string ip 			= 2; //IP
	optional int32 port 		= 3; //端口
	optional uint64 charid 		= 4; //玩家唯一ID
}

message Match_CS_CancelPVPMatch
{

}

message Match_SC_CancelPVPMatch
{
	optional int32 result 		= 1; //结果
}

message PVPRewardItem
{
	optional int32 id 	= 1; //ID
	optional int32 num 	= 2; //数量
}

message Match_SC_PVPResult
{
	optional int32 result 			 	= 1; //结果(1:胜利 2:失败 3:平局)
	optional int32 pass_time 			= 2; //通关时间
	repeated PVPRewardItem item_list 	= 3; //物品列表
	optional int32 get_score 			= 4; //获得积分
	optional int32 usual_id 			= 5; //usual表格ID
	optional PVPInfo pvp_info		 	= 6; //pvp数据
}

message Match_SC_ArenaResult
{
	optional int32 result 			 	= 1; //结果(1:胜利 2:失败 3:平局)
	optional int32 pass_time 			= 2; //通关时间
	repeated PVPRewardItem item_list 	= 3; //物品列表
	optional int32 get_score 			= 4; //获得积分
	optional int32 usual_id 			= 5; //usual表格ID
	optional ArenaInfo arena_info		= 6; //竞技场数据
	optional uint32 reason 				= 7; //胜利原因		0,平局 1,战胜对手 2,超时战斗  3, 对手未进入战场 4,对手投降
}

message Match_SC_ContinueWinNum
{
	optional uint64 charid 		= 1; //玩家唯一ID
	optional string name 		= 2; //角色名
	optional int32 win_num 		= 3; //胜场
	optional int32 usual_id 	= 4; //活动表格ID
}

message Match_SC_ArenaMatchResult
{
	optional int32 result 		= 1; //结果
	optional string ip 			= 2; //IP
	optional int32 port 		= 3; //端口
	optional uint64 charid 		= 4; //玩家唯一ID
	optional string name 		= 5; //对手名字
	optional int32 career 		= 6; //对手职业
	optional int32 level 		= 7; //对手等级
	optional string guild_name 	= 8; //对手所在公会名
	optional int32 score 		= 9; //对手所得竞技场积分
	optional uint32 dhlev		= 10; //猎魔人等级
}

message Match_SC_NotifyOtherMatch
{

}

message Match_CS_GetPVPInfo
{
	 optional int32 usual_id 		= 1; //活动ID
}

message Match_SC_GetPVPInfo
{
	optional int32 result 			= 1; //结果
	optional int32 usual_id 		= 2; //活动ID
	optional int32 remain_time 		= 3; //剩余时间(秒)
	optional PVPInfo pvp_info 		= 4; //PVP信息
}

message Match_CS_GetPVPReward
{
	optional int32 batt_id 			= 1; //战场ID
	optional int32 reward_type 		= 2; //奖励类型(1:首胜 2:三场 3:三胜)
}

message Match_SC_GetPVPReward
{
	optional int32 result 			= 1; //结果
	optional int32 reward_type 		= 2; //奖励类型(1:首胜 2:三场 3:三胜)
}

message Match_CS_GetArenaInfo
{
	optional int32 usual_id 		= 1; //usual 表格ID
}

message Match_SC_GetArenaInfo
{
	optional int32 result 			= 1; //结果
	optional int32 usual_id 		= 2; //活动ID
	optional int32 remain_time 		= 3; //剩余时间(秒)
	optional ArenaInfo arena_info 	= 4; //竞技场信息
}

message Match_CS_GetArenaReward
{
	optional uint32 rewardid 		= 1; //奖励ID
}

message Match_SC_GetArenaReward
{
	optional int32 result 			= 1; //结果
	optional int32 rewardid 		= 2; //奖励ID
}

message Match_CS_GetBoatPVPInfo
{
	optional int32 usual_id 		= 1; //usual 表格ID
}

message Match_SC_GetBoatPVPInfo
{
	optional int32 result 				= 1; //结果
	optional int32 usual_id 			= 2; //活动ID
	optional int32 remain_time 			= 3; //剩余时间(秒)
	optional PVPInfo boat_pvp_info 		= 4; //海战PVP信息
}

message Match_CS_GetBoatPVPReward
{
	optional int32 reward_type 		= 1; //奖励类型(1:首胜 2:三场 3:三胜)
}

message Match_SC_GetBoatPVPReward
{
	optional int32 result 			= 1; //结果
	optional int32 reward_type 		= 2; //奖励类型(1:首胜 2:三场 3:三胜)
}


message Match2Battle_SendPlyData
{
	optional int32  id			= 1;
	optional BattlePlayerInfo sPlyInfo = 2;
}


message Match2Battle_SendAllPlyData
{
	optional int32  id			= 1;
	optional int32  mapid			= 2;
	repeated BattlePlayerInfo sPlyInfo = 3;
}

message Match2Game_PVPResult
{
	optional uint64 playerid =1;
	optional uint32 usualid =2;
	optional uint64 ntime=3;
	optional uint32 result=4;
	optional uint32 killnum=5;
	repeated uint64 rival=6;			//对手id
	optional uint32 reason =7;
}
message Match2Game_CreateRoom
{
	optional int32 result 			= 1; //结果
	optional int32 roomid 			=2 ; //房间号
}
message Battle2Match_PVPResult
{
	optional uint32 pvpid=1;
	optional uint32 winner=2;
	optional uint64 costtime=3;
	optional uint32 reason=4;	//胜利原因
}
