option java_package = "proto.message";
package proto.message;
import "common.proto";
import "item.proto";

/*
enum Rank_CS_MsgID
{
	eRank_CS_GetRankInfo 	= 3930, //获取排行榜信息
	eRank_CS_ReqActivityReward = 3931, //获取活动排行榜奖励
	eRank_CS_ReqRankRewardData = 3932, //获得排行榜奖励信息
	eRank_CS_ReqPvPSignRankFirst = 3933, //获得单人竞技场第一名
}

enum Rank_SC_MsgID
{
	eRank_SC_GetRankInfo 	= 3930, //获取排行榜信息
	eRank_SC_AckActivityReward = 3931, //获取活动排行榜奖励
	eRank_SC_AckRankRewardData = 3932, //获得排行榜奖励信息
	eRank_SC_AckPvPSignRankFirst = 3933, //获得单人竞技场第一名
}
*/

//排行类型
enum eRankType
{
	eRankType_PlayerLevel 			= 1; //玩家等级
	eRankType_PlayerCombat 			= 2; //玩家战力
	eRankType_EquipCombat 			= 3; //装备战力
	eRankType_Ride 					= 4; //坐骑
	eRankType_Pet					= 5; //宠物
	eRankType_Mercenary				= 6; //佣兵
	eRankType_Boat					= 7; //船舰
	eRankType_Constellation 		= 8; //星座
	eRankType_Achievement 			= 9; //成就
	eRankType_Chivalry 				= 10; //友善
	eRankType_Guild					= 11; //公会战力
	eRankType_GuildDevote			= 12; //公会周贡献
	eRankType_OffBattle   			= 13; //离线竞技场
	eRankType_Ladder_Single			= 14; //单人天梯
	eRankType_Battle_Score			= 15; //战场积分
	eRankType_Battle_HeadHunting	= 16; //海盗首领
	eRankType_Battle_DemonHunting	= 17; //猎魔行动
	eRankType_Battle_GuardGoddess	= 18; //守护女神
	eRankType_Awaken				= 19; //觉醒
	eRankType_ReCharge				= 20; //充值
	eRankType_GodWeapon				= 21; //神器总战力
	eRankType_GuildBoom				= 22; //类型22，公会总繁荣
	eRankType_GuildBoss				= 23; //类型23，击杀公会BOSS等级

	eRankType_Pet1                  = 101; //类型101，pet数据表“类型”字段为“1”的宠物
	eRankType_Pet2                  = 102; //类型102，pet数据表“类型”字段为“2”的宠物
	eRankType_Pet3                  = 103; //类型103，pet数据表“类型”字段为“3”的宠物
	eRankType_Pet4                  = 104; //类型104，pet数据表“类型”字段为“4”的宠物
	eRankType_Pet5                  = 105; //类型105，pet数据表“类型”字段为“5”的宠物
	eRankType_Pet6                  = 106; //类型106，pet数据表“类型”字段为“6”的宠物
	eRankType_Pet7                  = 107; //类型107，pet数据表“类型”字段为“7”的宠物
	eRankType_Pet8                  = 108; //类型108，pet数据表“类型”字段为“8”的宠物
	eRankType_Pet9                  = 109; //类型109，pet数据表“类型”字段为“9”的宠物
	eRankType_Mercen1               = 201; //类型201，mercenary数据表“类型”字段为“1”的佣兵
	eRankType_Mercen2               = 202; //类型202，mercenary数据表“类型”字段为“2”的佣兵
	eRankType_Mercen3               = 203; //类型203，mercenary数据表“类型”字段为“3”的佣兵
	eRankType_Mercen4               = 204; //类型204，mercenary数据表“类型”字段为“4”的佣兵
	eRankType_Mercen5               = 205; //类型205，mercenary数据表“类型”字段为“5”的佣兵
	eRankType_Mercen6               = 206; //类型206，mercenary数据表“类型”字段为“6”的佣兵
	eRankType_Mercen7               = 207; //类型207，mercenary数据表“类型”字段为“7”的佣兵
	eRankType_Mercen8               = 208; //类型208，mercenary数据表“类型”字段为“8”的佣兵
	eRankType_Mercen9               = 209; //类型209，mercenary数据表“类型”字段为“9”的佣兵

}

//排行榜快照记录
message RankDataCopy
{
	optional uint32 ranking =1; //排名
	optional string name	=2;	//名字
	optional uint32 value 	=3;	//排行榜的值
}

//第一名显示用
message RankFirstBody
{
	optional string firstname 	=1;	//第一名
	optional uint32 skinid 		=2;	//皮肤ID
	optional uint32 suitid 		=3;	//套装ID
	optional uint32 weaponid 	=4; //武器ID
	optional uint32 weaponskin 	=5; //武器皮肤
	optional uint32 showid		=6; //(预留 还没实现)根据不同的排行榜,展示不同的模型没有则为0 (例如宠物则id为宠物数据表ID,以此类推)
	optional uint32 career		=7; //职业
	optional uint64 playerid	=8; //玩家ID
}

message RewardRecord
{
	optional uint32 condition = 1; 		//条件ID
	optional int32  counts = 2;			//领取的次数
	repeated uint64 playerid = 3;		//已领取玩家的ID
	optional bool	isget = 4;			//获取信息的玩家有没有获得奖励  
}

//活动排行榜数据
message ActivityRank
{
	optional uint32 ranktype = 1;	 //rechargetime中的序号ID
	repeated RewardRecord reward =2; //奖励领取记录
	optional RankFirstBody first=3;  //第一名信息
	optional uint32 isOver = 4;      //0表示 还未开启(读取服务器的排行榜数据) 1表示开启中(服务器数据) 2结束(读取Copy数据)
	repeated RankDataCopy copy=5;    //活动结束后的排行榜信息快照
}

message ActivityRankList
{
	repeated ActivityRank data = 1;
}

message SaveActivityRank
{
	optional ActivityRankList content =1;
}

message AuxData 					
{
	optional uint32 exid=1;
	optional uint32 fitvalue=2; 
	repeated uint32 equiplist =3;
	repeated uint32 skilllist=4;
	repeated uint32 skilllev=5;
}

message RankDBData
{
	optional uint64 charid 		 = 1;  //唯一ID
	optional string charname 	 = 2;  //玩家名字
	optional int32 	rank_ranking = 4;  //排行名次
	optional uint64 updatetime 	 = 5;  //更新时间
	optional int32 	rank_value 	 = 6;  //排行具体数值(根据 eRankType)
	optional uint64 guildid		 = 7;  //公会ID
	optional string guildname 	 = 8;  //公会名
	optional uint32 career		 = 9;  //职业
	optional uint32 dhlev		 = 10;  //猎魔人等级	
	optional uint32 fightval	 = 11; //战斗力
	optional uint32 skinid 		 = 12; //皮肤ID
	optional uint32 weaponskin 	 = 13; //武器皮肤
	repeated uint32 equiplist	 = 14; //装备列表
	optional uint32 suitid		 = 15; //套装
	repeated AuxData datalist	 = 16; //成长系统信息
}

message RankDBList
{
	repeated RankDBData datas = 1;
}

message SaveRankData
{
	optional int32 rank_id 			=1;
	optional int32 rank_type 		=2;
	optional RankDBList rank_datas 	=3;
	optional uint64 resettime 		=4;
	optional RankFirstBody first	=5; //第一名的玩家显示(目前仅仅用于 记录单人排行榜上一次第一名信息)
}

message Rank_CS_GetRankInfo
{
	required eRankType rank_type 	= 1; //排行类型
	optional int32 ranking_start 	= 2; //开始名次(从1开始)
	optional int32 rankint_end 		= 3; //结束名次
}

message Rank_SC_GetRankInfo
{
	required eRankType rank_type 	= 1; //排行类型
	optional int32 total_num 		= 2; //排行榜总数量
	repeated RankDBData rank_list	= 3; //排行榜列表
	optional RankDBData rank_self	= 4; //自己的排名
}

message Rank_CS_ReqActivityReward
{
	optional uint32 conditionid = 1;	//rankingcondition 表中的ID
}

message Rank_CS_ReqRankRewardData
{
	optional uint32 ranktype = 1;  //rechargetime中的序号ID
}

message Rank_SC_AckRankRewardData
{
	optional ActivityRank rankdata =1;
}

message Rank_SC_AckPvPSignRankFirst
{
	optional RankFirstBody data=1;
}
