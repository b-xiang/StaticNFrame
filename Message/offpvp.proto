option java_package = "proto.message";
package proto.message;
import "common.proto";
/*
enum eOffPVP_CS_MsgID
{
	eOffPVP_CS_GetSelfData		= 3000,
	eOffPVP_CS_GetOtherData,
	eOffPVP_CS_ChangeFighter,
	eOffPVP_CS_Fight,
	eOffPVP_CS_BuyCounts,
	eOffPVP_CS_GetReword,
	eOffPVP_CS_GetPVPRecord,
	//eMsgId_OffPVP_End
};

enum eOffPVP_SC_MsgID
{
	eOffPVP_SC_GetSelfData = 3000,
	eOffPVP_SC_GetOtherData,
	eOffPVP_SC_ChangeFighter,
	eOffPVP_SC_FightResult,
	eOffPVP_SC_BuyCountsResult,
	eOffPVP_SC_GetRewordResult,
	eOffPVP_SC_GetPVPRecordResult,
	eOffPVP_SC_UpdateReword,
	eOffPVP_SC_UpdateCounts,
	//eMsgId_OffPVP_End
};
*/

message OffPVPRecord			//战报
{
	optional uint64 fighter =1;		//挑战者ID
	optional string fitname =2;		//挑战者名字
	optional uint32 foldranking =3;	//挑战者 战后的排名
	optional uint32 fnewranking =4;	//挑战者 战后的排名
	optional uint64 behiter =5;		//被挑战者ID
	optional string bitname =6;		//被挑战者名字
	optional uint32 boldranking =7;	//被挑战者 战后排名
	optional uint32 bnewranking =8;	//被挑战者 战后排名
	optional uint64 recordtime =9; 	//记录时间
}

message FighterInfo
{
	optional int32  ranking 	=1;
	optional int32  type 		=2; 	//0代表机器人 1代表玩家
	optional int32  fightvalue 	=3; 	//战斗力
	repeated int32  equipid		=5;		//玩家装备ID
	optional string playername	=6; 	//玩家名字
	optional int32  skinid		=7;		//皮肤ID
	optional int32  career		=8;		//职业
	optional uint32 level 		=9;		//等级
	optional uint32 suit_id 	=10; 	//套装
	optional int32  weaponskinid=11; 	//武器皮肤ID
	optional uint32 dhlevel		=12;    //猎魔等级
	repeated uint32 playerskill =13; 	//玩家技能
	optional PlayerEffect playeratt=14; //属性
	optional int32 petid		=15; 	//宠物ID
	optional uint64 playerid 	=16;	//玩家ID
}


message OffPVP_CS_GetSelfData
{
}

message OffPVP_SC_GetSelfData
{
	optional int32  fightcounts=1;  //剩余挑战次数
	optional uint64 rewordtime=2; 	//领取奖励时间
	optional int32  ranking=3;	   	//当前排名
	optional int32  officeid=4;		//官职ID
	optional uint32 showoffid = 5;  //显示用数据 官职ID  
	repeated FighterInfo infolist=6; //离线数据
	optional uint32 rewordid = 7; //可领奖ID
}

message OffPVP_CS_GetOtherData
{
	optional int32 officeid=1;		//官职ID  
}

message OffPVP_CS_ChangeFighter
{
	optional int32 officeid=1;		//官职ID 
}

message OffPVP_SC_GetOtherData
{
	optional int32 officeid=1;		//官职ID 
	repeated FighterInfo infolist=2;
}

message OffPVP_CS_Fight
{
	optional int32 ranking=1;  //挑战排名
}

message OffPVP_SC_FightResult
{
	optional int32 result=1;  //0 表示成功 1表示失败
	optional int32 errorcode=2; //错误码
	optional OfflineDataDetail data=3; 
}

message OffPVP_CS_BuyCounts
{
	
}

message OffPVP_SC_BuyCountsResult
{
	optional int32 result=1;
	optional int32 counts=2;
}

message OffPVP_CS_GetReword
{

}

message OffPVP_SC_GetRewordResult
{
	optional int32 result=1;
	optional int64 nexttime=2;
}


message OffPVP_SC_UpdateCounts
{
	optional int32 newcounts=1;
}

message OffPVP_CS_GetPVPRecord
{

}

message OffPVP_SC_GetPVPRecordResult
{
	optional int32 result=1;
	repeated OffPVPRecord datalist=2;
}












