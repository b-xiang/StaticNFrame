package proto.message;

/*
enum Skill_CS_MsgID
{
	Skill_CS_GetSkillInfo = 2900,       // 获取技能信息
	Skill_CS_UpSkill = 2901,            // 升级技能
	Skill_CS_SetFightSkill = 2902,      // 设置出站技能
	Skill_CS_UpMarkSkill = 2903,        // 升级印记
    Skill_CS_SetMarkSkill = 2904,       // 设置印记
	Skill_CS_UpOnKeySkill = 2905,       // 一键升级技能
	Skill_CS_UpTenSkill= 2906,			//升级十次公会技能 
	eSkill_CS_Relive = 2907,			//请求复活
}

enum Skill_SC_MsgID
{
	Skill_SC_GetSkillInfo = 2900,       // 获取技能信息
	Skill_SC_UpSkill = 2901,            // 升级技能    
	Skill_SC_SetFightSkill = 2902,      // 设置出站技能
	Skill_SC_UpMarkSkill = 2903,        // 升级印记
    Skill_SC_SetMarkSkill = 2904,       // 设置印记
	Skill_SC_UpOnKeySkill = 2905,       // 一键升级技能
    Skill_SC_UpTenSkill= 2906,			//升级十次公会技能 
    Skill_SC_UpdateSkillInfo = 2910,    // 主动同步技能所有信息到客户端
}
*/

// 技能信息
message SkillInfo
{
    required int32 skillId = 1;         // 技能id
    required int32 level = 2;           // 技能等级
    required int32 pos = 3;             // 出站技能栏位置 (0:无 1、2、3分别对于3个位置)
	required int32 curMark = 4;         // 当前印记 (0:无)
	optional int32 skillexp = 5;		// 技能经验值
    repeated MarkInfo markInfo = 6;     // 印记信息
}

// 印记信息
message MarkInfo
{
    required int32 markId = 1;         // 印记id
    required int32 level = 2;          // 等级
}

message Skill_CS_GetSkillInfo
{

}

message Skill_SC_GetSkillInfo
{
	required int32 result = 1;
    repeated SkillInfo skillInfo = 2;
}

message Skill_CS_UpSkill
{
    required int32 skillId = 1;     // 技能id
}

message Skill_SC_UpSkill
{
	required int32 result = 1;
    optional int32 oldSkillId = 2;  // 老的id
    optional SkillInfo skillInfo = 3;
}

message Skill_CS_SetFightSkill
{
    required int32 skillId = 1;    // 技能id
    required int32 posDes = 2;     // 终点位置 (卸下:0)
}

message Skill_SC_SetFightSkill
{
	required int32 result = 1;
    repeated SkillInfo skillInfo = 2; // 更新有位置变化的技能信息
}

message Skill_CS_UpMarkSkill
{
    required int32 skillId = 1;     // 印记的技能id
    required int32 markId = 2;      // 印记id
}

message Skill_SC_UpMarkSkill
{
	required int32 result = 1;
    optional int32 skillId = 2;     // 印记的技能id
    optional int32 oldMarkId = 3;   // 老的id
    optional MarkInfo markInfo = 4; // 改变的印记信息
}

message Skill_CS_SetMarkSkill
{
    required int32 skillId = 1;     // 印记的技能id
    required int32 markId = 2;      // 要设置的印记
}

message Skill_SC_SetMarkSkill
{
	required int32 result = 1;
    optional int32 skillId = 2;     // 印记的技能id
    optional int32 curMark = 3;     // 当前印记 (0:无)
}

message ProtoOnKeySkillInfo
{
	optional int32 oldSkillId = 1;
	optional SkillInfo skillInfo = 2;
}

message Skill_CS_UpTenSkill
{
	required int32 oldSkillId = 1;
}

message Skill_SC_UpTenSkill
{
	required int32 result = 1;
	required ProtoOnKeySkillInfo skillInfo = 2;
	repeated int32 rollexp = 3;
}


message UpSkillData
{
	optional uint32 skillid =1;
	optional uint32 upcounts =2;
}

// 一键升级
message Skill_CS_UpOnKeySkill
{
    repeated UpSkillData upskillid = 1;
}

// 返回一键升级
message Skill_SC_UpOnKeySkill
{
	required int32 result = 1;
    repeated ProtoOnKeySkillInfo upinfo = 2;
}

message Skill_SC_UpdateSkillInfo
{
    repeated SkillInfo skillInfo = 1; // 技能信息
}