option java_package = "proto.message";
package proto.message;
import "common.proto";
import "item.proto";
import "welfare.proto";

/*
enum eMarketing_CS_MsgID
{
 	eMarketing_CS_QuerySevenDayTargetInfo = 4510, //获取七日目标信息
	eMarketing_CS_GetSevenDayTargetReward = 4511, // 领取奖励
	eActivity_CS_DiamondDouble_GetHistory = 4512, //钻石翻倍  获得记录
	eActivity_CS_DiamondDouble_Roll = 4513, //钻石翻倍  抽奖
	eActivity_CS_GetSevenDayTargetIntegralAward = 4515,  //领取七日目标积分奖励
	eActivity_CS_Investment_GetInfo = 4520, //投资计划 请求数据
	eActivity_CS_Investment_DoReward = 4521, //投资计划 领取奖励
	eActivity_CS_Investment_Open = 4522, //投资计划 开启投资计划
	eActivity_CS_DailyFirstCharge_Query    = 4523,  //获取首充信息
	eActivity_CS_DailyFirstCharge_Do      = 4524,  // 领取首充礼包

	eActivity_CS_LimitCharge_Query    = 4525,  //获取限时礼包信息
	eActivity_CS_LimitCharge_Do      = 4526,  // 领取限时礼包

	
	eActivity_CS_Roulette_Do = 4529,  // 幸运大轮盘 抽奖
	eActivity_CS_Roulette_Exchange = 4530,  // 幸运大轮盘 兑换
	eActivity_CS_Roulette_GetHistory = 4531, //幸运大轮盘  获得记录

	eActivity_CS_ContinuousCharge_Query = 4540,		//获取连续充值信息
	eActivity_CS_ContinuousCharge_Do = 4541,		//领取连续充值奖励

	eActivity_CS_SpecialSale_Query = 4542,			//获取绝版礼包信息
	eActivity_CS_SpecialSale_Do = 4543,				//领取绝版礼包奖励

	eActivity_CS_LostTreasure_Query = 4550,				//遗落宝藏，获取存储数据
	eActivity_CS_LostTreasure_QueryRecord = 4551,		//遗落宝藏，获取全服记录
	eActivity_CS_LostTreasure_Do = 4552,				//遗落宝藏，抽奖
	eActivity_CS_LostTreasure_Exchange = 4553,	//遗落宝藏，兑换
	eActivity_CS_LostTreasure_Fetch = 4554,			//遗落宝藏，取出

	eActivity_CS_MoneyTree_Query = 4560,				//摇钱树，获取记录
	eActivity_CS_MoneyTree_Do = 4561,					//摇钱树，摇一摇

	eActivity_CS_DiscountStore_Query = 4570,			//折扣商店，获取存储数据
	eActivity_CS_DiscountStore_Do = 4571,				//折扣商店，购买
}

enum eMarketing_SC_MsgID
{
 	eMarketing_SC_QuerySevenDayTargetInfo = 4510, //获取七日目标信息
	eMarketing_SC_GetSevenDayTargetReward = 4511, // 领取奖励
	eActivity_SC_DiamondDouble_GetHistory = 4512, //钻石翻倍  获得记录
	eActivity_SC_DiamondDouble_Roll = 4513, //钻石翻倍  抽奖
	eMarketing_SC_UpdateServerOpenDay = 4514, // 通知服务器当前是第几天
	eActivity_SC_GetSevenDayTargetIntegralAward = 4515, //领取七日目标积分奖励
	eActivity_SC_Investment_GetInfo = 4520, //投资计划 请求数据
	eActivity_SC_Investment_DoReward = 4521, //投资计划 领取奖励
	eActivity_SC_Investment_Open = 4522, //投资计划 开启投资计划
	eActivity_SC_DailyFirstCharge_Query    = 4523,  //获取首充信息
	eActivity_SC_DailyFirstCharge_Do      = 4524,  // 领取首充礼包

	eActivity_SC_LimitCharge_Query    = 4525,  //获取限时礼包信息
	eActivity_SC_LimitCharge_Do      = 4526,  // 领取限时礼包

	
	eActivity_SC_Roulette_Do = 4529,  // 幸运大轮盘 抽奖
	eActivity_SC_Roulette_Exchange = 4530,  // 幸运大轮盘 兑换
	eActivity_SC_Roulette_GetHistory = 4531,  // 幸运大轮盘 兑换
	eActivity_SC_Roulette_ExchangeCount = 4532,  // 幸运大轮盘 兑换计数

	eActivity_SC_Change = 4535;		// 活动数据变更
	eActivity_SC_ReloadCDN = 4536;		// 刷新CDN

	eActivity_SC_ContinuousCharge_Query = 4540,		//获取连续充值信息
	eActivity_SC_ContinuousCharge_Do = 4541,		//领取连续充值奖励

	eActivity_SC_SpecialSale_Query = 4542,			//获取绝版礼包信息
	eActivity_SC_SpecialSale_Do = 4543,				//领取绝版礼包奖励

	eActivity_SC_LostTreasure_Query = 4550,				//遗落宝藏，获取存储数据
	eActivity_SC_LostTreasure_QueryRecord = 4551,		//遗落宝藏，获取全服记录
	eActivity_SC_LostTreasure_Do = 4552,				//遗落宝藏，抽奖
	eActivity_SC_LostTreasure_Exchange = 4553,			//遗落宝藏，兑换
	eActivity_SC_LostTreasure_Fetch = 4554,				//遗落宝藏，取出

	eActivity_SC_MoneyTree_Query = 4560,				//摇钱树，获取记录
	eActivity_SC_MoneyTree_Do = 4561,					//摇钱树，摇一摇

	eActivity_SC_DiscountStore_Query = 4570,			//折扣商店，获取存储数据
	eActivity_SC_DiscountStore_Do = 4571,				//折扣商店，购买
}
*/

message SingleChargeBigGiftData
{
	required int32 id = 1; //ID
	required int32 isrecived =2;//是否已经领取
	optional int32 progress = 3;//进度
}

message Activity_CS_LimitCharge_Query 
{
	required int32 activityType = 1;
}
message Activity_SC_LimitCharge_Query 
{
	required int32 activityType = 1;
	repeated SingleChargeBigGiftData info =2 ;//领取状态
}
message Activity_CS_LimitCharge_Do
{
	required int32 activityType = 1;
	required int32 nID = 2; 
}
message Activity_SC_LimitCharge_Do
{
	required int32 activityType = 1;
	required uint32 result   = 2;//结果
	optional uint32 dropid = 3;//获得的掉落ID
}

message ProtoAllLimitChargeInfo
{
	repeated SingleChargeBigGiftData LimitChargeinfo = 1;
	repeated SingleChargeBigGiftData ChargeBigGiftinfo = 2;
	repeated SingleChargeBigGiftData TotalChargeGiftinfo = 3;
}
message ProtoAllChargeBigGiftInfo
{
	repeated SingleChargeBigGiftData info = 1;
}
message ProtoAllTotelChargeGiftInfo
{
	repeated SingleChargeBigGiftData info = 1;
}




message SingleSevenDayInfo 
{
	required int32 nID = 1; 
	required int32 nProgress = 2;//进度
	required int32 status = 3;//0, 未完成，1.已达到，未领取 2.已领取
}
message ProtoAllSevenDayTargetInfo
{
	repeated SingleSevenDayInfo allInfo = 1;
	repeated uint32 received_awards = 2;	//已领取七日目标积分奖励
	optional uint32 activity_id = 3;		//上次活动的ID
	optional uint32 integral = 4;			//积分
}

message Activity_CS_DailyFirstCharge_Query
{}
message Activity_CS_DailyFirstCharge_Do
{
	required bool isFirst = 1; // 是， 领首冲奖励 否 领每日首冲
	optional int32 dailyFirstId = 2;// 每日首冲ID
	optional int32 indexId = 3;//档次ID
}

message Activity_SC_DailyFirstCharge_Query
{
	required int32 firstawardstatus = 1; // 首冲状态 见AwardStatus
	repeated SingleAwardData info =2 ;//每日首冲状态
	required int32 todayTotal = 3;//今日充值总数
}
message Activity_SC_DailyFirstCharge_Do
{
	required uint32 result   = 1;//结果
}

message Marketing_CS_QuerySevenDayTargetInfo
{}
message Marketing_SC_QuerySevenDayTargetInfo
{
	repeated SingleSevenDayInfo allInfo = 1;
	repeated int32 received_awards = 2;	//已领取的七日目标积分奖励
	optional int32 integral = 3;	//积分
}
message Marketing_CS_GetSevenDayTargetReward
{
	required int32 rewardId = 1;
}
message Marketing_SC_GetSevenDayTargetReward
{
	required int32 ret = 1;
}

message Activity_CS_GetSevenDayTargetIntegralAward
{
	required int32 id = 1;
}

message Activity_SC_GetSevenDayTargetIntegralAward
{
	required int32 res = 1;
}

message Marketing_SC_UpdateServerOpenDay
{
	optional int32 yearNum = 1;//开服日 年
	optional int32 MonNum = 2;//开服日 月
	optional int32 dayNum = 3;//开服日 日
	optional uint64 tick = 4;// 开服日 0点时间戳
	optional int32 openDayNum = 5;//已经开服天数
	optional uint64 nowtick = 6;//当前服务器时间戳
	optional bool isLogin = 7;//0,非登录 1,登录
}



//钻石翻倍  获得记录
message  Activity_CS_DiamondDouble_GetHistory
{
	optional   uint32 type = 1; // 0 全部记录   1个人记录
}




message  Activity_SC_DiamondDouble_GetHistory
{
	optional   uint32 type = 1; // 0 全部记录   1个人记录
	repeated  DiamondDoubleHistory   history_list = 2; //记录列表
	optional uint32 uiRollTimes					= 3; //抽奖次数
	
}



message  Activity_SC_DiamondDouble_Roll
{
	optional  uint32    result = 1;   //0成功  1失败
	optional  uint32    dimaond = 2; //获得钻石
}
message SingleInvestReward
{
	optional int32 target=1;//进度ID
	optional bool isGet=2;//是否已经领取
}
message SingleInvestMent
{
	optional int32 nActiveNum =1;//活动编号ID
	repeated SingleInvestReward nRewardList =2;//奖励
	optional int64 nInitNum =3;//初始信息
}
message Activity_CS_Investment_GetInfo
{}
message	Activity_CS_Investment_DoReward
{
	optional int32 nActiveNum =1;//活动编号ID
	optional int32 target=2;//进度ID
}
message	Activity_CS_Investment_Open
{
	optional int32 nActiveNum =1;//活动编号ID
}
message Activity_SC_Investment_GetInfo
{
	repeated SingleInvestMent InvestList = 1;//
}
message	Activity_SC_Investment_DoReward
{
	optional int32 ret = 1;//
}
message	Activity_SC_Investment_Open
{
	optional int32 ret = 1;//
}

message ProtoAllInvestmentInfo
{
	repeated SingleInvestMent InvestList = 1;//
}
message ProtoAllDailyFirstChargeInfo
{
	optional int32 isfirstcharge = 1;//是否首冲
	repeated SingleAwardData dailycharge_data = 2; //每日充值记录
	optional int32 todaychargenum = 3; // 今日充值总数
	optional uint32 lastChargettick = 4; //上次充值时间
	optional uint32 firstChargettick = 5; //首冲充值时间
	optional int32 dailychargeActiveId       =6; // 当前记录的活动ID
}

message RouletteHistory
{
	optional   string   name = 1;   //名称
	optional   uint32   itemid = 2;   //ID
	optional   uint32   itemnum = 3;   //数量
	optional   uint32   cost = 4;   //兑换消耗
}

message Activity_CS_Roulette_Do
{
	optional  uint32    type = 1;   //0单次抽取  1全部抽取
}
message Activity_SC_Roulette_Do
{
	optional  uint32    result = 1;   //0成功  1失败
	optional  uint32    cost = 2;   //实际消耗密钥的数量	
	repeated  IDNum		reward_list = 3; //物品列表
}


message Activity_CS_Roulette_Exchange
{
	optional   uint32   id = 1;   //兑换ID
}
message Activity_SC_Roulette_Exchange
{
	optional   uint32   id = 1;   //兑换ID
	optional  uint32    result = 2;   //0成功  1失败
}

message  Activity_CS_Roulette_GetHistory
{
	optional   uint32 type = 1; // 0 全部记录   1个人记录
}

message  Activity_SC_Roulette_GetHistory
{
	optional   uint32 type = 1; // 0 全部记录   1个人记录
	repeated  RouletteHistory   history_list = 2; //记录列表
	
}

//活动内数据类型 
enum eActivityDataType
{
	eActivityData_ContinuousCharge_TodayDiamond = 1;
	eActivityData_ContinuousCharge_Day = 2;
}

message Activity_SC_Change
{
	required uint32 type = 1;	//活动类型
	required uint32 id = 2;		//活动ID
	required uint32 data_type = 3;	//eActivityDataType
	repeated int32 data = 4;	//活动内数据值
}

message  Activity_SC_Roulette_ExchangeCount
{
	repeated	IDNum   exchange_count = 3;		//兑换记录列表
}

message ContinuousChargeInfo
{
	required uint32 activity_id = 1;		//活动ID
	optional uint32 today_diamonds = 2;		//今日充值钻石数
	repeated IDNum days = 3;				//达到条件的天数
	repeated uint32 received_awards = 4;	//已领取的奖励
}

//获取连续充值信息
message Activity_CS_ContinuousCharge_Query
{
}

//获取连续充值信息
message Activity_SC_ContinuousCharge_Query
{
	required int32 res = 1;
	optional ContinuousChargeInfo info = 2;
}

//领取连续充值奖励
message Activity_CS_ContinuousCharge_Do
{
	required uint32 id = 1;
}

//领取连续充值奖励
message Activity_SC_ContinuousCharge_Do
{
	required int32 res = 1;
}

message SpecialSaleInfo
{
	required uint32 activity_id = 1;		//活动ID
	repeated uint32 received_awards = 2;	//已购买的礼包
}

message Activity_CS_SpecialSale_Query
{
}

message Activity_SC_SpecialSale_Query
{
	required int32 res = 1;
	optional SpecialSaleInfo info = 2;
}

message Activity_CS_SpecialSale_Do
{
	required uint32 id = 1;
}

message Activity_SC_SpecialSale_Do
{
	required int32 res = 1;
}

message LostTreasureRecord
{
	optional string name = 1;
	required IDNum item = 2;
}

message LostTreasure
{
	repeated LostTreasureRecord records = 1;
}

message LostTreasureBag
{
	repeated Item items = 1;
	repeated Equip equips = 2;
}

message LostTreasureInfo
{
	optional uint32 integral = 1;
	optional LostTreasureBag bag = 2;
	repeated IDNum records = 3;
	repeated IDNum record_forever = 4;	// LostTreasureStore中的ID
	repeated IDNum record_day = 5;
	repeated IDNum record_week = 6;
	optional uint32 times = 7;		// 抽奖次数
}

message Activity_CS_LostTreasure_Do
{
	required uint32 id = 1;
	optional uint32 opt = 2;		// 选择项
}

message Activity_SC_LostTreasure_Do
{
	required int32 res = 1;
	required uint32 id = 2;			// 回传ID
	optional uint32 integral = 3;
	repeated IDNum items = 4;
}

message Activity_CS_LostTreasure_Exchange
{
	required uint32 id = 1;		
}

message Activity_SC_LostTreasure_Exchange
{
	required uint32 res = 1;
	optional uint32 integral = 2;
	optional uint32 id = 3;
}

message Activity_CS_LostTreasure_Query
{}

message Activity_SC_LostTreasure_Query
{
	required int32 res = 1;
	optional LostTreasureInfo info = 2;
}

message Activity_CS_LostTreasure_Fetch
{
	required uint64 uuid = 1;	// 若uuid为0，则全部拿取
}

message Activity_SC_LostTreasure_Fetch
{
	required int32 res = 1;
}

message Activity_CS_LostTreasure_QueryRecord
{
	optional uint32 from = 1;
}

message Activity_SC_LostTreasure_QueryRecord
{
	required int32 res = 1;
	repeated LostTreasureRecord records = 2;
}

//记录已经用掉的次数
message MoneyTreeInfo
{
	optional uint32 money_times = 1;
	optional uint32 money_free_times = 2;
	optional uint64 last_free_time = 3;		//上次免费摇一摇的时间戳
	required uint32 exp_times = 4;
}

message Activity_CS_MoneyTree_Query
{
}

message Activity_SC_MoneyTree_Query
{
	required int32 res = 1;
	optional MoneyTreeInfo info = 2;
}

message Activity_CS_MoneyTree_Do
{
	required uint32 id = 1;
}

message Activity_SC_MoneyTree_Do
{
	required int32 res = 1;
	required uint32 id = 2;	//回传ID
	optional uint32 index = 3;	//命中索引
}

message DiscountStoreInfo
{
	repeated IDNum records = 1;
}

message Activity_CS_DiscountStore_Query
{
}

message Activity_SC_DiscountStore_Query
{
	required int32 res = 1;
	optional DiscountStoreInfo info = 2;
}

message Activity_CS_DiscountStore_Do
{
	required int32 id = 1;
}

message Activity_SC_DiscountStore_Do
{
	required int32 res = 1;
}
