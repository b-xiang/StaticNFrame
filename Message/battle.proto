option java_package = "proto.message";
package proto.message;

import "common.proto";
import "item.proto";
/*
emsgid_client2battle_begin = 5200,
{
	eClient2Battle_ClientLoadOK = 5200,
	eClient2Battle_SyncMove = 5201,
	eClient2Battle_SpeelBegin = 5202, //切换地图层
	eClient2Battle_SpeelEnd = 5203,     //撤换地图层结束
	eClient2Battle_GetMapBranch = 5204,	    //获取分线列表
	eClient2Battle_ChangeBranch = 5205,      //跳分线
	
	eClient2Battle_TriggerEvent = 5207,	//触发事件(信仰之跃、进出草丛、草车等)
	eClient2Battle_GameStoryStart = 5208, 	//剧情副本开始
	eClient2Battle_GameStoryEnd = 5209, 	//剧情副本结束

	eClient2Battle_NPCStopAI = 5210, 	//停止NPC AI
	eClient2Battle_NPCActiveAI = 5211, 	//激活NPC AI

	eClient2Battle_Dungeon_LeaveDungeon = 5212,	//离开副本
	eClient2Battle_Dungeon_PassStory = 5213,	//跳过剧情
	eClient2Battle_Dungeon_Event = 5214, //触发事件
	eClient2Battle_Dungeon_Relive = 5215, //复活

	eClient2Battle_Tower_EnterOk = 5216, // 进入爬塔加载成功
	eClient2Battle_Tower_UserBuffer = 5217, // 使用Buff
	eClient2Battle_Tower_LeaveTower = 5218, //离开爬塔 
	eClient2Battle_Tower_ReqEnter = 5219, // 请求进入爬塔

	eClient2Battle_SummonMercenary = 5220,// 召唤佣兵来自己身边
	
	eClient2Battle_Transfer = 5221,// 触发传送
	eClient2Battle_ReloadFov = 5222,// 重新加载视野

	eClient2Battle_ReqTBPlayerInfo = 5223, //领地战个人信息(NullMessage) 
	
	eClient2Battle_SkillBegin = 5300,   //技能相关协议ID段
	eClient2Battle_SkillEnd = 5350,		//技能相关协议ID段
	
	//=====pvpstart=====
	ePVP_CP_NoticeConnectOK = 5400,
	ePVP_CP_LeaveAttack = 5401,
	ePVP_CP_LoadBattleOk = 5402,		//通知加载场景OK
	ePVP_CP_DoPVPBuffer = 5403,			//触发PVP buffer
	ePVP_CP_CaptureFlag = 5404,			//拔旗子
	ePVP_CP_PVPSurrender = 5406,		//投降

	//=====pvpend=====
	
	eClient2Battle_WorldBoss_Challenge = 5450,	//挑战世界boss
	eClient2Battle_WorldBoss_SaledItem = 5451,	//查询单个已拍卖物品信息
		eClient2Battle_WorldBoss_SaleList = 5452,	//请求拍卖信息
		eClient2Battle_WorldBoss_HurtRankList = 5453,	//请求伤害排行
		
		
		eClient2Battle_Ping = 5454,	//请求ping
		
		
		eClient2Battle_Anchor = 5455,	//抛锚

emsgid_client2battle_end = 6000,
}
	

emsgid_battle2client_begin = 6500,
{
	eBattle2Client_EnterScene = 6500,
	eBattle2Client_SyncPlayerAppear = 6501,
	eBattle2Client_SyncObjDisappear = 6502,
	eBattle2Client_SyncObjMove = 6503,
	eBattle2Client_SpeelBegin = 6504, //切换地图层
	eBattle2Client_GetMapBranch = 6505,		//获取分线列表返回
	eBattle2Client_ChangeBranch = 6506,      //跳线结果
	eBattle2Client_CheckPosition = 6507,      //检查坐标
	eBattle2Client_MonsterStopMove = 6508,      //停止移动
	eBattle2Client_TriggerEvent = 6509,		//触发事件
	eBattle2Client_SyncMonsterAppear = 6510,		//怪物出现在视野
	eBattle2Client_ChangeTitle = 6511,			// 6511 同步称号变更
	eBattle2Client_ChangeEquip = 6512,	// 6512 同步装备变更
	eBattle2Client_ClientLoadOK = 6513,	// 发送当前分线ID
	eBattle2Client_Story = 6514,		//剧情播放
	eBattle2Client_Customs = 6515,		//关卡
	eBattle2Client_DungeonResult = 6516,		//副本结束结果
	eBattle2Client_MonsterTalk = 6517,		//NPC喊话
	eBattle2Client_MonsterNum = 6518,		//怪物波数
	eBattle2Client_ChangeCamp = 6519,		//改阵容
	eBattle2Client_PretendStart = 6520,		//伪装开始
	eBattle2Client_PretendEnd = 6521,		//伪装结束
	eBattle2Client_SyncAttInBat = 6522,  //同步战斗属性数据
	eBattle2Client_DropItem = 6523,			//物品掉落
	eBattle2Client_Tower_EnterScene = 6524, //可以进入爬塔区域
	eBattle2Client_Tower_AddBuffer = 6525,//增加Buffer
	eBattle2Client_Tower_DelBuffer = 6526,//删除Buffer
	eBattle2Client_Tower_NewFloor = 6527,//进入下一层
	eBattle2Client_Tower_EndTower = 6528,//结束爬塔

	eBattle2Client_ChangePet = 6529,			// 同步宠物变更
	eBattle2Client_ChangeRide = 6530,			// 同步坐骑变更
	eBattle2Client_ChangeAwaken = 6531,			// 同步觉醒变更
	eBattle2Client_SyncMercenaryAppear = 6532,			// 佣兵出现在视野
	eBattle2Client_ChangeAvatar = 6533, // 同步Avatar
	eBattle2Client_ChangeSuit = 6534, // 同步suit
			eBattle2Client_ReconnectUnDoTrigger = 6535,
			eBattle2Client_TriggerServerTips = 6536, //触发servertips
	eBattle2Client_SafeAreaStatus = 6537,		//进出安全区通知
	eBattle2Client_ServerMove = 6538,		//服务器控制移动
	eBattle2Client_PlayerDie = 6539,		//死亡通知
	eBattle2Client_SyncSceneObjAppear = 6540, //场景中的生物出现在视野中，包过人，怪物，佣兵.......
	eBattle2Client_SyncSceneObjDisappear = 6541,  //场景中的生物消失在视野中

	eBattle2Client_SkillBegin = 6600,   //技能相关协议ID段
	eBattle2Client_SkillEnd = 6650,		//技能相关协议ID段
	
	//世界boss
	eBattle2Client_WolrdBoss_DorpItemList = 6651,		//世界boss掉落通知
	eBattle2Client_WolrdBoss_SaleStart = 6652,		//世界boss掉落物品开始拍卖
	eBattle2Client_WolrdBoss_SaleBid = 6653,		//世界boss  拍卖出价通知
	eBattle2Client_WolrdBoss_SaleResult = 6654,		//世界boss  拍卖结果通知
	eBattle2Client_WolrdBoss_HpChange = 6655,		//世界boss  HP
	eBattle2Client_WolrdBoss_SaledItem = 6656,		//世界boss  查询单个已拍卖物品信息
	
	eBattle2Client_WolrdBoss_HurtRankList = 6657,		//伤害列表
	
	
	eBattle2Client_TicketBoss_DropItem = 6658,   //门票boss掉落

	eBattle2Client_SyncDropItemAppear = 6659,		//场景掉落物品出现视野
	eBattle2Client_SyncDropItemChange = 6660,		//场景掉落物品更新
	eBattle2Client_Ping = 6661,  //ping


	eBattle2Client_AttackMode = 6662,	//攻击模式变更通知
	eBattle2Client_Transfer = 6663,// 触发传送
	eBattle2Client_GuildBossDie=6664, //通知客户端公会boss死亡 以及 结束
	eBattle2Client_Anchor = 6665,  //抛锚
	eBattle2Client_UpdateHeadInfo = 6666,//玩家头顶信息更新
	eBattle2Client_UpddateMercenaryRank = 6667,//佣兵排名信息
	
	
	eBattle2Client_TriggerRadius = 6668,//触发器判断范围通知
	
	eBattle2Client_ScenePlayerNum = 6669,//当前场景的人数通知

	eBattle2Client_GradeDataChanged = 6670, //副本评级相关数据变更
	
	
	eBattle2Client_Boss_HurtRankList = 6671,		//自己的积分排名
	
	eBattle2Client_SyncMonsterOnwer = 6672, //同步所有权变化信息
	
	eBattle2Client_DeadMonsterCountChanged = 6673,	//同步怪物数量变化
	
	eBattle2Client_AckTBPlayerInfo = 6674, //领地战个人信息
	emsgid_battle2client_end = 7000,
}
*/

message SyncBattleObjAtt
{
	optional uint32 objid=1;
	repeated uint32 atttype = 2;
	repeated uint64 attvalue = 3;
}

message Battle2Match_ServerInfo
{
	optional string		szIp		= 1;	//IP
	required uint32 	uiPort 		= 2;	//端口
	repeated uint32     uiMapId		= 3;	//地图分类（代表这个battle只用来开启这些地图）
}


message Game2Battle_EnterScene
{
	required int32 mapid  		= 1; 			//地图Id
	required Point3D pt         = 2;            //坐标
	required float dir        	= 3;            //朝向
	required int32 layer        = 4;            //层级
	required BattlePlayerInfo sPlyInfo  = 5;	//玩家信息	
	optional BattleBoatInfo sBoatInfo  = 6;		//船舰信息
	optional int32 combat  = 7; 				//每次进场景的时候传个战斗力
	optional TBFieldInfo tbinfo =8;				//领土战信息
	optional bool isbackline = 9;				//是否断线重连 
}

message Game2Battle_ChangeMap
{
	required int32 mapid  		= 1; 			//地图Id
	required Point3D pt         = 2;            //坐标
	required float dir        	= 3;            //朝向
	required int32 layer        = 4;            //层级
}
message Game2Battle_ChangeTttle
{
	required uint32 nId 	= 1;		//玩家ID
	required int32	titleID	= 2;		//称号ID
	optional string titlename   = 3; 	//称号要使用的名称 有可能是公会名 有可能是导师名
	optional int32 ishide = 4;
}
message Game2Battle_ChangeAwaken
{
	required uint32 nId 	= 1;		//玩家ID
	required int32	awakenID	= 2;		//称号ID
	required bool status = 3; // true 表示变身  false表示变身结束	
	required bool isDead = 4; // true 表示死亡  false表示非死亡	
}
message Game2Battle_ChangePet
{
	required uint32 nId 	= 1;	//玩家ID
	required int32	petID	= 2;	//宠物ID
	optional int32 	ranking	= 3;	//排名
	
}
message Game2Battle_UpdateMyCombat
{
	required uint32 combat 	= 1;	//战斗力
}
message Game2Battle_ChangeAvatar
{
	required uint32 nId 	= 1;		//玩家ID
	required int32	avatarID	= 2;		//时装ID
	required int32	colorID	= 3;		//时装ID
}
message Game2Battle_ChangeRide
{
	required uint32 nId 	= 1;		//玩家ID
	required int32	RideID	= 2;		//称号ID
	required bool status = 3; // true 表示上马  false表示下马
	required bool isDead = 4; // true 表示死亡  false表示非死亡	
}

message Game2Battle_BornMercenary
{
	required uint32 nId   =1; // 佣兵ID
	optional uint32 hpper = 2; //血量百分比
	optional uint32 ranking =3; //排名
	
}
message Game2Battle_UpdateMercenaryScript
{
	repeated uint32 script = 1;//
}
message Game2Battle_UpdateRideScript
{
	repeated uint32 script = 1;//
}
message Game2Battle_UpdateAwakenScript
{
	repeated uint32 script = 1;//
}
message Battle2Game_SaveMercenaryHp
{
	required uint32 nId   =1; // 佣兵ID
	optional uint32 hpper = 2; //血量百分比
}
message Battle2Game_UpdatePlayerStatus
{
	optional uint64 status = 1;// 状态
}

message Game2Battle_ChangeEquip
{
	required uint32 	nId 		= 1;	//玩家ID
	repeated Equip 		equip_list 	= 2; 	//装备列表
}
message Game2Battle_FollowLeader
{
	required uint64         nId 		= 1;//队长ID   
}
message Game2Battle_ChangeMapPendingBranch
{
	required uint64         nId 		= 1;//队长ID   
}

message  Battle2Client_ChangePet			// 同步宠物变更
{
	required uint32 	nId 		= 1;	//玩家ID
	required uint32		petid  	        = 2;    //宠物ID
	optional int32 		ranking		= 3;	//排名
}
message	 Battle2Client_ChangeRide			// 同步坐骑变更
{
	required uint32 	nId 		= 1;	//玩家ID
	required uint32		rideid  	        = 2;    //坐骑ID 此处为有值 表示上马 此处为0 表示下马
	required bool 		status          = 3; // 变身状态  true 开始变身 false 结束变身
}
message Battle2Client_ChangeAwaken			// 同步觉醒变更
{
	required uint32 	nId 		= 1;	//玩家ID
	required uint32		awakenid  	        = 2;    //ID 此处为有值 表示在觉醒变身状态 此处为0 表示变身结束
	required bool 		status          = 3; // 变身状态  true 开始变身 false 结束变身
}
message  Battle2Client_ChangeAvatar			
{
	required uint32 	nId 		= 1;	//玩家ID
	required uint32		avatarid  	        = 2;    //avatar
	required uint32		colorid  	        = 3;    //color
}
message  Battle2Client_ChangeSuit
{
	required uint32 	nId 		= 1;	//玩家ID
	required uint32		suitid  	        = 2;    //suit
}
message Battle2Client_ReconnectUnDoTrigger
{
	repeated int32 triggerid = 1;
}

//更新玩家数据
message Game2Battle_UpdatePlayerValue
{
	required uint32 	type		= 1;	//要更新的类型
	optional int32		iValue		= 2;	//32位值
	optional int64		llValue		= 3;	//64位值
	optional string		szValue		= 4;	//字符串值
}

message Battle2Game_EnterScene
{
	required int32 mapid  		= 1; 			//地图Id
	required Point3D pt         = 2;            //坐标
	required float dir        	= 3;            //朝向
	required int32 layer        = 4;            //层级
	optional string ip 		= 5; //battle IP
	optional int32  port 	= 6; //battle 端口
}


//6500 回复进入场景
message Battle2Client_EnterScene
{
	required int32 mapid  		= 1; 			//地图Id
	required Point3D pt         = 2;            //坐标
	required float dir        	= 3;            //朝向
	required int32 layer        = 4;            //层级
}

//5001 通知服务器场景加载完成    
message Client2Battle_ClientLoadOK
{
	required uint64		uuid     			= 1; //玩家UUID
	optional uint32 	dungeon_assign_id  	= 2; //副本唯一ID
}


//5002  请求移动
message Client2Battle_SyncMove
{
    required Point3D pt		= 1;	//寻路点的坐标
	required float dir		= 2;   	//角色当前朝向
	optional int32 arrival   = 3;    //是否到达
	optional int32 objType = 4; // 默认为0，角色自身移动 1为佣兵
	optional float speed = 5; // 当前移动速度
	
}

//5204	    获取分线列表
message Client2Battle_GetMapBranch
{
}

//5205      跳分线
message Client2Battle_ChangeBranch
{
	required int32 BranchId 	= 1;		//线的ID
}

//6501  同步视野  玩家出现
message Battle2Client_SyncPlayerAppear
{
	required uint32 uiObjId = 1;
	required uint32 uiType = 2;			//0出现在视野  1出生
	required BattlePlayerInfo sPlyInfo  = 3;				//玩家信息		
	optional BattleBoatInfo sBoatInfo = 4;	//海战才有  船舰信息
	optional uint64 Status = 5; //战斗状态
	optional uint32 attack_mode = 6; //攻击模式
}



//6502  同步视野 单位消失
message Battle2Client_SyncObjDisappear
{
	required uint32 uiObjId = 1;
	required uint32 uiObjType = 2;
}


message OwnerInfo
{
	optional uint64 playerid =1;
	optional string name     =2;
	optional uint32 career   =3;
	optional uint32 level    =4;
	optional uint32 dhlev    = 5;
}
//6510
message Battle2Client_SyncMonsterAppear
{
	required uint32 ID 		= 1;   	//怪物Id
	required uint32 ProID 	= 2;	//怪物表格Id
	required Point3D pt 	= 3;	//坐标
	required float dir 		= 4;	//朝向
	optional int32 Velocity = 5;    //移动速度
	optional int64 MaxHP    = 6;    //最大血量
	optional int64 CurHP    = 7;    //当前血量
	optional int32 max_tp   = 8;    //最大TP值(>0时才为boss怪做操作)
	optional int32 cur_tp   = 9;    //当前TP值
	optional int32 cmap     = 10;   //阵营
	optional int32 layer = 11; //层级信息
	optional BattleBoatInfo sBoatInfo = 12;	//海战才有  船舰信息
	optional uint64 Status = 13; //战斗状态
	optional OwnerInfo owner = 14; //归属信息
}
message mercenarySkillCD
{
	required int32 nskillID = 1;
	required int32 nCD =2;
}
message Battle2Client_SyncMercenaryAppear
{
	required uint32 uiObjId = 1;
	required uint32 uiType = 2;			//0出现在视野  1出生
	required uint32 lordObjId = 3; // 主人的ID
	required BattleMercenaryInfo sMerInfo  = 4;				//佣兵信息
	repeated mercenarySkillCD merCD= 5;  //佣兵技能CD
}



//6503  同步移动
message Battle2Client_SyncMove
{
	required uint32 uiObjId = 1;
	required Point3D pt 	= 2;		//寻路点的坐标
	required float dir		= 3;		//当前朝向
	required float velocity	= 4;     	//速度	
	optional int32 arrival 	= 5;	    //是否到达
	optional int32 objType = 6; // 默认为0，角色自身移动 1为佣兵
	optional uint64 timestamp = 7; //时间戳  精确到毫秒
	repeated Point3D path = 8; //移动路径
}


//5202
message Client2Battle_SpeelBegin
{
	required uint32 Layer  			= 1;   	//地图的层
	optional int32 TriggerId    	= 2;    //(触发器名字 int)
	optional uint32 TriggerType   	= 3;    //触发类型
}

//5203
message Client2Battle_SpeelEnd
{
	required Point3D pt 	= 1;	//坐标
}


//6504
message Battle2Client_SpeelBegin
{
	required uint32 PlyId  		= 1;   	//玩家id
	required uint32 Layer  		= 2;   	//地图的层
	optional int32 	TriggerId   = 3;    //(触发器名字 int)
	optional uint32 TriggerType = 4;    //触发类型
}

message SceneBranchInfo
{
	required int32 	BranchId 	= 1;		//线的ID
	required int32  PlayerNum  = 2;        //人数
	optional int32  DisplyBranchId  = 3;//显示分线
}

//6505		获取分线列表返回
message Battle2Client_GetMapBranch
{
	repeated SceneBranchInfo branch_list 	= 1; //物品列表
}

//6506		跳线结果
message Battle2Client_ChangeBranch
{
	required int32 rt 	= 1;		//0:成功 其他参见错误码
}

//5204  请求切换地图
message Client2Battle_ChangeMap
{
	required uint32 uiMapId = 1;
}
// 召唤佣兵来自己身边
message Client2Battle_SummonMercenary
{}

//6507
message Battle2Client_CheckPosition
{
	required uint32 nId 	= 1;		//玩家Id
	required Point3D pt 	= 2;		//坐标
	required float dir		= 3;		//朝向
}

//6508
message Battle2Client_MonsterStopMove
{
	required uint32 nId 	= 1;		//玩家Id
	required Point3D pt 	= 2;		//坐标
	required float dir		= 3;		//朝向
}


//6509
message Battle2Client_TriggerEvent
{
	required uint32 PlyId  				= 1;	//玩家id
	required uint32 TriggerType			= 2;	//触发类型(信仰之跃、攀爬、进入草车、草丛等)
	required uint32 TriggerId			= 3;	//触发id
}


message Battle2Client_TriggerServerTips
{
	optional uint32 ServerTipsId			= 1;	//ServerTipsId
	repeated string arg						= 2;	//参数
}
// 6511 同步称号变更
message Battle2Client_ChangeTttle
{
	required uint32 nId 	= 1;		//玩家ID
	required int32	titleID	= 2;		//称号ID
	optional string titlename   = 3; // 称号要使用的名称 有可能是公会名 有可能是导师名
	optional int32 ishide = 4;
}
// 6512 同步装备变更
message Battle2Client_ChangeEquip
{
	required uint32 	nId 		= 1;	//玩家ID
	repeated Equip 		equip_list 	= 2; 	//装备列表
}
// 6513 ClientOK 发送当前分线ID
message Battle2Client_ClientLoadOK
{
	optional int32 Branch = 1;   //分线
	optional int32 initTime = 2;   //场景初始化时间  （客户端倒计时用）
	optional int32  DisplyBranchId  = 3;//显示分线
	optional int32  reliveNum = 4;	//复活次数
}

//5207
message Client2Battle__TriggerEvent
{
	required uint32 TriggerType			= 1;	//触发类型(信仰之跃、攀爬、进入草车、草丛等)
	required uint32 TriggerId			= 2;	//触发id
}

message Battle2Game_AddDropItem
{
	required uint32 uiGetWay			= 1;		//获取途径
	repeated IDNum vecItemList			= 2;		//物品列表
	required uint32 uiSendTips			= 3;		//是否发送获得物品提示
}

message Battle2Game_DungeonResult
{	
	required	uint32  uiProId	= 1;
	required	uint32	uiResult = 2; // 0失败  1成功
	optional 	uint32	uiGrade = 3;
	optional 	uint32	uiPassTime = 4;	//通关时间
	optional 	uint32	uiBeAttTimes = 5;	//被击次数
	optional 	uint32	uiRemainHP = 6;	//玩家剩余HP百分比扩大10000倍
	optional 	uint32	uiNPCHP = 7;		//NPC剩余HP百分比扩大10000倍
	optional 	uint32	uiDieTimes = 8;		//所有玩家死亡总次数
	optional 	uint32	uiNotComTask = 9;		//NotComTask
	optional	uint64  uleaderid	= 10;  //队长uuid
}

message GameToBattle_PlayerDisconnect
{
	optional uint32  uiBackOnline = 1;	//是否断线重连
}

 
//像game服同步玩家的场景信息 用于保存
message Battle2Game_SyncMove
{
    required uint32 uiSceneId		= 1;	//场景ID
    required Point3D pt				= 2;	//当前坐标
	required float dir				= 3;   	//当前朝向
	required uint32 layer			= 4;   	//层级
	optional uint32 branchid		= 5;	//分线id
	
}

message Battle2Game_UpdateQuest
{	
	required	uint32  uiQuestType	= 1;
	required	uint32	uiTargetId = 2;  
	required 	uint32	uiArg = 3;
}

message Battle2Game_TriggerQuest
{	
	required	uint32	uiQuestId = 1;  
	required	uint32  uiQuestType	= 2;
}

message Battle2Game_MonsterDie
{	
	required	uint32	uiMonsterProId = 1;  
	required	uint32  uiMonsterObjId	= 2; 
	required	Point3D pt		= 3;		//坐标
}

message Battle2Game_LeaveDungeon
{	
	required	uint32	uiEnd = 1;  //副本是否结束
	required	uint32	uiAgain = 2;  //是否是再次进入副本
}

message Battle2Game_ChangeMapForceAwakenOff
{}
message Battle2Game_DieToChangeAwakenAndRide
{}
message Battle2Game_SceneLoadOk
{}
message Battle2Game_MercenaryDieInfo
{
	required uint32 uiMercenary = 1;//佣兵ID
}
message Game2Battle_CheckTrigger
{
	required uint32 uiType			= 1;		
	required uint32 uiValue			= 2;		
}

message Game2Battle_AddQuestTrigger
{
	required uint32 uiQuestId			= 1;		
	required uint32 uiQuestTargetType			= 2;	
	required uint32 uiTriggerId			= 3;	
	required uint32 uiTriggerNPCId			= 4;		
}

message Game2Battle_UpdateTask
{
	required uint32 uiId			= 1;		
	required uint32 uiValue			= 2;		
}

//任务触发  给指定NPC加buff
message Game2Battle_QuestNPCAddBuff
{
	required uint32 nTriggerNPCId			= 1;	
	required uint32 uiType			= 2;	
}
message Client2Battle_GameStoryStart
{
	required uint32 GameStoryID = 1; // 剧情ID
	optional uint32 NPCID	    = 2; // 剧情对应的NPC， 服务器暂停NPC
}

message	Client2Battle_GameStoryEnd 
{
	required uint32 GameStoryID = 1; // 剧情ID
	optional uint32 NPCID	    = 2; // 剧情对应的NPC， 服务器暂停NPC
}

message Client2Battle_NPCStopAI
{
	optional uint32 NPCID = 1;
}
message Client2Battle_NPCActiveAI
{
	optional uint32 NPCID = 1;
}

message Battle2Game_DungeonLoadOk
{	
	required	uint32	uiProId = 1;  //副本ID
}



message Client2Battle_WolrdBossDorp_ItemList
{	
	repeated	IDNum   vecItemList = 1;		//掉落列表	
}


message Client2Battle_WorldBoss_HurtRankList
{
	required	uint32	uiBossType = 1;  //0：worldboss   1：ticketboss 2:guildboss  3:大逃杀
	optional 	uint32	uiBossTableId = 2; // 仅1：ticketboss 用
}

message Battle2Client_WolrdBoss_HurtRankList
{	
	repeated	string   namelist = 1;		//角色名列表
	repeated	uint64   hurttotal = 2;		//伤害列表	
	required    uint64	 selfhurttotal = 3;	//我的伤害
	required    uint32	 selfrank = 4;	//我的排名
	
	
	required	uint32	uiBossType = 5;  //0：worldboss   1：ticketboss 2:guildboss 3:大逃杀
	optional 	uint32	uiBossTableId = 6;
}

message WolrdBossSaleItem
{	
	required	uint32	uiIndex = 1;  //物品索引
	required	uint32	uiExpiryTime = 2;  //拍卖到期时间	
	required	uint32	uiShareNum = 3;  //分红人数
	
	
	required	string	uiPlayerName = 4;  //最高出价者名字
	required	uint32	uiPlayerJob = 5;  //最高出价者职业
	required	uint32	uiPlayerLevel = 6;  //最高出价者等级
	required	uint32	uiPrice = 7;  //最高出价者价格
	
}


message Battle2Client_WolrdBoss_DorpItemList
{	
	repeated	IDNum   vecItemList = 1;		//掉落列表
	
	//当前正在拍卖的物品
	required WolrdBossSaleItem sSaleItem = 2;
}

message Battle2Client_WolrdBoss_SaleBid
{	
	required	uint32	uiIndex = 1;  //物品索引
	
	required	string	uiPlayerName = 2;  //最高出价者名字
	required	uint32	uiPlayerJob = 3;  //最高出价者职业
	required	uint32	uiPlayerLevel = 4;  //最高出价者等级
	required	uint32	uiPrice = 5;  //最高出价者价格
	optional	uint32	uiExpiryTime = 6;  //拍卖到期时间	
}


message Battle2Client_WolrdBoss_SaleResult
{	
	required	uint32	uiIndex = 1;  //物品索引
	
	//流拍的话  下面的参数全是0
	optional	string	uiPlayerName = 2;  //最高出价者名字
	optional	uint32	uiPlayerJob = 3;  //最高出价者职业
	optional	uint32	uiPlayerLevel = 4;  //最高出价者等级
	optional	uint32	uiPrice = 5;  //最高出价者价格
}



message Battle2Game_WolrdBoss_SaleResult
{	
	optional  WolrdBossSaledItem item = 1;
}



message Battle2Game_SendMail
{
	required	uint64  uiSendTo = 1;	//发送给谁	
	required	uint32	uiMode = 2;		// 0发放到背包  1发放到邮件  
	required	uint32  uiArg = 3;	//参数（物品来源 or  邮件类型ID）
	optional	string  szArg = 4;	 //字符串参数（邮件内容参数）
	repeated	IDNum	vecItemList = 5; //物品列表
	optional	uint32  uiOpt = 6;		//是否绑定
}


message Battle2Game_WolrdBoss_HpChange
{
	required	uint32	uiBossType = 1;  //0：worldboss   1：ticketboss  2:guildboss
	required	uint64	uiHp = 2;
	optional 	uint32	uiBossTableId = 3;
}


message Battle2Client_WolrdBoss_HpChange
{	
	required	uint32	uiBossType = 1;  //0：worldboss   1：ticketboss  2:guildboss
	required	uint64	uiHp = 2;  
	optional 	uint32	uiBossTableId = 3;
}

message Game2Battle_AddCurHp
{
	required	uint32	uiHp = 1;  
}

message Game2Battle_AddBuff
{
	required	uint32	uiBuffId = 1;  
	required	uint32	uiQuality = 2;  
}

message Client2Battle_WorldBoss_SaledItem
{
	optional	uint32 uiIndex = 1;
}

message Battle2Client_WorldBoss_SaledItem
{
	optional WolrdBossSaleItem	sItem = 1;
}


message Battle2Client_SyncDropItemAppear
{
	required uint32 uiObjId = 1;
	required uint32 uiType = 2;			//0出现在视野  1出生
	required Point3D pt 	= 3;	//坐标
	repeated IDNum	vecItemId = 4; //物品ID列表
	required uint64	uiOwnerId = 5; //物品归属者ID
	optional string name = 6;
}
message Battle2Client_TicketBoss_DropItem
{
	required	uint32	uiBossTableId = 1;  
	repeated	Battle2Client_SyncDropItemAppear  vecItemList = 2; //物品列表
}

message Battle2Client_SyncDropItemChange
{
	required uint32 uiObjId = 1;
	required int32 iItemIndex = 2;  //被拾取的物品下标 (-1表示没有拾取 只是归属权变更)
	required uint64	uiOwnerId = 3; //物品集合归属者ID变更
	required uint32 uiTakeObjId = 4;  //被谁拾取了
}

message Client2Battle_Ping
{
}

message Battle2Client_Ping
{
	optional uint64 timestamp = 1; //时间戳(毫秒)
}



message Game2Battle_CreateMonster
{
	optional uint32 ProID 	= 1;	//怪物表格Id
	optional Point3D pt 	= 2;	//坐标
	optional float dir 		= 3;	//朝向
	optional int32 layer = 4; //层级信息
	
	optional int32 from = 5; //从哪里创建的    1藏宝图
}

message Client2Battle_ChangeAttackMode
{
	optional uint32 uiAttackMode = 1; //当前的攻击模式
}
message Client2Battle_Transfer
{
	optional uint32 uiTransferTableId = 1; //传送表的id
}

message Battle2Client_Anchor
{
	required uint32 uiObjId = 1;
}
message Battle2Client_UpdateHeadInfo
{
	optional BattleSingleHeadInfo info = 1;
}
message Battle2Client_UpdateMercenaryRank
{
	required uint32 uiObjId = 1;
	optional int32 ranking = 2;
	
}


message Battle2Client_TriggerRadius
{
	optional uint32 uiTriggerId = 1;	//触发器ID
	optional Point3D pt 	= 2;	//坐标
	optional float   fRadius = 3;		//半径
}

message Battle2Client_ScenePlayerNum
{
	optional uint32  uiSceneId = 1;		//场景ID
	optional uint32  uiCurNum = 2;		//当前人数
	optional uint32  uiMaxNum = 3;		//最大人数
}

//参与评分的数据类型
enum Battle2Client_GradeDataType
{
	Dungeon_Grade_Data_Time = 0;
	Dungeon_Grade_Data_Hurt = 1;
	Dungeon_Grade_Data_Hp = 2;
	Dungeon_Grade_Data_Npc_Hp = 3;
	Dungeon_Grade_Data_Death = 4;
}

message Battle2Client_GradeDataChanged
{
	required int32 grade = 1;
	optional IDNum data = 2; // DungeonGradeDataType
}

message Battle2Client_SyncMonsterOnwer
{
	optional uint32 monsterid =1;
	optional OwnerInfo owner  =2;
}

message Battle2Client_SafeAreaStatus
{
	optional uint32 status =1;  // 0离开  1进入
}


//服务器控制移动
message Battle2Client_ServerMove
{
    required Point3D pt		= 1;	//寻路点的坐标
	required float dir		= 2;   	//角色当前朝向
	optional float speed = 3; // 当前移动速度
	
}



message Battle2Client_PlayerDie
{
	optional string killerName = 1; // 击杀者   空代表自然死亡
	
}

//同步死亡的怪物数量变化
message Battle2Client_MonsterCountChanged
{
	required uint32 count = 1;		//已死亡的怪物总数
	repeated IDNum monsters = 2;		//已死亡的怪物
}

message Battle2Client_AckTBPlayerInfo
{
	optional uint32 id = 1; //reward表ID
	optional uint32 jointime =2; //在线累积时间(秒)
	optional uint32 overtime = 3; //活动结束时间戳
}


message Battle2Client_SyncSceneObjDisappear
{
	repeated Battle2Client_SyncObjDisappear objs = 1; //场景中的对象集合，用来并包处理
}


message Battle2Client_SyncSceneObjAppear
{
	repeated Battle2Client_SyncMonsterAppear monsters = 1; //怪物Id
	repeated Battle2Client_SyncPlayerAppear players = 2; //玩家ID
	repeated Battle2Client_SyncDropItemAppear drop_items = 3; //掉落物
	repeated Battle2Client_SyncMercenaryAppear mercenarys = 4;
}
