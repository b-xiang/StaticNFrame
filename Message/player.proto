option java_package = "proto.message";
package proto.message;

import "common.proto";
import "item.proto";


/*
enum player_CS_MsgID
{
	ePlayer_CS_OpenSystem = 2801,			//开放系统
    ePlayer_CS_QueryPlayerData       = 2802, //查询玩家数据	
	ePlayer_CS_ChangeCharname      	= 2803, //玩家改名
	
	ePlayer_CS_QueryPlayerSimpleData = 2804, //查询玩家简单数据
	
    ePlayer_CS_UpdateGuide = 2805, //修改玩家新手引导数据
	ePlayer_CS_OffRewordInfo = 2806, //离线奖励信息
	ePlayer_CS_GetOffReword = 2807, //获得离线奖励
	ePlayer_CS_GetDreadDungeonInfo = 2808, //获得恐怖地宫数据
	ePlayer_CS_GetAssignPlayerInfo          = 2809, //查询玩家信息
	ePlayer_CS_GetTerritoryBattleInfo = 2810, //获取领土战信息(结构体 NullMessage)
	ePlayer_CS_GetTerBatReward	= 2811, //获取奖励
	ePlayer_CS_JoinTerritoryBattle = 2812,//参加领土战
	ePlayer_CS_TBCaptureFlag = 2813, //领土战拔旗 
}

enum player_SC_MsgID
{
	ePlayer_SC_PlayerAttrData		= 2800, //更新玩家数据
    ePlayer_SC_UpdateOpenButton      = 2801, //更新开启的按钮信息
    ePlayer_SC_QueryPlayerData       = 2802, //查询玩家数据
	ePlayer_SC_ChangeCharname      	= 2803, //玩家改名
	
	ePlayer_SC_QueryPlayerSimpleData = 2804, //查询玩家简单数据
	ePlayer_SC_UpdatePlayerExpRio = 2805, //更新玩家经验倍率
	ePlayer_SC_PlayerAttrData_Exp		= 2806, //更新玩家数据经验。 因经验是64位 其他都是32位。所以从玩家数据中提取出来。
	ePlayer_SC_UpdateGuide = 2807, //修改玩家新手引导数据
	ePlayer_SC_PlayerProgressConData		= 2808, //更新玩家数据
	
	ePlayer_SC_OffRewordInfo = 2809, //离线奖励信息
	ePlayer_SC_GetOffReword = 2810, //获得离线奖励
	ePlayer_SC_GetDreadDungeonInfo =2811, //获得恐怖地宫数据
	ePlayer_SC_GetAssignPlayerInfo = 2812, //查询玩家信息
	
	ePlayer_SC_GetTerritoryBattleInfo = 2813, //获取领土战信息
	ePlayer_SC_GetTerBatReward	= 2814, //获取奖励 (结构体 ErrorCode_SC_ErrorCodeMsg )
	ePlayer_SC_JoinTerritoryBattle = 2815,//参加领土战 (结构体 ErrorCode_SC_ErrorCodeMsg )
	ePlayer_SC_TBCaptureFlag = 2816, //领土战拔旗（结构体 ErrorCode_SC_ErrorCodeMsg）
	ePlayer_SC_TerritoryBattleResult=2817, //战斗结果 ()
}
*/

/*
enum eAttData																				 
{
	eAttData_MaxHP =0,						//生命上限
	eAttData_Attack,						//攻击力
	eAttData_Defense,						//防御力
	eAttData_Critical,						//暴击值
	eAttData_ResistCritical,				//抗暴值
	eAttData_CriticalChance,				//暴击率
	eAttData_ResistCriticalChance,			//抗暴率
	eAttData_CriticalDamage,				//暴伤增伤
	eAttData_ResistCriticalDamage,   		//暴伤减免
	eAttData_MeleeAttack,					//近战增伤
	eAttData_ResistMeleeAttack,				//近战减伤
	eAttData_RemoteAttack,					//远程增伤
	eAttData_ResistRemoteAttack,			//远程减伤
	eAttData_TrueDamage,					//真实伤害
	eAttData_ResistTrueDamage,				//真实减免
	eAttData_AdditionalAtk,					//额外伤害
	eAttData_ResistAdditionalAtk,     		//额外伤害减免
	eAttData_Refelect,						//伤害反弹
	eAttData_HPRecoverRatio,				//生命恢复
	eAttData_VIT,							//体力值		
	eAttData_VITRecoverRatio,				//体力恢复
	eAttData_VITLossRatio,					//体力损耗
	eAttData_ActVelocity,					//攻击速度
	eAttData_MoveVelocity,					//移动速度
	eAttData_LeechLife,						// 吸血
	eAttData_DerateCD,						//CD减免
	eAttData_BOSSAtk,						//boss增伤
	eAttData_PKDamage,						//PK增伤
	eAttData_ResistPKDamage	,				//PK减免
	eAttData_DeadlyAttack,					//致命一击概率
	eAttData_ResistDeadlyAttack,			//致命一击抵抗
	eAttData_DeadlyAtkDamage,				//致命增伤
	eAttData_ResistDeadlyAtkDamage,			//致命减伤
	eAttData_ExpEx,							//额外经验获得
	eAttData_MoneyEx,						//额外获得银币
	eAttData_Num = 35,
};

// 玩家实时数据
enum ePlayerDataType
{
	ePlayerData_NULL,
	ePlayerData_CurHP = 51,			        // 当前血量
	ePlayerData_Level = 52,                   // 等级
	ePlayerData_Exp = 53,                     // 经验
	ePlayerData_DoubleExp = 54,               // 双倍经验
	ePlayerData_Energy = 55,                  // 当前体力
	ePlayerData_Vigor = 56,                   // 精力
	ePlayerData_IdyPoints = 57,               // 身份点数
	ePlayerData_TalPoints = 58,               // 天赋点数
	ePlayerData_SocietyContribute = 59,       // 公会贡献
	ePlayerData_FriendScore = 60,             // 好友积分
	ePlayerData_NarrowScore = 61,             // 狭义积分
	ePlayerData_RecallScore = 62,             // 召回积分
	ePlayerData_MasterScore = 63,             // 师徒积分
	ePlayerData_FestivalScore = 64,           // 节日积分
	ePlayerData_GloryScore = 65,              // 荣耀积分
	ePlayerData_Title = 66,                   // 称号
	ePlayerData_VipLevel = 67,				// VIP等级
	ePlayerData_IdyType = 68,				//身份类型
	ePlayerData_TotalCombat = 69,           // 玩家总战力
	ePlayerData_XPEnergy = 70,			//XP技能值
	ePlayerData_FlagCamp = 71,					//旗子阵营(对应枚举eCamp, 如果没有旗子的话是-1)
	ePlayerData_PetId = 72, //宠物ID
	ePlayerData_RideId = 73,//坐骑ID
	ePlayerData_AwakenId = 74, //觉醒ID
	ePlayerData_SoulValue = 75, 				  //灵魂点(最大值 1000000)
	ePlayerData_MercenaryId = 76, //佣兵ID
	ePlayerData_MerTableId = 77, //佣兵表格ID
	ePlayerData_MerAIStatus = 78,//佣兵AI状态
	ePlayerData_TodayMultiChivalrous = 79, //多人副本今日获得侠义值
	ePlayerData_TodayEpicChivalrous = 80, //史诗副本今日获得侠义值
	ePlayerData_Evil = 81, //善恶值
	ePlayerData_AttackMode = 82, //攻击模式
	ePlayerData_SuitId = 83, //套装ID
	ePlayerData_GuildId = 84, //公会ID
	ePlayerData_DHExp =85,		//猎魔人经验值
	ePlayerData_DHLev =86, //猎魔人等级
	ePlayerData_DHCounts =87, //猎魔人经验兑换次数
	ePlayerData_Renown = 88,//威望
    ePlayerData_PetRank = 89, //宠物排名
    ePlayerData_MercenaryRank= 90, //佣兵排名
	ePlayerData_Num
};
*/


// 属性类型
message ProtoAttrData
{
	required int32 	type = 1; // 属性类型
    required int32 	value = 2; // 值
	optional uint32 percent =3; //百分比
}

// 主动同步角色属性数据
message Player_SC_PlayerAttrData
{
    repeated ProtoAttrData attrData = 1;
}
message Player_SC_PlayerAttrData_Exp //更新玩家数据经验。 因经验是64位 其他都是32位。所以从玩家数据中提取出
{
    required uint64 	value = 1; // 值
}

message MultiProgressCon
{
	required int32 param = 1;
	optional int64 val = 2;
}
message ProtoProgressConData
{
	required int32 	type = 1; // 属性类型
    	optional int64 	value = 2; // 值
	repeated MultiProgressCon multivalue = 3;//多个值的情况 
}
message Player_SC_PlayerProgressConData
{
   repeated  ProtoProgressConData condata = 1;// 更新玩家进度数据
}

message Player_CS_OpenSystem
{
	required uint32 open_id = 1; //Open表ID
	optional uint32 item_id = 2;
}

message Player_SC_UpdateOpenButton
{
    repeated IDNum button_id_list = 1; //开启的按钮ID
}

message Player_CS_QueryPlayerData
{
    optional uint64 charid = 1; //玩家唯一ID
}

message Player_SC_QueryPlayerData
{
    optional int32 result           	= 1; //结果

    optional uint64 charid          	= 2; //玩家唯一ID
    optional int32 career           	= 3; //职业
    optional string charname        	= 4; //角色名字
    optional int32 level            	= 5; //玩家等级
    repeated Equip equip_list       	= 6; //穿戴的装备列表
    optional PlayerEffect player_attr	= 7; //属性列表
	optional int32 titleID				= 8; //称号ID
	optional int32 isHideTitle			= 9; //是否隐藏称号
	optional string titleName			= 10; //称号要使用的名称
	optional int32 player_combat 		= 11; //玩家战斗力
	optional string guild_name 			= 12; //公会名
	
	optional string boat_name 			= 20; //船的名字
	optional int32 boat_level 			= 21; //船的等级
	optional int32 fa_id 				= 22; //已穿戴时装ID
	optional int32 stage_id 			= 23; //船的阶段
	repeated int32 part_list 			= 24; //部件列表
}

message Player_CS_ChangeCharname
{
	optional string charname 		= 1; //名字
}

message Player_SC_ChangeCharname
{
	optional int32 result 			= 1; //结果
	optional string charname 		= 2; //名字
}


message SingleExpRio
{
	optional int32 nID = 1;  // ID
	optional int32 rio = 2;  // 加成比例
}
message Player_SC_UpdatePlayerExpRio
{
	repeated  SingleExpRio all_info = 1; 
}


message Player_CS_UpdateGuide
{
	optional string finishkey 	= 1; 
	optional uint32 guidepart 	= 2; 
}
message Player_SC_UpdateGuide
{
	optional int32 result  = 1; //结果 0成功
}

message ProtoSingleCon
{
	optional int32 param =1;
	optional int64 val =2;
}
message ProtoProgressConInfo
{
	optional int32 eTpye =1;
	optional int64 value = 2;
	repeated ProtoSingleCon mapParam =3;
}
message ProtoAllProgressConInfo
{
	repeated ProtoProgressConInfo allInfo =1;
}

message Player_SC_OffRewordInfo
{
	optional uint64 accumulatetime = 1;  //已经累计的时间(秒)
	optional uint64 lastouttime =2;		 //上次离线时间戳
	optional uint64 curexp	=3;		     //已经获得经验数
}

message Player_CS_GetOffReword
{
	optional uint32 type = 1; //领取的类型ID
}

message Player_SC_GetDreadDungeonInfo
{
	optional uint32 draedcounts = 1;
}

message Player_CS_GetAssignPlayerInfo
{
	optional uint64 assignplayerid = 1;  //指定玩家uID
}

message Player_SC_GetAssignPlayerInfo
{
	optional PlayerShow datainfo = 1;
}



message Player_SC_GetTerritoryBattleInfo //获取领土战信息
{
	repeated TBFieldInfo infolist =1;
	repeated uint32 rewardid = 2; //已经领取过的领地ID
	optional uint32 fightcity = 3; //会长所在位置
} 

message Player_CS_GetTerBatReward	 //获取奖励
{
	optional uint32 fieldid = 1; //领地id
}

message Player_CS_JoinTerritoryBattle //参加领土战
{
	optional uint32 fieldid = 1; //领地id
}


message Player_CS_TBCaptureFlag
{
	optional uint32 fieldid = 1; //领地id
}

message Player_SC_TerritoryBattleResult
{
	optional uint32 id	= 1;			//领地ID(rewardpvp表 ID)
	optional uint64 wingid = 2;			//占领公会ID
	optional string winname = 3;		//占领公会名字
	optional uint64 losegid = 4;		//失守公会ID 0表示没有争夺成功
	optional uint32 onlinetime = 5;		//累积在线时间不够十分钟不能获得奖励
}


message Player_CS_QueryPlayerSimpleData
{
	optional uint64 charid 	= 1; //玩家唯一ID
}

message PlayerSimpleData
{
	optional uint64 charid          	= 1; //玩家唯一ID
    optional int32 career           	= 2; //职业
    optional string charname        	= 3; //角色名字
    optional int32 level            	= 4; //玩家等级
	optional uint64 guild_id 			= 5; //公会ID
	optional string guild_name 			= 6; //公会名
	optional uint32 dhlevel             = 7;//猎魔人等级
}

message Player_SC_QueryPlayerSimpleData
{
	optional int32 result           		= 1; //结果
	optional PlayerSimpleData simple_data 	= 2; //简单数据
    optional int32 online =3;
}






